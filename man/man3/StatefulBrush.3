.TH "StatefulBrush" 3 "Mon Jun 5 2017" "MuseScore-2.2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
StatefulBrush
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <colorscheme\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStatefulBrush\fP ()"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (\fBColorScheme::ColorSet\fP, \fBColorScheme::ForegroundRole\fP)"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (\fBColorScheme::ColorSet\fP, \fBColorScheme::BackgroundRole\fP)"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (\fBColorScheme::ColorSet\fP, \fBColorScheme::DecorationRole\fP)"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (const QBrush &)"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (const QBrush &, const QBrush &background)"
.br
.ti -1c
.RI "\fBStatefulBrush\fP (const \fBStatefulBrush\fP &)"
.br
.ti -1c
.RI "\fB~StatefulBrush\fP ()"
.br
.ti -1c
.RI "\fBStatefulBrush\fP & \fBoperator=\fP (const \fBStatefulBrush\fP &)"
.br
.ti -1c
.RI "QBrush \fBbrush\fP (QPalette::ColorGroup) const"
.br
.ti -1c
.RI "QBrush \fBbrush\fP (const QPalette &) const"
.br
.ti -1c
.RI "QBrush \fBbrush\fP (const QWidget *) const"
.br
.in -1c
.SH "Detailed Description"
.PP 
A container for a 'state-aware' brush\&.
.PP
\fBStatefulBrush\fP provides an easy and safe way to store a color for use in a user interface\&. It is 'safe' both in that it will make it easy to deal with widget states in a correct manner, and that it insulates you against changes in QPalette::ColorGroup\&.
.PP
Basically, a stateful brush is used to cache a particular 'color' from the KDE system palette (usually, one which does not live in QPalette) in the way you would have used a QColor in KDE3\&. When you are ready to draw using the brush, you use the current state to retrieve the appropriate brush\&.
.PP
Stateful brushes can also be used to apply state effects to arbitrary brushes, for example when working with a application specific user-defined color palette\&.
.PP
\fBNote:\fP
.RS 4
As of Qt 4\&.3, QPalette::ColorGroup is missing a state for disabled widgets in an inactive window\&. Hopefully Trolltech will fix this bug, at which point \fBColorScheme\fP and \fBStatefulBrush\fP will be updated to recognize the new state\&. Using \fBStatefulBrush\fP will allow your application to inherit these changes 'for free', without even recompiling\&. 
.RE
.PP

.PP
Definition at line 429 of file colorscheme\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "StatefulBrush::StatefulBrush ()\fC [explicit]\fP"
Construct a 'default' stateful brush\&. For such an instance, all overloads of \fBStatefulBrush::brush\fP will return a default brush (i\&.e\&. \fCQBrush()\fP)\&. 
.PP
Definition at line 563 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (\fBColorScheme::ColorSet\fP set, \fBColorScheme::ForegroundRole\fP role)\fC [explicit]\fP"
Construct a stateful brush from given color set and foreground role, using the colors from the given KConfig (if null, the system colors are used)\&. 
.PP
Definition at line 567 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (\fBColorScheme::ColorSet\fP set, \fBColorScheme::BackgroundRole\fP role)\fC [explicit]\fP"
Construct a stateful brush from given color set and background role, using the colors from the given KConfig (if null, the system colors are used)\&. 
.PP
Definition at line 574 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (\fBColorScheme::ColorSet\fP set, \fBColorScheme::DecorationRole\fP role)\fC [explicit]\fP"
Construct a stateful brush from given color set and decoration role, using the colors from the given KConfig (if null, the system colors are used)\&. 
.PP
Definition at line 581 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (const QBrush & brush)\fC [explicit]\fP"
Construct a stateful background brush from a specified QBrush (or QColor, via QBrush's implicit constructor)\&. The various states are determined from the base QBrush (which fills in the Active state) according to the same rules used to build stateful color schemes from the system color scheme\&. The state effects from the given KConfig are used (if null, the system state effects are used)\&. 
.PP
Definition at line 588 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (const QBrush & brush, const QBrush & background)\fC [explicit]\fP"
Construct a stateful foreground/decoration brush from a specified QBrush (or QColor, via QBrush's implicit constructor)\&. The various states are determined from the base QBrush (which fills in the Active state) according to the same rules used to build stateful color schemes from the system color scheme\&. The state effects from the given KConfig are used (if null, the system state effects are used)\&.
.PP
\fBParameters:\fP
.RS 4
\fIbackground\fP The background brush (or color) corresponding to the \fBColorScheme::NormalBackground\fP role and QPalette::Active state for this foreground/decoration color\&. 
.RE
.PP

.PP
Definition at line 595 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::StatefulBrush (const \fBStatefulBrush\fP & other)"
Construct a copy of another \fBStatefulBrush\fP\&. 
.PP
Definition at line 602 of file colorscheme\&.cpp\&.
.SS "StatefulBrush::~StatefulBrush ()"
Destructor 
.PP
Definition at line 609 of file colorscheme\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "QBrush StatefulBrush::brush (QPalette::ColorGroup state) const"
Retrieve the brush for the specified widget state\&. This is used when you know explicitly what state is wanted\&. Otherwise one of overloads is often more convenient\&. 
.PP
Definition at line 628 of file colorscheme\&.cpp\&.
.SS "QBrush StatefulBrush::brush (const QPalette & pal) const"
Retrieve the brush, using a QPalette reference to determine the correct state\&. Use when your painting code has easy access to the QPalette that it is supposed to be using\&. The state used in this instance is the currentColorGroup of the palette\&. 
.PP
Definition at line 643 of file colorscheme\&.cpp\&.
.SS "QBrush StatefulBrush::brush (const QWidget * widget) const"
Retrieve the brush, using a QWidget pointer to determine the correct state\&. Use when you have a pointer to the widget that you are painting\&. The state used is the current state of the widget\&.
.PP
\fBNote:\fP
.RS 4
If you pass an invalid widget, you will get a default brush (i\&.e\&. \fCQBrush()\fP)\&. 
.RE
.PP

.PP
Definition at line 651 of file colorscheme\&.cpp\&.
.SS "\fBStatefulBrush\fP & StatefulBrush::operator= (const \fBStatefulBrush\fP & other)"
Standard assignment operator 
.PP
Definition at line 617 of file colorscheme\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MuseScore-2\&.2 from the source code\&.
