.TH "OutputDev" 3 "Mon Jun 5 2017" "MuseScore-2.2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OutputDev
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBArthurOutputDev\fP, \fBCairoOutputDev\fP, \fBMarkedContentOutputDev\fP, \fBPoppler::LinkExtractorOutputDev\fP, \fBPreScanOutputDev\fP, \fBPSOutputDev\fP, \fBSplashOutputDev\fP, and \fBTextOutputDev\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual GBool \fBupsideDown\fP ()=0"
.br
.ti -1c
.RI "virtual GBool \fBuseDrawChar\fP ()=0"
.br
.ti -1c
.RI "virtual GBool \fBuseTilingPatternFill\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBuseShadedFills\fP (int type)"
.br
.ti -1c
.RI "virtual GBool \fBuseFillColorStop\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBuseDrawForm\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBinterpretType3Chars\fP ()=0"
.br
.ti -1c
.RI "virtual GBool \fBneedNonText\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBneedCharCount\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBneedClipToCropBox\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetDefaultCTM\fP (double *ctm)"
.br
.ti -1c
.RI "virtual GBool \fBcheckPageSlice\fP (\fBPage\fP *page, double hDPI, double vDPI, int rotate, GBool useMediaBox, GBool crop, int sliceX, int sliceY, int sliceW, int sliceH, GBool printing, GBool(*abortCheckCbk)(void *data)=NULL, void *abortCheckCbkData=NULL, GBool(*annotDisplayDecideCbk)(\fBAnnot\fP *annot, void *user_data)=NULL, void *annotDisplayDecideCbkData=NULL)"
.br
.ti -1c
.RI "virtual void \fBstartPage\fP (int pageNum, \fBGfxState\fP *state, \fBXRef\fP *xref)"
.br
.ti -1c
.RI "virtual void \fBendPage\fP ()"
.br
.ti -1c
.RI "virtual void \fBdump\fP ()"
.br
.ti -1c
.RI "virtual void \fBcvtDevToUser\fP (double dx, double dy, double *ux, double *uy)"
.br
.ti -1c
.RI "virtual void \fBcvtUserToDev\fP (double ux, double uy, int *dx, int *dy)"
.br
.ti -1c
.RI "double * \fBgetDefCTM\fP ()"
.br
.ti -1c
.RI "double * \fBgetDefICTM\fP ()"
.br
.ti -1c
.RI "virtual void \fBsaveState\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBrestoreState\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateAll\fP (\fBGfxState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBupdateCTM\fP (\fBGfxState\fP *, double, double, double, double, double, double)"
.br
.ti -1c
.RI "virtual void \fBupdateLineDash\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFlatness\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateLineJoin\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateLineCap\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateMiterLimit\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateLineWidth\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateStrokeAdjust\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateAlphaIsShape\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateTextKnockout\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFillColorSpace\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateStrokeColorSpace\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFillColor\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateStrokeColor\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateBlendMode\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFillOpacity\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateStrokeOpacity\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdatePatternOpacity\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBclearPatternOpacity\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFillOverprint\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateStrokeOverprint\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateOverprintMode\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateTransfer\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateFillColorStop\fP (\fBGfxState\fP *, double)"
.br
.ti -1c
.RI "virtual void \fBupdateFont\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateTextMat\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateCharSpace\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateRender\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateRise\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateWordSpace\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateHorizScaling\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateTextPos\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBupdateTextShift\fP (\fBGfxState\fP *, double)"
.br
.ti -1c
.RI "virtual void \fBsaveTextPos\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBrestoreTextPos\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBstroke\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBfill\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBeoFill\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBtilingPatternFill\fP (\fBGfxState\fP *, \fBGfx\fP *, \fBCatalog\fP *, \fBObject\fP *, double *, int, int, \fBDict\fP *, double *, double *, int, int, int, int, double, double)"
.br
.ti -1c
.RI "virtual GBool \fBfunctionShadedFill\fP (\fBGfxState\fP *, \fBGfxFunctionShading\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBaxialShadedFill\fP (\fBGfxState\fP *, \fBGfxAxialShading\fP *, double, double)"
.br
.ti -1c
.RI "virtual GBool \fBaxialShadedSupportExtend\fP (\fBGfxState\fP *, \fBGfxAxialShading\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBradialShadedFill\fP (\fBGfxState\fP *, \fBGfxRadialShading\fP *, double, double)"
.br
.ti -1c
.RI "virtual GBool \fBradialShadedSupportExtend\fP (\fBGfxState\fP *, \fBGfxRadialShading\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBgouraudTriangleShadedFill\fP (\fBGfxState\fP *state, \fBGfxGouraudTriangleShading\fP *shading)"
.br
.ti -1c
.RI "virtual GBool \fBpatchMeshShadedFill\fP (\fBGfxState\fP *state, \fBGfxPatchMeshShading\fP *shading)"
.br
.ti -1c
.RI "virtual void \fBclip\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBeoClip\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBclipToStrokePath\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBbeginStringOp\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBendStringOp\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBbeginString\fP (\fBGfxState\fP *, \fBGooString\fP *)"
.br
.ti -1c
.RI "virtual void \fBendString\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBdrawChar\fP (\fBGfxState\fP *, double, double, double, double, double, double, CharCode, int, Unicode *, int)"
.br
.ti -1c
.RI "virtual void \fBdrawString\fP (\fBGfxState\fP *, \fBGooString\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBbeginType3Char\fP (\fBGfxState\fP *, double, double, double, double, CharCode, Unicode *, int)"
.br
.ti -1c
.RI "virtual void \fBendType3Char\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBbeginTextObject\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBendTextObject\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBincCharCount\fP (int)"
.br
.ti -1c
.RI "virtual void \fBbeginActualText\fP (\fBGfxState\fP *, \fBGooString\fP *)"
.br
.ti -1c
.RI "virtual void \fBendActualText\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBdrawImageMask\fP (\fBGfxState\fP *state, \fBObject\fP *ref, \fBStream\fP *str, int width, int height, GBool invert, GBool interpolate, GBool inlineImg)"
.br
.ti -1c
.RI "virtual void \fBsetSoftMaskFromImageMask\fP (\fBGfxState\fP *state, \fBObject\fP *ref, \fBStream\fP *str, int width, int height, GBool invert, GBool inlineImg, double *baseMatrix)"
.br
.ti -1c
.RI "virtual void \fBunsetSoftMaskFromImageMask\fP (\fBGfxState\fP *state, double *baseMatrix)"
.br
.ti -1c
.RI "virtual void \fBdrawImage\fP (\fBGfxState\fP *state, \fBObject\fP *ref, \fBStream\fP *str, int width, int height, \fBGfxImageColorMap\fP *colorMap, GBool interpolate, int *maskColors, GBool inlineImg)"
.br
.ti -1c
.RI "virtual void \fBdrawMaskedImage\fP (\fBGfxState\fP *state, \fBObject\fP *ref, \fBStream\fP *str, int width, int height, \fBGfxImageColorMap\fP *colorMap, GBool interpolate, \fBStream\fP *maskStr, int maskWidth, int maskHeight, GBool maskInvert, GBool maskInterpolate)"
.br
.ti -1c
.RI "virtual void \fBdrawSoftMaskedImage\fP (\fBGfxState\fP *state, \fBObject\fP *ref, \fBStream\fP *str, int width, int height, \fBGfxImageColorMap\fP *colorMap, GBool interpolate, \fBStream\fP *maskStr, int maskWidth, int maskHeight, \fBGfxImageColorMap\fP *maskColorMap, GBool maskInterpolate)"
.br
.ti -1c
.RI "virtual void \fBendMarkedContent\fP (\fBGfxState\fP *state)"
.br
.ti -1c
.RI "virtual void \fBbeginMarkedContent\fP (char *name, \fBDict\fP *properties)"
.br
.ti -1c
.RI "virtual void \fBmarkPoint\fP (char *name)"
.br
.ti -1c
.RI "virtual void \fBmarkPoint\fP (char *name, \fBDict\fP *properties)"
.br
.ti -1c
.RI "virtual void \fBopiBegin\fP (\fBGfxState\fP *state, \fBDict\fP *opiDict)"
.br
.ti -1c
.RI "virtual void \fBopiEnd\fP (\fBGfxState\fP *state, \fBDict\fP *opiDict)"
.br
.ti -1c
.RI "virtual void \fBtype3D0\fP (\fBGfxState\fP *, double, double)"
.br
.ti -1c
.RI "virtual void \fBtype3D1\fP (\fBGfxState\fP *, double, double, double, double, double, double)"
.br
.ti -1c
.RI "virtual void \fBdrawForm\fP (\fBRef\fP)"
.br
.ti -1c
.RI "virtual void \fBpsXObject\fP (\fBStream\fP *, \fBStream\fP *)"
.br
.ti -1c
.RI "virtual void \fBstartProfile\fP ()"
.br
.ti -1c
.RI "virtual \fBGooHash\fP * \fBgetProfileHash\fP ()"
.br
.ti -1c
.RI "virtual \fBGooHash\fP * \fBendProfile\fP ()"
.br
.ti -1c
.RI "virtual GBool \fBcheckTransparencyGroup\fP (\fBGfxState\fP *, GBool)"
.br
.ti -1c
.RI "virtual void \fBbeginTransparencyGroup\fP (\fBGfxState\fP *, double *, \fBGfxColorSpace\fP *, GBool, GBool, GBool)"
.br
.ti -1c
.RI "virtual void \fBendTransparencyGroup\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBpaintTransparencyGroup\fP (\fBGfxState\fP *, double *)"
.br
.ti -1c
.RI "virtual void \fBsetSoftMask\fP (\fBGfxState\fP *, double *, GBool, \fBFunction\fP *, \fBGfxColor\fP *)"
.br
.ti -1c
.RI "virtual void \fBclearSoftMask\fP (\fBGfxState\fP *)"
.br
.ti -1c
.RI "virtual void \fBprocessLink\fP (\fBAnnotLink\fP *)"
.br
.ti -1c
.RI "virtual GBool \fBgetVectorAntialias\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetVectorAntialias\fP (GBool)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 72 of file OutputDev\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MuseScore-2\&.2 from the source code\&.
