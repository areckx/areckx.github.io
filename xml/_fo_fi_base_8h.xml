<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_fo_fi_base_8h" kind="file" language="C++">
    <compoundname>FoFiBase.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includedby refid="_fo_fi_base_8cc" local="yes">thirdparty/poppler/fofi/FoFiBase.cc</includedby>
    <includedby refid="_fo_fi_type1_c_8h" local="yes">thirdparty/poppler/fofi/FoFiType1C.h</includedby>
    <includedby refid="_fo_fi_true_type_8h" local="yes">thirdparty/poppler/fofi/FoFiTrueType.h</includedby>
    <includedby refid="_fo_fi_type1_8h" local="yes">thirdparty/poppler/fofi/FoFiType1.h</includedby>
    <incdepgraph>
      <node id="83943">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="83944" relation="include">
        </childnode>
      </node>
      <node id="83941">
        <label>thirdparty/poppler/fofi/FoFiBase.h</label>
        <link refid="_fo_fi_base_8h"/>
        <childnode refid="83942" relation="include">
        </childnode>
      </node>
      <node id="83942">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="83943" relation="include">
        </childnode>
      </node>
      <node id="83944">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="83951">
        <label>thirdparty/poppler/poppler/GfxFont.cc</label>
        <link refid="_gfx_font_8cc_source"/>
      </node>
      <node id="83950">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="83958">
        <label>thirdparty/poppler/fofi/FoFiType1.cc</label>
        <link refid="_fo_fi_type1_8cc_source"/>
      </node>
      <node id="83946">
        <label>thirdparty/poppler/fofi/FoFiBase.cc</label>
        <link refid="_fo_fi_base_8cc_source"/>
      </node>
      <node id="83954">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="83945">
        <label>thirdparty/poppler/fofi/FoFiBase.h</label>
        <link refid="_fo_fi_base_8h"/>
        <childnode refid="83946" relation="include">
        </childnode>
        <childnode refid="83947" relation="include">
        </childnode>
        <childnode refid="83953" relation="include">
        </childnode>
        <childnode refid="83957" relation="include">
        </childnode>
      </node>
      <node id="83953">
        <label>thirdparty/poppler/fofi/FoFiTrueType.h</label>
        <link refid="_fo_fi_true_type_8h_source"/>
        <childnode refid="83948" relation="include">
        </childnode>
        <childnode refid="83950" relation="include">
        </childnode>
        <childnode refid="83954" relation="include">
        </childnode>
        <childnode refid="83951" relation="include">
        </childnode>
        <childnode refid="83952" relation="include">
        </childnode>
        <childnode refid="83955" relation="include">
        </childnode>
        <childnode refid="83956" relation="include">
        </childnode>
      </node>
      <node id="83955">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="83952">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="83947">
        <label>thirdparty/poppler/fofi/FoFiType1C.h</label>
        <link refid="_fo_fi_type1_c_8h_source"/>
        <childnode refid="83948" relation="include">
        </childnode>
        <childnode refid="83949" relation="include">
        </childnode>
        <childnode refid="83950" relation="include">
        </childnode>
        <childnode refid="83951" relation="include">
        </childnode>
        <childnode refid="83952" relation="include">
        </childnode>
      </node>
      <node id="83957">
        <label>thirdparty/poppler/fofi/FoFiType1.h</label>
        <link refid="_fo_fi_type1_8h_source"/>
        <childnode refid="83958" relation="include">
        </childnode>
        <childnode refid="83951" relation="include">
        </childnode>
      </node>
      <node id="83948">
        <label>thirdparty/poppler/fofi/FoFiTrueType.cc</label>
        <link refid="_fo_fi_true_type_8cc_source"/>
      </node>
      <node id="83949">
        <label>thirdparty/poppler/fofi/FoFiType1C.cc</label>
        <link refid="_fo_fi_type1_c_8cc_source"/>
      </node>
      <node id="83956">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.cc</label>
        <link refid="_arthur_output_dev_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_fo_fi_base" prot="public">FoFiBase</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_fo_fi_base_8h_1a34f09e76bc9ef19408c56edb39338e84" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* FoFiOutputFunc) (void *stream, const char *data, int len)</definition>
        <argsstring>)(void *stream, const char *data, int len)</argsstring>
        <name>FoFiOutputFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/fofi/FoFiBase.h" line="20" column="1" bodyfile="thirdparty/poppler/fofi/FoFiBase.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FoFiBase.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1999-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FOFIBASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOFIBASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*FoFiOutputFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FoFiBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_fo_fi_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fo_fi_base" kindref="compound">FoFiBase</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_fo_fi_base" kindref="compound">FoFiBase</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_fo_fi_base" kindref="compound">FoFiBase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenA,<sp/>GBool<sp/>freeFileDataA);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*readFile(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fileLen);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>S<sp/>=<sp/>signed<sp/>/<sp/>U<sp/>=<sp/>unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>8/16/32/Var<sp/>=<sp/>word<sp/>length,<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BE<sp/>=<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getS8(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getU8(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getS16BE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getU16BE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getS32BE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>Guint<sp/>getU32BE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>Guint<sp/>getU32LE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>Guint<sp/>getUVarBE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>GBool<sp/>*ok);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>GBool<sp/>checkRegion(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>Guchar<sp/>*fileData;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>Guchar<sp/>*file;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>GBool<sp/>freeFileData;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/fofi/FoFiBase.h"/>
  </compounddef>
</doxygen>
