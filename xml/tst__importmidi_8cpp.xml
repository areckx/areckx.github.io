<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__importmidi_8cpp" kind="file" language="C++">
    <compoundname>tst_importmidi.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="mscore_8h" local="yes">libmscore/mscore.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="durationtype_8h" local="yes">libmscore/durationtype.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="chord_8h" local="yes">libmscore/chord.h</includes>
    <includes refid="note_8h" local="yes">libmscore/note.h</includes>
    <includes refid="keysig_8h" local="yes">libmscore/keysig.h</includes>
    <includes refid="exportmidi_8h" local="yes">mscore/exportmidi.h</includes>
    <includes refid="mcursor_8h" local="yes">libmscore/mcursor.h</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="inner__func__decl_8h" local="yes">inner_func_decl.h</includes>
    <includes refid="importmidi__chord_8h" local="yes">mscore/importmidi/importmidi_chord.h</includes>
    <includes refid="importmidi__tuplet_8h" local="yes">mscore/importmidi/importmidi_tuplet.h</includes>
    <includes refid="importmidi__meter_8h" local="yes">mscore/importmidi/importmidi_meter.h</includes>
    <includes refid="importmidi__inner_8h" local="yes">mscore/importmidi/importmidi_inner.h</includes>
    <includes refid="importmidi__quant_8h" local="yes">mscore/importmidi/importmidi_quant.h</includes>
    <includes refid="importmidi__fraction_8h" local="yes">mscore/importmidi/importmidi_fraction.h</includes>
    <includes refid="importmidi__operations_8h" local="yes">mscore/importmidi/importmidi_operations.h</includes>
    <includes refid="importmidi__model_8h" local="yes">mscore/importmidi/importmidi_model.h</includes>
    <includes refid="importmidi__lyrics_8h" local="yes">mscore/importmidi/importmidi_lyrics.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes local="yes">tst_importmidi.moc</includes>
    <incdepgraph>
      <node id="71912">
        <label>list</label>
      </node>
      <node id="71906">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="71889" relation="include">
        </childnode>
      </node>
      <node id="71948">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="71944" relation="include">
        </childnode>
        <childnode refid="71931" relation="include">
        </childnode>
      </node>
      <node id="71908">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="71926">
        <label>functional</label>
      </node>
      <node id="71928">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="71890" relation="include">
        </childnode>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71895" relation="include">
        </childnode>
      </node>
      <node id="71952">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="71953" relation="include">
        </childnode>
        <childnode refid="71954" relation="include">
        </childnode>
        <childnode refid="71948" relation="include">
        </childnode>
      </node>
      <node id="71943">
        <label>mscore/importmidi/importmidi_inner.h</label>
        <link refid="importmidi__inner_8h_source"/>
        <childnode refid="71940" relation="include">
        </childnode>
        <childnode refid="71941" relation="include">
        </childnode>
        <childnode refid="71944" relation="include">
        </childnode>
        <childnode refid="71916" relation="include">
        </childnode>
        <childnode refid="71945" relation="include">
        </childnode>
        <childnode refid="71946" relation="include">
        </childnode>
      </node>
      <node id="71923">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="71924" relation="include">
        </childnode>
      </node>
      <node id="71921">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="71922" relation="include">
        </childnode>
        <childnode refid="71896" relation="include">
        </childnode>
        <childnode refid="71923" relation="include">
        </childnode>
      </node>
      <node id="71901">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="71954">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="71955" relation="include">
        </childnode>
        <childnode refid="71953" relation="include">
        </childnode>
      </node>
      <node id="71951">
        <label>mscore/importmidi/importmidi_lyrics.h</label>
        <link refid="importmidi__lyrics_8h_source"/>
      </node>
      <node id="71913">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="71924">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71901" relation="include">
        </childnode>
        <childnode refid="71889" relation="include">
        </childnode>
      </node>
      <node id="71892">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="71903">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71904" relation="include">
        </childnode>
      </node>
      <node id="71947">
        <label>mscore/importmidi/importmidi_quant.h</label>
        <link refid="importmidi__quant_8h_source"/>
        <childnode refid="71944" relation="include">
        </childnode>
      </node>
      <node id="71934">
        <label>map</label>
      </node>
      <node id="71895">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="71896" relation="include">
        </childnode>
        <childnode refid="71897" relation="include">
        </childnode>
      </node>
      <node id="71941">
        <label>importmidi_tuplet.h</label>
        <link refid="importmidi__tuplet_8h_source"/>
        <childnode refid="71940" relation="include">
        </childnode>
      </node>
      <node id="71930">
        <label>mscore/exportmidi.h</label>
        <link refid="exportmidi_8h_source"/>
        <childnode refid="71931" relation="include">
        </childnode>
      </node>
      <node id="71937">
        <label>inner_func_decl.h</label>
        <link refid="inner__func__decl_8h_source"/>
        <childnode refid="71938" relation="include">
        </childnode>
      </node>
      <node id="71955">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="71914">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="71915" relation="include">
        </childnode>
      </node>
      <node id="71942">
        <label>mscore/importmidi/importmidi_meter.h</label>
        <link refid="importmidi__meter_8h_source"/>
      </node>
      <node id="71940">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="71896" relation="include">
        </childnode>
      </node>
      <node id="71939">
        <label>mscore/importmidi/importmidi_chord.h</label>
        <link refid="importmidi__chord_8h_source"/>
        <childnode refid="71940" relation="include">
        </childnode>
        <childnode refid="71941" relation="include">
        </childnode>
        <childnode refid="71934" relation="include">
        </childnode>
      </node>
      <node id="71944">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="71940" relation="include">
        </childnode>
        <childnode refid="71938" relation="include">
        </childnode>
      </node>
      <node id="71915">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="71916" relation="include">
        </childnode>
        <childnode refid="71917" relation="include">
        </childnode>
        <childnode refid="71918" relation="include">
        </childnode>
      </node>
      <node id="71925">
        <label>libmscore/chord.h</label>
        <link refid="chord_8h"/>
        <childnode refid="71926" relation="include">
        </childnode>
        <childnode refid="71927" relation="include">
        </childnode>
      </node>
      <node id="71922">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71919" relation="include">
        </childnode>
      </node>
      <node id="71929">
        <label>libmscore/keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="71908" relation="include">
        </childnode>
        <childnode refid="71898" relation="include">
        </childnode>
      </node>
      <node id="71907">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="71902" relation="include">
        </childnode>
      </node>
      <node id="71936">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="71898" relation="include">
        </childnode>
      </node>
      <node id="71916">
        <label>vector</label>
      </node>
      <node id="71904">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="71899">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="71920">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="71946">
        <label>utility</label>
      </node>
      <node id="71896">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="71890" relation="include">
        </childnode>
      </node>
      <node id="71902">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="71903" relation="include">
        </childnode>
      </node>
      <node id="71891">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="71892" relation="include">
        </childnode>
      </node>
      <node id="71953">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="71956">
        <label>tst_importmidi.moc</label>
      </node>
      <node id="71931">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="71932" relation="include">
        </childnode>
        <childnode refid="71933" relation="include">
        </childnode>
      </node>
      <node id="71909">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71895" relation="include">
        </childnode>
      </node>
      <node id="71919">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="71898" relation="include">
        </childnode>
      </node>
      <node id="71898">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="71899" relation="include">
        </childnode>
        <childnode refid="71896" relation="include">
        </childnode>
        <childnode refid="71900" relation="include">
        </childnode>
        <childnode refid="71901" relation="include">
        </childnode>
      </node>
      <node id="71911">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="71912" relation="include">
        </childnode>
      </node>
      <node id="71918">
        <label>iostream</label>
      </node>
      <node id="71889">
        <label>libmscore/mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="71890" relation="include">
        </childnode>
        <childnode refid="71891" relation="include">
        </childnode>
      </node>
      <node id="71945">
        <label>cstddef</label>
      </node>
      <node id="71894">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="71889" relation="include">
        </childnode>
        <childnode refid="71895" relation="include">
        </childnode>
        <childnode refid="71909" relation="include">
        </childnode>
      </node>
      <node id="71905">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="71935">
        <label>libmscore/mcursor.h</label>
        <link refid="mcursor_8h_source"/>
        <childnode refid="71896" relation="include">
        </childnode>
      </node>
      <node id="71949">
        <label>mscore/importmidi/importmidi_model.h</label>
        <link refid="importmidi__model_8h_source"/>
        <childnode refid="71948" relation="include">
        </childnode>
        <childnode refid="71950" relation="include">
        </childnode>
      </node>
      <node id="71887">
        <label>mtest/importmidi/tst_importmidi.cpp</label>
        <link refid="tst__importmidi_8cpp"/>
        <childnode refid="71888" relation="include">
        </childnode>
        <childnode refid="71889" relation="include">
        </childnode>
        <childnode refid="71893" relation="include">
        </childnode>
        <childnode refid="71895" relation="include">
        </childnode>
        <childnode refid="71921" relation="include">
        </childnode>
        <childnode refid="71924" relation="include">
        </childnode>
        <childnode refid="71925" relation="include">
        </childnode>
        <childnode refid="71897" relation="include">
        </childnode>
        <childnode refid="71929" relation="include">
        </childnode>
        <childnode refid="71930" relation="include">
        </childnode>
        <childnode refid="71935" relation="include">
        </childnode>
        <childnode refid="71936" relation="include">
        </childnode>
        <childnode refid="71937" relation="include">
        </childnode>
        <childnode refid="71939" relation="include">
        </childnode>
        <childnode refid="71941" relation="include">
        </childnode>
        <childnode refid="71942" relation="include">
        </childnode>
        <childnode refid="71943" relation="include">
        </childnode>
        <childnode refid="71947" relation="include">
        </childnode>
        <childnode refid="71940" relation="include">
        </childnode>
        <childnode refid="71948" relation="include">
        </childnode>
        <childnode refid="71949" relation="include">
        </childnode>
        <childnode refid="71951" relation="include">
        </childnode>
        <childnode refid="71952" relation="include">
        </childnode>
        <childnode refid="71956" relation="include">
        </childnode>
      </node>
      <node id="71927">
        <label>chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="71926" relation="include">
        </childnode>
        <childnode refid="71902" relation="include">
        </childnode>
        <childnode refid="71928" relation="include">
        </childnode>
        <childnode refid="71909" relation="include">
        </childnode>
        <childnode refid="71901" relation="include">
        </childnode>
      </node>
      <node id="71938">
        <label>set</label>
      </node>
      <node id="71890">
        <label>config.h</label>
      </node>
      <node id="71917">
        <label>algorithm</label>
      </node>
      <node id="71893">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="71890" relation="include">
        </childnode>
        <childnode refid="71894" relation="include">
        </childnode>
        <childnode refid="71910" relation="include">
        </childnode>
        <childnode refid="71911" relation="include">
        </childnode>
        <childnode refid="71913" relation="include">
        </childnode>
        <childnode refid="71914" relation="include">
        </childnode>
        <childnode refid="71919" relation="include">
        </childnode>
        <childnode refid="71920" relation="include">
        </childnode>
      </node>
      <node id="71933">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="71934" relation="include">
        </childnode>
      </node>
      <node id="71932">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="71896" relation="include">
        </childnode>
      </node>
      <node id="71900">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="71910">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="71906" relation="include">
        </childnode>
        <childnode refid="71889" relation="include">
        </childnode>
        <childnode refid="71895" relation="include">
        </childnode>
      </node>
      <node id="71950">
        <label>memory</label>
      </node>
      <node id="71897">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="71898" relation="include">
        </childnode>
        <childnode refid="71902" relation="include">
        </childnode>
        <childnode refid="71905" relation="include">
        </childnode>
        <childnode refid="71906" relation="include">
        </childnode>
        <childnode refid="71901" relation="include">
        </childnode>
        <childnode refid="71907" relation="include">
        </childnode>
        <childnode refid="71908" relation="include">
        </childnode>
      </node>
      <node id="71888">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_import_midi" prot="public">TestImportMidi</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__importmidi_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;importmidi/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="46" column="9" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tst__importmidi_8cpp_1ab6f147ccabe7089974ca9f1a6d05af88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isSingleNoteInTupletAllowed</definition>
        <argsstring>(int tupletNumber, int tupletNoteNumber, double noteLenInTupletLen, bool expectedResult)</argsstring>
        <name>isSingleNoteInTupletAllowed</name>
        <param>
          <type>int</type>
          <declname>tupletNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tupletNoteNumber</declname>
        </param>
        <param>
          <type>double</type>
          <declname>noteLenInTupletLen</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expectedResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="498" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="498" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="tst__importmidi_8cpp_1a270952a150121289de7a5da50deebee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isChordCountInTupletAllowed</definition>
        <argsstring>(int tupletNumber, int chordCount, bool expectedResult)</argsstring>
        <name>isChordCountInTupletAllowed</name>
        <param>
          <type>int</type>
          <declname>tupletNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chordCount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expectedResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="524" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="524" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="tst__importmidi_8cpp_1a1d5c2e26f808df2fb420965e414d37f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isTupletErrorAllowed</definition>
        <argsstring>(int tupletSumError, int regularSumError, bool expectedResult)</argsstring>
        <name>isTupletErrorAllowed</name>
        <param>
          <type>int</type>
          <declname>tupletSumError</declname>
        </param>
        <param>
          <type>int</type>
          <declname>regularSumError</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expectedResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="549" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="549" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="tst__importmidi_8cpp_1ae4e25d683b31d1ac93a75efd05d765b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref></type>
        <definition>MidiNote noteFactory</definition>
        <argsstring>(const ReducedFraction &amp;offTime, int pitch)</argsstring>
        <name>noteFactory</name>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>offTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="820" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="820" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="tst__importmidi_8cpp_1a2f23ae0a2243801050144b2d54c9134d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref></type>
        <definition>MidiChord chordFactory</definition>
        <argsstring>(const ReducedFraction &amp;offTime, const std::vector&lt; int &gt; &amp;pitches)</argsstring>
        <name>chordFactory</name>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>offTime</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>pitches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="828" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="828" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="tst__importmidi_8cpp_1a4ba9a7ace04ff8c8c03ec56fe83fab09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int findColByHeader</definition>
        <argsstring>(const TracksModel &amp;model, const char *colHeader)</argsstring>
        <name>findColByHeader</name>
        <param>
          <type>const <ref refid="class_ms_1_1_tracks_model" kindref="compound">TracksModel</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>colHeader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/importmidi/tst_importmidi.cpp" line="1152" column="1" bodyfile="mtest/importmidi/tst_importmidi.cpp" bodystart="1152" bodyend="1162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mscore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/durationtype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chord_8h" kindref="compound">libmscore/chord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="note_8h" kindref="compound">libmscore/note.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keysig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/exportmidi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mcursor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inner_func_decl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_chord.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_tuplet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_meter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_inner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_quant.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_fraction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_operations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_model.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/importmidi/importmidi_lyrics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Score::FileError<sp/>importMidi(<ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;importmidi/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestImportMidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_test_import_midi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_import_midi" kindref="compound">TestImportMidi</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFilePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFilePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions<sp/>that<sp/>modify<sp/>default<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dontSimplify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(file));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(file));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(file);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noTempoText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(file));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(file));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(file);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceSeparation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>simplify<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(file));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(file));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(simplify,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(file);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplification(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(file));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(file));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(file);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>staffSplit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(file));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(file));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(file);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>im1()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;m1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>im2()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;m2&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tie<sp/>across<sp/>bar<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>im3()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;m3&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>voices,<sp/>typeA,<sp/>resolve<sp/>with<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>im4()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;m4&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>voices,<sp/>typeB,<sp/>resolve<sp/>with<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>im5()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;m5&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>m1<sp/>with<sp/>division<sp/>240</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quantDotted4th()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;quant_dotted_4th&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1/4<sp/>quantization<sp/>should<sp/>preserve<sp/>4th<sp/>dotted<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontSimplify(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>human-performed<sp/>(unaligned)<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>human4_4()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;human_4-4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>humanTempo()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;human_tempo&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chord<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordSmallError()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;chord_small_error&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordBigError()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;chord_big_error&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordLegato()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;chord_legato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordCollect()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;chord_collect&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>very<sp/>short<sp/>note<sp/>-<sp/>don&apos;t<sp/>remove<sp/>note<sp/>but<sp/>show<sp/>it<sp/>with<sp/>min<sp/>allowed<sp/>duration<sp/>(1/128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>chordVeryShort()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;chord_1_tick_long&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>tuplet<sp/>recognition<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findChordInBar();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isTupletAllowed();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findTupletNumbers();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findOnTimeRegularError();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findTupletApproximation();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>separateTupletVoices();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findLongestUncommonGroup();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>metric<sp/>bar<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metricDivisionsOfTuplet();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maxLevelBetween();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isSimpleDuration();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>scores<sp/>for<sp/>meter<sp/>(duration<sp/>subdivision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterTimeSig4_4()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_4-4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metertimeSig9_8()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_9-8&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metertimeSig12_8()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_12-8&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metertimeSig15_8()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_15-8&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterCentralLongNote()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_central_long_note&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterCentralLongRest()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_central_long_rest&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterChordExample()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_chord_example&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterDotsExample1()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_dots_example1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterDotsExample2()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_dots_example2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterDotsExample3()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_dots_example3&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterHalfRest3_4()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_half_rest_3-4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterFirst2_8thRestsCompound()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_first_2_8th_rests_compound&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterLastQuarterRestCompound()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_last_quarter_rest_compound&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterRests()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_rests&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterTwoBeatsOver()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_two_beats_over&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>meterDotTie()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;meter_dot_tie&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>sig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timesigChanges()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;timesig_changes&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>scores<sp/>for<sp/>tuplets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet2Voices3_5Tuplets()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/32<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_2_voices_3_5_tuplets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_32,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet2VoicesTupletNon()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;tuplet_2_voices_tuplet_non&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet3_5_7tuplets()</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_3_5_7_tuplets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.changeClef.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet5_5TupletsRests()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_5_5_tuplets_rests&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet3_4()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_3-4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletDuplet()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_duplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletMars()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_mars&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletNonuplet3_4()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/64<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_nonuplet_3-4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_64,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontSimplify(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletNonuplet4_4()</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/64<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_nonuplet_4-4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_64,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontSimplify(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletQuadruplet()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_quadruplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletSeptuplet()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_septuplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTripletsMixed()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_triplets_mixed&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTriplet()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_triplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTripletFirstTied()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_triplet_first_tied&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTripletFirstTied2()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_triplet_first_tied2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTripletLastTied()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_triplet_last_tied&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTied3_5()</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/32<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_tied_3_5_tuplets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_32,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontSimplify(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletTied3_5_2()</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/32<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;tuplet_tied_3_5_tuplets2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.quantValue.setDefaultValue(MidiOperations::QuantValue::Q_32,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dontSimplify(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletOffTimeOtherBar()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_off_time_other_bar&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tupletOffTimeOtherBar2()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_off_time_other_bar2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet16th8th()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;tuplet_16th_8th&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tuplet7Staccato()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;tuplet_7_staccato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>minDuration()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;min_duration&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pickupMeasure()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;pickup&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pickupMeasureLong()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;pickup_long&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pickupMeasureTurnOff()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;pickup_turn_off&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LH/RH<sp/>separation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LHRH_Nontuplet()<sp/>{<sp/>staffSplit(</highlight><highlight class="stringliteral">&quot;split_nontuplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LHRH_Acid()<sp/>{<sp/>staffSplit(</highlight><highlight class="stringliteral">&quot;split_acid&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LHRH_Tuplet()<sp/>{<sp/>staffSplit(</highlight><highlight class="stringliteral">&quot;split_tuplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LHRH_2melodies()<sp/>{<sp/>staffSplit(</highlight><highlight class="stringliteral">&quot;split_2_melodies&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LHRH_octave()<sp/>{<sp/>staffSplit(</highlight><highlight class="stringliteral">&quot;split_octave&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swingTriplets()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;swing_triplets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.swing.setDefaultValue(MidiOperations::Swing::SWING,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swingShuffle()</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;swing_shuffle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.swing.setDefaultValue(MidiOperations::Swing::SHUFFLE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swingClef()</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;swing_clef&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFilePath(midiFile));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;data<sp/>=<sp/>*opers.data();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.swing.setDefaultValue(MidiOperations::Swing::SWING,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.changeClef.setDefaultValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.doStaffSplit.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.simplifyDurations.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.maxVoiceCount.setDefaultValue(MidiOperations::VoiceCount::V_1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.trackOpers.showTempoText.setDefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mf(midiFile.toStdString().c_str());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>percussion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percDrums()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_drums&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percRemoveTies()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_remove_ties&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percNoGrandStaff()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_no_grand_staff&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percTriplet()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_triplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percRespectBeat()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_respect_beat&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percTupletVoice()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_tuplet_voice&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percTupletSimplify()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_tuplet_simplify&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percTupletSimplify2()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_tuplet_simplify2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>percShortNotes()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;perc_short_notes&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clef<sp/>changes<sp/>along<sp/>the<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clefTied()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;clef_tied&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clefMelody()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;clef_melody&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clefPrev()<sp/>{<sp/>dontSimplify(</highlight><highlight class="stringliteral">&quot;clef_prev&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duration<sp/>simplification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify16thStaccato()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_16th_staccato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify8thDont()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_8th_dont&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify32ndStaccato()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_32nd_staccato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify8thDottedNoStaccato()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_8th_dotted_no_staccato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplify4thDottedTied()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_4th_dotted_tied&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplifyTripletStaccato()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_triplet_staccato&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplifyDotted3_4()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_dotted_3-4&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>simplifyStaccato9_8()<sp/>{<sp/>simplification(</highlight><highlight class="stringliteral">&quot;simplify_staccato_9-8&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>voice<sp/>separation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceSeparationAcid()<sp/>{<sp/>voiceSeparation(</highlight><highlight class="stringliteral">&quot;voice_acid&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceSeparationIntersect()<sp/>{<sp/>voiceSeparation(</highlight><highlight class="stringliteral">&quot;voice_intersect&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceSeparationTuplet()<sp/>{<sp/>voiceSeparation(</highlight><highlight class="stringliteral">&quot;voice_tuplet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>voiceSeparationCentral()<sp/>{<sp/>voiceSeparation(</highlight><highlight class="stringliteral">&quot;voice_central&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>division<sp/>(fps<sp/>and<sp/>ticks<sp/>per<sp/>frame<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>division()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;division&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIDI<sp/>instruments<sp/>and<sp/>Grand<sp/>Staff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentGrand()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;instrument_grand&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentGrand2()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;instrument_grand2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentChannels()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;instrument_channels&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrument3StaffOrgan()<sp/>{<sp/>mf(</highlight><highlight class="stringliteral">&quot;instrument_3staff_organ&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>instrumentClef()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;instrument_clef&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lyrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lyricsTime0()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;lyrics_time_0&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lyricsVoice1()<sp/>{<sp/>noTempoText(</highlight><highlight class="stringliteral">&quot;lyrics_voice_1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gui<sp/>-<sp/>tracks<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testGuiTracksModel();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::initTestCase()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>midifile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::mf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="423"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setName(name);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>mscorename<sp/>=<sp/>QString(name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mscx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(score,<sp/><sp/>midiFilePath(name)),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>mscorename,<sp/>DIR<sp/>+<sp/>mscorename));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">QString<sp/>TestImportMidi::midiFilePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>nameWithExtention<sp/>=<sp/>fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString(TESTROOT<sp/></highlight><highlight class="stringliteral">&quot;/mtest/&quot;</highlight><highlight class="normal"><sp/>+<sp/>DIR<sp/>+<sp/>nameWithExtention);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">QString<sp/>TestImportMidi::midiFilePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="439"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>midiFilePath(QString(fileName));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tuplet<sp/>recognition<sp/>fuctions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::findChordInBar()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(10),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(360),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(480),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(1480),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(2000),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(3201),<sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref>()});</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>startBarTick;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>endBarTick<sp/>=<sp/>ReducedFraction::fromTicks(4<sp/>*<sp/>MScore::division);<sp/></highlight><highlight class="comment">//<sp/>4/4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(startBarTick,<sp/>endBarTick,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.begin(),<sp/>chords.end());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.begin());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(chords,<sp/>startBarTick,<sp/>endBarTick);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.begin());</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endChordIt<sp/>=<sp/>MChord::findEndChordInRange(endBarTick,<sp/>firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(endChordIt,<sp/>chords.find(ReducedFraction::fromTicks(2000)));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endChordIt<sp/>=<sp/>chords.lower_bound(endBarTick);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(endChordIt,<sp/>chords.find(ReducedFraction::fromTicks(2000)));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endBarTick<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(startBarTick,<sp/>endBarTick,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.begin(),<sp/>chords.end());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(chords,<sp/>startBarTick,<sp/>endBarTick);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endChordIt<sp/>=<sp/>MChord::findEndChordInRange(endBarTick,<sp/>firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(endChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startBarTick<sp/>=<sp/>ReducedFraction::fromTicks(10);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endBarTick<sp/>=<sp/>ReducedFraction::fromTicks(-100);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(startBarTick,<sp/>endBarTick,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.begin(),<sp/>chords.end());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstChordIt<sp/>=<sp/>MChord::findFirstChordInRange(chords,<sp/>startBarTick,<sp/>endBarTick);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endChordIt<sp/>=<sp/>MChord::findEndChordInRange(endBarTick,<sp/>firstChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(endChordIt,<sp/>chords.end());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tupletNoteNumber<sp/>-<sp/>number<sp/>of<sp/>note<sp/>in<sp/>tuplet<sp/>(like<sp/>index):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>i.e.<sp/>for<sp/>triplet<sp/>notes<sp/>can<sp/>have<sp/>numbers<sp/>1,<sp/>2,<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isSingleNoteInTupletAllowed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletNumber,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletNoteNumber,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>noteLenInTupletLen,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectedResult)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletInfo;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.len<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>onTime<sp/>=<sp/>ReducedFraction::fromTicks(10);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note.offTime<sp/>=<sp/>onTime<sp/>+<sp/>ReducedFraction::fromTicks(</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qRound(tupletInfo.len.ticks()<sp/>*<sp/>noteLenInTupletLen));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({onTime,<sp/>chord});</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.chords.insert({onTime,<sp/>chords.begin()});</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tuplet<sp/>error<sp/>is<sp/>less<sp/>than<sp/>regular<sp/>error<sp/>=&gt;<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletSumError<sp/>=<sp/>{0,<sp/>1};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.regularSumError<sp/>=<sp/>ReducedFraction::fromTicks(1);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletNumber<sp/>=<sp/>tupletNumber;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.firstChordIndex<sp/>=<sp/>tupletNoteNumber<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(MidiTuplet::isTupletAllowed(tupletInfo),<sp/>expectedResult);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isChordCountInTupletAllowed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletNumber,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chordCount,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectedResult)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletInfo;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.len<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.firstChordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>chordCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>onTime<sp/>=<sp/>tupletInfo.len<sp/>/<sp/>tupletNumber<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note.offTime<sp/>=<sp/>onTime<sp/>+<sp/>tupletInfo.len<sp/>/<sp/>tupletNumber;<sp/></highlight><highlight class="comment">//<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lastChordIt<sp/>=<sp/>chords.insert({onTime,<sp/>chord});</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.chords.insert({onTime,<sp/>lastChordIt});</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tuplet<sp/>error<sp/>is<sp/>less<sp/>than<sp/>regular<sp/>error<sp/>=&gt;<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletSumError<sp/>=<sp/>{0,<sp/>1};</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.regularSumError<sp/>=<sp/>ReducedFraction::fromTicks(1);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletNumber<sp/>=<sp/>tupletNumber;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(MidiTuplet::isTupletAllowed(tupletInfo),<sp/>expectedResult);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isTupletErrorAllowed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletSumError,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regularSumError,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectedResult)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletInfo;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletNumber<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.len<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>onTime<sp/>=<sp/>ReducedFraction::fromTicks(10);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note.offTime<sp/>=<sp/>onTime<sp/>+<sp/>tupletInfo.len<sp/>/<sp/>tupletInfo.tupletNumber;<sp/><sp/></highlight><highlight class="comment">//<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({onTime,<sp/>chord});</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.chords.insert({onTime,<sp/>chords.begin()});</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.tupletSumError<sp/>=<sp/>{tupletSumError,<sp/>1};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletInfo.regularSumError<sp/>=<sp/>{regularSumError,<sp/>1};</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(MidiTuplet::isTupletAllowed(tupletInfo),<sp/>expectedResult);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::isTupletAllowed()</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>fileName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dummy&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(fileName);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>fileName);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>1,<sp/>1.0<sp/>/<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>1,<sp/>2.0<sp/>/<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>1,<sp/>1.0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>2,<sp/>1.0<sp/>/<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>2,<sp/>2.0<sp/>/<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(2,<sp/>2,<sp/>1.0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triplets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>1,<sp/>1.0<sp/>/<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>1,<sp/>2.0<sp/>/<sp/>3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>1,<sp/>1.0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>2,<sp/>1.0<sp/>/<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>2,<sp/>2.0<sp/>/<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(3,<sp/>2,<sp/>1.0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quintuplets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>small<sp/>note<sp/>count<sp/>-<sp/>all<sp/>these<sp/>cases<sp/>are<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>1,<sp/>1.0<sp/>/<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>1,<sp/>2.0<sp/>/<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>1,<sp/>1.0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>2,<sp/>1.0<sp/>/<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>2,<sp/>2.0<sp/>/<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSingleNoteInTupletAllowed(5,<sp/>2,<sp/>1.0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>tuplet<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(2,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(2,<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(2,<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>with<sp/>tuplet<sp/>subdivision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(3,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(3,<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(3,<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(3,<sp/>4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>with<sp/>tuplet<sp/>subdivision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(4,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(4,<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(4,<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(4,<sp/>4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(4,<sp/>5,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>with<sp/>tuplet<sp/>subdivision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>5,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(5,<sp/>6,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>with<sp/>tuplet<sp/>subdivision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>5,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>6,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>7,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isChordCountInTupletAllowed(7,<sp/>8,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>with<sp/>tuplet<sp/>subdivision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tuplet<sp/>error<sp/>should<sp/>be<sp/>less<sp/>than<sp/>regular<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isTupletErrorAllowed(4,<sp/>5,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isTupletErrorAllowed(5,<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isTupletErrorAllowed(6,<sp/>5,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::findTupletNumbers()</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_track_setter" kindref="compound">MidiOperations::CurrentTrackSetter</ref><sp/>setCurrentTrack{opers,<sp/>0};</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>barFraction(4,<sp/>4);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>divLen<sp/>=<sp/>barFraction<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numbers<sp/>=<sp/>MidiTuplet::findTupletNumbers(divLen,<sp/>barFraction);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(numbers.size()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(numbers[0],<sp/>3);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(numbers[1],<sp/>5);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(numbers[2],<sp/>7);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(numbers[3],<sp/>9);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>barFraction(6,<sp/>8);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>divLen<sp/>=<sp/>barFraction<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numbers<sp/>=<sp/>MidiTuplet::findTupletNumbers(divLen,<sp/>barFraction);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(numbers.size()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(numbers[0],<sp/>4);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplets<sp/>are<sp/>turned<sp/>off<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::findOnTimeRegularError()</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>quantValue<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division)<sp/>/<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>1/16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note.offTime<sp/>=<sp/>quantValue<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onTime<sp/>=<sp/>quantValue<sp/>+<sp/>ReducedFraction::fromTicks(12);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;const<sp/>ReducedFraction,<sp/>MidiChord&gt;<sp/>pair(onTime,<sp/>chord);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(Quantize::findOnTimeQuantError(pair,<sp/>quantValue),</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReducedFraction::fromTicks(12));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::findTupletApproximation()</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletNumber<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>tupletLen<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>quantValue<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division)<sp/>/<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>1/16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(160);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(0),<sp/>chord});</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(320);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(160),<sp/>chord});</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(480);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(320),<sp/>chord});</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(1480);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(480),<sp/>chord});</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(2000);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(1480),<sp/>chord});</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(3201);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(2000),<sp/>chord});</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.back().offTime<sp/>=<sp/>ReducedFraction::fromTicks(4000);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({ReducedFraction::fromTicks(3201),<sp/>chord});</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>startTupletTime<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletApprox<sp/>=<sp/>MidiTuplet::findTupletApproximation(</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tupletLen,<sp/>tupletNumber,<sp/>quantValue,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTupletTime,<sp/>chords.begin(),<sp/>chords.end()</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.onTime,<sp/>startTupletTime);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.len,<sp/>tupletLen);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.tupletNumber,<sp/>tupletNumber);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(tupletApprox.chords.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.tupletSumError,<sp/>ReducedFraction::fromTicks(0));</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.regularSumError,<sp/>ReducedFraction::fromTicks(80));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.chords.find(ReducedFraction::fromTicks(0))-&gt;second,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.find(ReducedFraction::fromTicks(0)));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.chords.find(ReducedFraction::fromTicks(160))-&gt;second,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.find(ReducedFraction::fromTicks(160)));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.chords.find(ReducedFraction::fromTicks(320))-&gt;second,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.find(ReducedFraction::fromTicks(320)));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>startTupletTime<sp/>=<sp/>ReducedFraction::fromTicks(960);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletApprox<sp/>=<sp/>MidiTuplet::findTupletApproximation(</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tupletLen,<sp/>tupletNumber,<sp/>quantValue,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTupletTime,<sp/>chords.begin(),<sp/>chords.end()</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(tupletApprox.chords.size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>startTupletTime<sp/>=<sp/>ReducedFraction::fromTicks(1440);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tupletApprox<sp/>=<sp/>MidiTuplet::findTupletApproximation(</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tupletLen,<sp/>tupletNumber,<sp/>quantValue,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTupletTime,<sp/>chords.begin(),<sp/>chords.end()</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(tupletApprox.chords.size()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.tupletSumError,<sp/>ReducedFraction::fromTicks(40));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.regularSumError,<sp/>ReducedFraction::fromTicks(40));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletApprox.chords.find(ReducedFraction::fromTicks(1480))-&gt;second,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.find(ReducedFraction::fromTicks(1480)));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::findLongestUncommonGroup()</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;MidiTuplet::TupletInfo&gt;<sp/>tuplets;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>basicQuant<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division)<sp/>/<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>1/16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{5,<sp/>8};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>8};</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{3,<sp/>4};</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>8};</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{7,<sp/>8};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>8};</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>4};</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{3,<sp/>4};</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>4};</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{0,<sp/>1};</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>1};</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>result<sp/>=<sp/>MidiTuplet::findLongestUncommonGroup(tuplets,<sp/>basicQuant);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(result.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(result<sp/>==<sp/>std::set&lt;int&gt;({0,<sp/>1,<sp/>2})</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>result<sp/>==<sp/>std::set&lt;int&gt;({1,<sp/>2,<sp/>3}));</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>unsuccessful<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.clear();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{5,<sp/>8};</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>8};</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.onTime<sp/>=<sp/>{0,<sp/>1};</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.len<sp/>=<sp/>{1,<sp/>1};</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(info);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MidiTuplet::findLongestUncommonGroup(tuplets,<sp/>basicQuant);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(result.size()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tuplet<sp/>voice<sp/>separation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>noteFactory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;offTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pitch)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>note;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note.offTime<sp/>=<sp/>offTime;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>note.pitch<sp/>=<sp/>pitch;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>note;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chordFactory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;offTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;pitches)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;MidiNote&gt;<sp/>notes;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pitch:<sp/>pitches)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notes.push_back(noteFactory(offTime,<sp/>pitch));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>chord;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notes.empty())</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chord;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;note:<sp/>notes)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chord.notes.push_back(note);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chord;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::separateTupletVoices()</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>tupletLen<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>chords;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let&apos;s<sp/>create<sp/>3<sp/>tuplets<sp/>with<sp/>the<sp/>same<sp/>first<sp/>chord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triplet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>tripletLen<sp/>=<sp/>tupletLen;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tripletNumber<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>tripletNoteLen<sp/>=<sp/>tripletLen<sp/>/<sp/>tripletNumber;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>firstChord<sp/>=<sp/>chordFactory(tripletNoteLen,<sp/>{76,<sp/>71,<sp/>67});</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({{0,<sp/>1},<sp/>firstChord});</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>pitches<sp/>=<sp/>{74,<sp/>77};</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>!=<sp/>tripletNumber;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({tripletNoteLen<sp/>*<sp/>i,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordFactory(tripletNoteLen<sp/>*<sp/>(i<sp/>+<sp/>1),<sp/>{pitches[i]})});</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quintuplet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>quintupletLen<sp/>=<sp/>tupletLen;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quintupletNumber<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>quintupletNoteLen<sp/>=<sp/>quintupletLen<sp/>/<sp/>quintupletNumber;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitches<sp/>=<sp/>{60,<sp/>62,<sp/>58,<sp/>60};</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>!=<sp/>quintupletNumber;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({quintupletNoteLen<sp/>*<sp/>i,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordFactory(quintupletNoteLen<sp/>*<sp/>(i<sp/>+<sp/>1),<sp/>{pitches[i]})});</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>septuplet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>septupletLen<sp/>=<sp/>tupletLen<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>septupletNumber<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>septupletNoteLen<sp/>=<sp/>septupletLen<sp/>/<sp/>septupletNumber;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitches<sp/>=<sp/>{50,<sp/>52,<sp/>48,<sp/>51,<sp/>47,<sp/>47};</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>!=<sp/>septupletNumber;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chords.insert({septupletNoteLen<sp/>*<sp/>i,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordFactory(septupletNoteLen<sp/>*<sp/>(i<sp/>+<sp/>1),<sp/>{pitches[i]})});</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>tripletInfo;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tripletInfo.onTime<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tripletInfo.len<sp/>=<sp/>tripletLen;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tripletInfo.firstChordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onTime<sp/>=<sp/>tripletNoteLen<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tripletInfo.chords.insert({onTime,<sp/>chords.find(onTime)});</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>quintupletInfo;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quintupletInfo.onTime<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quintupletInfo.len<sp/>=<sp/>quintupletLen;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quintupletInfo.firstChordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>5;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onTime<sp/>=<sp/>quintupletNoteLen<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quintupletInfo.chords.insert({onTime,<sp/>chords.find(onTime)});</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_info" kindref="compound">MidiTuplet::TupletInfo</ref><sp/>septupletInfo;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>septupletInfo.onTime<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>septupletInfo.len<sp/>=<sp/>septupletLen;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>septupletInfo.firstChordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>7;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>onTime<sp/>=<sp/>septupletNoteLen<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>septupletInfo.chords.insert({onTime,<sp/>chords.find(onTime)});</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;MidiTuplet::TupletInfo&gt;<sp/>tuplets;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(tripletInfo);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(quintupletInfo);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuplets.push_back(septupletInfo);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(chords.size()<sp/>==<sp/>13);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>firstChordTime<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tripletIt<sp/>=<sp/>tripletInfo.chords.find(firstChordTime);<sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>chord<sp/>in<sp/>tuplet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes.size(),<sp/>3);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>76);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes[1].pitch,<sp/>71);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes[2].pitch,<sp/>67);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>quintupletIt<sp/>=<sp/>quintupletInfo.chords.find(firstChordTime);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes.size(),<sp/>3);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>76);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes[1].pitch,<sp/>71);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes[2].pitch,<sp/>67);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>septupletIt<sp/>=<sp/>septupletInfo.chords.find(firstChordTime);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes.size(),<sp/>3);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>76);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes[1].pitch,<sp/>71);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes[2].pitch,<sp/>67);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MidiTuplet::splitFirstTupletChords(tuplets,<sp/>chords);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(chords.size()<sp/>==<sp/>15);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tripletInfo<sp/>=<sp/>tuplets[0];</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quintupletInfo<sp/>=<sp/>tuplets[1];</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>septupletInfo<sp/>=<sp/>tuplets[2];</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tripletIt<sp/>=<sp/>tripletInfo.chords.find(firstChordTime);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes.size(),<sp/>1);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tripletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>76);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quintupletIt<sp/>=<sp/>quintupletInfo.chords.find(firstChordTime);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes.size(),<sp/>1);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(quintupletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>71);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>septupletIt<sp/>=<sp/>septupletInfo.chords.find(firstChordTime);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes.size(),<sp/>1);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(septupletIt-&gt;second-&gt;second.notes[0].pitch,<sp/>67);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>metric<sp/>bar<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::metricDivisionsOfTuplet()</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_data" kindref="compound">MidiTuplet::TupletData</ref><sp/>tupletData;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.voice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.len<sp/>=<sp/>ReducedFraction::fromTicks(480);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.onTime<sp/>=<sp/>ReducedFraction::fromTicks(480);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.tupletNumber<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletStartLevel<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_meter_1_1_division_info" kindref="compound">Meter::DivisionInfo</ref><sp/>tupletDivInfo<sp/>=<sp/>Meter::metricDivisionsOfTuplet(tupletData,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.isTuplet,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.len,<sp/>ReducedFraction::fromTicks(480));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.onTime,<sp/>ReducedFraction::fromTicks(480));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(tupletDivInfo.divLengths.size()<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[0].len,<sp/>tupletData.len);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[0].level,<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[1].len,<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[1].level,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[2].len,<sp/>tupletData.len<sp/>/<sp/>(2<sp/>*<sp/>tupletData.tupletNumber));</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[2].level,<sp/>tupletStartLevel<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[3].len,<sp/>tupletData.len<sp/>/<sp/>(4<sp/>*<sp/>tupletData.tupletNumber));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[3].level,<sp/>tupletStartLevel<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[4].len,<sp/>tupletData.len<sp/>/<sp/>(8<sp/>*<sp/>tupletData.tupletNumber));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(tupletDivInfo.divLengths[4].level,<sp/>tupletStartLevel<sp/>-<sp/>3);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::maxLevelBetween()</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>barFraction<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(4,<sp/>4);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(240);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>endTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(500);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_meter_1_1_division_info" kindref="compound">Meter::DivisionInfo</ref><sp/>regularDivInfo<sp/>=<sp/>Meter::metricDivisionsOfBar(barFraction);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(regularDivInfo.divLengths.size()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_meter_1_1_max_level" kindref="compound">Meter::MaxLevel</ref><sp/>level<sp/>=<sp/>Meter::maxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>regularDivInfo);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>-2);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>ReducedFraction::fromTicks(480));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(499);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::maxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>regularDivInfo);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>0);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(-1,<sp/>1));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>0);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ms_1_1_midi_tuplet_1_1_tuplet_data" kindref="compound">MidiTuplet::TupletData</ref><sp/>tupletData;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.voice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.len<sp/>=<sp/>ReducedFraction::fromTicks(480);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.onTime<sp/>=<sp/>ReducedFraction::fromTicks(480);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tupletData.tupletNumber<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tupletStartLevel<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ms_1_1_meter_1_1_division_info" kindref="compound">Meter::DivisionInfo</ref><sp/>tupletDivInfo<sp/>=<sp/>Meter::metricDivisionsOfTuplet(tupletData,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(tupletDivInfo.divLengths.size()<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>startTickInBar<sp/>+<sp/>tupletData.len;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::maxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>tupletDivInfo);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>2);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Meter::DivisionInfo&gt;<sp/>divInfo;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>elements<sp/>of<sp/>vector<sp/>-<sp/>all<sp/>tuplets<sp/>division<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>element<sp/>-<sp/>whole<sp/>bar<sp/>(regular)<sp/>division<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divInfo.push_back(tupletDivInfo);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divInfo.push_back(regularDivInfo);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>-<sp/>startTickInBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e<sp/>-<sp/>endTickInBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>-<sp/>tuplet<sp/>onTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>te<sp/>-<sp/>tuplet<sp/>onTime<sp/>+<sp/>tuplet<sp/>len</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>&lt;<sp/>e<sp/>&lt;<sp/>ts<sp/>&lt;<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(0);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>(startTickInBar<sp/>+<sp/>tupletData.onTime)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>-4);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>(startTickInBar<sp/>+<sp/>endTickInBar)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>&lt;<sp/>e<sp/>==<sp/>ts<sp/>&lt;<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(0);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>-3);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>(startTickInBar<sp/>+<sp/>tupletData.onTime)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>&lt;<sp/>ts<sp/>&lt;<sp/>e<sp/>&lt;<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(0);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>&lt;<sp/>ts<sp/>&lt;<sp/>e<sp/>==<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(0);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>&lt;<sp/>ts<sp/>&lt;<sp/>te<sp/>&lt;<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>ReducedFraction::fromTicks(0);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>+<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>==<sp/>ts<sp/>&lt;<sp/>e<sp/>&lt;<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>==<sp/>ts<sp/>&lt;<sp/>e<sp/>==<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>2);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>==<sp/>ts<sp/>&lt;<sp/>te<sp/>&lt;<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.level,<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>&lt;<sp/>s<sp/>&lt;<sp/>e<sp/>&lt;<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>*<sp/>2<sp/>/<sp/>tupletData.tupletNumber;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>tupletStartLevel<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>(startTickInBar<sp/>+<sp/>endTickInBar)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>&lt;<sp/>s<sp/>&lt;<sp/>e<sp/>=<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>tupletData.tupletNumber;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>tupletStartLevel);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>*<sp/>2<sp/>/<sp/>tupletData.tupletNumber);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>&lt;<sp/>s<sp/>&lt;<sp/>te<sp/>&lt;<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>+<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>==<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.pos,<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(level.levelCount,<sp/>1);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>&lt;<sp/>te<sp/>=<sp/>s<sp/>&lt;<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>+<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>!=<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ts<sp/>&lt;<sp/>te<sp/>&lt;<sp/>s<sp/>&lt;<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTickInBar<sp/>=<sp/>tupletData.onTime<sp/>+<sp/>tupletData.len<sp/>+<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endTickInBar<sp/>=<sp/>startTickInBar<sp/>+<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>Meter::findMaxLevelBetween(startTickInBar,<sp/>endTickInBar,<sp/>divInfo);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(level.level<sp/>!=<sp/>Meter::TUPLET_BOUNDARY_LEVEL);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::isSimpleDuration()</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({4,<sp/>2}));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({4,<sp/>1}));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({2,<sp/>2}));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({2,<sp/>1}));</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>1}));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>2}));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>4}));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>8}));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>16}));</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>32}));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>64}));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(Meter::isSimpleNoteDuration({1,<sp/>128}));</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({1,<sp/>6}));</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({3,<sp/>2}));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({12,<sp/>8}));</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({3,<sp/>16}));</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({3,<sp/>4}));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({3,<sp/>8}));</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!Meter::isSimpleNoteDuration({1,<sp/>5}));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findColByHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_tracks_model" kindref="compound">TracksModel</ref><sp/>&amp;model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*colHeader)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colCount<sp/>=<sp/>model.columnCount(QModelIndex());</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>colCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>headerTitle<sp/>=<sp/>model.headerData(</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>Qt::Horizontal,<sp/>Qt::DisplayRole).toString();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(headerTitle<sp/>==<sp/>QObject::tr(colHeader))</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestImportMidi::testGuiTracksModel()</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFile(</highlight><highlight class="stringliteral">&quot;perc_drums&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>midiFileFullPath<sp/>=<sp/>midiFilePath(midiFile);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;opers<sp/>=<sp/>preferences.midiImportOperations;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opers.addNewMidiFile(midiFileFullPath);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_midi_operations_1_1_current_midi_file_setter" kindref="compound">MidiOperations::CurrentMidiFileSetter</ref><sp/>setCurrentMidiFile(opers,<sp/>midiFileFullPath);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref><sp/>score(mscore-&gt;baseStyle());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score.setName(midiFile);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(importMidi(&amp;score,<sp/>midiFileFullPath),<sp/>Score::FileError::FILE_NO_ERROR);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_tracks_model" kindref="compound">TracksModel</ref><sp/>model;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>model.reset(opers.data()-&gt;trackOpers,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MidiLyrics::makeLyricsListForUI(),</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.data()-&gt;trackCount,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midiFileFullPath,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!opers.data()-&gt;humanBeatData.beatSet.empty(),</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opers.data()-&gt;hasTempoText,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!opers.data()-&gt;chordNames.empty());</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(model.trackCount()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Qt::ItemFlags<sp/>notEditableFlags<sp/>=<sp/>Qt::ItemFlags(Qt::ItemIsEnabled<sp/>|<sp/>Qt::ItemIsSelectable);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clefChangeCol<sp/>=<sp/>findColByHeader(model,<sp/></highlight><highlight class="stringliteral">&quot;Clef\nchanges&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(clefChangeCol<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(model.flags(model.index(0,<sp/>clefChangeCol)),<sp/>notEditableFlags);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voiceCol<sp/>=<sp/>findColByHeader(model,<sp/></highlight><highlight class="stringliteral">&quot;Max.<sp/>voices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(voiceCol<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(model.flags(model.index(0,<sp/>voiceCol)),<sp/>notEditableFlags);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCol<sp/>=<sp/>findColByHeader(model,<sp/></highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(channelCol<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(model.flags(model.index(0,<sp/>channelCol)),<sp/>notEditableFlags);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_import_midi" kindref="compound">TestImportMidi</ref>)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_importmidi.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/importmidi/tst_importmidi.cpp"/>
  </compounddef>
</doxygen>
