<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_segment_list_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>Ms::SegmentList::const_iterator</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_segment_list_1_1const__iterator_1ada52f58bf8bca3f611982f04d74eecab" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>const Segment* Ms::SegmentList::const_iterator::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="61" column="1" bodyfile="libmscore/segmentlist.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_segment_list_1_1const__iterator_1ab846947c22a11d1cd039a8a9b56116bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::SegmentList::const_iterator::const_iterator</definition>
        <argsstring>(const Segment *s)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="63" column="1" bodyfile="libmscore/segmentlist.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1_1const__iterator_1a7016b0b2b76b58fb9cad3757bb3f998f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Ms::SegmentList::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="64" column="1" bodyfile="libmscore/segmentlist.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1_1const__iterator_1a98b43524ac62874711218459667f0043" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::SegmentList::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;i) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment_list_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="65" column="1" bodyfile="libmscore/segmentlist.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_list_1_1const__iterator_1a36a8d0a9f30989bd906f7efde8d0e103" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
        <definition>const Segment&amp; Ms::SegmentList::const_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/segmentlist.h" line="66" column="1" bodyfile="libmscore/segmentlist.h" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/segmentlist.h" line="60" column="1" bodyfile="libmscore/segmentlist.h" bodystart="60" bodyend="67"/>
    <listofallmembers>
      <member refid="class_ms_1_1_segment_list_1_1const__iterator_1ab846947c22a11d1cd039a8a9b56116bb" prot="public" virt="non-virtual"><scope>Ms::SegmentList::const_iterator</scope><name>const_iterator</name></member>
      <member refid="class_ms_1_1_segment_list_1_1const__iterator_1a98b43524ac62874711218459667f0043" prot="public" virt="non-virtual"><scope>Ms::SegmentList::const_iterator</scope><name>operator!=</name></member>
      <member refid="class_ms_1_1_segment_list_1_1const__iterator_1a36a8d0a9f30989bd906f7efde8d0e103" prot="public" virt="non-virtual"><scope>Ms::SegmentList::const_iterator</scope><name>operator*</name></member>
      <member refid="class_ms_1_1_segment_list_1_1const__iterator_1a7016b0b2b76b58fb9cad3757bb3f998f" prot="public" virt="non-virtual"><scope>Ms::SegmentList::const_iterator</scope><name>operator++</name></member>
      <member refid="class_ms_1_1_segment_list_1_1const__iterator_1ada52f58bf8bca3f611982f04d74eecab" prot="private" virt="non-virtual"><scope>Ms::SegmentList::const_iterator</scope><name>p</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
