<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_fraction" kind="class" language="C++" prot="public">
    <compoundname>Ms::Fraction</compoundname>
    <derivedcompoundref refid="class_ms_1_1_time_sig_frac" prot="public" virt="non-virtual">Ms::TimeSigFrac</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_fraction_1abe901ab421dd05382fb978494d14ce35" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Fraction::_numerator</definition>
        <argsstring></argsstring>
        <name>_numerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="25" column="1" bodyfile="libmscore/fraction.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_fraction_1a37f3f573dd0cbfda80e51ea197765f7e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Fraction::_denominator</definition>
        <argsstring></argsstring>
        <name>_denominator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="26" column="1" bodyfile="libmscore/fraction.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_fraction_1adebecbbcf832847397c5864e2f1c5be7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Ms::Fraction::Fraction</definition>
        <argsstring>(int z=0, int n=1)</argsstring>
        <name>Fraction</name>
        <param>
          <type>int</type>
          <declname>z</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="29" column="1" bodyfile="libmscore/fraction.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ac96ad0e3adbd7cac5e8f7264702178ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Fraction::numerator</definition>
        <argsstring>() const</argsstring>
        <name>numerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="30" column="1" bodyfile="libmscore/fraction.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1af1e2d67466171dc13ed60e06f9cc3fc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Fraction::denominator</definition>
        <argsstring>() const</argsstring>
        <name>denominator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="31" column="1" bodyfile="libmscore/fraction.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ae6c3b4af4c23e5958ed0d0618a86dc07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; Ms::Fraction::rnumerator</definition>
        <argsstring>()</argsstring>
        <name>rnumerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="32" column="1" bodyfile="libmscore/fraction.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a299b24cc8e8da18426867638d7f6837a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; Ms::Fraction::rdenominator</definition>
        <argsstring>()</argsstring>
        <name>rdenominator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="33" column="1" bodyfile="libmscore/fraction.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1afbafb8d881c955f439a39dfe9e07ea13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Fraction::setNumerator</definition>
        <argsstring>(int v)</argsstring>
        <name>setNumerator</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="35" column="1" bodyfile="libmscore/fraction.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ae671ef315b71166777d5f3feeb3e3e92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Fraction::setDenominator</definition>
        <argsstring>(int v)</argsstring>
        <name>setDenominator</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="36" column="1" bodyfile="libmscore/fraction.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a699aacd076e6ffb1415298fae0c08a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Fraction::set</definition>
        <argsstring>(int z, int n)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="37" column="1" bodyfile="libmscore/fraction.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ac3244c876739eef5fa17e93e053bc599" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::isZero</definition>
        <argsstring>() const</argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="39" column="1" bodyfile="libmscore/fraction.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1acc3076889cb6d4019cd1406411c3656c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="41" column="1" bodyfile="libmscore/fraction.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a65efbab334943fc56b8a7444ea087415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Fraction::reduce</definition>
        <argsstring>()</argsstring>
        <name>reduce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="42" column="1" bodyfile="libmscore/fraction.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1aa5357e00914c3815be2a91a7c2d6ddd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::reduced</definition>
        <argsstring>() const</argsstring>
        <name>reduced</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="43" column="1" bodyfile="libmscore/fraction.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a8122ffd412b800b9a6afd6d2722e3f57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::absValue</definition>
        <argsstring>() const</argsstring>
        <name>absValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="44" column="1" bodyfile="libmscore/fraction.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ab6792581488c2a958e338f1e32b415fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::identical</definition>
        <argsstring>(const Fraction &amp;v) const</argsstring>
        <name>identical</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="48" column="1" bodyfile="libmscore/fraction.h" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a1d92a73ce7f9b7f895a9a083f6fe1eb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Fraction::ticks</definition>
        <argsstring>() const</argsstring>
        <name>ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="52" column="1" bodyfile="libmscore/fraction.cpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a5007dfac5dee035871494bd25c3f41f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator+=</definition>
        <argsstring>(const Fraction &amp;)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="56" column="1" bodyfile="libmscore/fraction.cpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a6f66931c4c2f4b67e10ffe7347448f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator-=</definition>
        <argsstring>(const Fraction &amp;)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="57" column="1" bodyfile="libmscore/fraction.cpp" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ac0d58ed19b1227d7a06df994d13ae89c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator*=</definition>
        <argsstring>(const Fraction &amp;)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="58" column="1" bodyfile="libmscore/fraction.cpp" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1aa4af0d6e1c0f0393424fda39c944bc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator*=</definition>
        <argsstring>(int)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="59" column="1" bodyfile="libmscore/fraction.cpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a9e257165569e76567de379a37943458e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator/=</definition>
        <argsstring>(const Fraction &amp;)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="60" column="1" bodyfile="libmscore/fraction.cpp" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ae5a418c20cb1964fb72f7b92627c33aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
        <definition>Fraction &amp; Ms::Fraction::operator/=</definition>
        <argsstring>(int)</argsstring>
        <name>operator/=</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="61" column="1" bodyfile="libmscore/fraction.cpp" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1add224e90aa28275f9dd8fbf56bbfb9ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator+</definition>
        <argsstring>(const Fraction &amp;v) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="63" column="1" bodyfile="libmscore/fraction.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1af4b6cb13ed1674571827274aec0c97be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator-</definition>
        <argsstring>(const Fraction &amp;v) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="64" column="1" bodyfile="libmscore/fraction.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a0d245a442f63b361187b6990ee80d020" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator*</definition>
        <argsstring>(const Fraction &amp;v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="65" column="1" bodyfile="libmscore/fraction.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1afd76f968f4134339b226f3d8330cea40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator*</definition>
        <argsstring>(int v) const</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="66" column="1" bodyfile="libmscore/fraction.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a4828690d4d50f40c5b7d2df8e65d380b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator/</definition>
        <argsstring>(const Fraction &amp;v) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="67" column="1" bodyfile="libmscore/fraction.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a2b6876e55eb9863887804c8faa9fcb2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::operator/</definition>
        <argsstring>(int v) const</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="68" column="1" bodyfile="libmscore/fraction.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a83580ffa76b1195c81398cbcc1fee480" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator&lt;</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="70" column="1" bodyfile="libmscore/fraction.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a14b2e087f04010141f04497f6d61d11d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator&lt;=</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="71" column="1" bodyfile="libmscore/fraction.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a469852ffe9508e5a6c0db71afc58acb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator&gt;=</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="72" column="1" bodyfile="libmscore/fraction.cpp" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ab8e368760777b646b566b4f3a0822920" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator&gt;</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="73" column="1" bodyfile="libmscore/fraction.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1af6aa7a9c48efbd21008d0c88a9771820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator==</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="74" column="1" bodyfile="libmscore/fraction.cpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1a03488baf0c06d758a701c98f6094f4e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Fraction::operator!=</definition>
        <argsstring>(const Fraction &amp;) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="75" column="1" bodyfile="libmscore/fraction.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1ae6e87a05be6f24d5c4f69b943d49dd88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Fraction::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="77" column="1" bodyfile="libmscore/fraction.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_fraction_1aec63213b9bfb57be20c5659b03c704f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Fraction::operator QVariant</definition>
        <argsstring>() const</argsstring>
        <name>operator QVariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="78" column="1" bodyfile="libmscore/fraction.h" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_fraction_1a1c4412959c02dc31fd563efcec174781" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Fraction::fromTicks</definition>
        <argsstring>(int v)</argsstring>
        <name>fromTicks</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/fraction.h" line="54" column="1" bodyfile="libmscore/fraction.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5317">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="5318">
        <label>Ms::TimeSigFrac</label>
        <link refid="class_ms_1_1_time_sig_frac"/>
        <childnode refid="5317" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libmscore/fraction.h" line="24" column="1" bodyfile="libmscore/fraction.h" bodystart="24" bodyend="79"/>
    <listofallmembers>
      <member refid="class_ms_1_1_fraction_1a37f3f573dd0cbfda80e51ea197765f7e" prot="private" virt="non-virtual"><scope>Ms::Fraction</scope><name>_denominator</name></member>
      <member refid="class_ms_1_1_fraction_1abe901ab421dd05382fb978494d14ce35" prot="private" virt="non-virtual"><scope>Ms::Fraction</scope><name>_numerator</name></member>
      <member refid="class_ms_1_1_fraction_1a8122ffd412b800b9a6afd6d2722e3f57" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>absValue</name></member>
      <member refid="class_ms_1_1_fraction_1af1e2d67466171dc13ed60e06f9cc3fc8" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>denominator</name></member>
      <member refid="class_ms_1_1_fraction_1adebecbbcf832847397c5864e2f1c5be7" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>Fraction</name></member>
      <member refid="class_ms_1_1_fraction_1a1c4412959c02dc31fd563efcec174781" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>fromTicks</name></member>
      <member refid="class_ms_1_1_fraction_1ab6792581488c2a958e338f1e32b415fc" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>identical</name></member>
      <member refid="class_ms_1_1_fraction_1acc3076889cb6d4019cd1406411c3656c" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>isValid</name></member>
      <member refid="class_ms_1_1_fraction_1ac3244c876739eef5fa17e93e053bc599" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>isZero</name></member>
      <member refid="class_ms_1_1_fraction_1ac96ad0e3adbd7cac5e8f7264702178ff" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>numerator</name></member>
      <member refid="class_ms_1_1_fraction_1aec63213b9bfb57be20c5659b03c704f4" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator QVariant</name></member>
      <member refid="class_ms_1_1_fraction_1a03488baf0c06d758a701c98f6094f4e5" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator!=</name></member>
      <member refid="class_ms_1_1_fraction_1a0d245a442f63b361187b6990ee80d020" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator*</name></member>
      <member refid="class_ms_1_1_fraction_1afd76f968f4134339b226f3d8330cea40" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator*</name></member>
      <member refid="class_ms_1_1_fraction_1ac0d58ed19b1227d7a06df994d13ae89c" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator*=</name></member>
      <member refid="class_ms_1_1_fraction_1aa4af0d6e1c0f0393424fda39c944bc42" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator*=</name></member>
      <member refid="class_ms_1_1_fraction_1add224e90aa28275f9dd8fbf56bbfb9ca" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator+</name></member>
      <member refid="class_ms_1_1_fraction_1a5007dfac5dee035871494bd25c3f41f1" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator+=</name></member>
      <member refid="class_ms_1_1_fraction_1af4b6cb13ed1674571827274aec0c97be" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator-</name></member>
      <member refid="class_ms_1_1_fraction_1a6f66931c4c2f4b67e10ffe7347448f2e" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator-=</name></member>
      <member refid="class_ms_1_1_fraction_1a4828690d4d50f40c5b7d2df8e65d380b" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator/</name></member>
      <member refid="class_ms_1_1_fraction_1a2b6876e55eb9863887804c8faa9fcb2b" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator/</name></member>
      <member refid="class_ms_1_1_fraction_1a9e257165569e76567de379a37943458e" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator/=</name></member>
      <member refid="class_ms_1_1_fraction_1ae5a418c20cb1964fb72f7b92627c33aa" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator/=</name></member>
      <member refid="class_ms_1_1_fraction_1a83580ffa76b1195c81398cbcc1fee480" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator&lt;</name></member>
      <member refid="class_ms_1_1_fraction_1a14b2e087f04010141f04497f6d61d11d" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator&lt;=</name></member>
      <member refid="class_ms_1_1_fraction_1af6aa7a9c48efbd21008d0c88a9771820" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_fraction_1ab8e368760777b646b566b4f3a0822920" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator&gt;</name></member>
      <member refid="class_ms_1_1_fraction_1a469852ffe9508e5a6c0db71afc58acb7" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>operator&gt;=</name></member>
      <member refid="class_ms_1_1_fraction_1ae6e87a05be6f24d5c4f69b943d49dd88" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>print</name></member>
      <member refid="class_ms_1_1_fraction_1a299b24cc8e8da18426867638d7f6837a" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>rdenominator</name></member>
      <member refid="class_ms_1_1_fraction_1a65efbab334943fc56b8a7444ea087415" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>reduce</name></member>
      <member refid="class_ms_1_1_fraction_1aa5357e00914c3815be2a91a7c2d6ddd2" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>reduced</name></member>
      <member refid="class_ms_1_1_fraction_1ae6c3b4af4c23e5958ed0d0618a86dc07" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>rnumerator</name></member>
      <member refid="class_ms_1_1_fraction_1a699aacd076e6ffb1415298fae0c08a92" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>set</name></member>
      <member refid="class_ms_1_1_fraction_1ae671ef315b71166777d5f3feeb3e3e92" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>setDenominator</name></member>
      <member refid="class_ms_1_1_fraction_1afbafb8d881c955f439a39dfe9e07ea13" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>setNumerator</name></member>
      <member refid="class_ms_1_1_fraction_1a1d92a73ce7f9b7f895a9a083f6fe1eb2" prot="public" virt="non-virtual"><scope>Ms::Fraction</scope><name>ticks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
