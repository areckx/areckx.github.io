<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_rankwave" kind="class" language="C++" prot="public">
    <compoundname>Rankwave</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_rankwave_1a2b46e917e628e04feffa77a1afc7d7b0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Rankwave::_n0</definition>
        <argsstring></argsstring>
        <name>_n0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="93" column="1" bodyfile="aeolus/rankwave.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1affae5cd153e098c18e9af2f2bf724c19" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Rankwave::_n1</definition>
        <argsstring></argsstring>
        <name>_n1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="94" column="1" bodyfile="aeolus/rankwave.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1a346c30eee63511eb060f97166551b713" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Rankwave::_sbit</definition>
        <argsstring></argsstring>
        <name>_sbit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="95" column="1" bodyfile="aeolus/rankwave.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1a926076017b423f0c63a09aa2b11d618a" prot="private" static="no" mutable="no">
        <type><ref refid="class_pipewave" kindref="compound">Pipewave</ref> *</type>
        <definition>Pipewave* Rankwave::_list</definition>
        <argsstring></argsstring>
        <name>_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="96" column="1" bodyfile="aeolus/rankwave.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1ab2930a0ddbe3c373045da95e06541253" prot="private" static="no" mutable="no">
        <type><ref refid="class_pipewave" kindref="compound">Pipewave</ref> *</type>
        <definition>Pipewave* Rankwave::_pipes</definition>
        <argsstring></argsstring>
        <name>_pipes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="97" column="1" bodyfile="aeolus/rankwave.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1a90e2fc613f3a763b013bd4e66d5e1c38" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Rankwave::_modif</definition>
        <argsstring></argsstring>
        <name>_modif</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="98" column="1" bodyfile="aeolus/rankwave.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_rankwave_1ad0359e7a96d9a6781617c823de566693" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Rankwave::_cmask</definition>
        <argsstring></argsstring>
        <name>_cmask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="142" column="1" bodyfile="aeolus/rankwave.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_rankwave_1a1f2882a9747f57d55c02194e54afd914" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Rankwave::_nmask</definition>
        <argsstring></argsstring>
        <name>_nmask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="143" column="1" bodyfile="aeolus/rankwave.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_rankwave_1ae488eab283ca1614ad7d69e3a7486630" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rankwave::Rankwave</definition>
        <argsstring>(const Rankwave &amp;)</argsstring>
        <name>Rankwave</name>
        <param>
          <type>const <ref refid="class_rankwave" kindref="compound">Rankwave</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a5a8de046e3e5671b80672a92e68c8c98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_rankwave" kindref="compound">Rankwave</ref> &amp;</type>
        <definition>Rankwave&amp; Rankwave::operator=</definition>
        <argsstring>(const Rankwave &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_rankwave" kindref="compound">Rankwave</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_rankwave_1abd3766c0c8803ed4a58183f08cf936ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rankwave::Rankwave</definition>
        <argsstring>(int n0, int n1)</argsstring>
        <name>Rankwave</name>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="102" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1afaa5d747d3a3dc5ed713ab01016ab693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Rankwave::~Rankwave</definition>
        <argsstring>()</argsstring>
        <name>~Rankwave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="103" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1ac9a89836d67ccbfe15008123ec5ddc13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::note_on</definition>
        <argsstring>(int n)</argsstring>
        <name>note_on</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="105" column="1" bodyfile="aeolus/rankwave.h" bodystart="105" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1aa3a1feb4b4913ec19134346e9c775b60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::note_off</definition>
        <argsstring>(int n)</argsstring>
        <name>note_off</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="119" column="1" bodyfile="aeolus/rankwave.h" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1ace85cf389a3535ba643f3ad948d900fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::all_off</definition>
        <argsstring>(void)</argsstring>
        <name>all_off</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="127" column="1" bodyfile="aeolus/rankwave.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a7a8e068c98b812259ec9c5bbe3a3490c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Rankwave::n0</definition>
        <argsstring>(void) const</argsstring>
        <name>n0</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="133" column="1" bodyfile="aeolus/rankwave.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a15600540ff37b2596c34c8d0e4355b0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Rankwave::n1</definition>
        <argsstring>(void) const</argsstring>
        <name>n1</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="134" column="1" bodyfile="aeolus/rankwave.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a4eae1881022f1906bcd8fc9c733a1443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::play</definition>
        <argsstring>(int shift)</argsstring>
        <name>play</name>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="135" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="435" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1af690e80673e5a18c5bc11332bbe12d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::set_param</definition>
        <argsstring>(float *out, int del, int pan)</argsstring>
        <name>set_param</name>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="136" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="418" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1ad9c42af64b62250c0a5ed339397baab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rankwave::gen_waves</definition>
        <argsstring>(Addsynth *D, float fsamp, float fbase, float *scale)</argsstring>
        <name>gen_waves</name>
        <param>
          <type><ref refid="class_addsynth" kindref="compound">Addsynth</ref> *</type>
          <declname>D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fsamp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fbase</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="137" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="405" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1aa8c5e1e880d3003f07dd568868acfbf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Rankwave::save</definition>
        <argsstring>(const char *path, Addsynth *D, float fsamp, float fbase, float *scale)</argsstring>
        <name>save</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="class_addsynth" kindref="compound">Addsynth</ref> *</type>
          <declname>D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fsamp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fbase</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="138" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="453" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a59828f30350a78fdb49622219615251e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Rankwave::load</definition>
        <argsstring>(const char *path, Addsynth *D, float fsamp, float fbase, float *scale)</argsstring>
        <name>load</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="class_addsynth" kindref="compound">Addsynth</ref> *</type>
          <declname>D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fsamp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fbase</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="139" column="1" bodyfile="aeolus/rankwave.cpp" bodystart="501" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="class_rankwave_1a17f64e00bc942cb35aedd679a860897e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Rankwave::modif</definition>
        <argsstring>(void) const</argsstring>
        <name>modif</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aeolus/rankwave.h" line="140" column="1" bodyfile="aeolus/rankwave.h" bodystart="140" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="aeolus/rankwave.h" line="89" column="1" bodyfile="aeolus/rankwave.h" bodystart="88" bodyend="145"/>
    <listofallmembers>
      <member refid="class_rankwave_1ad0359e7a96d9a6781617c823de566693" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>_cmask</name></member>
      <member refid="class_rankwave_1a926076017b423f0c63a09aa2b11d618a" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_list</name></member>
      <member refid="class_rankwave_1a90e2fc613f3a763b013bd4e66d5e1c38" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_modif</name></member>
      <member refid="class_rankwave_1a2b46e917e628e04feffa77a1afc7d7b0" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_n0</name></member>
      <member refid="class_rankwave_1affae5cd153e098c18e9af2f2bf724c19" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_n1</name></member>
      <member refid="class_rankwave_1a1f2882a9747f57d55c02194e54afd914" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>_nmask</name></member>
      <member refid="class_rankwave_1ab2930a0ddbe3c373045da95e06541253" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_pipes</name></member>
      <member refid="class_rankwave_1a346c30eee63511eb060f97166551b713" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>_sbit</name></member>
      <member refid="class_rankwave_1ace85cf389a3535ba643f3ad948d900fa" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>all_off</name></member>
      <member refid="class_rankwave_1ad9c42af64b62250c0a5ed339397baab4" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>gen_waves</name></member>
      <member refid="class_rankwave_1a59828f30350a78fdb49622219615251e" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>load</name></member>
      <member refid="class_rankwave_1a17f64e00bc942cb35aedd679a860897e" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>modif</name></member>
      <member refid="class_rankwave_1a7a8e068c98b812259ec9c5bbe3a3490c" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>n0</name></member>
      <member refid="class_rankwave_1a15600540ff37b2596c34c8d0e4355b0c" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>n1</name></member>
      <member refid="class_rankwave_1aa3a1feb4b4913ec19134346e9c775b60" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>note_off</name></member>
      <member refid="class_rankwave_1ac9a89836d67ccbfe15008123ec5ddc13" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>note_on</name></member>
      <member refid="class_rankwave_1a5a8de046e3e5671b80672a92e68c8c98" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>operator=</name></member>
      <member refid="class_rankwave_1a4eae1881022f1906bcd8fc9c733a1443" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>play</name></member>
      <member refid="class_rankwave_1ae488eab283ca1614ad7d69e3a7486630" prot="private" virt="non-virtual"><scope>Rankwave</scope><name>Rankwave</name></member>
      <member refid="class_rankwave_1abd3766c0c8803ed4a58183f08cf936ae" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>Rankwave</name></member>
      <member refid="class_rankwave_1aa8c5e1e880d3003f07dd568868acfbf7" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>save</name></member>
      <member refid="class_rankwave_1af690e80673e5a18c5bc11332bbe12d6c" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>set_param</name></member>
      <member refid="class_rankwave_1afaa5d747d3a3dc5ed713ab01016ab693" prot="public" virt="non-virtual"><scope>Rankwave</scope><name>~Rankwave</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
