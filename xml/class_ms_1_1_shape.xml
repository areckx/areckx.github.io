<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_shape" kind="class" language="C++" prot="public">
    <compoundname>Ms::Shape</compoundname>
    <basecompoundref prot="private" virt="non-virtual">std::vector&lt; QRectF &gt;</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_shape_1a4e1305e4ad3c3c798d63a11ba3454867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Shape::Shape</definition>
        <argsstring>()</argsstring>
        <name>Shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="30" column="1" bodyfile="libmscore/shape.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a0e2344bbbadbc13a98767ee1c93b4aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Shape::Shape</definition>
        <argsstring>(const QRectF &amp;r)</argsstring>
        <name>Shape</name>
        <param>
          <type>const QRectF &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="31" column="1" bodyfile="libmscore/shape.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1ae720dd8861c1ee7e1c1267a1467d6620" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::draw</definition>
        <argsstring>(QPainter *) const</argsstring>
        <name>draw</name>
        <param>
          <type>QPainter *</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="32" column="1" bodyfile="libmscore/shape.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1aaf147d607f2bf5e6fc8a6ed1cb019ef7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::add</definition>
        <argsstring>(const Shape &amp;s)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="34" column="1" bodyfile="libmscore/shape.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a780f5e137881c72c344a657d740e468d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::add</definition>
        <argsstring>(const QRectF &amp;r)</argsstring>
        <name>add</name>
        <param>
          <type>const QRectF &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="35" column="1" bodyfile="libmscore/shape.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1aec371e074141d165e014fa671a34bec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::remove</definition>
        <argsstring>(const QRectF &amp;)</argsstring>
        <name>remove</name>
        <param>
          <type>const QRectF &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="36" column="1" bodyfile="libmscore/shape.cpp" bodystart="196" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1ab56e92489024c20457b7963295895dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::remove</definition>
        <argsstring>(const Shape &amp;)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="37" column="1" bodyfile="libmscore/shape.cpp" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a68602b449079621b10afecdaea3cbe60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::translate</definition>
        <argsstring>(const QPointF &amp;)</argsstring>
        <name>translate</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>pt</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="38" column="1" bodyfile="libmscore/shape.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a51535d0e5b819152b44f47f98925e1e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>Shape Ms::Shape::translated</definition>
        <argsstring>(const QPointF &amp;) const</argsstring>
        <name>translated</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>pt</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="39" column="1" bodyfile="libmscore/shape.cpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a159413b243aff63b765b2a0aebde7f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::minHorizontalDistance</definition>
        <argsstring>(const Shape &amp;) const</argsstring>
        <name>minHorizontalDistance</name>
        <param>
          <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="40" column="1" bodyfile="libmscore/shape.cpp" bodystart="60" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a317e21df057a3f52374e2ae9c487c361" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::minVerticalDistance</definition>
        <argsstring>(const Shape &amp;) const</argsstring>
        <name>minVerticalDistance</name>
        <param>
          <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="41" column="1" bodyfile="libmscore/shape.cpp" bodystart="85" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a63c6f501d701f77b9b07cf43ad71a1be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::topDistance</definition>
        <argsstring>(const QPointF &amp;) const</argsstring>
        <name>topDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="42" column="1" bodyfile="libmscore/shape.cpp" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1ae213f269a5b776c7b4d831bbe6ae67f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::bottomDistance</definition>
        <argsstring>(const QPointF &amp;) const</argsstring>
        <name>bottomDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="43" column="1" bodyfile="libmscore/shape.cpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a277958ebd3d7acd75f428ab75071568a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::left</definition>
        <argsstring>() const</argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="44" column="1" bodyfile="libmscore/shape.cpp" bodystart="106" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a2bcfd20f6873a977e11fcd078f9d6ea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::right</definition>
        <argsstring>() const</argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="45" column="1" bodyfile="libmscore/shape.cpp" bodystart="122" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1abfab9c37e26f80c54532642f8106c788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::top</definition>
        <argsstring>() const</argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="46" column="1" bodyfile="libmscore/shape.cpp" bodystart="136" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1ab9fdef0f0d375caf55c4f02d40e2bc92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Shape::bottom</definition>
        <argsstring>() const</argsstring>
        <name>bottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="47" column="1" bodyfile="libmscore/shape.cpp" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1aebb6916032868310b40792859d5c4dde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Shape::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="49" column="1" bodyfile="libmscore/shape.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a575e43623b8dc7913ba31b1bbf1d78b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Shape::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="50" column="1" bodyfile="libmscore/shape.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1ad064c4dfda3cbc7434355a26d88f763d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="51" column="1" bodyfile="libmscore/shape.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a3701cd44981246acfa15ca202c641725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Shape::contains</definition>
        <argsstring>(const QPointF &amp;) const</argsstring>
        <name>contains</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="53" column="1" bodyfile="libmscore/shape.cpp" bodystart="217" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1aae937632bf13592c1c4e9138083cdea8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Shape::intersects</definition>
        <argsstring>(const QRectF &amp;rr) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="54" column="1" bodyfile="libmscore/shape.cpp" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_shape_1a7874734678f332bc1b30f2fed4b6555c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Shape::paint</definition>
        <argsstring>(QPainter &amp;)</argsstring>
        <name>paint</name>
        <param>
          <type>QPainter &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/shape.h" line="55" column="1" bodyfile="libmscore/shape.cpp" bodystart="243" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14896">
        <label>std::vector&lt; QRectF &gt;</label>
      </node>
      <node id="14895">
        <label>Ms::Shape</label>
        <link refid="class_ms_1_1_shape"/>
        <childnode refid="14896" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14898">
        <label>std::vector&lt; QRectF &gt;</label>
      </node>
      <node id="14897">
        <label>Ms::Shape</label>
        <link refid="class_ms_1_1_shape"/>
        <childnode refid="14898" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libmscore/shape.h" line="28" column="1" bodyfile="libmscore/shape.h" bodystart="28" bodyend="60"/>
    <listofallmembers>
      <member refid="class_ms_1_1_shape_1aaf147d607f2bf5e6fc8a6ed1cb019ef7" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>add</name></member>
      <member refid="class_ms_1_1_shape_1a780f5e137881c72c344a657d740e468d" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>add</name></member>
      <member refid="class_ms_1_1_shape_1ab9fdef0f0d375caf55c4f02d40e2bc92" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>bottom</name></member>
      <member refid="class_ms_1_1_shape_1ae213f269a5b776c7b4d831bbe6ae67f5" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>bottomDistance</name></member>
      <member refid="class_ms_1_1_shape_1ad064c4dfda3cbc7434355a26d88f763d" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>clear</name></member>
      <member refid="class_ms_1_1_shape_1a3701cd44981246acfa15ca202c641725" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>contains</name></member>
      <member refid="class_ms_1_1_shape_1ae720dd8861c1ee7e1c1267a1467d6620" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>draw</name></member>
      <member refid="class_ms_1_1_shape_1a575e43623b8dc7913ba31b1bbf1d78b5" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>empty</name></member>
      <member refid="class_ms_1_1_shape_1aae937632bf13592c1c4e9138083cdea8" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>intersects</name></member>
      <member refid="class_ms_1_1_shape_1a277958ebd3d7acd75f428ab75071568a" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>left</name></member>
      <member refid="class_ms_1_1_shape_1a159413b243aff63b765b2a0aebde7f36" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>minHorizontalDistance</name></member>
      <member refid="class_ms_1_1_shape_1a317e21df057a3f52374e2ae9c487c361" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>minVerticalDistance</name></member>
      <member refid="class_ms_1_1_shape_1a7874734678f332bc1b30f2fed4b6555c" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>paint</name></member>
      <member refid="class_ms_1_1_shape_1aec371e074141d165e014fa671a34bec8" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>remove</name></member>
      <member refid="class_ms_1_1_shape_1ab56e92489024c20457b7963295895dcc" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>remove</name></member>
      <member refid="class_ms_1_1_shape_1a2bcfd20f6873a977e11fcd078f9d6ea3" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>right</name></member>
      <member refid="class_ms_1_1_shape_1a4e1305e4ad3c3c798d63a11ba3454867" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>Shape</name></member>
      <member refid="class_ms_1_1_shape_1a0e2344bbbadbc13a98767ee1c93b4aa3" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>Shape</name></member>
      <member refid="class_ms_1_1_shape_1aebb6916032868310b40792859d5c4dde" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>size</name></member>
      <member refid="class_ms_1_1_shape_1abfab9c37e26f80c54532642f8106c788" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>top</name></member>
      <member refid="class_ms_1_1_shape_1a63c6f501d701f77b9b07cf43ad71a1be" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>topDistance</name></member>
      <member refid="class_ms_1_1_shape_1a68602b449079621b10afecdaea3cbe60" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>translate</name></member>
      <member refid="class_ms_1_1_shape_1a51535d0e5b819152b44f47f98925e1e7" prot="public" virt="non-virtual"><scope>Ms::Shape</scope><name>translated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
