<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="moc__synthcontrol_8cpp" kind="file" language="C++">
    <compoundname>moc_synthcontrol.cpp</compoundname>
    <includes refid="synthcontrol_8h" local="yes">../../../../mscore/synthcontrol.h</includes>
    <includes local="no">QtCore/qbytearray.h</includes>
    <includes local="no">QtCore/qmetatype.h</includes>
    <includedby refid="mscore_2mscore__autogen_2moc__compilation_8cpp" local="yes">build.release/mscore/mscore_autogen/moc_compilation.cpp</includedby>
    <incdepgraph>
      <node id="6773">
        <label>QtWidgets/QWidget</label>
      </node>
      <node id="6770">
        <label>QtWidgets/QStackedWidget</label>
      </node>
      <node id="6767">
        <label>QtWidgets/QLabel</label>
      </node>
      <node id="6776">
        <label>slider.h</label>
        <link refid="slider_8h_source"/>
        <childnode refid="6777" relation="include">
        </childnode>
      </node>
      <node id="6764">
        <label>QtWidgets/QDoubleSpinBox</label>
      </node>
      <node id="6777">
        <label>aslider.h</label>
        <link refid="aslider_8h_source"/>
        <childnode refid="6778" relation="include">
        </childnode>
      </node>
      <node id="6756">
        <label>build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp</label>
        <link refid="moc__synthcontrol_8cpp"/>
        <childnode refid="6757" relation="include">
        </childnode>
        <childnode refid="6780" relation="include">
        </childnode>
        <childnode refid="6781" relation="include">
        </childnode>
      </node>
      <node id="6769">
        <label>QtWidgets/QSpacerItem</label>
      </node>
      <node id="6774">
        <label>awl/mslider.h</label>
        <link refid="mslider_8h_source"/>
        <childnode refid="6775" relation="include">
        </childnode>
      </node>
      <node id="6759">
        <label>QtCore/QVariant</label>
      </node>
      <node id="6758">
        <label>ui_synthcontrol.h</label>
        <link refid="ui__synthcontrol_8h_source"/>
        <childnode refid="6759" relation="include">
        </childnode>
        <childnode refid="6760" relation="include">
        </childnode>
        <childnode refid="6761" relation="include">
        </childnode>
        <childnode refid="6762" relation="include">
        </childnode>
        <childnode refid="6763" relation="include">
        </childnode>
        <childnode refid="6764" relation="include">
        </childnode>
        <childnode refid="6765" relation="include">
        </childnode>
        <childnode refid="6766" relation="include">
        </childnode>
        <childnode refid="6767" relation="include">
        </childnode>
        <childnode refid="6768" relation="include">
        </childnode>
        <childnode refid="6769" relation="include">
        </childnode>
        <childnode refid="6770" relation="include">
        </childnode>
        <childnode refid="6771" relation="include">
        </childnode>
        <childnode refid="6772" relation="include">
        </childnode>
        <childnode refid="6773" relation="include">
        </childnode>
        <childnode refid="6774" relation="include">
        </childnode>
        <childnode refid="6776" relation="include">
        </childnode>
        <childnode refid="6775" relation="include">
        </childnode>
      </node>
      <node id="6768">
        <label>QtWidgets/QPushButton</label>
      </node>
      <node id="6766">
        <label>QtWidgets/QHeaderView</label>
      </node>
      <node id="6779">
        <label>enableplayforwidget.h</label>
        <link refid="enableplayforwidget_8h_source"/>
      </node>
      <node id="6760">
        <label>QtWidgets/QAction</label>
      </node>
      <node id="6762">
        <label>QtWidgets/QButtonGroup</label>
      </node>
      <node id="6780">
        <label>QtCore/qbytearray.h</label>
      </node>
      <node id="6778">
        <label>QAccessibleWidget</label>
      </node>
      <node id="6775">
        <label>volslider.h</label>
        <link refid="volslider_8h_source"/>
        <childnode refid="6776" relation="include">
        </childnode>
      </node>
      <node id="6757">
        <label>../../../../mscore/synthcontrol.h</label>
        <link refid="synthcontrol_8h_source"/>
        <childnode refid="6758" relation="include">
        </childnode>
        <childnode refid="6779" relation="include">
        </childnode>
      </node>
      <node id="6761">
        <label>QtWidgets/QApplication</label>
      </node>
      <node id="6763">
        <label>QtWidgets/QComboBox</label>
      </node>
      <node id="6781">
        <label>QtCore/qmetatype.h</label>
      </node>
      <node id="6771">
        <label>QtWidgets/QTabWidget</label>
      </node>
      <node id="6765">
        <label>QtWidgets/QGridLayout</label>
      </node>
      <node id="6772">
        <label>QtWidgets/QVBoxLayout</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6782">
        <label>build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp</label>
        <link refid="moc__synthcontrol_8cpp"/>
        <childnode refid="6783" relation="include">
        </childnode>
      </node>
      <node id="6783">
        <label>build.release/mscore/mscore_autogen/moc_compilation.cpp</label>
        <link refid="mscore_2mscore__autogen_2moc__compilation_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structqt__meta__stringdata___ms_____synth_control__t" prot="public">qt_meta_stringdata_Ms__SynthControl_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="moc__synthcontrol_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____synth_control__t" kindref="compound">qt_meta_stringdata_Ms__SynthControl_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" line="27" column="9" bodyfile="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="moc__synthcontrol_8cpp_1a897021a0ad4d1b3e132946ec6c2fe227" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____synth_control__t" kindref="compound">qt_meta_stringdata_Ms__SynthControl_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__SynthControl_t qt_meta_stringdata_Ms__SynthControl</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__SynthControl</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 16), 
QT_MOC_LITERAL(1, 17, 11), 
QT_MOC_LITERAL(2, 29, 0), 
QT_MOC_LITERAL(3, 30, 16), 
QT_MOC_LITERAL(4, 47, 6), 
QT_MOC_LITERAL(5, 54, 19), 
QT_MOC_LITERAL(6, 74, 18), 
QT_MOC_LITERAL(7, 93, 14), 
QT_MOC_LITERAL(8, 108, 14), 
QT_MOC_LITERAL(9, 123, 17), 
QT_MOC_LITERAL(10, 141, 17), 
QT_MOC_LITERAL(11, 159, 18), 
QT_MOC_LITERAL(12, 178, 19), 
QT_MOC_LITERAL(13, 198, 8), 
QT_MOC_LITERAL(14, 207, 7) 

    },
    &quot;Ms::SynthControl\0gainChanged\0\0&quot;
    &quot;soundFontChanged\0closed\0masterTuningChanged\0&quot;
    &quot;changeMasterTuning\0effectAChanged\0&quot;
    &quot;effectBChanged\0loadButtonClicked\0&quot;
    &quot;saveButtonClicked\0storeButtonClicked\0&quot;
    &quot;recallButtonClicked\0setDirty\0setGain&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" line="32" column="1" bodyfile="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__synthcontrol_8cpp_1ac4b956cc0682097cdfd734e26b2ab8f0" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__SynthControl[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__SynthControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" line="60" column="1" bodyfile="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Meta<sp/>object<sp/>code<sp/>from<sp/>reading<sp/>C++<sp/>file<sp/>&apos;synthcontrol.h&apos;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Created<sp/>by:<sp/>The<sp/>Qt<sp/>Meta<sp/>Object<sp/>Compiler<sp/>version<sp/>67<sp/>(Qt<sp/>5.8.0)</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>WARNING!<sp/>All<sp/>changes<sp/>made<sp/>in<sp/>this<sp/>file<sp/>will<sp/>be<sp/>lost!</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../mscore/synthcontrol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/qbytearray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/qmetatype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(Q_MOC_OUTPUT_REVISION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;The<sp/>header<sp/>file<sp/>&apos;synthcontrol.h&apos;<sp/>doesn&apos;t<sp/>include<sp/>&lt;QObject&gt;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>Q_MOC_OUTPUT_REVISION<sp/>!=<sp/>67</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;This<sp/>file<sp/>was<sp/>generated<sp/>using<sp/>the<sp/>moc<sp/>from<sp/>5.8.0.<sp/>It&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;cannot<sp/>be<sp/>used<sp/>with<sp/>the<sp/>include<sp/>files<sp/>from<sp/>this<sp/>version<sp/>of<sp/>Qt.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;(The<sp/>moc<sp/>has<sp/>changed<sp/>too<sp/>much.)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">QT_BEGIN_MOC_NAMESPACE</highlight></codeline>
<codeline lineno="21"><highlight class="normal">QT_WARNING_PUSH</highlight></codeline>
<codeline lineno="22"><highlight class="normal">QT_WARNING_DISABLE_DEPRECATED</highlight></codeline>
<codeline lineno="23" refid="structqt__meta__stringdata___ms_____synth_control__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____synth_control__t" kindref="compound">qt_meta_stringdata_Ms__SynthControl_t</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[15];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[215];</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__SynthControl_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____synth_control__t" kindref="compound">qt_meta_stringdata_Ms__SynthControl_t</ref><sp/>qt_meta_stringdata_Ms__SynthControl<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>16),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::SynthControl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>17,<sp/>11),<sp/></highlight><highlight class="comment">//<sp/>&quot;gainChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>29,<sp/>0),<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">QT_MOC_LITERAL(3,<sp/>30,<sp/>16),<sp/></highlight><highlight class="comment">//<sp/>&quot;soundFontChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">QT_MOC_LITERAL(4,<sp/>47,<sp/>6),<sp/></highlight><highlight class="comment">//<sp/>&quot;closed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">QT_MOC_LITERAL(5,<sp/>54,<sp/>19),<sp/></highlight><highlight class="comment">//<sp/>&quot;masterTuningChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">QT_MOC_LITERAL(6,<sp/>74,<sp/>18),<sp/></highlight><highlight class="comment">//<sp/>&quot;changeMasterTuning&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">QT_MOC_LITERAL(7,<sp/>93,<sp/>14),<sp/></highlight><highlight class="comment">//<sp/>&quot;effectAChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">QT_MOC_LITERAL(8,<sp/>108,<sp/>14),<sp/></highlight><highlight class="comment">//<sp/>&quot;effectBChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">QT_MOC_LITERAL(9,<sp/>123,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;loadButtonClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">QT_MOC_LITERAL(10,<sp/>141,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;saveButtonClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">QT_MOC_LITERAL(11,<sp/>159,<sp/>18),<sp/></highlight><highlight class="comment">//<sp/>&quot;storeButtonClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">QT_MOC_LITERAL(12,<sp/>178,<sp/>19),<sp/></highlight><highlight class="comment">//<sp/>&quot;recallButtonClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">QT_MOC_LITERAL(13,<sp/>198,<sp/>8),<sp/></highlight><highlight class="comment">//<sp/>&quot;setDirty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">QT_MOC_LITERAL(14,<sp/>207,<sp/>7)<sp/></highlight><highlight class="comment">//<sp/>&quot;setGain&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::SynthControl\0gainChanged\0\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;soundFontChanged\0closed\0masterTuningChanged\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;changeMasterTuning\0effectAChanged\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;effectBChanged\0loadButtonClicked\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;saveButtonClicked\0storeButtonClicked\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;recallButtonClicked\0setDirty\0setGain&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__SynthControl[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>signals:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>84,<sp/><sp/><sp/><sp/>2,<sp/>0x06<sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>87,<sp/><sp/><sp/><sp/>2,<sp/>0x06<sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>88,<sp/><sp/><sp/><sp/>2,<sp/>0x06<sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>96,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>99,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>1,<sp/><sp/>100,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>1,<sp/><sp/>103,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>0,<sp/><sp/>106,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>0,<sp/><sp/>107,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>0,<sp/><sp/>108,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>0,<sp/><sp/>109,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>0,<sp/><sp/>110,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>1,<sp/><sp/>111,<sp/><sp/><sp/><sp/>2,<sp/>0x0a<sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>signals:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Float,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Bool,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Double,<sp/>QMetaType::Int,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Double,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Int,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Int,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Float,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::SynthControl::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SynthControl<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SynthControl<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;gainChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>_t-&gt;soundFontChanged();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>_t-&gt;closed((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>_t-&gt;gainChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])),(*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[2])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>_t-&gt;masterTuningChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>_t-&gt;changeMasterTuning();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>_t-&gt;effectAChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>_t-&gt;effectBChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>_t-&gt;loadButtonClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>_t-&gt;saveButtonClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>_t-&gt;storeButtonClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>_t-&gt;recallButtonClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:<sp/>_t-&gt;setDirty();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>_t-&gt;setGain((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::IndexOfMethod)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**func<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(SynthControl::*_t)(float<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*reinterpret_cast&lt;_t<sp/>*&gt;(func)<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;SynthControl::gainChanged))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(SynthControl::*_t)();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*reinterpret_cast&lt;_t<sp/>*&gt;(func)<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;SynthControl::soundFontChanged))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(SynthControl::*_t)(bool<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*reinterpret_cast&lt;_t<sp/>*&gt;(func)<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;SynthControl::closed))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::SynthControl::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;QWidget::staticMetaObject,<sp/>qt_meta_stringdata_Ms__SynthControl.data,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__SynthControl,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::SynthControl::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::SynthControl::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__SynthControl.stringdata0))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>SynthControl*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/></highlight><highlight class="stringliteral">&quot;Ui::SynthControl&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;<sp/>Ui::SynthControl*&gt;(const_cast&lt;<sp/>SynthControl*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QWidget::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::SynthControl::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>QWidget::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>14)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>14;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>14)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>14;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIGNAL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::SynthControl::gainChanged(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_t1)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_a[]<sp/>=<sp/>{<sp/>Q_NULLPTR,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;_t1))<sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::activate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;staticMetaObject,<sp/>0,<sp/>_a);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIGNAL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::SynthControl::soundFontChanged()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::activate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;staticMetaObject,<sp/>1,<sp/>Q_NULLPTR);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIGNAL<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::SynthControl::closed(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_t1)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_a[]<sp/>=<sp/>{<sp/>Q_NULLPTR,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;_t1))<sp/>};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::activate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;staticMetaObject,<sp/>2,<sp/>_a);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">QT_WARNING_POP</highlight></codeline>
<codeline lineno="219"><highlight class="normal">QT_END_MOC_NAMESPACE</highlight></codeline>
    </programlisting>
    <location file="build.release/mscore/mscore_autogen/EWIEGA46WW/moc_synthcontrol.cpp"/>
  </compounddef>
</doxygen>
