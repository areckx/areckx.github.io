<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="x509__vfy_8h" kind="file" language="C++">
    <compoundname>x509_vfy.h</compoundname>
    <includes refid="x509_8h" local="no">openssl/x509.h</includes>
    <includes refid="opensslconf_8h" local="no">openssl/opensslconf.h</includes>
    <includes refid="lhash_8h" local="no">openssl/lhash.h</includes>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="crypto_8h" local="no">openssl/crypto.h</includes>
    <includes refid="symhacks_8h" local="no">openssl/symhacks.h</includes>
    <includedby refid="x509_8h" local="no">thirdparty/openssl/include/openssl/x509.h</includedby>
    <incdepgraph>
      <node id="83855">
        <label>stdarg.h</label>
      </node>
      <node id="83860">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="83861">
        <label>stdint.h</label>
      </node>
      <node id="83867">
        <label>openssl/ec.h</label>
        <link refid="ec_8h_source"/>
        <childnode refid="83846" relation="include">
        </childnode>
        <childnode refid="83864" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
      <node id="83857">
        <label>stdlib.h</label>
      </node>
      <node id="83853">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83854" relation="include">
        </childnode>
        <childnode refid="83855" relation="include">
        </childnode>
        <childnode refid="83856" relation="include">
        </childnode>
        <childnode refid="83861" relation="include">
        </childnode>
      </node>
      <node id="83870">
        <label>openssl/rsa.h</label>
        <link refid="rsa_8h_source"/>
        <childnode refid="83864" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83856" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
      <node id="83848">
        <label>openssl/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83850" relation="include">
        </childnode>
        <childnode refid="83851" relation="include">
        </childnode>
      </node>
      <node id="83858">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="83874">
        <label>openssl/pkcs7.h</label>
        <link refid="pkcs7_8h_source"/>
        <childnode refid="83864" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
      </node>
      <node id="83850">
        <label>stddef.h</label>
      </node>
      <node id="83873">
        <label>openssl/sha.h</label>
        <link refid="sha_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83850" relation="include">
        </childnode>
      </node>
      <node id="83866">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83854" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83856" relation="include">
        </childnode>
      </node>
      <node id="83844">
        <label>openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
        <childnode refid="83848" relation="include">
        </childnode>
        <childnode refid="83852" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83858" relation="include">
        </childnode>
        <childnode refid="83864" relation="include">
        </childnode>
        <childnode refid="83859" relation="include">
        </childnode>
        <childnode refid="83867" relation="include">
        </childnode>
        <childnode refid="83868" relation="include">
        </childnode>
        <childnode refid="83869" relation="include">
        </childnode>
        <childnode refid="83870" relation="include">
        </childnode>
        <childnode refid="83871" relation="include">
        </childnode>
        <childnode refid="83872" relation="include">
        </childnode>
        <childnode refid="83873" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83843" relation="include">
        </childnode>
        <childnode refid="83874" relation="include">
        </childnode>
      </node>
      <node id="83871">
        <label>openssl/dsa.h</label>
        <link refid="dsa_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83856" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
        <childnode refid="83872" relation="include">
        </childnode>
      </node>
      <node id="83863">
        <label>openssl/obj_mac.h</label>
        <link refid="obj__mac_8h_source"/>
      </node>
      <node id="83843">
        <label>thirdparty/openssl/include/openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h"/>
        <childnode refid="83844" relation="include">
        </childnode>
        <childnode refid="83846" relation="include">
        </childnode>
        <childnode refid="83875" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83856" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
      </node>
      <node id="83851">
        <label>sys/types.h</label>
      </node>
      <node id="83847">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
      </node>
      <node id="83864">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="83865" relation="include">
        </childnode>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83858" relation="include">
        </childnode>
        <childnode refid="83859" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
      <node id="83859">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="83858" relation="include">
        </childnode>
      </node>
      <node id="83852">
        <label>openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="83846" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83862" relation="include">
        </childnode>
      </node>
      <node id="83865">
        <label>time.h</label>
      </node>
      <node id="83868">
        <label>openssl/ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="83846" relation="include">
        </childnode>
        <childnode refid="83867" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
      <node id="83875">
        <label>openssl/lhash.h</label>
        <link refid="lhash_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83854" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
      </node>
      <node id="83862">
        <label>openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="83863" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83864" relation="include">
        </childnode>
      </node>
      <node id="83846">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="83845">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="83846" relation="include">
        </childnode>
      </node>
      <node id="83854">
        <label>stdio.h</label>
      </node>
      <node id="83869">
        <label>openssl/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="83846" relation="include">
        </childnode>
        <childnode refid="83867" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
      <node id="83849">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
      </node>
      <node id="83856">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="83857" relation="include">
        </childnode>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83854" relation="include">
        </childnode>
        <childnode refid="83858" relation="include">
        </childnode>
        <childnode refid="83859" relation="include">
        </childnode>
        <childnode refid="83860" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83847" relation="include">
        </childnode>
      </node>
      <node id="83872">
        <label>openssl/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="83845" relation="include">
        </childnode>
        <childnode refid="83853" relation="include">
        </childnode>
        <childnode refid="83849" relation="include">
        </childnode>
        <childnode refid="83866" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="83881">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h_source"/>
      </node>
      <node id="83888">
        <label>thirdparty/openssl/include/openssl/ts.h</label>
        <link refid="ts_8h_source"/>
      </node>
      <node id="83879">
        <label>thirdparty/poppler/poppler/SignatureHandler.h</label>
        <link refid="_signature_handler_8h_source"/>
        <childnode refid="83880" relation="include">
        </childnode>
      </node>
      <node id="83884">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="83886">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="83885" relation="include">
        </childnode>
      </node>
      <node id="83877">
        <label>thirdparty/openssl/include/openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="83878" relation="include">
        </childnode>
        <childnode refid="83881" relation="include">
        </childnode>
        <childnode refid="83882" relation="include">
        </childnode>
        <childnode refid="83883" relation="include">
        </childnode>
        <childnode refid="83887" relation="include">
        </childnode>
        <childnode refid="83885" relation="include">
        </childnode>
        <childnode refid="83888" relation="include">
        </childnode>
        <childnode refid="83876" relation="include">
        </childnode>
        <childnode refid="83889" relation="include">
        </childnode>
      </node>
      <node id="83876">
        <label>thirdparty/openssl/include/openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h"/>
        <childnode refid="83877" relation="include">
        </childnode>
      </node>
      <node id="83883">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h_source"/>
        <childnode refid="83884" relation="include">
        </childnode>
        <childnode refid="83885" relation="include">
        </childnode>
      </node>
      <node id="83878">
        <label>thirdparty/openssl/include/openssl/cms.h</label>
        <link refid="cms_8h_source"/>
        <childnode refid="83879" relation="include">
        </childnode>
      </node>
      <node id="83885">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="83884" relation="include">
        </childnode>
        <childnode refid="83886" relation="include">
        </childnode>
      </node>
      <node id="83880">
        <label>thirdparty/poppler/poppler/SignatureHandler.cc</label>
        <link refid="_signature_handler_8cc_source"/>
      </node>
      <node id="83889">
        <label>thirdparty/openssl/include/openssl/x509v3.h</label>
        <link refid="x509v3_8h_source"/>
        <childnode refid="83882" relation="include">
        </childnode>
        <childnode refid="83888" relation="include">
        </childnode>
      </node>
      <node id="83887">
        <label>thirdparty/openssl/include/openssl/pkcs12.h</label>
        <link refid="pkcs12_8h_source"/>
      </node>
      <node id="83882">
        <label>thirdparty/openssl/include/openssl/ocsp.h</label>
        <link refid="ocsp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structx509__file__st" prot="public">x509_file_st</innerclass>
    <innerclass refid="structx509__object__st" prot="public">x509_object_st</innerclass>
    <innerclass refid="structx509__lookup__method__st" prot="public">x509_lookup_method_st</innerclass>
    <innerclass refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" prot="public">X509_VERIFY_PARAM_st</innerclass>
    <innerclass refid="structx509__store__st" prot="public">x509_store_st</innerclass>
    <innerclass refid="structx509__lookup__st" prot="public">x509_lookup_st</innerclass>
    <innerclass refid="structx509__store__ctx__st" prot="public">x509_store_ctx_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="x509__vfy_8h_1aa1204990f4327b3576a243254156677c" prot="public" static="no">
        <name>X509_LU_RETRY</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="117" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a9d41fdc45e9f62fd55a16da87fefa471" prot="public" static="no">
        <name>X509_LU_FAIL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="118" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a560f5eff878ed72cd424830010012898" prot="public" static="no">
        <name>X509_LU_X509</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="119" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a1efa7433741242ad5fa214d7f3b5f00b" prot="public" static="no">
        <name>X509_LU_CRL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="120" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ae8285c3efeed2489003d7995447602f6" prot="public" static="no">
        <name>X509_LU_PKEY</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="121" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a6f9814556ed2444e0106dbbb336d3e04" prot="public" static="no">
        <name>X509_STORE_set_verify_cb_func</name>
        <param><defname>ctx</defname></param>
        <param><defname>func</defname></param>
        <initializer>((ctx)-&gt;verify_cb=(func))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="213" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1acfcb800d690f138f9c957d61eb7e01db" prot="public" static="no">
        <name>X509_STORE_set_verify_func</name>
        <param><defname>ctx</defname></param>
        <param><defname>func</defname></param>
        <initializer>((ctx)-&gt;verify=(func))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="214" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a6d694f4a9774cd59332cbdc29d1c29df" prot="public" static="no">
        <name>X509_STORE_CTX_set_app_data</name>
        <param><defname>ctx</defname></param>
        <param><defname>data</defname></param>
        <initializer>X509_STORE_CTX_set_ex_data(ctx,0,data)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="282" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1adbfa4910d651c634a567135d68a7c583" prot="public" static="no">
        <name>X509_STORE_CTX_get_app_data</name>
        <param><defname>ctx</defname></param>
        <initializer>X509_STORE_CTX_get_ex_data(ctx,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="284" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a0bda54ad60175be00d04a72a8054c38f" prot="public" static="no">
        <name>X509_L_FILE_LOAD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="287" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1af72344b3fb0052deea16c977c7321c93" prot="public" static="no">
        <name>X509_L_ADD_DIR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="288" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a58b7d1cccbdd95373c469d0338c92fac" prot="public" static="no">
        <name>X509_LOOKUP_load_file</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>X509_LOOKUP_ctrl((x),X509_L_FILE_LOAD,(name),(long)(type),NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="290" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a132130a62f598b5dbb774745be714c11" prot="public" static="no">
        <name>X509_LOOKUP_add_dir</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>X509_LOOKUP_ctrl((x),X509_L_ADD_DIR,(name),(long)(type),NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="293" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ac0a59adf149eda514d31e7c33881ef3c" prot="public" static="no">
        <name>X509_V_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="296" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa59e16e70157bc15c08ffc828334a64d" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="299" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a616eed2e083d1460d82eed559d59c02f" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_GET_CRL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="300" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a05c0d6ab85f8d9f4dd15279b0308f2d8" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="301" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a3d29880015683595cdaf1b397522146a" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="302" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ab060a900be31fcba4dfe90f4e199daed" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="303" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a2ec5151b7ab6d0dfe64fb90c07b472a3" prot="public" static="no">
        <name>X509_V_ERR_CERT_SIGNATURE_FAILURE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="304" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a7e0de49f43e8f668967a85a8dcc84da5" prot="public" static="no">
        <name>X509_V_ERR_CRL_SIGNATURE_FAILURE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="305" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ac3509a0233fa3ff31cfabf1ea476a85a" prot="public" static="no">
        <name>X509_V_ERR_CERT_NOT_YET_VALID</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="306" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a77737c01265835b5f32d72794e714b1f" prot="public" static="no">
        <name>X509_V_ERR_CERT_HAS_EXPIRED</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="307" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ab5d02282b3a411b81f5b8f654a73db11" prot="public" static="no">
        <name>X509_V_ERR_CRL_NOT_YET_VALID</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="308" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1abe41fcdd2ab59074a832cf71b4d22bea" prot="public" static="no">
        <name>X509_V_ERR_CRL_HAS_EXPIRED</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="309" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a4a6aa15c957391777664507df7e93001" prot="public" static="no">
        <name>X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="310" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1afc33023948ec5382718d2aa405f8bbcb" prot="public" static="no">
        <name>X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="311" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ab1422e599f56891571f5b5d546d07d2a" prot="public" static="no">
        <name>X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="312" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1acd31420cd59d29aeaa49e755cf88b3a2" prot="public" static="no">
        <name>X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="313" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a0c03cf2a9c9bf94f2f977dad7b539fd4" prot="public" static="no">
        <name>X509_V_ERR_OUT_OF_MEM</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="314" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa4f5a3309eae833f85dff37c36fa039d" prot="public" static="no">
        <name>X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="315" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a2cfd82c853f3e9cc0a1b87c8c16452cb" prot="public" static="no">
        <name>X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="316" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa5446ec77613f1194d8b1e15e7aea7c3" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="317" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa43f8d88bc7d6e9cfe413596ef9f4ceb" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="318" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa49241310fb0ed680fcd163be38fbf64" prot="public" static="no">
        <name>X509_V_ERR_CERT_CHAIN_TOO_LONG</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="319" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a62c355cf087bb58abf45a897bdf44afe" prot="public" static="no">
        <name>X509_V_ERR_CERT_REVOKED</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="320" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ac54d87e5f8698a4cf4a83bbad827116b" prot="public" static="no">
        <name>X509_V_ERR_INVALID_CA</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="321" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a5189f4a76b92c3759f5e5035839098de" prot="public" static="no">
        <name>X509_V_ERR_PATH_LENGTH_EXCEEDED</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="322" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ad5e8ae359d4b029529b939d23ff34ca8" prot="public" static="no">
        <name>X509_V_ERR_INVALID_PURPOSE</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="323" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a21eda1e55b49378b6070dc1e3df2c17b" prot="public" static="no">
        <name>X509_V_ERR_CERT_UNTRUSTED</name>
        <initializer>27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="324" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a2cb13bfd0678c9d737dbc691b1124c46" prot="public" static="no">
        <name>X509_V_ERR_CERT_REJECTED</name>
        <initializer>28</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="325" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a2bf2bf8c53131f3046657f2c85838051" prot="public" static="no">
        <name>X509_V_ERR_SUBJECT_ISSUER_MISMATCH</name>
        <initializer>29</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="327" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a6fc6023209e07f2004072a267c5ddef2" prot="public" static="no">
        <name>X509_V_ERR_AKID_SKID_MISMATCH</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="328" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a735b8c28dcdf4d04ab397a5720f88ab9" prot="public" static="no">
        <name>X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH</name>
        <initializer>31</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="329" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a948a2c1b1cfd0814ac424a6d8a48515c" prot="public" static="no">
        <name>X509_V_ERR_KEYUSAGE_NO_CERTSIGN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="330" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a9e4998e2beba9f88547c237b9f59ed5a" prot="public" static="no">
        <name>X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER</name>
        <initializer>33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="332" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ae3b4eda8136c9e8884fa0e1d436698ba" prot="public" static="no">
        <name>X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION</name>
        <initializer>34</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="333" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a41aba323b16aa1a84edb2cbe21e51818" prot="public" static="no">
        <name>X509_V_ERR_KEYUSAGE_NO_CRL_SIGN</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="334" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa049d9ab90fc2819a67a69ca8b71b5c9" prot="public" static="no">
        <name>X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION</name>
        <initializer>36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="335" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a93270cf7f4c3149f46389a337e301148" prot="public" static="no">
        <name>X509_V_ERR_INVALID_NON_CA</name>
        <initializer>37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="336" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ab8fd559fe1d2350c8bdc1f65e54ef17d" prot="public" static="no">
        <name>X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED</name>
        <initializer>38</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="337" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a26529ac99abccdbdc65143322711ea89" prot="public" static="no">
        <name>X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE</name>
        <initializer>39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="338" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ac1876fd9e74f5404bd36012ca23896ad" prot="public" static="no">
        <name>X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="339" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a07a9a922b4c475065320b99248718a12" prot="public" static="no">
        <name>X509_V_ERR_INVALID_EXTENSION</name>
        <initializer>41</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="341" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a12408c5214b076f7a3846cfd04e8b4e7" prot="public" static="no">
        <name>X509_V_ERR_INVALID_POLICY_EXTENSION</name>
        <initializer>42</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="342" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1acb3b41676ad6618a12abb4aa89a297fe" prot="public" static="no">
        <name>X509_V_ERR_NO_EXPLICIT_POLICY</name>
        <initializer>43</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="343" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a1fe8fc26d5a954bcf6fdef3e3c9b8cc6" prot="public" static="no">
        <name>X509_V_ERR_DIFFERENT_CRL_SCOPE</name>
        <initializer>44</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="344" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a5750ab53eeaa285c53fbdebbec66f7d8" prot="public" static="no">
        <name>X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE</name>
        <initializer>45</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="345" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a1c9f08720105a282ce9c5bbdb0a9599a" prot="public" static="no">
        <name>X509_V_ERR_UNNESTED_RESOURCE</name>
        <initializer>46</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="347" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a3c031431860c8c5e716a911032dad15c" prot="public" static="no">
        <name>X509_V_ERR_PERMITTED_VIOLATION</name>
        <initializer>47</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="349" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ab41a47ffad03bbc0aff9393ad196375d" prot="public" static="no">
        <name>X509_V_ERR_EXCLUDED_VIOLATION</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="350" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a701e2d4a3f7d5b16ba4da8b2c5aed5ba" prot="public" static="no">
        <name>X509_V_ERR_SUBTREE_MINMAX</name>
        <initializer>49</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="351" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a0a4557020e197a6a44680b78a67a34fe" prot="public" static="no">
        <name>X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE</name>
        <initializer>51</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="352" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1afe4c74b5e89cc8b42d7b57de48a92787" prot="public" static="no">
        <name>X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX</name>
        <initializer>52</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="353" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a0d884f26d17061e86c9ec7c15ea729ff" prot="public" static="no">
        <name>X509_V_ERR_UNSUPPORTED_NAME_SYNTAX</name>
        <initializer>53</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="354" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1ade5bfa12f2d92700d0b441464932e39f" prot="public" static="no">
        <name>X509_V_ERR_CRL_PATH_VALIDATION_ERROR</name>
        <initializer>54</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="355" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a9ef9a4a9353ac900793f50516858610a" prot="public" static="no">
        <name>X509_V_ERR_APPLICATION_VERIFICATION</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="358" column="10" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a7fc0b4e97574853c077c4f4ece2ba892" prot="public" static="no">
        <name>X509_V_FLAG_CB_ISSUER_CHECK</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="363" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a92fe341f8bc007b12820986319ecb597" prot="public" static="no">
        <name>X509_V_FLAG_USE_CHECK_TIME</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="365" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a2bd305449a8853c9e8aaa6f79be4e56f" prot="public" static="no">
        <name>X509_V_FLAG_CRL_CHECK</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="367" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a8b73ad17ec518dfb0bb3726eb76aeafd" prot="public" static="no">
        <name>X509_V_FLAG_CRL_CHECK_ALL</name>
        <initializer>0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="369" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aaa1bae51b3b731bde28c10f06f660b1e" prot="public" static="no">
        <name>X509_V_FLAG_IGNORE_CRITICAL</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="371" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a18d47f293fbb64e884e8bbf3175b1350" prot="public" static="no">
        <name>X509_V_FLAG_X509_STRICT</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="373" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a058901f467aa313e04a48afc98b136d4" prot="public" static="no">
        <name>X509_V_FLAG_ALLOW_PROXY_CERTS</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="375" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a20d33a0dbea42d142aff71ed407be0db" prot="public" static="no">
        <name>X509_V_FLAG_POLICY_CHECK</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="377" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a046a1bbb9978af5b0a55e4562f72e110" prot="public" static="no">
        <name>X509_V_FLAG_EXPLICIT_POLICY</name>
        <initializer>0x100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="379" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1afaaf8df201d5052378ea40d772cc3db0" prot="public" static="no">
        <name>X509_V_FLAG_INHIBIT_ANY</name>
        <initializer>0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="381" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a4f36b3d92af69149070fa7bab95e94de" prot="public" static="no">
        <name>X509_V_FLAG_INHIBIT_MAP</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="383" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a1a3cde378823221cb499dc9e67743e5a" prot="public" static="no">
        <name>X509_V_FLAG_NOTIFY_POLICY</name>
        <initializer>0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="385" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a5e0e3b3097a0eacbaae5d4cb456d8a21" prot="public" static="no">
        <name>X509_V_FLAG_EXTENDED_CRL_SUPPORT</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="387" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a9104b52366dd346c08aa2431b3241db4" prot="public" static="no">
        <name>X509_V_FLAG_USE_DELTAS</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="389" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a60c893e6f4421862fb7ff504d269c308" prot="public" static="no">
        <name>X509_V_FLAG_CHECK_SS_SIGNATURE</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="391" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aa5e0cedf8e953fa367ebb5ce2e5d2b10" prot="public" static="no">
        <name>X509_VP_FLAG_DEFAULT</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="394" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a29015941c12ecdbbf5c0b61bf4644f9f" prot="public" static="no">
        <name>X509_VP_FLAG_OVERWRITE</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="395" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1aad3f0075277277d0ec62a5c3d96828d5" prot="public" static="no">
        <name>X509_VP_FLAG_RESET_FLAGS</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="396" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a17090ef503adf743a1ca7dfa5fd7d713" prot="public" static="no">
        <name>X509_VP_FLAG_LOCKED</name>
        <initializer>0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="397" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a8fad6a8ff910597f2a0357207b156fc4" prot="public" static="no">
        <name>X509_VP_FLAG_ONCE</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="398" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509__vfy_8h_1a7363d143002a1a3e4334f4e510ba53ba" prot="public" static="no">
        <name>X509_V_FLAG_POLICY_MASK</name>
        <initializer>(X509_V_FLAG_POLICY_CHECK \
				| X509_V_FLAG_EXPLICIT_POLICY \
				| X509_V_FLAG_INHIBIT_ANY \
				| X509_V_FLAG_INHIBIT_MAP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="401" column="9" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="x509__vfy_8h_1a464ea550071fc702f23151382fad9177" prot="public" static="no">
        <type>struct <ref refid="structx509__file__st" kindref="compound">x509_file_st</ref></type>
        <definition>typedef struct x509_file_st  X509_CERT_FILE_CTX</definition>
        <argsstring></argsstring>
        <name>X509_CERT_FILE_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509__vfy_8h_1a49c000712efcfeff1e403cb1242052e9" prot="public" static="no">
        <type>struct <ref refid="structx509__object__st" kindref="compound">x509_object_st</ref></type>
        <definition>typedef struct x509_object_st  X509_OBJECT</definition>
        <argsstring></argsstring>
        <name>X509_OBJECT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509__vfy_8h_1afcefc7fb9c7573debf6c1d28b28ff618" prot="public" static="no">
        <type>struct <ref refid="structx509__lookup__st" kindref="compound">x509_lookup_st</ref></type>
        <definition>typedef struct x509_lookup_st X509_LOOKUP</definition>
        <argsstring></argsstring>
        <name>X509_LOOKUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="593" column="1" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509__vfy_8h_1a795687b9a64050138f299d19013fe29d" prot="public" static="no">
        <type>struct <ref refid="structx509__lookup__method__st" kindref="compound">x509_lookup_method_st</ref></type>
        <definition>typedef struct x509_lookup_method_st  X509_LOOKUP_METHOD</definition>
        <argsstring></argsstring>
        <name>X509_LOOKUP_METHOD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509__vfy_8h_1a9b8209a7a29bafa279e1b5bc5f81cb23" prot="public" static="no">
        <type>struct <ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM_st</ref></type>
        <definition>typedef struct X509_VERIFY_PARAM_st  X509_VERIFY_PARAM</definition>
        <argsstring></argsstring>
        <name>X509_VERIFY_PARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="x509__vfy_8h_1a57a3541601842982e910946c748942ca" prot="public" static="no" mutable="no">
        <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
        <definition>X509_NAME * nm</definition>
        <argsstring></argsstring>
        <name>nm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="415" column="1" bodyfile="thirdparty/openssl/include/openssl/x509_vfy.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="x509__vfy_8h_1aa9224e07313ff338de2d4fcaabb8b750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set_depth</definition>
        <argsstring>(X509_STORE *store, int depth)</argsstring>
        <name>X509_STORE_set_depth</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>store</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a7603bd2496fba14cf60258377f1208e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_depth</definition>
        <argsstring>(X509_STORE_CTX *ctx, int depth)</argsstring>
        <name>X509_STORE_CTX_set_depth</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a180f0f28aea46166479a6b8122d17923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_OBJECT_idx_by_subject</definition>
        <argsstring>(STACK_OF(X509_OBJECT) *h, int type, X509_NAME *name)</argsstring>
        <name>X509_OBJECT_idx_by_subject</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>) *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a81dc73edda31b253dc8fb1bdf25c89ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
        <definition>X509_OBJECT* X509_OBJECT_retrieve_by_subject</definition>
        <argsstring>(STACK_OF(X509_OBJECT) *h, int type, X509_NAME *name)</argsstring>
        <name>X509_OBJECT_retrieve_by_subject</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>) *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1abd62dce9c39c16e0a106d26f7cda983f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
        <definition>X509_OBJECT* X509_OBJECT_retrieve_match</definition>
        <argsstring>(STACK_OF(X509_OBJECT) *h, X509_OBJECT *x)</argsstring>
        <name>X509_OBJECT_retrieve_match</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>) *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a8570a20bfd509770efb3bc424874c346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_OBJECT_up_ref_count</definition>
        <argsstring>(X509_OBJECT *a)</argsstring>
        <name>X509_OBJECT_up_ref_count</name>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a556ffd9144915f7456a94547d16aba69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_OBJECT_free_contents</definition>
        <argsstring>(X509_OBJECT *a)</argsstring>
        <name>X509_OBJECT_free_contents</name>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a32f5ebd4f2902b47fdae959ac1dad753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
        <definition>X509_STORE* X509_STORE_new</definition>
        <argsstring>(void)</argsstring>
        <name>X509_STORE_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ad894e908f24015eb83396c207afc0741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_free</definition>
        <argsstring>(X509_STORE *v)</argsstring>
        <name>X509_STORE_free</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae212044ea7560edf32da52a89da33d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(X509) *X509_STORE_get1_certs(X509_STORE_CTX *st</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1afed4e6e3a0ac9ab136e58a9e3a9ca4b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(X509_CRL) *X509_STORE_get1_crls(X509_STORE_CTX *st</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a574fb6763015ebf2bc49711f379e0c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set_flags</definition>
        <argsstring>(X509_STORE *ctx, unsigned long flags)</argsstring>
        <name>X509_STORE_set_flags</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a6171482d890e546e912bbbfeba94c5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set_purpose</definition>
        <argsstring>(X509_STORE *ctx, int purpose)</argsstring>
        <name>X509_STORE_set_purpose</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>purpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ad5135aa13ad080b24f5ff8c0cc61701b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set_trust</definition>
        <argsstring>(X509_STORE *ctx, int trust)</argsstring>
        <name>X509_STORE_set_trust</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab0d5d33a5c01985b837b91dd3efec29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set1_param</definition>
        <argsstring>(X509_STORE *ctx, X509_VERIFY_PARAM *pm)</argsstring>
        <name>X509_STORE_set1_param</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>pm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab553ac0f70cc8eb7ba2f7620587e0c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_set_verify_cb</definition>
        <argsstring>(X509_STORE *ctx, int(*verify_cb)(int, X509_STORE_CTX *))</argsstring>
        <name>X509_STORE_set_verify_cb</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int(*)(int, <ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *)</type>
          <declname>verify_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ac6c7030db2040b3dbd4be051e81592dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
        <definition>X509_STORE_CTX* X509_STORE_CTX_new</definition>
        <argsstring>(void)</argsstring>
        <name>X509_STORE_CTX_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab9ac872bb8e0d4d55f9d56e5ce7dd6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_get1_issuer</definition>
        <argsstring>(X509 **issuer, X509_STORE_CTX *ctx, X509 *x)</argsstring>
        <name>X509_STORE_CTX_get1_issuer</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> **</type>
          <declname>issuer</declname>
        </param>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a7fad77ce519c90dc4c9dca799abc80e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_free</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_free</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aa7b300d3de369f0b7ce98dac29f3f91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_init</definition>
        <argsstring>(X509_STORE_CTX *ctx, X509_STORE *store, X509 *x509, STACK_OF(X509) *chain)</argsstring>
        <name>X509_STORE_CTX_init</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>store</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x509</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a5996c0906fd67a17913b6c285aaa9310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_trusted_stack</definition>
        <argsstring>(X509_STORE_CTX *ctx, STACK_OF(X509) *sk)</argsstring>
        <name>X509_STORE_CTX_trusted_stack</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a8ff79593c52dcc4c9e63bfb7146bb9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_cleanup</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_cleanup</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a4f957b5208ea37b2c1ad41386250b48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
        <definition>X509_LOOKUP* X509_STORE_add_lookup</definition>
        <argsstring>(X509_STORE *v, X509_LOOKUP_METHOD *m)</argsstring>
        <name>X509_STORE_add_lookup</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aeecdb1281ac6cb130ab2c25e71e4129a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref> *</type>
        <definition>X509_LOOKUP_METHOD* X509_LOOKUP_hash_dir</definition>
        <argsstring>(void)</argsstring>
        <name>X509_LOOKUP_hash_dir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1af3d48d603905cc2ca120e63e272e1a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref> *</type>
        <definition>X509_LOOKUP_METHOD* X509_LOOKUP_file</definition>
        <argsstring>(void)</argsstring>
        <name>X509_LOOKUP_file</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a796c2e6df370a31955cc15797e7a717e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_add_cert</definition>
        <argsstring>(X509_STORE *ctx, X509 *x)</argsstring>
        <name>X509_STORE_add_cert</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ac4a7512036bd839faca46f0726905012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_add_crl</definition>
        <argsstring>(X509_STORE *ctx, X509_CRL *x)</argsstring>
        <name>X509_STORE_add_crl</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab7f697aa0db5e8b3cfd27250afbc54bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_get_by_subject</definition>
        <argsstring>(X509_STORE_CTX *vs, int type, X509_NAME *name, X509_OBJECT *ret)</argsstring>
        <name>X509_STORE_get_by_subject</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>vs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a0c16d31013b533eb0e4e2ef9b5ecf24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_ctrl</definition>
        <argsstring>(X509_LOOKUP *ctx, int cmd, const char *argc, long argl, char **ret)</argsstring>
        <name>X509_LOOKUP_ctrl</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="446" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ac33849780904a39214988a145240b53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_load_cert_file</definition>
        <argsstring>(X509_LOOKUP *ctx, const char *file, int type)</argsstring>
        <name>X509_load_cert_file</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1af5a4bc1397845405e21432c38d48836a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_load_crl_file</definition>
        <argsstring>(X509_LOOKUP *ctx, const char *file, int type)</argsstring>
        <name>X509_load_crl_file</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a02661733430a03044234bbf1042ddda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_load_cert_crl_file</definition>
        <argsstring>(X509_LOOKUP *ctx, const char *file, int type)</argsstring>
        <name>X509_load_cert_crl_file</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a1cf160ef78d46d14a9a788caab08f387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
        <definition>X509_LOOKUP* X509_LOOKUP_new</definition>
        <argsstring>(X509_LOOKUP_METHOD *method)</argsstring>
        <name>X509_LOOKUP_new</name>
        <param>
          <type><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref> *</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="456" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a660a2ca36cd583f343e04d3437b64d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_LOOKUP_free</definition>
        <argsstring>(X509_LOOKUP *ctx)</argsstring>
        <name>X509_LOOKUP_free</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a8ec97ec8236e17cb6037529fc2314359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_init</definition>
        <argsstring>(X509_LOOKUP *ctx)</argsstring>
        <name>X509_LOOKUP_init</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a4ed35a6b7d353eec823f5bd29c85ee21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_by_subject</definition>
        <argsstring>(X509_LOOKUP *ctx, int type, X509_NAME *name, X509_OBJECT *ret)</argsstring>
        <name>X509_LOOKUP_by_subject</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a553bacd2bca1f9c4df3234cd0842ad8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_by_issuer_serial</definition>
        <argsstring>(X509_LOOKUP *ctx, int type, X509_NAME *name, ASN1_INTEGER *serial, X509_OBJECT *ret)</argsstring>
        <name>X509_LOOKUP_by_issuer_serial</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>serial</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a5428cb497b2941def47e08bd3b31d5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_by_fingerprint</definition>
        <argsstring>(X509_LOOKUP *ctx, int type, unsigned char *bytes, int len, X509_OBJECT *ret)</argsstring>
        <name>X509_LOOKUP_by_fingerprint</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aa9c70818f4bde8dd6146a85d3e10d543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_by_alias</definition>
        <argsstring>(X509_LOOKUP *ctx, int type, char *str, int len, X509_OBJECT *ret)</argsstring>
        <name>X509_LOOKUP_by_alias</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref> *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a6c06a23ef3d29ca435dd04e07117c0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_LOOKUP_shutdown</definition>
        <argsstring>(X509_LOOKUP *ctx)</argsstring>
        <name>X509_LOOKUP_shutdown</name>
        <param>
          <type><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a76def3ae294e2b802fae035741d2ea3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_load_locations</definition>
        <argsstring>(X509_STORE *ctx, const char *file, const char *dir)</argsstring>
        <name>X509_STORE_load_locations</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae8195dd54782ea4d1fc77cacfc01a561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_set_default_paths</definition>
        <argsstring>(X509_STORE *ctx)</argsstring>
        <name>X509_STORE_set_default_paths</name>
        <param>
          <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aff6ff1506e3f2fa55100f1e21ef2f369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_get_ex_new_index</definition>
        <argsstring>(long argl, void *argp, CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func)</argsstring>
        <name>X509_STORE_CTX_get_ex_new_index</name>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <param>
          <type>CRYPTO_EX_new *</type>
          <declname>new_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_dup *</type>
          <declname>dup_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_free *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae3efef781c0987fba3c0609921060d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_set_ex_data</definition>
        <argsstring>(X509_STORE_CTX *ctx, int idx, void *data)</argsstring>
        <name>X509_STORE_CTX_set_ex_data</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aac073808d8376a41e3b8a64c0f12ff55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_STORE_CTX_get_ex_data</definition>
        <argsstring>(X509_STORE_CTX *ctx, int idx)</argsstring>
        <name>X509_STORE_CTX_get_ex_data</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a0168c670323c9c346dc935ef7c0277df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_get_error</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get_error</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a111978c1d3515ae258b02bb3971782a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_error</definition>
        <argsstring>(X509_STORE_CTX *ctx, int s)</argsstring>
        <name>X509_STORE_CTX_set_error</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a2fb8eb6094215f110482e2a72788b0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_get_error_depth</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get_error_depth</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ad0268e76142177fe51d3c5145ba68b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_STORE_CTX_get_current_cert</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get_current_cert</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a1492b264b9d95d5d0d710ac27876bfce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_STORE_CTX_get0_current_issuer</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get0_current_issuer</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a3d1a917e94eb74c93b3a8cafc1f213fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
        <definition>X509_CRL* X509_STORE_CTX_get0_current_crl</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get0_current_crl</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a7d19744a61f81bdc6bec2a9fd2827315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
        <definition>X509_STORE_CTX* X509_STORE_CTX_get0_parent_ctx</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get0_parent_ctx</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a6a6bfffc58f8a970d7a7764f1e055e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_cert</definition>
        <argsstring>(X509_STORE_CTX *c, X509 *x)</argsstring>
        <name>X509_STORE_CTX_set_cert</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a2f444befb9cbb7d4cc08766e0c1bbec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_chain</definition>
        <argsstring>(X509_STORE_CTX *c, STACK_OF(X509) *sk)</argsstring>
        <name>X509_STORE_CTX_set_chain</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a630c1c609692724200fe0f9d11fc0878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set0_crls</definition>
        <argsstring>(X509_STORE_CTX *c, STACK_OF(X509_CRL) *sk)</argsstring>
        <name>X509_STORE_CTX_set0_crls</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>) *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a2b4939baca9b28b912b54841865b492b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_set_purpose</definition>
        <argsstring>(X509_STORE_CTX *ctx, int purpose)</argsstring>
        <name>X509_STORE_CTX_set_purpose</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>purpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ac6351c206cbc0c90d573e98d363d4627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_set_trust</definition>
        <argsstring>(X509_STORE_CTX *ctx, int trust)</argsstring>
        <name>X509_STORE_CTX_set_trust</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aeae05e156ff5e328afc1923b4bf8a71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_purpose_inherit</definition>
        <argsstring>(X509_STORE_CTX *ctx, int def_purpose, int purpose, int trust)</argsstring>
        <name>X509_STORE_CTX_purpose_inherit</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>def_purpose</declname>
        </param>
        <param>
          <type>int</type>
          <declname>purpose</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a409bf12f2576229eda9191349742bdfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_flags</definition>
        <argsstring>(X509_STORE_CTX *ctx, unsigned long flags)</argsstring>
        <name>X509_STORE_CTX_set_flags</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab76bb6c20423d3315aeaf7c7a4138370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_time</definition>
        <argsstring>(X509_STORE_CTX *ctx, unsigned long flags, time_t t)</argsstring>
        <name>X509_STORE_CTX_set_time</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1afaf77ded1467bc020aa71f06aeb05cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set_verify_cb</definition>
        <argsstring>(X509_STORE_CTX *ctx, int(*verify_cb)(int, X509_STORE_CTX *))</argsstring>
        <name>X509_STORE_CTX_set_verify_cb</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int(*)(int, <ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *)</type>
          <declname>verify_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae58f41757bea8a08222f5b646d35c018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X509_POLICY_TREE *</type>
        <definition>X509_POLICY_TREE* X509_STORE_CTX_get0_policy_tree</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get0_policy_tree</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a4b246972a4ec5b8e8d9705c860f2e5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_get_explicit_policy</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get_explicit_policy</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a4bed2c92073c83931e3de7aecf34552f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
        <definition>X509_VERIFY_PARAM* X509_STORE_CTX_get0_param</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_STORE_CTX_get0_param</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ac44243da0226fb4a56b65b0731863621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_STORE_CTX_set0_param</definition>
        <argsstring>(X509_STORE_CTX *ctx, X509_VERIFY_PARAM *param)</argsstring>
        <name>X509_STORE_CTX_set0_param</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1abb33e390f015d2ba702a5e6c56388ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_STORE_CTX_set_default</definition>
        <argsstring>(X509_STORE_CTX *ctx, const char *name)</argsstring>
        <name>X509_STORE_CTX_set_default</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a07846d1b04026bada8a62acef180c374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
        <definition>X509_VERIFY_PARAM* X509_VERIFY_PARAM_new</definition>
        <argsstring>(void)</argsstring>
        <name>X509_VERIFY_PARAM_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a9db1cdc6737057af5acabef0707d582e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_VERIFY_PARAM_free</definition>
        <argsstring>(X509_VERIFY_PARAM *param)</argsstring>
        <name>X509_VERIFY_PARAM_free</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a48c1cb313b1da4837d7e6babc9cb6983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_inherit</definition>
        <argsstring>(X509_VERIFY_PARAM *to, const X509_VERIFY_PARAM *from)</argsstring>
        <name>X509_VERIFY_PARAM_inherit</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1adcab76a09b0ab8bbf360a847c22ba1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set1</definition>
        <argsstring>(X509_VERIFY_PARAM *to, const X509_VERIFY_PARAM *from)</argsstring>
        <name>X509_VERIFY_PARAM_set1</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a37034dcabe9db20ea533826067e10a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set1_name</definition>
        <argsstring>(X509_VERIFY_PARAM *param, const char *name)</argsstring>
        <name>X509_VERIFY_PARAM_set1_name</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a73c04c27978f12c5271521da01bf8c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set_flags</definition>
        <argsstring>(X509_VERIFY_PARAM *param, unsigned long flags)</argsstring>
        <name>X509_VERIFY_PARAM_set_flags</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a434ce9bf095b6fbb98ddd36d06e41dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_clear_flags</definition>
        <argsstring>(X509_VERIFY_PARAM *param, unsigned long flags)</argsstring>
        <name>X509_VERIFY_PARAM_clear_flags</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a8ec72e517ec16a16c4b8a82a5438dce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_VERIFY_PARAM_get_flags</definition>
        <argsstring>(X509_VERIFY_PARAM *param)</argsstring>
        <name>X509_VERIFY_PARAM_get_flags</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a34abf0fcb9365651f966d5d137415162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set_purpose</definition>
        <argsstring>(X509_VERIFY_PARAM *param, int purpose)</argsstring>
        <name>X509_VERIFY_PARAM_set_purpose</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>purpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a74c1a139169dd29c2b4ac59ca67521d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set_trust</definition>
        <argsstring>(X509_VERIFY_PARAM *param, int trust)</argsstring>
        <name>X509_VERIFY_PARAM_set_trust</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a487be1b6272938c845c8e1df7ead4335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_VERIFY_PARAM_set_depth</definition>
        <argsstring>(X509_VERIFY_PARAM *param, int depth)</argsstring>
        <name>X509_VERIFY_PARAM_set_depth</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1aba2f67c23006855793bed30104426ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_VERIFY_PARAM_set_time</definition>
        <argsstring>(X509_VERIFY_PARAM *param, time_t t)</argsstring>
        <name>X509_VERIFY_PARAM_set_time</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1abc13952d2d1d48fe9a700d56c002486b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_add0_policy</definition>
        <argsstring>(X509_VERIFY_PARAM *param, ASN1_OBJECT *policy)</argsstring>
        <name>X509_VERIFY_PARAM_add0_policy</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae63cbf1a7fa31d9ea3bf19d6c302361b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_set1_policies</definition>
        <argsstring>(X509_VERIFY_PARAM *param, STACK_OF(ASN1_OBJECT) *policies)</argsstring>
        <name>X509_VERIFY_PARAM_set1_policies</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>) *</type>
          <declname>policies</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="527" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a00d24c9085c953715e7ca6bd9604463b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_get_depth</definition>
        <argsstring>(const X509_VERIFY_PARAM *param)</argsstring>
        <name>X509_VERIFY_PARAM_get_depth</name>
        <param>
          <type>const <ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1adda321c96f403d8a81a7182ac90dbb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_VERIFY_PARAM_add0_table</definition>
        <argsstring>(X509_VERIFY_PARAM *param)</argsstring>
        <name>X509_VERIFY_PARAM_add0_table</name>
        <param>
          <type><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1af02d5eb77529f5068821062c7c1509ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref> *</type>
        <definition>const X509_VERIFY_PARAM* X509_VERIFY_PARAM_lookup</definition>
        <argsstring>(const char *name)</argsstring>
        <name>X509_VERIFY_PARAM_lookup</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a92e76cf256c2677335438086067c4098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_VERIFY_PARAM_table_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>X509_VERIFY_PARAM_table_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a2f9ada37b3cd30b2237639cbce438c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_policy_check</definition>
        <argsstring>(X509_POLICY_TREE **ptree, int *pexplicit_policy, STACK_OF(X509) *certs, STACK_OF(ASN1_OBJECT) *policy_oids, unsigned int flags)</argsstring>
        <name>X509_policy_check</name>
        <param>
          <type>X509_POLICY_TREE **</type>
          <declname>ptree</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pexplicit_policy</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>certs</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>) *</type>
          <declname>policy_oids</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a194403b0c132b580ef8bc4400defb3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_policy_tree_free</definition>
        <argsstring>(X509_POLICY_TREE *tree)</argsstring>
        <name>X509_policy_tree_free</name>
        <param>
          <type>X509_POLICY_TREE *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ace5bb0412184a48bcda097c6a7fcd97e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_policy_tree_level_count</definition>
        <argsstring>(const X509_POLICY_TREE *tree)</argsstring>
        <name>X509_policy_tree_level_count</name>
        <param>
          <type>const X509_POLICY_TREE *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a11afeab85b55541e159dfa80d4d6accb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X509_POLICY_LEVEL *</type>
        <definition>X509_POLICY_LEVEL* X509_policy_tree_get0_level</definition>
        <argsstring>(const X509_POLICY_TREE *tree, int i)</argsstring>
        <name>X509_policy_tree_get0_level</name>
        <param>
          <type>const X509_POLICY_TREE *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ae87c19026a6696bb473e51862e457244" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(X509_POLICY_NODE) *X509_policy_tree_get0_policies(const X509_POLICY_TREE *tree)</argsstring>
        <name>STACK_OF</name>
        <param>
          <type>X509_POLICY_NODE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab5267cf148a03ef40a251c0999a1aa59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_policy_level_node_count</definition>
        <argsstring>(X509_POLICY_LEVEL *level)</argsstring>
        <name>X509_policy_level_node_count</name>
        <param>
          <type>X509_POLICY_LEVEL *</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a61dd53ee9b76740a9df4d19ba3866111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X509_POLICY_NODE *</type>
        <definition>X509_POLICY_NODE* X509_policy_level_get0_node</definition>
        <argsstring>(X509_POLICY_LEVEL *level, int i)</argsstring>
        <name>X509_policy_level_get0_node</name>
        <param>
          <type>X509_POLICY_LEVEL *</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a21f0f171f74850560150f9660604e195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>const ASN1_OBJECT* X509_policy_node_get0_policy</definition>
        <argsstring>(const X509_POLICY_NODE *node)</argsstring>
        <name>X509_policy_node_get0_policy</name>
        <param>
          <type>const X509_POLICY_NODE *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1a7a154e5716caaea20e60f9cf71e9e563" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(POLICYQUALINFO) *X509_policy_node_get0_qualifiers(const X509_POLICY_NODE *node)</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_p_o_l_i_c_y_q_u_a_l_i_n_f_o__st" kindref="compound">POLICYQUALINFO</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509__vfy_8h_1ab9b1c57b32a40e48b602f20786b2fbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const X509_POLICY_NODE *</type>
        <definition>const X509_POLICY_NODE* X509_policy_node_get0_parent</definition>
        <argsstring>(const X509_POLICY_NODE *node)</argsstring>
        <name>X509_policy_node_get0_parent</name>
        <param>
          <type>const X509_POLICY_NODE *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509_vfy.h" line="561" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/x509/x509_vfy.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_X509_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>openssl/x509.h<sp/>ends<sp/>up<sp/>#include-ing<sp/>this<sp/>file<sp/>at<sp/>about<sp/>the<sp/>only</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>appropriate<sp/>moment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_X509_VFY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_X509_VFY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/opensslconf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_LHASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/lhash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/symhacks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Outer<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">x509_hash_dir_st</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_dirs;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**dirs;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dirs_type;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_dirs_alloced;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>X509_HASH_DIR_CTX;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structx509__file__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__file__st" kindref="compound">x509_file_st</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_paths;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>paths<sp/>to<sp/>files<sp/>or<sp/>directories<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_alloced;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**paths;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>list<sp/>of<sp/>paths<sp/>or<sp/>directories<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*path_type;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__file__st" kindref="compound">X509_CERT_FILE_CTX</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="101"><highlight class="comment">SSL_CTX<sp/>-&gt;<sp/>X509_STORE<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>X509_LOOKUP</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;X509_LOOKUP_METHOD</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>X509_LOOKUP</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;X509_LOOKUP_METHOD</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="comment">SSL<sp/>-&gt;<sp/>X509_STORE_CTX</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;X509_STORE<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">The<sp/>X509_STORE<sp/>holds<sp/>the<sp/>tables<sp/>etc<sp/>for<sp/>verification<sp/>stuff.</highlight></codeline>
<codeline lineno="111"><highlight class="comment">A<sp/>X509_STORE_CTX<sp/>is<sp/>used<sp/>while<sp/>validating<sp/>a<sp/>single<sp/>certificate.</highlight></codeline>
<codeline lineno="112"><highlight class="comment">The<sp/>X509_STORE<sp/>has<sp/>X509_LOOKUPs<sp/>for<sp/>looking<sp/>up<sp/>certs.</highlight></codeline>
<codeline lineno="113"><highlight class="comment">The<sp/>X509_STORE<sp/>then<sp/>calls<sp/>a<sp/>function<sp/>to<sp/>actually<sp/>verify<sp/>the</highlight></codeline>
<codeline lineno="114"><highlight class="comment">certificate<sp/>chain.</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LU_RETRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LU_FAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LU_X509<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LU_CRL<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LU_PKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structx509__object__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__object__st" kindref="compound">x509_object_st</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>of<sp/>the<sp/>above<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x509;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>data;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__lookup__st" kindref="compound">x509_lookup_st</ref><sp/>X509_LOOKUP;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">DECLARE_STACK_OF(X509_LOOKUP)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>static<sp/>that<sp/>defines<sp/>the<sp/>function<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structx509__lookup__method__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structx509__lookup__method__st" kindref="compound">x509_lookup_method_st</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*new_item)(X509_LOOKUP<sp/>*ctx);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*free)(X509_LOOKUP<sp/>*ctx);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*init)(X509_LOOKUP<sp/>*ctx);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*shutdown)(X509_LOOKUP<sp/>*ctx);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*ctrl)(X509_LOOKUP<sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argc,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ret);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_by_subject)(X509_LOOKUP<sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_by_issuer_serial)(X509_LOOKUP<sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial,<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_by_fingerprint)(X509_LOOKUP<sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_by_alias)(X509_LOOKUP<sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>structure<sp/>hold<sp/>all<sp/>parameters<sp/>associated<sp/>with<sp/>a<sp/>verify<sp/>operation</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>by<sp/>including<sp/>an<sp/>X509_VERIFY_PARAM<sp/>structure<sp/>in<sp/>related<sp/>structures<sp/>the</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>parameters<sp/>used<sp/>can<sp/>be<sp/>customized</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM_st</ref></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>check_time;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>inh_flags;<sp/></highlight><highlight class="comment">/*<sp/>Inheritance<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Various<sp/>verify<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purpose;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>purpose<sp/>to<sp/>check<sp/>untrusted<sp/>certificates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trust<sp/>setting<sp/>to<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)<sp/>*policies;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Permissible<sp/>policies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>used<sp/>to<sp/>hold<sp/>everything.<sp/><sp/>It<sp/>is<sp/>used<sp/>for<sp/>all<sp/>certificate</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>validation.<sp/><sp/>Once<sp/>we<sp/>have<sp/>a<sp/>certificate<sp/>chain,<sp/>the<sp/>&apos;verify&apos;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>function<sp/>is<sp/>then<sp/>called<sp/>to<sp/>actually<sp/>check<sp/>the<sp/>cert<sp/>chain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structx509__store__st" refkind="compound"><highlight class="normal">struct<sp/><ref refid="structx509__store__st" kindref="compound">x509_store_st</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>is<sp/>a<sp/>cache<sp/>of<sp/>trusted<sp/>certs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache;<sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>true,<sp/>stash<sp/>any<sp/>hits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>)<sp/>*objs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cache<sp/>of<sp/>all<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>external<sp/>lookup<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref>)<sp/>*get_cert_methods;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Callbacks<sp/>for<sp/>various<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*verify)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/></highlight><highlight class="comment">/*<sp/>called<sp/>to<sp/>verify<sp/>a<sp/>certificate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*verify_cb)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok,<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_issuer)(<ref refid="structx509__st" kindref="compound">X509</ref><sp/>**issuer,<sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>issuers<sp/>cert<sp/>from<sp/>ctx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_issued)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*issuer);<sp/></highlight><highlight class="comment">/*<sp/>check<sp/>issued<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_revocation)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>revocation<sp/>status<sp/>of<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>**crl,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>retrieve<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>CRL<sp/>validity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*cert_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>certificate<sp/>against<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*<sp/>(*lookup_certs)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)<sp/>*<sp/>(*lookup_crls)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*cleanup)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcrypto__ex__data__st" kindref="compound">CRYPTO_EX_DATA</ref><sp/>ex_data;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_STORE<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set_depth(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*store,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_STORE_set_verify_cb_func(ctx,func)<sp/>((ctx)-&gt;verify_cb=(func))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_STORE_set_verify_func(ctx,func)<sp/><sp/><sp/><sp/>((ctx)-&gt;verify=(func))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>functions<sp/>plus<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>local<sp/>variables.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structx509__lookup__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__lookup__st" kindref="compound">x509_lookup_st</ref></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>we<sp/>been<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>use<sp/>us.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref><sp/>*method;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method_data;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>method<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*store_ctx;<sp/><sp/></highlight><highlight class="comment">/*<sp/>who<sp/>owns<sp/>us<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_LOOKUP<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>used<sp/>when<sp/>verifying<sp/>cert<sp/>chains.<sp/><sp/>Since<sp/>the</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>gathering<sp/>of<sp/>the<sp/>cert<sp/>chain<sp/>can<sp/>take<sp/>some<sp/>time<sp/>(and<sp/>have<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>&apos;retried&apos;,<sp/>this<sp/>needs<sp/>to<sp/>be<sp/>kept<sp/>and<sp/>passed<sp/>around.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="structx509__store__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__store__ctx__st" kindref="compound">x509_store_ctx_st</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X509_STORE_CTX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_method;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>when<sp/>looking<sp/>up<sp/>certs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>are<sp/>set<sp/>by<sp/>the<sp/>caller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*cert;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cert<sp/>to<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*untrusted;<sp/><sp/></highlight><highlight class="comment">/*<sp/>chain<sp/>of<sp/>X509s<sp/>-<sp/>untrusted<sp/>-<sp/>passed<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)<sp/>*crls;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>of<sp/>CRLs<sp/>passed<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*other_ctx;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>info<sp/>for<sp/>use<sp/>with<sp/>get_issuer()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Callbacks<sp/>for<sp/>various<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*verify)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/></highlight><highlight class="comment">/*<sp/>called<sp/>to<sp/>verify<sp/>a<sp/>certificate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*verify_cb)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok,<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_issuer)(<ref refid="structx509__st" kindref="compound">X509</ref><sp/>**issuer,<sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>issuers<sp/>cert<sp/>from<sp/>ctx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_issued)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*issuer);<sp/></highlight><highlight class="comment">/*<sp/>check<sp/>issued<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_revocation)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>revocation<sp/>status<sp/>of<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*get_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>**crl,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>retrieve<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>CRL<sp/>validity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*cert_crl)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>certificate<sp/>against<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_policy)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*<sp/>(*lookup_certs)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)<sp/>*<sp/>(*lookup_crls)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*cleanup)(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>is<sp/>built<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>0,<sp/>rebuild<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_untrusted;<sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>last<sp/>untrusted<sp/>cert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*chain;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>chain<sp/>of<sp/>X509s<sp/>-<sp/>built<sp/>up<sp/>and<sp/>trusted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_POLICY_TREE<sp/>*tree;<sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>policy<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>explicit_policy;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Require<sp/>explicit<sp/>policy<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>something<sp/>goes<sp/>wrong,<sp/>this<sp/>is<sp/>why<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_depth;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*current_cert;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*current_issuer;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cert<sp/>currently<sp/>being<sp/>tested<sp/>as<sp/>valid<sp/>issuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*current_crl;<sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_crl_score;<sp/><sp/></highlight><highlight class="comment">/*<sp/>score<sp/>of<sp/>current<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_reasons;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Reason<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*parent;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>CRL<sp/>path<sp/>validation:<sp/>parent<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcrypto__ex__data__st" kindref="compound">CRYPTO_EX_DATA</ref><sp/>ex_data;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_STORE_CTX<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_depth(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_STORE_CTX_set_app_data(ctx,data)<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X509_STORE_CTX_set_ex_data(ctx,0,data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_STORE_CTX_get_app_data(ctx)<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X509_STORE_CTX_get_ex_data(ctx,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_L_FILE_LOAD<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_L_ADD_DIR<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LOOKUP_load_file(x,name,type)<sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_LOOKUP_ctrl((x),X509_L_FILE_LOAD,(name),(long)(type),NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_LOOKUP_add_dir(x,name,type)<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_LOOKUP_ctrl((x),X509_L_ADD_DIR,(name),(long)(type),NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>illegal<sp/>error<sp/>(for<sp/>uninitialized<sp/>values,<sp/>to<sp/>avoid<sp/>X509_V_OK):<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_GET_CRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY<sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_SIGNATURE_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CRL_SIGNATURE_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_NOT_YET_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_HAS_EXPIRED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CRL_NOT_YET_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CRL_HAS_EXPIRED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD<sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD<sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD<sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD<sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_OUT_OF_MEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT<sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE<sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_CHAIN_TOO_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_REVOKED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_INVALID_CA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_PATH_LENGTH_EXCEEDED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_INVALID_PURPOSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_UNTRUSTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CERT_REJECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>&apos;informational&apos;<sp/>when<sp/>looking<sp/>for<sp/>issuer<sp/>cert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_SUBJECT_ISSUER_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_AKID_SKID_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_KEYUSAGE_NO_CERTSIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER<sp/><sp/><sp/><sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION<sp/><sp/><sp/><sp/><sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_KEYUSAGE_NO_CRL_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION<sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_INVALID_NON_CA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE<sp/><sp/><sp/><sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED<sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_INVALID_EXTENSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>41</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_INVALID_POLICY_EXTENSION<sp/><sp/><sp/><sp/><sp/>42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_NO_EXPLICIT_POLICY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>43</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_DIFFERENT_CRL_SCOPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE<sp/><sp/><sp/><sp/>45</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNNESTED_RESOURCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>46</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_PERMITTED_VIOLATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>47</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_EXCLUDED_VIOLATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_SUBTREE_MINMAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/>51</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX<sp/><sp/><sp/><sp/>52</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_UNSUPPORTED_NAME_SYNTAX<sp/><sp/><sp/><sp/><sp/><sp/>53</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_CRL_PATH_VALIDATION_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>54</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>application<sp/>is<sp/>not<sp/>happy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_V_ERR_APPLICATION_VERIFICATION<sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Certificate<sp/>verify<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Send<sp/>issuer+subject<sp/>checks<sp/>to<sp/>verify_cb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_CB_ISSUER_CHECK<sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>check<sp/>time<sp/>instead<sp/>of<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_USE_CHECK_TIME<sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lookup<sp/>CRLs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_CRL_CHECK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lookup<sp/>CRLs<sp/>for<sp/>whole<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_CRL_CHECK_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ignore<sp/>unhandled<sp/>critical<sp/>extensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_IGNORE_CRITICAL<sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Disable<sp/>workarounds<sp/>for<sp/>broken<sp/>certificates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_X509_STRICT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enable<sp/>proxy<sp/>certificate<sp/>validation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_ALLOW_PROXY_CERTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enable<sp/>policy<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_POLICY_CHECK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Policy<sp/>variable<sp/>require-explicit-policy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_EXPLICIT_POLICY<sp/><sp/><sp/><sp/><sp/>0x100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Policy<sp/>variable<sp/>inhibit-any-policy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_INHIBIT_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Policy<sp/>variable<sp/>inhibit-policy-mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_INHIBIT_MAP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Notify<sp/>callback<sp/>that<sp/>policy<sp/>is<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_NOTIFY_POLICY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Extended<sp/>CRL<sp/>features<sp/>such<sp/>as<sp/>indirect<sp/>CRLs,<sp/>alternate<sp/>CRL<sp/>signing<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_EXTENDED_CRL_SUPPORT<sp/><sp/><sp/><sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Delta<sp/>CRL<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_USE_DELTAS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>selfsigned<sp/>CA<sp/>signature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_CHECK_SS_SIGNATURE<sp/><sp/><sp/><sp/><sp/><sp/>0x4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_VP_FLAG_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_VP_FLAG_OVERWRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_VP_FLAG_RESET_FLAGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_VP_FLAG_LOCKED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_VP_FLAG_ONCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>use:<sp/>mask<sp/>of<sp/>policy<sp/>related<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_V_FLAG_POLICY_MASK<sp/>(X509_V_FLAG_POLICY_CHECK<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>X509_V_FLAG_EXPLICIT_POLICY<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>X509_V_FLAG_INHIBIT_ANY<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>X509_V_FLAG_INHIBIT_MAP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_OBJECT_idx_by_subject(STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>)<sp/>*h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*X509_OBJECT_retrieve_by_subject(STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>)<sp/>*h,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*X509_OBJECT_retrieve_match(STACK_OF(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref>)<sp/>*h,<sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*x);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_OBJECT_up_ref_count(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*a);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_OBJECT_free_contents(<ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*a);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*X509_STORE_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_free(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*v);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)*<sp/>X509_STORE_get1_certs(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*st,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)*<sp/>X509_STORE_get1_crls(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*st,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set_flags(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set_purpose(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purpose);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set_trust(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set1_param(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*pm);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_set_verify_cb(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*verify_cb)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*X509_STORE_CTX_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_get1_issuer(<ref refid="structx509__st" kindref="compound">X509</ref><sp/>**issuer,<sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_free(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_init(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*store,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x509,<sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*chain);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_trusted_stack(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*sk);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_cleanup(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*X509_STORE_add_lookup(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*v,<sp/><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref><sp/>*m);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref><sp/>*X509_LOOKUP_hash_dir(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref><sp/>*X509_LOOKUP_file(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_add_cert(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_add_crl(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,<sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_get_by_subject(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*vs,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_ctrl(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argc,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ret);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_load_cert_file(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_load_crl_file(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_load_cert_crl_file(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*X509_LOOKUP_new(<ref refid="structx509__lookup__method__st" kindref="compound">X509_LOOKUP_METHOD</ref><sp/>*method);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_LOOKUP_free(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_init(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_by_subject(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_by_issuer_serial(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial,<sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_by_fingerprint(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_by_alias(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="structx509__object__st" kindref="compound">X509_OBJECT</ref><sp/>*ret);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_LOOKUP_shutdown(<ref refid="structx509__lookup__st" kindref="compound">X509_LOOKUP</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_load_locations<sp/>(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_set_default_paths(<ref refid="structx509__store__st" kindref="compound">X509_STORE</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_get_ex_new_index(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp,<sp/>CRYPTO_EX_new<sp/>*new_func,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_EX_dup<sp/>*dup_func,<sp/>CRYPTO_EX_free<sp/>*free_func);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_ex_data(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/>X509_STORE_CTX_get_ex_data(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_get_error(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_CTX_set_error(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_get_error_depth(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*<sp/><sp/>X509_STORE_CTX_get_current_cert(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*X509_STORE_CTX_get0_current_issuer(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*X509_STORE_CTX_get0_current_crl(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*X509_STORE_CTX_get0_parent_ctx(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*X509_STORE_CTX_get_chain(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*X509_STORE_CTX_get1_chain(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_CTX_set_cert(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*c,<ref refid="structx509__st" kindref="compound">X509</ref><sp/>*x);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_CTX_set_chain(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*c,STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*sk);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>X509_STORE_CTX_set0_crls(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*c,STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)<sp/>*sk);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_purpose(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purpose);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_trust(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_purpose_inherit(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>def_purpose,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purpose,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_flags(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_time(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>t);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_verify_cb(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*verify_cb)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal">X509_POLICY_TREE<sp/>*X509_STORE_CTX_get0_policy_tree(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_get_explicit_policy(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*X509_STORE_CTX_get0_param(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set0_param(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_STORE_CTX_set_default(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>X509_VERIFY_PARAM<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*X509_VERIFY_PARAM_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_free(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_inherit(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*to,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*from);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set1(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*to,<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*from);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set1_name(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set_flags(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_clear_flags(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_get_flags(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set_purpose(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purpose);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set_trust(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set_depth(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set_time(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/>time_t<sp/>t);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_add0_policy(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*policy);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_set1_policies(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param,<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)<sp/>*policies);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_get_depth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_add0_table(<ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*param);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st" kindref="compound">X509_VERIFY_PARAM</ref><sp/>*X509_VERIFY_PARAM_lookup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_VERIFY_PARAM_table_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_policy_check(X509_POLICY_TREE<sp/>**ptree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pexplicit_policy,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>*certs,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)<sp/>*policy_oids,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_policy_tree_free(X509_POLICY_TREE<sp/>*tree);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_policy_tree_level_count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_TREE<sp/>*tree);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">X509_POLICY_LEVEL<sp/>*</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_policy_tree_get0_level(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_TREE<sp/>*tree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">STACK_OF(X509_POLICY_NODE)<sp/>*</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_policy_tree_get0_policies(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_TREE<sp/>*tree);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">STACK_OF(X509_POLICY_NODE)<sp/>*</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_policy_tree_get0_user_policies(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_TREE<sp/>*tree);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_policy_level_node_count(X509_POLICY_LEVEL<sp/>*level);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">X509_POLICY_NODE<sp/>*X509_policy_level_get0_node(X509_POLICY_LEVEL<sp/>*level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*X509_policy_node_get0_policy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_NODE<sp/>*node);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">STACK_OF(<ref refid="struct_p_o_l_i_c_y_q_u_a_l_i_n_f_o__st" kindref="compound">POLICYQUALINFO</ref>)<sp/>*</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_policy_node_get0_qualifiers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_NODE<sp/>*node);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_NODE<sp/>*</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_policy_node_get0_parent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_POLICY_NODE<sp/>*node);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/x509_vfy.h"/>
  </compounddef>
</doxygen>
