<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="importmidi__chord_8h" kind="file" language="C++">
    <compoundname>importmidi_chord.h</compoundname>
    <includes refid="importmidi__fraction_8h" local="yes">importmidi_fraction.h</includes>
    <includes refid="importmidi__tuplet_8h" local="yes">importmidi_tuplet.h</includes>
    <includes local="no">map</includes>
    <includedby refid="importmidi_8cpp" local="yes">mscore/importmidi/importmidi.cpp</includedby>
    <includedby refid="importmidi__beat_8cpp" local="yes">mscore/importmidi/importmidi_beat.cpp</includedby>
    <includedby refid="importmidi__chord_8cpp" local="yes">mscore/importmidi/importmidi_chord.cpp</includedby>
    <includedby refid="importmidi__chordname_8cpp" local="yes">mscore/importmidi/importmidi_chordname.cpp</includedby>
    <includedby refid="importmidi__drum_8cpp" local="yes">mscore/importmidi/importmidi_drum.cpp</includedby>
    <includedby refid="importmidi__inner_8cpp" local="yes">mscore/importmidi/importmidi_inner.cpp</includedby>
    <includedby refid="importmidi__instrument_8cpp" local="yes">mscore/importmidi/importmidi_instrument.cpp</includedby>
    <includedby refid="importmidi__key_8cpp" local="yes">mscore/importmidi/importmidi_key.cpp</includedby>
    <includedby refid="importmidi__lrhand_8cpp" local="yes">mscore/importmidi/importmidi_lrhand.cpp</includedby>
    <includedby refid="importmidi__lyrics_8cpp" local="yes">mscore/importmidi/importmidi_lyrics.cpp</includedby>
    <includedby refid="importmidi__meter_8cpp" local="yes">mscore/importmidi/importmidi_meter.cpp</includedby>
    <includedby refid="importmidi__quant_8cpp" local="yes">mscore/importmidi/importmidi_quant.cpp</includedby>
    <includedby refid="importmidi__simplify_8cpp" local="yes">mscore/importmidi/importmidi_simplify.cpp</includedby>
    <includedby refid="importmidi__tuplet_8cpp" local="yes">mscore/importmidi/importmidi_tuplet.cpp</includedby>
    <includedby refid="importmidi__tuplet__detect_8cpp" local="yes">mscore/importmidi/importmidi_tuplet_detect.cpp</includedby>
    <includedby refid="importmidi__tuplet__filter_8cpp" local="yes">mscore/importmidi/importmidi_tuplet_filter.cpp</includedby>
    <includedby refid="importmidi__tuplet__voice_8cpp" local="yes">mscore/importmidi/importmidi_tuplet_voice.cpp</includedby>
    <includedby refid="importmidi__voice_8cpp" local="yes">mscore/importmidi/importmidi_voice.cpp</includedby>
    <includedby refid="tst__importmidi_8cpp" local="yes">mtest/importmidi/tst_importmidi.cpp</includedby>
    <incdepgraph>
      <node id="52689">
        <label>map</label>
      </node>
      <node id="52688">
        <label>importmidi_tuplet.h</label>
        <link refid="importmidi__tuplet_8h_source"/>
        <childnode refid="52685" relation="include">
        </childnode>
      </node>
      <node id="52685">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="52686" relation="include">
        </childnode>
      </node>
      <node id="52684">
        <label>mscore/importmidi/importmidi_chord.h</label>
        <link refid="importmidi__chord_8h"/>
        <childnode refid="52685" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52689" relation="include">
        </childnode>
      </node>
      <node id="52686">
        <label>libmscore/fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="52687" relation="include">
        </childnode>
      </node>
      <node id="52687">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52700">
        <label>mscore/importmidi/importmidi_lyrics.cpp</label>
        <link refid="importmidi__lyrics_8cpp_source"/>
      </node>
      <node id="52698">
        <label>mscore/importmidi/importmidi_key.cpp</label>
        <link refid="importmidi__key_8cpp_source"/>
      </node>
      <node id="52702">
        <label>mscore/importmidi/importmidi_quant.cpp</label>
        <link refid="importmidi__quant_8cpp_source"/>
      </node>
      <node id="52691">
        <label>mscore/importmidi/importmidi.cpp</label>
        <link refid="importmidi_8cpp_source"/>
      </node>
      <node id="52695">
        <label>mscore/importmidi/importmidi_drum.cpp</label>
        <link refid="importmidi__drum_8cpp_source"/>
      </node>
      <node id="52696">
        <label>mscore/importmidi/importmidi_inner.cpp</label>
        <link refid="importmidi__inner_8cpp_source"/>
      </node>
      <node id="52692">
        <label>mscore/importmidi/importmidi_beat.cpp</label>
        <link refid="importmidi__beat_8cpp_source"/>
      </node>
      <node id="52701">
        <label>mscore/importmidi/importmidi_meter.cpp</label>
        <link refid="importmidi__meter_8cpp_source"/>
      </node>
      <node id="52708">
        <label>mscore/importmidi/importmidi_voice.cpp</label>
        <link refid="importmidi__voice_8cpp_source"/>
      </node>
      <node id="52693">
        <label>mscore/importmidi/importmidi_chord.cpp</label>
        <link refid="importmidi__chord_8cpp_source"/>
      </node>
      <node id="52690">
        <label>mscore/importmidi/importmidi_chord.h</label>
        <link refid="importmidi__chord_8h"/>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52692" relation="include">
        </childnode>
        <childnode refid="52693" relation="include">
        </childnode>
        <childnode refid="52694" relation="include">
        </childnode>
        <childnode refid="52695" relation="include">
        </childnode>
        <childnode refid="52696" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52698" relation="include">
        </childnode>
        <childnode refid="52699" relation="include">
        </childnode>
        <childnode refid="52700" relation="include">
        </childnode>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52702" relation="include">
        </childnode>
        <childnode refid="52703" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52705" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52707" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52709" relation="include">
        </childnode>
      </node>
      <node id="52699">
        <label>mscore/importmidi/importmidi_lrhand.cpp</label>
        <link refid="importmidi__lrhand_8cpp_source"/>
      </node>
      <node id="52703">
        <label>mscore/importmidi/importmidi_simplify.cpp</label>
        <link refid="importmidi__simplify_8cpp_source"/>
      </node>
      <node id="52694">
        <label>mscore/importmidi/importmidi_chordname.cpp</label>
        <link refid="importmidi__chordname_8cpp_source"/>
      </node>
      <node id="52707">
        <label>mscore/importmidi/importmidi_tuplet_voice.cpp</label>
        <link refid="importmidi__tuplet__voice_8cpp_source"/>
      </node>
      <node id="52705">
        <label>mscore/importmidi/importmidi_tuplet_detect.cpp</label>
        <link refid="importmidi__tuplet__detect_8cpp_source"/>
      </node>
      <node id="52704">
        <label>mscore/importmidi/importmidi_tuplet.cpp</label>
        <link refid="importmidi__tuplet_8cpp_source"/>
      </node>
      <node id="52709">
        <label>mtest/importmidi/tst_importmidi.cpp</label>
        <link refid="tst__importmidi_8cpp_source"/>
      </node>
      <node id="52706">
        <label>mscore/importmidi/importmidi_tuplet_filter.cpp</label>
        <link refid="importmidi__tuplet__filter_8cpp_source"/>
      </node>
      <node id="52697">
        <label>mscore/importmidi/importmidi_instrument.cpp</label>
        <link refid="importmidi__instrument_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ms_1_1_midi_note" prot="public">Ms::MidiNote</innerclass>
    <innerclass refid="class_ms_1_1_midi_chord" prot="public">Ms::MidiChord</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
    <innernamespace refid="namespace_ms_1_1_m_chord">Ms::MChord</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>IMPORTMIDI_CHORD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPORTMIDI_CHORD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_fraction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_tuplet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tie;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TimeSigMap;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_ms_1_1_midi_note" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pitch;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>velo;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>offTime;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_tie" kindref="compound">Tie</ref>*<sp/>tie<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>staccato<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInTuplet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>offTime<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiTuplet::TupletData&gt;::iterator<sp/>tuplet;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>notation<sp/>simplification<sp/>-<sp/>final<sp/>quant<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>offTimeQuant<sp/>=<sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>(-1,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>assign<sp/>lyrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>origOnTime;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_ms_1_1_midi_chord" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;MidiNote&gt;<sp/>notes;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInTuplet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>onTime<sp/>quantization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiTuplet::TupletData&gt;::iterator<sp/>tuplet;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStaccato()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;note:<sp/>notes)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(note.staccato)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">MChord<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGrandStaffProgram(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>program);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;::iterator</highlight></codeline>
<codeline lineno="56"><highlight class="normal">findFirstChordInRange(std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;startRangeTick,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;endRangeTick);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;::const_iterator</highlight></codeline>
<codeline lineno="61"><highlight class="normal">findFirstChordInRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;startRangeTick,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;endRangeTick);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iter&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">Iter<sp/>findFirstChordInRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;startRangeTick,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;endRangeTick,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iter<sp/>&amp;startChordIt,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iter<sp/>&amp;endChordIt)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>startChordIt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>endChordIt;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first<sp/>&gt;=<sp/>startRangeTick)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first<sp/>&gt;=<sp/>endRangeTick)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>endChordIt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iter&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">Iter<sp/>findEndChordInRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;endRangeTick,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iter<sp/>&amp;startChordIt,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iter<sp/>&amp;endChordIt)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>startChordIt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>endChordIt;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first<sp/>&gt;=<sp/>endRangeTick)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>minNoteOffTime(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MidiNote&gt;<sp/>&amp;notes);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>maxNoteOffTime(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MidiNote&gt;<sp/>&amp;notes);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>minNoteLen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;const<sp/>ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chord);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>maxNoteLen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;const<sp/>ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chord);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>&amp;<sp/>minAllowedDuration();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>findMinDuration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;onTime,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MidiChord&gt;<sp/>&amp;midiChords,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;length);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sortNotesByPitch(std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sortNotesByLength(std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collectChords(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;humanTolCoeff,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;nonHumanTolCoeff);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collectChords(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref><sp/>&amp;track,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;humanTolCoeff,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;nonHumanTolCoeff);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeOverlappingNotes(std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mergeChordsWithEqualOnTimeAndVoice(std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>splitUnequalChords(std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chordAveragePitch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MidiNote&gt;<sp/>&amp;notes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chordAveragePitch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;MidiNote&gt;<sp/>&amp;notes);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>findMaxChordLength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">std::vector&lt;std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;::const_iterator&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">findChordsForTimeRange(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voice,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;onTime,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;offTime,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;maxChordLength);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBarIndexes(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;basicQuant,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;lastTick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_time_sig_map" kindref="compound">TimeSigMap</ref><sp/>*sigmap);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areOnTimeValuesDifferent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areBarIndexesSuccessive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areNotesLongEnough(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLastTickValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;lastTick,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLastTickValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref><sp/>&amp;lastTick,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areBarIndexesSet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;ReducedFraction,<sp/>MidiChord&gt;<sp/>&amp;chords);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>MChord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>IMPORTMIDI_CHORD_H</highlight></codeline>
    </programlisting>
    <location file="mscore/importmidi/importmidi_chord.h"/>
  </compounddef>
</doxygen>
