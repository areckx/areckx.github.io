<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_gfx_state_8h" kind="file" language="C++">
    <compoundname>GfxState.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_function_8h" local="yes">Function.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">map</includes>
    <includedby refid="_gfx_8h" local="yes">thirdparty/poppler/poppler/Gfx.h</includedby>
    <includedby refid="_text_output_dev_8h" local="yes">thirdparty/poppler/poppler/TextOutputDev.h</includedby>
    <includedby refid="_cairo_output_dev_8h" local="yes">thirdparty/poppler/poppler/CairoOutputDev.h</includedby>
    <includedby refid="_cairo_output_dev_8cc" local="yes">thirdparty/poppler/poppler/CairoOutputDev.cc</includedby>
    <includedby refid="_marked_content_output_dev_8h" local="yes">thirdparty/poppler/poppler/MarkedContentOutputDev.h</includedby>
    <includedby refid="_gfx_8cc" local="yes">thirdparty/poppler/poppler/Gfx.cc</includedby>
    <includedby refid="_p_s_output_dev_8h" local="yes">thirdparty/poppler/poppler/PSOutputDev.h</includedby>
    <includedby refid="_gfx_state_8cc" local="yes">thirdparty/poppler/poppler/GfxState.cc</includedby>
    <includedby refid="_gfx_state__helpers_8h" local="yes">thirdparty/poppler/poppler/GfxState_helpers.h</includedby>
    <includedby refid="_marked_content_output_dev_8cc" local="yes">thirdparty/poppler/poppler/MarkedContentOutputDev.cc</includedby>
    <includedby refid="_output_dev_8cc" local="yes">thirdparty/poppler/poppler/OutputDev.cc</includedby>
    <includedby refid="_page_8cc" local="yes">thirdparty/poppler/poppler/Page.cc</includedby>
    <includedby refid="_pre_scan_output_dev_8h" local="yes">thirdparty/poppler/poppler/PreScanOutputDev.h</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <includedby refid="_splash_output_dev_8h" local="yes">thirdparty/poppler/poppler/SplashOutputDev.h</includedby>
    <includedby refid="_stream_8cc" local="yes">thirdparty/poppler/poppler/Stream.cc</includedby>
    <includedby refid="_arthur_output_dev_8cc" local="yes">thirdparty/poppler/qt5/ArthurOutputDev.cc</includedby>
    <includedby refid="_arthur_output_dev_8h" local="yes">thirdparty/poppler/qt5/ArthurOutputDev.h</includedby>
    <includedby refid="poppler-private_8h" local="no">thirdparty/poppler/qt5/poppler-private.h</includedby>
    <includedby refid="poppler-document_8cc" local="no">thirdparty/poppler/qt5/poppler-document.cc</includedby>
    <includedby refid="poppler-link-extractor_8cc" local="no">thirdparty/poppler/qt5/poppler-link-extractor.cc</includedby>
    <includedby refid="_splash_bitmap_8h" local="yes">thirdparty/poppler/splash/SplashBitmap.h</includedby>
    <incdepgraph>
      <node id="87401">
        <label>stdarg.h</label>
      </node>
      <node id="87410">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="87394" relation="include">
        </childnode>
        <childnode refid="87395" relation="include">
        </childnode>
        <childnode refid="87396" relation="include">
        </childnode>
      </node>
      <node id="87411">
        <label>assert.h</label>
      </node>
      <node id="87391">
        <label>thirdparty/poppler/poppler/GfxState.h</label>
        <link refid="_gfx_state_8h"/>
        <childnode refid="87392" relation="include">
        </childnode>
        <childnode refid="87394" relation="include">
        </childnode>
        <childnode refid="87395" relation="include">
        </childnode>
        <childnode refid="87410" relation="include">
        </childnode>
        <childnode refid="87411" relation="include">
        </childnode>
        <childnode refid="87412" relation="include">
        </childnode>
      </node>
      <node id="87402">
        <label>stdlib.h</label>
      </node>
      <node id="87398">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87393" relation="include">
        </childnode>
        <childnode refid="87392" relation="include">
        </childnode>
      </node>
      <node id="87405">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87392" relation="include">
        </childnode>
        <childnode refid="87395" relation="include">
        </childnode>
        <childnode refid="87406" relation="include">
        </childnode>
      </node>
      <node id="87412">
        <label>map</label>
      </node>
      <node id="87404">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87401" relation="include">
        </childnode>
        <childnode refid="87392" relation="include">
        </childnode>
        <childnode refid="87394" relation="include">
        </childnode>
        <childnode refid="87399" relation="include">
        </childnode>
      </node>
      <node id="87408">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87392" relation="include">
        </childnode>
        <childnode refid="87395" relation="include">
        </childnode>
        <childnode refid="87406" relation="include">
        </childnode>
      </node>
      <node id="87400">
        <label>limits.h</label>
      </node>
      <node id="87392">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87393" relation="include">
        </childnode>
      </node>
      <node id="87403">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87409">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87392" relation="include">
        </childnode>
        <childnode refid="87393" relation="include">
        </childnode>
        <childnode refid="87394" relation="include">
        </childnode>
        <childnode refid="87395" relation="include">
        </childnode>
        <childnode refid="87406" relation="include">
        </childnode>
      </node>
      <node id="87407">
        <label>pthread.h</label>
      </node>
      <node id="87397">
        <label>string.h</label>
      </node>
      <node id="87399">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87400" relation="include">
        </childnode>
        <childnode refid="87401" relation="include">
        </childnode>
        <childnode refid="87402" relation="include">
        </childnode>
        <childnode refid="87394" relation="include">
        </childnode>
      </node>
      <node id="87395">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87396" relation="include">
        </childnode>
        <childnode refid="87393" relation="include">
        </childnode>
        <childnode refid="87397" relation="include">
        </childnode>
        <childnode refid="87394" relation="include">
        </childnode>
        <childnode refid="87398" relation="include">
        </childnode>
        <childnode refid="87399" relation="include">
        </childnode>
        <childnode refid="87403" relation="include">
        </childnode>
        <childnode refid="87404" relation="include">
        </childnode>
        <childnode refid="87405" relation="include">
        </childnode>
        <childnode refid="87408" relation="include">
        </childnode>
        <childnode refid="87409" relation="include">
        </childnode>
      </node>
      <node id="87406">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87407" relation="include">
        </childnode>
      </node>
      <node id="87394">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87392" relation="include">
        </childnode>
      </node>
      <node id="87396">
        <label>set</label>
      </node>
      <node id="87393">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="87426">
        <label>thirdparty/poppler/poppler/TextOutputDev.h</label>
        <link refid="_text_output_dev_8h_source"/>
        <childnode refid="87427" relation="include">
        </childnode>
        <childnode refid="87421" relation="include">
        </childnode>
        <childnode refid="87428" relation="include">
        </childnode>
        <childnode refid="87429" relation="include">
        </childnode>
      </node>
      <node id="87438">
        <label>thirdparty/poppler/poppler/GfxFont.cc</label>
        <link refid="_gfx_font_8cc_source"/>
      </node>
      <node id="87416">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="87428">
        <label>thirdparty/poppler/poppler/TextOutputDev.cc</label>
        <link refid="_text_output_dev_8cc_source"/>
      </node>
      <node id="87440">
        <label>thirdparty/poppler/poppler/GfxState_helpers.h</label>
        <link refid="_gfx_state__helpers_8h_source"/>
        <childnode refid="87420" relation="include">
        </childnode>
        <childnode refid="87441" relation="include">
        </childnode>
      </node>
      <node id="87425">
        <label>thirdparty/poppler/qt5/poppler-annotation.cc</label>
        <link refid="poppler-annotation_8cc_source"/>
      </node>
      <node id="87413">
        <label>thirdparty/poppler/poppler/GfxState.h</label>
        <link refid="_gfx_state_8h"/>
        <childnode refid="87414" relation="include">
        </childnode>
        <childnode refid="87426" relation="include">
        </childnode>
        <childnode refid="87427" relation="include">
        </childnode>
        <childnode refid="87417" relation="include">
        </childnode>
        <childnode refid="87430" relation="include">
        </childnode>
        <childnode refid="87419" relation="include">
        </childnode>
        <childnode refid="87437" relation="include">
        </childnode>
        <childnode refid="87420" relation="include">
        </childnode>
        <childnode refid="87440" relation="include">
        </childnode>
        <childnode refid="87436" relation="include">
        </childnode>
        <childnode refid="87442" relation="include">
        </childnode>
        <childnode refid="87421" relation="include">
        </childnode>
        <childnode refid="87443" relation="include">
        </childnode>
        <childnode refid="87423" relation="include">
        </childnode>
        <childnode refid="87444" relation="include">
        </childnode>
        <childnode refid="87445" relation="include">
        </childnode>
        <childnode refid="87446" relation="include">
        </childnode>
        <childnode refid="87447" relation="include">
        </childnode>
        <childnode refid="87448" relation="include">
        </childnode>
        <childnode refid="87449" relation="include">
        </childnode>
        <childnode refid="87459" relation="include">
        </childnode>
        <childnode refid="87460" relation="include">
        </childnode>
      </node>
      <node id="87449">
        <label>thirdparty/poppler/qt5/poppler-document.cc</label>
        <link refid="poppler-document_8cc_source"/>
      </node>
      <node id="87455">
        <label>thirdparty/poppler/qt5/poppler-optcontent.cc</label>
        <link refid="poppler-optcontent_8cc_source"/>
      </node>
      <node id="87454">
        <label>thirdparty/poppler/qt5/poppler-media.cc</label>
        <link refid="poppler-media_8cc_source"/>
      </node>
      <node id="87448">
        <label>thirdparty/poppler/qt5/poppler-private.h</label>
        <link refid="poppler-private_8h_source"/>
        <childnode refid="87425" relation="include">
        </childnode>
        <childnode refid="87449" relation="include">
        </childnode>
        <childnode refid="87450" relation="include">
        </childnode>
        <childnode refid="87451" relation="include">
        </childnode>
        <childnode refid="87452" relation="include">
        </childnode>
        <childnode refid="87453" relation="include">
        </childnode>
        <childnode refid="87454" relation="include">
        </childnode>
        <childnode refid="87455" relation="include">
        </childnode>
        <childnode refid="87429" relation="include">
        </childnode>
        <childnode refid="87456" relation="include">
        </childnode>
        <childnode refid="87457" relation="include">
        </childnode>
        <childnode refid="87439" relation="include">
        </childnode>
        <childnode refid="87458" relation="include">
        </childnode>
      </node>
      <node id="87431">
        <label>thirdparty/poppler/poppler/StructElement.h</label>
        <link refid="_struct_element_8h_source"/>
        <childnode refid="87432" relation="include">
        </childnode>
        <childnode refid="87434" relation="include">
        </childnode>
        <childnode refid="87435" relation="include">
        </childnode>
      </node>
      <node id="87429">
        <label>thirdparty/poppler/qt5/poppler-page.cc</label>
        <link refid="poppler-page_8cc_source"/>
      </node>
      <node id="87430">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.h</label>
        <link refid="_marked_content_output_dev_8h_source"/>
        <childnode refid="87431" relation="include">
        </childnode>
        <childnode refid="87436" relation="include">
        </childnode>
      </node>
      <node id="87439">
        <label>thirdparty/poppler/qt5/poppler-ps-converter.cc</label>
        <link refid="poppler-ps-converter_8cc_source"/>
      </node>
      <node id="87422">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.cc</label>
        <link refid="_pre_scan_output_dev_8cc_source"/>
      </node>
      <node id="87456">
        <label>thirdparty/poppler/qt5/poppler-pdf-converter.cc</label>
        <link refid="poppler-pdf-converter_8cc_source"/>
      </node>
      <node id="87459">
        <label>thirdparty/poppler/qt5/poppler-link-extractor.cc</label>
        <link refid="poppler-link-extractor_8cc_source"/>
      </node>
      <node id="87434">
        <label>thirdparty/poppler/poppler/StructElement.cc</label>
        <link refid="_struct_element_8cc_source"/>
      </node>
      <node id="87453">
        <label>thirdparty/poppler/qt5/poppler-link.cc</label>
        <link refid="poppler-link_8cc_source"/>
      </node>
      <node id="87414">
        <label>thirdparty/poppler/poppler/Gfx.h</label>
        <link refid="_gfx_8h_source"/>
        <childnode refid="87415" relation="include">
        </childnode>
        <childnode refid="87416" relation="include">
        </childnode>
        <childnode refid="87417" relation="include">
        </childnode>
        <childnode refid="87418" relation="include">
        </childnode>
        <childnode refid="87419" relation="include">
        </childnode>
        <childnode refid="87420" relation="include">
        </childnode>
        <childnode refid="87421" relation="include">
        </childnode>
        <childnode refid="87422" relation="include">
        </childnode>
        <childnode refid="87423" relation="include">
        </childnode>
        <childnode refid="87424" relation="include">
        </childnode>
        <childnode refid="87425" relation="include">
        </childnode>
      </node>
      <node id="87461">
        <label>thirdparty/poppler/splash/Splash.cc</label>
        <link refid="_splash_8cc_source"/>
      </node>
      <node id="87457">
        <label>thirdparty/poppler/qt5/poppler-private.cc</label>
        <link refid="poppler-private_8cc_source"/>
      </node>
      <node id="87451">
        <label>thirdparty/poppler/qt5/poppler-fontinfo.cc</label>
        <link refid="poppler-fontinfo_8cc_source"/>
      </node>
      <node id="87417">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="87462">
        <label>thirdparty/poppler/splash/SplashClip.cc</label>
        <link refid="_splash_clip_8cc_source"/>
      </node>
      <node id="87447">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.h</label>
        <link refid="_arthur_output_dev_8h_source"/>
        <childnode refid="87446" relation="include">
        </childnode>
        <childnode refid="87429" relation="include">
        </childnode>
      </node>
      <node id="87441">
        <label>thirdparty/poppler/splash/SplashBitmap.cc</label>
        <link refid="_splash_bitmap_8cc_source"/>
      </node>
      <node id="87444">
        <label>thirdparty/poppler/poppler/SplashOutputDev.h</label>
        <link refid="_splash_output_dev_8h_source"/>
        <childnode refid="87424" relation="include">
        </childnode>
      </node>
      <node id="87445">
        <label>thirdparty/poppler/poppler/Stream.cc</label>
        <link refid="_stream_8cc_source"/>
      </node>
      <node id="87433">
        <label>thirdparty/poppler/poppler/Catalog.cc</label>
        <link refid="_catalog_8cc_source"/>
      </node>
      <node id="87424">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="87427">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h_source"/>
        <childnode refid="87416" relation="include">
        </childnode>
        <childnode refid="87417" relation="include">
        </childnode>
      </node>
      <node id="87460">
        <label>thirdparty/poppler/splash/SplashBitmap.h</label>
        <link refid="_splash_bitmap_8h_source"/>
        <childnode refid="87417" relation="include">
        </childnode>
        <childnode refid="87424" relation="include">
        </childnode>
        <childnode refid="87461" relation="include">
        </childnode>
        <childnode refid="87441" relation="include">
        </childnode>
        <childnode refid="87462" relation="include">
        </childnode>
        <childnode refid="87463" relation="include">
        </childnode>
        <childnode refid="87464" relation="include">
        </childnode>
      </node>
      <node id="87458">
        <label>thirdparty/poppler/qt5/poppler-textbox.cc</label>
        <link refid="poppler-textbox_8cc_source"/>
      </node>
      <node id="87452">
        <label>thirdparty/poppler/qt5/poppler-form.cc</label>
        <link refid="poppler-form_8cc_source"/>
      </node>
      <node id="87437">
        <label>thirdparty/poppler/poppler/PSOutputDev.h</label>
        <link refid="_p_s_output_dev_8h_source"/>
        <childnode refid="87438" relation="include">
        </childnode>
        <childnode refid="87423" relation="include">
        </childnode>
        <childnode refid="87439" relation="include">
        </childnode>
      </node>
      <node id="87423">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="87421">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
      <node id="87436">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.cc</label>
        <link refid="_marked_content_output_dev_8cc_source"/>
      </node>
      <node id="87442">
        <label>thirdparty/poppler/poppler/OutputDev.cc</label>
        <link refid="_output_dev_8cc_source"/>
      </node>
      <node id="87415">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="87443">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.h</label>
        <link refid="_pre_scan_output_dev_8h_source"/>
        <childnode refid="87422" relation="include">
        </childnode>
        <childnode refid="87423" relation="include">
        </childnode>
      </node>
      <node id="87435">
        <label>thirdparty/poppler/poppler/StructTreeRoot.cc</label>
        <link refid="_struct_tree_root_8cc_source"/>
      </node>
      <node id="87464">
        <label>thirdparty/poppler/splash/SplashXPathScanner.cc</label>
        <link refid="_splash_x_path_scanner_8cc_source"/>
      </node>
      <node id="87420">
        <label>thirdparty/poppler/poppler/GfxState.cc</label>
        <link refid="_gfx_state_8cc_source"/>
      </node>
      <node id="87419">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
      <node id="87450">
        <label>thirdparty/poppler/qt5/poppler-embeddedfile.cc</label>
        <link refid="poppler-embeddedfile_8cc_source"/>
      </node>
      <node id="87432">
        <label>thirdparty/poppler/poppler/StructTreeRoot.h</label>
        <link refid="_struct_tree_root_8h_source"/>
        <childnode refid="87433" relation="include">
        </childnode>
        <childnode refid="87434" relation="include">
        </childnode>
        <childnode refid="87435" relation="include">
        </childnode>
      </node>
      <node id="87463">
        <label>thirdparty/poppler/splash/SplashState.cc</label>
        <link refid="_splash_state_8cc_source"/>
      </node>
      <node id="87418">
        <label>thirdparty/poppler/poppler/Form.cc</label>
        <link refid="_form_8cc_source"/>
      </node>
      <node id="87446">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.cc</label>
        <link refid="_arthur_output_dev_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_matrix" prot="public">Matrix</innerclass>
    <innerclass refid="struct_gfx_color" prot="public">GfxColor</innerclass>
    <innerclass refid="struct_gfx_r_g_b" prot="public">GfxRGB</innerclass>
    <innerclass refid="struct_gfx_c_m_y_k" prot="public">GfxCMYK</innerclass>
    <innerclass refid="class_gfx_color_transform" prot="public">GfxColorTransform</innerclass>
    <innerclass refid="class_gfx_color_space" prot="public">GfxColorSpace</innerclass>
    <innerclass refid="class_gfx_device_gray_color_space" prot="public">GfxDeviceGrayColorSpace</innerclass>
    <innerclass refid="class_gfx_cal_gray_color_space" prot="public">GfxCalGrayColorSpace</innerclass>
    <innerclass refid="class_gfx_device_r_g_b_color_space" prot="public">GfxDeviceRGBColorSpace</innerclass>
    <innerclass refid="class_gfx_cal_r_g_b_color_space" prot="public">GfxCalRGBColorSpace</innerclass>
    <innerclass refid="class_gfx_device_c_m_y_k_color_space" prot="public">GfxDeviceCMYKColorSpace</innerclass>
    <innerclass refid="class_gfx_lab_color_space" prot="public">GfxLabColorSpace</innerclass>
    <innerclass refid="class_gfx_i_c_c_based_color_space" prot="public">GfxICCBasedColorSpace</innerclass>
    <innerclass refid="class_gfx_indexed_color_space" prot="public">GfxIndexedColorSpace</innerclass>
    <innerclass refid="class_gfx_separation_color_space" prot="public">GfxSeparationColorSpace</innerclass>
    <innerclass refid="class_gfx_device_n_color_space" prot="public">GfxDeviceNColorSpace</innerclass>
    <innerclass refid="class_gfx_pattern_color_space" prot="public">GfxPatternColorSpace</innerclass>
    <innerclass refid="class_gfx_pattern" prot="public">GfxPattern</innerclass>
    <innerclass refid="class_gfx_tiling_pattern" prot="public">GfxTilingPattern</innerclass>
    <innerclass refid="class_gfx_shading_pattern" prot="public">GfxShadingPattern</innerclass>
    <innerclass refid="class_gfx_shading" prot="public">GfxShading</innerclass>
    <innerclass refid="class_gfx_univariate_shading" prot="public">GfxUnivariateShading</innerclass>
    <innerclass refid="class_gfx_function_shading" prot="public">GfxFunctionShading</innerclass>
    <innerclass refid="class_gfx_axial_shading" prot="public">GfxAxialShading</innerclass>
    <innerclass refid="class_gfx_radial_shading" prot="public">GfxRadialShading</innerclass>
    <innerclass refid="struct_gfx_gouraud_vertex" prot="public">GfxGouraudVertex</innerclass>
    <innerclass refid="class_gfx_gouraud_triangle_shading" prot="public">GfxGouraudTriangleShading</innerclass>
    <innerclass refid="struct_gfx_patch" prot="public">GfxPatch</innerclass>
    <innerclass refid="struct_gfx_patch_1_1_color_value" prot="public">GfxPatch::ColorValue</innerclass>
    <innerclass refid="class_gfx_patch_mesh_shading" prot="public">GfxPatchMeshShading</innerclass>
    <innerclass refid="class_gfx_image_color_map" prot="public">GfxImageColorMap</innerclass>
    <innerclass refid="class_gfx_subpath" prot="public">GfxSubpath</innerclass>
    <innerclass refid="class_gfx_path" prot="public">GfxPath</innerclass>
    <innerclass refid="class_gfx_state" prot="public">GfxState</innerclass>
    <innerclass refid="class_gfx_state_1_1_reusable_path_iterator" prot="public">GfxState::ReusablePathIterator</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_gfx_state_8h_1a3ea19044a39f898dadbb24037e79d74f" prot="public" static="no">
        <name>gfxColorComp1</name>
        <initializer>0x10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="104" column="9" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_gfx_state_8h_1a7480ea744db6aba77d255901e5732beb" prot="public" static="no">
        <name>gfxColorMaxComps</name>
        <initializer>funcMaxOutputs</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="139" column="9" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1b" prot="public" static="no">
        <name>GfxBlendMode</name>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba4695a438de2187eff0206173a50b14b7" prot="public">
          <name>gfxBlendNormal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1bae7b08e2d68562a103744724d5ee4ee54" prot="public">
          <name>gfxBlendMultiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1baeb33ca5dc9da58e3f743c6a6588f09ec" prot="public">
          <name>gfxBlendScreen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba856c9125ef227751e7357e46327e43fa" prot="public">
          <name>gfxBlendOverlay</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba4f24b72ef7b833303a3f02a2af218119" prot="public">
          <name>gfxBlendDarken</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1bae2e6cb9fec50ee86f6603e2b8b1a8741" prot="public">
          <name>gfxBlendLighten</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba7e2525b785988436f375b950d7b55d06" prot="public">
          <name>gfxBlendColorDodge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba0b0e026f2eabb174a6c99732070e1ef9" prot="public">
          <name>gfxBlendColorBurn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba1ff6d769af8b49294b198d912859f0aa" prot="public">
          <name>gfxBlendHardLight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba17b1816b02f7535404787e5a466acd29" prot="public">
          <name>gfxBlendSoftLight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1babcecbd06f5e41d743a1162cd6a7a17fe" prot="public">
          <name>gfxBlendDifference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1bafde8e893e68a266dccd55ad321c8feaf" prot="public">
          <name>gfxBlendExclusion</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba8d16e5fa1a0b736b3a938c7cc6dac0cc" prot="public">
          <name>gfxBlendHue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba255f22290fc7742aaed57a99d8b1a57f" prot="public">
          <name>gfxBlendSaturation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1bafdd39c6b3e4e17c9648a1c1bed87245d" prot="public">
          <name>gfxBlendColor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1a3e64e89373bb0ecfe55c9b7bbbd71c1ba4145af559b9681be1c7ff22f366fe233" prot="public">
          <name>gfxBlendLuminosity</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="78" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="78" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5" prot="public" static="no">
        <name>GfxColorSpaceMode</name>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5ae8e71a41dfeaf17a576945ac4c19ec05" prot="public">
          <name>csDeviceGray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a3bca88b3d0675ef5fe83b13a2615f5d8" prot="public">
          <name>csCalGray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a5c6f5410b99ab505e676bb804ff2dc28" prot="public">
          <name>csDeviceRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5aa910204b42d67e01e4da7b95b84c7720" prot="public">
          <name>csCalRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a05d5b71526f4f6720b1aeba3f4413c00" prot="public">
          <name>csDeviceCMYK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5aab816f5f48d6f6dd43fff390e9c3839b" prot="public">
          <name>csLab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5aa7fe9dff46cf9d82912a196b7ea2bd20" prot="public">
          <name>csICCBased</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a4d26c7048837bcf70a74087679f619bc" prot="public">
          <name>csIndexed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a00d23f89287b20c247097d8400becba6" prot="public">
          <name>csSeparation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a1d02b1ed1a635857980bd619122e7bc9" prot="public">
          <name>csDeviceN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_state_8h_1ab4231e7434a02bba667c18fcc90c8bd5a48c4fcab58e7f5afc13c2249f8813abd" prot="public">
          <name>csPattern</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="173" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="173" bodyend="185"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_gfx_state_8h_1a93967c6e720b26de3750710d58993852" prot="public" static="no">
        <type>int</type>
        <definition>typedef int GfxColorComp</definition>
        <argsstring></argsstring>
        <name>GfxColorComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="102" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_gfx_state_8h_1acb70c02332faef5db2c99a8b4b0e8f0c" prot="public" static="no">
        <type>GfxColorComp</type>
        <definition>typedef GfxColorComp GfxGray</definition>
        <argsstring></argsstring>
        <name>GfxGray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="149" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_gfx_state_8h_1a38212626d34305f19c2d3d3923adf079" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GfxColorComp</type>
        <definition>static GfxColorComp dblToCol</definition>
        <argsstring>(double x)</argsstring>
        <name>dblToCol</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="106" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_gfx_state_8h_1a65e299803951ceaa873097fd83e5a0de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double colToDbl</definition>
        <argsstring>(GfxColorComp x)</argsstring>
        <name>colToDbl</name>
        <param>
          <type>GfxColorComp</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="110" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="_gfx_state_8h_1a54f0b1ca9e97471c794f588c41a62047" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Guchar</type>
        <definition>static Guchar dblToByte</definition>
        <argsstring>(double x)</argsstring>
        <name>dblToByte</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="114" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="_gfx_state_8h_1a8d7e6b53068d4a43013104d52dede8b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double byteToDbl</definition>
        <argsstring>(Guchar x)</argsstring>
        <name>byteToDbl</name>
        <param>
          <type>Guchar</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="118" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_gfx_state_8h_1aa14d4ae13337803e12e0b0a769e434f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GfxColorComp</type>
        <definition>static GfxColorComp byteToCol</definition>
        <argsstring>(Guchar x)</argsstring>
        <name>byteToCol</name>
        <param>
          <type>Guchar</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="122" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_gfx_state_8h_1a5549e6ca2d9b6ae69b9c94e08c607898" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Guchar</type>
        <definition>static Guchar colToByte</definition>
        <argsstring>(GfxColorComp x)</argsstring>
        <name>colToByte</name>
        <param>
          <type>GfxColorComp</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="130" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="130" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxState.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006,<sp/>2007<sp/>Jeff<sp/>Muizelaar<sp/>&lt;jeff@infidigm.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Koji<sp/>Otani<sp/>&lt;sho@bbr.jp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009-2011,<sp/>2013<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Christian<sp/>Feuersänger<sp/>&lt;cfeuersaenger@googlemail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Andrea<sp/>Canciani<sp/>&lt;ranma42@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011-2014,<sp/>2016<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Lu<sp/>Wang<sp/>&lt;coolwanglu@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GFXSTATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GFXSTATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Function.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_array" kindref="compound">Array</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx" kindref="compound">Gfx</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font" kindref="compound">GfxFont</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_poppler_cache" kindref="compound">PopplerCache</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_list" kindref="compound">GooList</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_output_dev" kindref="compound">OutputDev</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state" kindref="compound">GfxState</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_matrix" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m[6];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0]<sp/>=<sp/>xx;<sp/>m[1]<sp/>=<sp/>yx;<sp/>m[2]<sp/>=<sp/>xy;<sp/>m[3]<sp/>=<sp/>yy;<sp/>m[4]<sp/>=<sp/>x0;<sp/>m[5]<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>GBool<sp/>invertTo(<ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>translate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ty);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scale(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sy);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transform(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ty)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>determinant()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m[0]<sp/>*<sp/>m[3]<sp/>-<sp/>m[1]<sp/>*<sp/>m[2];<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxBlendMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GfxBlendMode<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>gfxBlendNormal,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>gfxBlendMultiply,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>gfxBlendScreen,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>gfxBlendOverlay,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>gfxBlendDarken,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>gfxBlendLighten,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>gfxBlendColorDodge,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>gfxBlendColorBurn,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>gfxBlendHardLight,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>gfxBlendSoftLight,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>gfxBlendDifference,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>gfxBlendExclusion,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>gfxBlendHue,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>gfxBlendSaturation,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>gfxBlendColor,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>gfxBlendLuminosity</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxColorComp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>16.16<sp/>fixed<sp/>point<sp/>color<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GfxColorComp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>gfxColorComp1<sp/>0x10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GfxColorComp<sp/>dblToCol(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GfxColorComp)(x<sp/>*<sp/>gfxColorComp1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>colToDbl(GfxColorComp<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x<sp/>/<sp/>(double)gfxColorComp1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guchar<sp/>dblToByte(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>*<sp/>255.0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>byteToDbl(Guchar<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x<sp/>/<sp/>(double)255.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GfxColorComp<sp/>byteToCol(Guchar<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(x<sp/>/<sp/>255)<sp/>&lt;&lt;<sp/>16<sp/><sp/>=<sp/><sp/>(0.0000000100000001...<sp/>*<sp/>x)<sp/>&lt;&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>((x<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(x)<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>+<sp/>...)<sp/>&lt;&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>(x<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(x)<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[for<sp/>rounding]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GfxColorComp)((x<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>x<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>7));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guchar<sp/>colToByte(GfxColorComp<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>255<sp/>*<sp/>x<sp/>+<sp/>0.5<sp/><sp/>=<sp/><sp/>256<sp/>*<sp/>x<sp/>-<sp/>x<sp/>+<sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Guchar)(((x<sp/>&lt;&lt;<sp/>8)<sp/>-<sp/>x<sp/>+<sp/>0x8000)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxColor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>gfxColorMaxComps<sp/>funcMaxOutputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_gfx_color" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>GfxColorComp<sp/>c[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxGray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GfxColorComp<sp/>GfxGray;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxRGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="struct_gfx_r_g_b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>GfxColorComp<sp/>r,<sp/>g,<sp/>b;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxCMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="struct_gfx_c_m_y_k" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>GfxColorComp<sp/>c,<sp/>m,<sp/>y,<sp/>k;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>The<sp/>nGfxColorSpaceModes<sp/>constant<sp/>and<sp/>the<sp/>gfxColorSpaceModeNames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>array<sp/>defined<sp/>in<sp/>GfxState.cc<sp/>must<sp/>match<sp/>this<sp/>enum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>csDeviceGray,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>csCalGray,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>csDeviceRGB,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>csCalRGB,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>csDeviceCMYK,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>csLab,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>csICCBased,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>csIndexed,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>csSeparation,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>csDeviceN,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>csPattern</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wrapper<sp/>of<sp/>cmsHTRANSFORM<sp/>to<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_gfx_color_transform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doTransform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transformA<sp/>should<sp/>be<sp/>a<sp/>cmsHTRANSFORM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*transformA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmsIntent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputPixelType,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transformPixelType);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getIntent()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmsIntent;<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getInputPixelType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputPixelType;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getTransformPixelType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transformPixelType;<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ref();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unref();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*transform;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refCount;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmsIntent;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputPixelType;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transformPixelType;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_gfx_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*csObj,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>gray,<sp/>RGB,<sp/>or<sp/>CMYK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGrayLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/>Guchar<sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getGrayLine<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getRGBLine<sp/>(first<sp/>variant)<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/>Guchar<sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getRGBLine<sp/>(second<sp/>variant)<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/>Guchar<sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getRGBXLine<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/>Guchar<sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getCMYKLine<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*<sp/></highlight><highlight class="comment">/*in*/</highlight><highlight class="normal">,<sp/>Guchar<sp/>*<sp/></highlight><highlight class="comment">/*out*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)<sp/>{<sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;GfxColorSpace::getDeviceNLine<sp/>this<sp/>should<sp/>not<sp/>happen&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>mapping<sp/>for<sp/>spot<sp/>colorants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createMapping(<ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*separationList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSepComps);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>ColorSpace<sp/>support<sp/>getRGBLine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>ColorSpace<sp/>support<sp/>getGrayLine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetGrayLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>ColorSpace<sp/>support<sp/>getCMYKLine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>ColorSpace<sp/>support<sp/>getDeviceNLine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>color<sp/>components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>this<sp/>color<sp/>space&apos;s<sp/>default<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>default<sp/>ranges<sp/>for<sp/>each<sp/>component,<sp/>assuming<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>max<sp/>pixel<sp/>value<sp/>of<sp/>&lt;maxImgPixel&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultRanges(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeRange,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxImgPixel);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>painting<sp/>operations<sp/>in<sp/>this<sp/>color<sp/>space<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>the<sp/>page<sp/>(e.g.,<sp/>the<sp/>&quot;None&quot;<sp/>colorant).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isNonMarking()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>color<sp/>space&apos;s<sp/>overprint<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>Guint<sp/>getOverprintMask()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overprintMask;<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>color<sp/>space<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumColorSpaceModes();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>the<sp/>&lt;idx&gt;th<sp/>color<sp/>space<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getColorSpaceModeName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setupColorProfiles();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>displayProfileA<sp/>should<sp/>be<sp/>a<sp/>cmsHPROFILE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDisplayProfile(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*displayProfileA);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDisplayProfileName(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*name);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>will<sp/>be<sp/>a<sp/>cmsHPROFILE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*getRGBProfile();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>will<sp/>be<sp/>a<sp/>cmsHPROFILE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*getDisplayProfile();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>Guint<sp/>overprintMask;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*mapping;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxDeviceGrayColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_gfx_device_gray_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_device_gray_color_space" kindref="compound">GfxDeviceGrayColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_device_gray_color_space" kindref="compound">GfxDeviceGrayColorSpace</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_device_gray_color_space" kindref="compound">GfxDeviceGrayColorSpace</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csDeviceGray;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGrayLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetGrayLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal">};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxCalGrayColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_gfx_cal_gray_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_cal_gray_color_space" kindref="compound">GfxCalGrayColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_cal_gray_color_space" kindref="compound">GfxCalGrayColorSpace</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_cal_gray_color_space" kindref="compound">GfxCalGrayColorSpace</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csCalGray;<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>CalGray<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CalGray-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteX;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteY;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteZ;<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackX;<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackY;<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackZ;<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGamma()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gamma;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiteX,<sp/>whiteY,<sp/>whiteZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>white<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>blackX,<sp/>blackY,<sp/>blackZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>black<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kr,<sp/>kg,<sp/>kb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamut<sp/>mapping<sp/>mulitpliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getXYZ(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pZ);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*transform;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxDeviceRGBColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_gfx_device_r_g_b_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_device_r_g_b_color_space" kindref="compound">GfxDeviceRGBColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_device_r_g_b_color_space" kindref="compound">GfxDeviceRGBColorSpace</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_device_r_g_b_color_space" kindref="compound">GfxDeviceRGBColorSpace</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csDeviceRGB;<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGrayLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetGrayLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxCalRGBColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="class_gfx_cal_r_g_b_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_cal_r_g_b_color_space" kindref="compound">GfxCalRGBColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_cal_r_g_b_color_space" kindref="compound">GfxCalRGBColorSpace</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_cal_r_g_b_color_space" kindref="compound">GfxCalRGBColorSpace</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csCalRGB;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>CalRGB<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CalRGB-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteX;<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteY;<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteZ;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackX;<sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackY;<sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackZ;<sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGammaR()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gammaR;<sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGammaG()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gammaG;<sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGammaB()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gammaB;<sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;<sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiteX,<sp/>whiteY,<sp/>whiteZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>white<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>blackX,<sp/>blackY,<sp/>blackZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>black<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gammaR,<sp/>gammaG,<sp/>gammaB;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mat[9];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ABC<sp/>-&gt;<sp/>XYZ<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kr,<sp/>kg,<sp/>kb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamut<sp/>mapping<sp/>mulitpliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getXYZ(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pZ);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*transform;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxDeviceCMYKColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_gfx_device_c_m_y_k_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_device_c_m_y_k_color_space" kindref="compound">GfxDeviceCMYKColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_device_c_m_y_k_color_space" kindref="compound">GfxDeviceCMYKColorSpace</ref>();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_device_c_m_y_k_color_space" kindref="compound">GfxDeviceCMYKColorSpace</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csDeviceCMYK;<sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxLabColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_gfx_lab_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_lab_color_space" kindref="compound">GfxLabColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_lab_color_space" kindref="compound">GfxLabColorSpace</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_lab_color_space" kindref="compound">GfxLabColorSpace</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csLab;<sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>Lab<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultRanges(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeRange,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxImgPixel);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lab-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteX;<sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteY;<sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWhiteZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whiteZ;<sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackX;<sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackY;<sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBlackZ()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blackZ;<sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getAMin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aMin;<sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getAMax()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aMax;<sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBMin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bMin;<sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getBMax()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bMax;<sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>whiteX,<sp/>whiteY,<sp/>whiteZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>white<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>blackX,<sp/>blackY,<sp/>blackZ;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>black<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aMin,<sp/>aMax,<sp/>bMin,<sp/>bMax;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>for<sp/>the<sp/>a<sp/>and<sp/>b<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kr,<sp/>kg,<sp/>kb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamut<sp/>mapping<sp/>mulitpliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getXYZ(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pZ);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*transform;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxICCBasedColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="class_gfx_i_c_c_based_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_i_c_c_based_color_space" kindref="compound">GfxICCBasedColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_i_c_c_based_color_space" kindref="compound">GfxICCBasedColorSpace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompsA,<sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*altA,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>*iccProfileStreamA);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_i_c_c_based_color_space" kindref="compound">GfxICCBasedColorSpace</ref>();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csICCBased;<sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>ICCBased<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nComps;<sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultRanges(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeRange,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxImgPixel);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ICCBased-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getAlt()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt;<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>color<sp/>components<sp/>(1,<sp/>3,<sp/>or<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*alt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alternate<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeMin[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>values<sp/>for<sp/>each<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeMax[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>values<sp/>for<sp/>each<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>iccProfileStream;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ICC<sp/>profile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getIntent()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(transform<sp/>!=<sp/>NULL)<sp/>?<sp/>transform-&gt;getIntent()<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*transform;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*lineTransform;<sp/></highlight><highlight class="comment">//<sp/>color<sp/>transform<sp/>for<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>std::map&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>cmsCache;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">};</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxIndexedColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class_gfx_indexed_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_indexed_color_space" kindref="compound">GfxIndexedColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_indexed_color_space" kindref="compound">GfxIndexedColorSpace</ref>(<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*baseA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexHighA);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_indexed_color_space" kindref="compound">GfxIndexedColorSpace</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csIndexed;<sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>Indexed<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useGetDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultRanges(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeLow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*decodeRange,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxImgPixel);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getBase()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;<sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getIndexHigh()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indexHigh;<sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>Guchar<sp/>*getLookup()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lookup;<sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*mapColorToBase(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*baseColor);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>Guint<sp/>getOverprintMask()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base-&gt;getOverprintMask();<sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createMapping(<ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*separationList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSepComps)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>base-&gt;createMapping(separationList,<sp/>maxSepComps);<sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*base;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexHigh;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>pixel<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lookup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">};</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxSeparationColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="class_gfx_separation_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_separation_color_space" kindref="compound">GfxSeparationColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_separation_color_space" kindref="compound">GfxSeparationColorSpace</ref>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*nameA,<sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*altA,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcA);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_separation_color_space" kindref="compound">GfxSeparationColorSpace</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csSeparation;<sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>Separation<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createMapping(<ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*separationList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSepComps);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isNonMarking()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nonMarking;<sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Separation-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getAlt()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt;<sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*getFunc()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func;<sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_separation_color_space" kindref="compound">GfxSeparationColorSpace</ref>(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*nameA,<sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*altA,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcA,<sp/>GBool<sp/>nonMarkingA,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>overprintMaskA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*mappingA);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colorant<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*alt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alternate<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*func;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tint<sp/>transform<sp/>(into<sp/>alternate<sp/>color<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>GBool<sp/>nonMarking;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">};</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxDeviceNColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="class_gfx_device_n_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_device_n_color_space" kindref="compound">GfxDeviceNColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_device_n_color_space" kindref="compound">GfxDeviceNColorSpace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompsA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>**namesA,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*alt,<sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*func,<sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*sepsCS);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_device_n_color_space" kindref="compound">GfxDeviceNColorSpace</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csDeviceN;<sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>DeviceN<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createMapping(<ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*separationList,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSepComps);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nComps;<sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isNonMarking()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nonMarking;<sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DeviceN-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getColorantName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>names[i];<sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getAlt()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt;<sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*getTintTransformFunc()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func;<sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_device_n_color_space" kindref="compound">GfxDeviceNColorSpace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompsA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>**namesA,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*alt,<sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*func,<sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*sepsCSA,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*mappingA,<sp/>GBool<sp/>nonMarkingA,<sp/>Guint<sp/>overprintMaskA);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colorant<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>*names[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*alt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alternate<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*func;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tint<sp/>transform<sp/>(into<sp/>alternate<sp/>color<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>GBool<sp/>nonMarking;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*sepsCS;<sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>separation<sp/>cs<sp/>for<sp/>spot<sp/>colorants;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">};</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxPatternColorSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="class_gfx_pattern_color_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_pattern_color_space" kindref="compound">GfxPatternColorSpace</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern_color_space" kindref="compound">GfxPatternColorSpace</ref>(<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*underA);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_pattern_color_space" kindref="compound">GfxPatternColorSpace</ref>();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GfxColorSpaceMode<sp/>getMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csPattern;<sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>Pattern<sp/>color<sp/>space.<sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_array" kindref="compound">Array</ref><sp/>*arr,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDefaultColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pattern-specific<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getUnder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>under;<sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*under;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>underlying<sp/>color<sp/>space<sp/>(for<sp/>uncolored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>patterns)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">};</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxPattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="class_gfx_pattern" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref>();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*copy()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type;<sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxTilingPattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="class_gfx_tiling_pattern" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref><sp/>*parse(<ref refid="class_object" kindref="compound">Object</ref><sp/>*patObj);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPaintType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paintType;<sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getTilingType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tilingType;<sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getBBox()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bbox;<sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getXStep()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xStep;<sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getYStep()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yStep;<sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getResDict()</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resDict.isDict()<sp/>?<sp/>resDict.getDict()<sp/>:<sp/>(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*)NULL;<sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix;<sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getContentStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;contentStream;<sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paintTypeA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tilingTypeA,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bboxA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStepA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yStepA,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*resDictA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*matrixA,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*contentStreamA);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paintType;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tilingType;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bbox[4];</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStep,<sp/>yStep;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>resDict;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>matrix[6];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>contentStream;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">};</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxShadingPattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="class_gfx_shading_pattern" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*patObj,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*getShading()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shading;<sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix;<sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref>(<ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*shadingA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*matrixA);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*shading;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>matrix[6];</highlight></codeline>
<codeline lineno="834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="class_gfx_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref>(<ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_shading" kindref="compound">GfxShading</ref>();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type;<sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getColorSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>colorSpace;<sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*getBackground()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;background;<sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>GBool<sp/>getHasBackground()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasBackground;<sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMaxA)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMinA<sp/>=<sp/>xMin;<sp/>*yMinA<sp/>=<sp/>yMin;<sp/>*xMaxA<sp/>=<sp/>xMax;<sp/>*yMaxA<sp/>=<sp/>yMax;<sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>GBool<sp/>getHasBBox()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasBBox;<sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>GBool<sp/>init(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>background;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>GBool<sp/>hasBackground;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>GBool<sp/>hasBBox;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">};</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxUnivariateShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="class_gfx_univariate_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1A,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>extend0A,<sp/>GBool<sp/>extend1A);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref>(<ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDomain0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t0;<sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDomain1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1;<sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>GBool<sp/>getExtend0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend0;<sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>GBool<sp/>getExtend1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend1;<sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNFuncs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFuncs;<sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*getFunc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[i];<sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getColor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupCache(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*ctm,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getParameterRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDistance(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/>t1;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcs[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncs;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>GBool<sp/>extend0,<sp/>extend1;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cacheSize,<sp/>lastMatch;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cacheBounds;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cacheCoeff;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cacheValues;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">};</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFunctionShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920" refid="class_gfx_function_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0A,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1A,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*matrixA,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref>(<ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDomain(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1A)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x0A<sp/>=<sp/>x0;<sp/>*y0A<sp/>=<sp/>y0;<sp/>*x1A<sp/>=<sp/>x1;<sp/>*y1A<sp/>=<sp/>y1;<sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix;<sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNFuncs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFuncs;<sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*getFunc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[i];<sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getColor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>matrix[6];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcs[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncs;</highlight></codeline>
<codeline lineno="947"><highlight class="normal">};</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxAxialShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="class_gfx_axial_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0A,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1A,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1A,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>extend0A,<sp/>GBool<sp/>extend1A);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref>(<ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref>();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCoords(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1A)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x0A<sp/>=<sp/>x0;<sp/>*y0A<sp/>=<sp/>y0;<sp/>*x1A<sp/>=<sp/>x1;<sp/>*y1A<sp/>=<sp/>y1;<sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getParameterRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDistance(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">};</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxRadialShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="class_gfx_radial_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_univariate_shading" kindref="compound">GfxUnivariateShading</ref><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r0A,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r1A,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1A,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>extend0A,<sp/>GBool<sp/>extend1A);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref>(<ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref>();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCoords(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y0A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r0A,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r1A)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x0A<sp/>=<sp/>x0;<sp/>*y0A<sp/>=<sp/>y0;<sp/>*r0A<sp/>=<sp/>r0;<sp/>*x1A<sp/>=<sp/>x1;<sp/>*y1A<sp/>=<sp/>y1;<sp/>*r1A<sp/>=<sp/>r1;<sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getParameterRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDistance(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>r0,<sp/>x1,<sp/>y1,<sp/>r1;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxGouraudTriangleShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="struct_gfx_gouraud_vertex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_gouraud_vertex" kindref="compound">GfxGouraudVertex</ref><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/><ref refid="structcolor" kindref="compound">color</ref>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="class_gfx_gouraud_triangle_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_gouraud_vertex" kindref="compound">GfxGouraudVertex</ref><sp/>*verticesA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVerticesA,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*trianglesA)[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTrianglesA,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref>(<ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref>();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNTriangles()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nTriangles;<sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isParameterized()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFuncs<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="class_gfx_gouraud_triangle_shading_1a702b7864620fa2b509f58354343653c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_gfx_gouraud_triangle_shading_1a702b7864620fa2b509f58354343653c2" kindref="member">getParameterDomainMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>assert(isParameterized());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[0]-&gt;getDomainMin(0);<sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="class_gfx_gouraud_triangle_shading_1afde54962e071a49f42ebbd0b7a33393e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_gfx_gouraud_triangle_shading_1afde54962e071a49f42ebbd0b7a33393e" kindref="member">getParameterDomainMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>assert(isParameterized());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[0]-&gt;getDomainMax(0);<sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getTriangle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y0,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color0,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color1,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color2);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getTriangle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*color0,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*color1,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*color2);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getParameterizedColor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_gouraud_vertex" kindref="compound">GfxGouraudVertex</ref><sp/>*vertices;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVertices;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>int<sp/>(*triangles)[3];</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTriangles;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcs[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncs;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxPatchMeshShading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="struct_gfx_patch" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref><sp/>{</highlight></codeline>
<codeline lineno="1096" refid="struct_gfx_patch_1_1_color_value" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_patch_1_1_color_value" kindref="compound">ColorValue</ref><sp/>{</highlight></codeline>
<codeline lineno="1105" refid="struct_gfx_patch_1_1_color_value_1ad69e7f7186b9be22d716d1c6b96c416b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[4][4];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[4][4];</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_patch_1_1_color_value" kindref="compound">ColorValue</ref><sp/><ref refid="structcolor" kindref="compound">color</ref>[2][2];</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113" refid="class_gfx_patch_mesh_shading" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA,<sp/><ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref><sp/>*patchesA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPatchesA,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**funcsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncsA);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref>(<ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref>();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref><sp/>*parse(<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNPatches()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nPatches;<sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref><sp/>*getPatch(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;patches[i];<sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isParameterized()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nFuncs<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133" refid="class_gfx_patch_mesh_shading_1a9dfc69bcc0118dd37cb237634031b856" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_gfx_patch_mesh_shading_1a9dfc69bcc0118dd37cb237634031b856" kindref="member">getParameterDomainMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>assert(isParameterized());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[0]-&gt;getDomainMin(0);<sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138" refid="class_gfx_patch_mesh_shading_1ac03f7da2444d285f27708d1db5dc2299" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_gfx_patch_mesh_shading_1ac03f7da2444d285f27708d1db5dc2299" kindref="member">getParameterDomainMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>assert(isParameterized());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>funcs[0]-&gt;getDomainMax(0);<sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getParameterizedColor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref><sp/>*patches;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPatches;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*funcs[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFuncs;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxImageColorMap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154" refid="class_gfx_image_color_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitsA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*decode,<sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpaceA);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref>();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>color<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*copy()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>color<sp/>map<sp/>valid?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;<sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>color<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getColorSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>colorSpace;<sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>stream<sp/>decoding<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumPixelComps()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nComps;<sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getBits()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bits;<sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>decode<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDecodeLow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeLow[i];<sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDecodeHigh(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeLow[i]<sp/>+<sp/>decodeRange[i];<sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useRGBLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(colorSpace2<sp/>&amp;&amp;<sp/>colorSpace2-&gt;useGetRGBLine<sp/>())<sp/>||<sp/>(!colorSpace2<sp/>&amp;&amp;<sp/>colorSpace-&gt;useGetRGBLine<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCMYKLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(colorSpace2<sp/>&amp;&amp;<sp/>colorSpace2-&gt;useGetCMYKLine<sp/>())<sp/>||<sp/>(!colorSpace2<sp/>&amp;&amp;<sp/>colorSpace-&gt;useGetCMYKLine<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useDeviceNLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(colorSpace2<sp/>&amp;&amp;<sp/>colorSpace2-&gt;useGetDeviceNLine<sp/>())<sp/>||<sp/>(!colorSpace2<sp/>&amp;&amp;<sp/>colorSpace-&gt;useGetDeviceNLine<sp/>());<sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>an<sp/>image<sp/>pixel<sp/>to<sp/>a<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGray(Guchar<sp/>*x,<sp/>GfxGray<sp/>*gray);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGB(Guchar<sp/>*x,<sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRGBXLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getGrayLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYKLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceNLine(Guchar<sp/>*in,<sp/>Guchar<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCMYK(Guchar<sp/>*x,<sp/><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getDeviceN(Guchar<sp/>*x,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getColor(Guchar<sp/>*x,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matte<sp/>color<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMatteColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color)<sp/>{<sp/>useMatte<sp/>=<sp/>gTrue;<sp/>matteColor<sp/>=<sp/>*color;<sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*getMatteColor()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(useMatte)<sp/>?<sp/>&amp;matteColor<sp/>:<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref>(<ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>image<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bits<sp/>per<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components<sp/>in<sp/>a<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace2;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>secondary<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components<sp/>in<sp/>colorSpace2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>GfxColorComp<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>lookup[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>GfxColorComp<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optimized<sp/>case<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>lookup2[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>Guchar<sp/>*byte_lookup;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>values<sp/>for<sp/>each<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>decodeLow[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>-<sp/>min<sp/>value<sp/>for<sp/>each<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>decodeRange[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>GBool<sp/>useMatte;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>matteColor;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxSubpath<sp/>and<sp/>GfxPath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227" refid="class_gfx_subpath" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref>();</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>*copy()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumPoints()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[i];<sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y[i];<sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>GBool<sp/>getCurve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curve[i];<sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)<sp/>{<sp/>x[i]<sp/>=<sp/>a;<sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)<sp/>{<sp/>y[i]<sp/>=<sp/>a;<sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>last<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLastX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[n-1];<sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLastY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y[n-1];<sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>line<sp/>segment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lineTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>Bezier<sp/>curve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>curveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y3);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>subpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>GBool<sp/>isClosed()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closed;<sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>(&lt;dx&gt;,<sp/>&lt;dy&gt;)<sp/>to<sp/>each<sp/>point<sp/>in<sp/>the<sp/>subpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>offset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/>*y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>GBool<sp/>*curve;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>curve[i]<sp/>=&gt;<sp/>point<sp/>i<sp/>is<sp/>a<sp/>control<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>a<sp/>Bezier<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>x/y<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>GBool<sp/>closed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>path<sp/>is<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref>(<ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>*subpath);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278" refid="class_gfx_path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref>();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_path" kindref="compound">GfxPath</ref>();</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*copy()</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref>(justMoved,<sp/>firstX,<sp/>firstY,<sp/>subpaths,<sp/>n,<sp/>size);<sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>there<sp/>a<sp/>current<sp/>point?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>GBool<sp/>isCurPt()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>&gt;<sp/>0<sp/>||<sp/>justMoved;<sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>path<sp/>non-empty,<sp/>i.e.,<sp/>is<sp/>there<sp/>at<sp/>least<sp/>one<sp/>segment?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>GBool<sp/>isPath()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>subpaths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumSubpaths()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>*getSubpath(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subpaths[i];<sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>last<sp/>point<sp/>on<sp/>last<sp/>subpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLastX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subpaths[n-1]-&gt;getLastX();<sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLastY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subpaths[n-1]-&gt;getLastY();<sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>current<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>segment<sp/>to<sp/>the<sp/>last<sp/>subpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lineTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>Bezier<sp/>curve<sp/>to<sp/>the<sp/>last<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>curveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y3);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>last<sp/>subpath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>&lt;path&gt;<sp/>to<sp/>&lt;this&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append(<ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*path);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>(&lt;dx&gt;,<sp/>&lt;dy&gt;)<sp/>to<sp/>each<sp/>point<sp/>in<sp/>the<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>offset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>GBool<sp/>justMoved;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>a<sp/>new<sp/>subpath<sp/>was<sp/>just<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>firstX,<sp/>firstY;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>point<sp/>in<sp/>new<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>**subpaths;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subpaths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>subpaths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>subpaths<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref>(GBool<sp/>justMoved1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>firstX1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>firstY1,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>**subpaths1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size1);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340" refid="class_gfx_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1351" refid="class_gfx_state_1_1_reusable_path_iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref>(<sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref>*<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEnd()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>next();</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCoord(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*path;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subPathOff;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coordOff;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCoords;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref><sp/>*curSubPath;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>default<sp/>GfxState,<sp/>for<sp/>a<sp/>device<sp/>with<sp/>resolution<sp/>&lt;hDPI&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>&lt;vDPI&gt;,<sp/>page<sp/>box<sp/>&lt;pageBox&gt;,<sp/>page<sp/>rotation<sp/>&lt;rotateA&gt;,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>system<sp/>specified<sp/>by<sp/>&lt;upsideDown&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPIA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPIA,<sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*pageBox,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotateA,<sp/>GBool<sp/>upsideDown);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_state" kindref="compound">GfxState</ref>();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*copy(GBool<sp/>copyPath<sp/>=<sp/>gFalse)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>copyPath);<sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getHDPI()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hDPI;<sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getVDPI()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vDPI;<sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getCTM()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctm;<sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getCTM(<ref refid="class_matrix" kindref="compound">Matrix</ref><sp/>*m)<sp/>{<sp/>memcpy<sp/>(m-&gt;m,<sp/>ctm,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>m-&gt;m);<sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getX1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>px1;<sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getY1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py1;<sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getX2()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>px2;<sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getY2()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py2;<sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getPageWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pageWidth;<sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getPageHeight()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pageHeight;<sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRotate()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotate;<sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*getFillColor()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;fillColor;<sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*getStrokeColor()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;strokeColor;<sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFillGray(GfxGray<sp/>*gray)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>fillColorSpace-&gt;getGray(&amp;fillColor,<sp/>gray);<sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getStrokeGray(GfxGray<sp/>*gray)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>strokeColorSpace-&gt;getGray(&amp;strokeColor,<sp/>gray);<sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFillRGB(<ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>fillColorSpace-&gt;getRGB(&amp;fillColor,<sp/>rgb);<sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getStrokeRGB(<ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>*rgb)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>strokeColorSpace-&gt;getRGB(&amp;strokeColor,<sp/>rgb);<sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFillCMYK(<ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>fillColorSpace-&gt;getCMYK(&amp;fillColor,<sp/>cmyk);<sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFillDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>fillColorSpace-&gt;getDeviceN(&amp;fillColor,<sp/>deviceN);<sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getStrokeCMYK(<ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref><sp/>*cmyk)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>strokeColorSpace-&gt;getCMYK(&amp;strokeColor,<sp/>cmyk);<sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getStrokeDeviceN(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*deviceN)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>strokeColorSpace-&gt;getDeviceN(&amp;strokeColor,<sp/>deviceN);<sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getFillColorSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fillColorSpace;<sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*getStrokeColorSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strokeColorSpace;<sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*getFillPattern()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fillPattern;<sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*getStrokePattern()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strokePattern;<sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>GfxBlendMode<sp/>getBlendMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blendMode;<sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getFillOpacity()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fillOpacity;<sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getStrokeOpacity()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strokeOpacity;<sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>GBool<sp/>getFillOverprint()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fillOverprint;<sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>GBool<sp/>getStrokeOverprint()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strokeOverprint;<sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getOverprintMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overprintMode;<sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>**getTransfer()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transfer;<sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLineWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineWidth;<sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getLineDash(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**dash,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*start)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*dash<sp/>=<sp/>lineDash;<sp/>*length<sp/>=<sp/>lineDashLength;<sp/>*start<sp/>=<sp/>lineDashStart;<sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getFlatness()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatness;<sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLineJoin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineJoin;<sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLineCap()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineCap;<sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getMiterLimit()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>miterLimit;<sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>GBool<sp/>getStrokeAdjust()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strokeAdjust;<sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>GBool<sp/>getAlphaIsShape()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alphaIsShape;<sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>GBool<sp/>getTextKnockout()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>textKnockout;<sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*getFont()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structfont" kindref="compound">font</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getFontSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontSize;<sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getTextMat()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>textMat;<sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getCharSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charSpace;<sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWordSpace()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wordSpace;<sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getHorizScaling()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>horizScaling;<sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLeading()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leading;<sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getRise()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rise;<sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRender()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>render;<sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getRenderingIntent()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renderingIntent;<sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*getPath()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;<sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPath(<ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*pathA);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getCurX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curX;<sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getCurY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curY;<sp/>}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getClipBBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMin<sp/>=<sp/>clipXMin;<sp/>*yMin<sp/>=<sp/>clipYMin;<sp/>*xMax<sp/>=<sp/>clipXMax;<sp/>*yMax<sp/>=<sp/>clipYMax;<sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getUserClipBBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMax);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLineX()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineX;<sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getLineY()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineY;<sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>there<sp/>a<sp/>current<sp/>point/path?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>GBool<sp/>isCurPt()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path-&gt;isCurPt();<sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>GBool<sp/>isPath()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path-&gt;isPath();<sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transform(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x2<sp/>=<sp/>ctm[0]<sp/>*<sp/>x1<sp/>+<sp/>ctm[2]<sp/>*<sp/>y1<sp/>+<sp/>ctm[4];</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y2<sp/>=<sp/>ctm[1]<sp/>*<sp/>x1<sp/>+<sp/>ctm[3]<sp/>*<sp/>y1<sp/>+<sp/>ctm[5];<sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transformDelta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x2<sp/>=<sp/>ctm[0]<sp/>*<sp/>x1<sp/>+<sp/>ctm[2]<sp/>*<sp/>y1;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y2<sp/>=<sp/>ctm[1]<sp/>*<sp/>x1<sp/>+<sp/>ctm[3]<sp/>*<sp/>y1;<sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>textTransform(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x2<sp/>=<sp/>textMat[0]<sp/>*<sp/>x1<sp/>+<sp/>textMat[2]<sp/>*<sp/>y1<sp/>+<sp/>textMat[4];</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y2<sp/>=<sp/>textMat[1]<sp/>*<sp/>x1<sp/>+<sp/>textMat[3]<sp/>*<sp/>y1<sp/>+<sp/>textMat[5];<sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>textTransformDelta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y2)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*x2<sp/>=<sp/>textMat[0]<sp/>*<sp/>x1<sp/>+<sp/>textMat[2]<sp/>*<sp/>y1;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y2<sp/>=<sp/>textMat[1]<sp/>*<sp/>x1<sp/>+<sp/>textMat[3]<sp/>*<sp/>y1;<sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transformWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTransformedLineWidth()</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transformWidth(lineWidth);<sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getTransformedFontSize();</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFontTransMat(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m11,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m12,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m21,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m22);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>state<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCTM(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>concatCTM(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shiftCTMAndClip(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ty);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillColorSpace(<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokeColorSpace(<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>)<sp/>{<sp/>fillColor<sp/>=<sp/>*color;<sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokeColor(<ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color)<sp/>{<sp/>strokeColor<sp/>=<sp/>*color;<sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillPattern(<ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*pattern);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokePattern(<ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*pattern);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBlendMode(GfxBlendMode<sp/>mode)<sp/>{<sp/>blendMode<sp/>=<sp/>mode;<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillOpacity(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>opac)<sp/>{<sp/>fillOpacity<sp/>=<sp/>opac;<sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokeOpacity(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>opac)<sp/>{<sp/>strokeOpacity<sp/>=<sp/>opac;<sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFillOverprint(GBool<sp/>op)<sp/>{<sp/>fillOverprint<sp/>=<sp/>op;<sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokeOverprint(GBool<sp/>op)<sp/>{<sp/>strokeOverprint<sp/>=<sp/>op;<sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOverprintMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op)<sp/>{<sp/>overprintMode<sp/>=<sp/>op;<sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTransfer(<ref refid="class_function" kindref="compound">Function</ref><sp/>**funcs);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineWidth(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)<sp/>{<sp/>lineWidth<sp/>=<sp/>width;<sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineDash(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dash,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFlatness(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flatness1)<sp/>{<sp/>flatness<sp/>=<sp/>flatness1;<sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineJoin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineJoin1)<sp/>{<sp/>lineJoin<sp/>=<sp/>lineJoin1;<sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLineCap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCap1)<sp/>{<sp/>lineCap<sp/>=<sp/>lineCap1;<sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMiterLimit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit)<sp/>{<sp/>miterLimit<sp/>=<sp/>limit;<sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStrokeAdjust(GBool<sp/>sa)<sp/>{<sp/>strokeAdjust<sp/>=<sp/>sa;<sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAlphaIsShape(GBool<sp/>ais)<sp/>{<sp/>alphaIsShape<sp/>=<sp/>ais;<sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTextKnockout(GBool<sp/>tk)<sp/>{<sp/>textKnockout<sp/>=<sp/>tk;<sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFont(<ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*fontA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontSizeA);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTextMat(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>textMat[0]<sp/>=<sp/>a;<sp/>textMat[1]<sp/>=<sp/>b;<sp/>textMat[2]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>textMat[3]<sp/>=<sp/>d;<sp/>textMat[4]<sp/>=<sp/>e;<sp/>textMat[5]<sp/>=<sp/>f;<sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCharSpace(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>space)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>charSpace<sp/>=<sp/>space;<sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setWordSpace(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>space)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>wordSpace<sp/>=<sp/>space;<sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHorizScaling(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>horizScaling<sp/>=<sp/>0.01<sp/>*<sp/>scale;<sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLeading(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>leadingA)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>leading<sp/>=<sp/>leadingA;<sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRise(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>riseA)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>rise<sp/>=<sp/>riseA;<sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRender(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>renderA)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>render<sp/>=<sp/>renderA;<sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRenderingIntent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*intent)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>strncpy(renderingIntent,<sp/>intent,<sp/>31);<sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDisplayProfile(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*localDisplayProfileA);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*getDisplayProfile()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localDisplayProfile;<sp/>}</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*getXYZ2DisplayTransform();</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>path-&gt;moveTo(curX<sp/>=<sp/>x,<sp/>curY<sp/>=<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lineTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>path-&gt;lineTo(curX<sp/>=<sp/>x,<sp/>curY<sp/>=<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>curveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y3)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>path-&gt;curveTo(x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>curX<sp/>=<sp/>x3,<sp/>curY<sp/>=<sp/>y3);<sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closePath()</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>path-&gt;close();<sp/>curX<sp/>=<sp/>path-&gt;getLastX();<sp/>curY<sp/>=<sp/>path-&gt;getLastY();<sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearPath();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>clip<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clip();</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clipToStrokePath();</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clipToRect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>textSetPos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ty)<sp/>{<sp/>lineX<sp/>=<sp/>tx;<sp/>lineY<sp/>=<sp/>ty;<sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>textMoveTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ty)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>lineX<sp/>=<sp/>tx;<sp/>lineY<sp/>=<sp/>ty;<sp/>textTransform(tx,<sp/>ty,<sp/>&amp;curX,<sp/>&amp;curY);<sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>textShift(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ty);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shift(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push/pop<sp/>GfxState<sp/>on/off<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*save();</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*restore();</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>GBool<sp/>hasSaves()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>saved<sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/>GBool<sp/>isParentState(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>saved<sp/>==<sp/>state<sp/>||<sp/>(saved<sp/>&amp;&amp;<sp/>saved-&gt;isParentState(state));<sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>GBool<sp/>parseBlendMode(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/>GfxBlendMode<sp/>*mode);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref><sp/>*getReusablePath()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref>(path);<sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/>vDPI;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ctm[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coord<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px1,<sp/>py1,<sp/>px2,<sp/>py2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>page<sp/>corners<sp/>(user<sp/>coords)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pageWidth,<sp/>pageHeight;<sp/></highlight><highlight class="comment">//<sp/>page<sp/>size<sp/>(pixels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>page<sp/>rotation<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*fillColorSpace;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*strokeColorSpace;<sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>fillColor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>strokeColor;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*fillPattern;<sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*strokePattern;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>GfxBlendMode<sp/>blendMode;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transparency<sp/>blend<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fillOpacity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>opacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>strokeOpacity;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>opacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>GBool<sp/>fillOverprint;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>overprint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>GBool<sp/>strokeOverprint;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>overprint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overprintMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overprint<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*transfer[4];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>function<sp/>(entries<sp/>may<sp/>be:<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>NULL<sp/>=<sp/>identity;<sp/>last<sp/>three<sp/>NULL<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>single<sp/>function;<sp/>all<sp/>four<sp/>non-NULL<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>R,G,B,gray<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lineWidth;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lineDash;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>dash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDashLength;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lineDashStart;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flatness;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>curve<sp/>flatness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineJoin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>join<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>cap<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>miterLimit;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>miter<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>GBool<sp/>strokeAdjust;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>adjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>GBool<sp/>alphaIsShape;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>is<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>GBool<sp/>textKnockout;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>knockout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*<ref refid="structfont" kindref="compound">font</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontSize;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>textMat[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>charSpace;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wordSpace;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizScaling;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>leading;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>leading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rise;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>rise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>render;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>rendering<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_path" kindref="compound">GfxPath</ref><sp/>*path;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>path<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curX,<sp/>curY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>point<sp/>(user<sp/>coords)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lineX,<sp/>lineY;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>current<sp/>text<sp/>line<sp/>(text<sp/>coords)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipXMin,<sp/>clipYMin,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>for<sp/>clip<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipXMax,<sp/>clipYMax;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>renderingIntent[32];</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*saved;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>GfxState<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref>(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/>GBool<sp/>copyPath);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*localDisplayProfile;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayProfileRef;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*XYZ2DisplayTransformRelCol;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*XYZ2DisplayTransformAbsCol;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*XYZ2DisplayTransformSat;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_transform" kindref="compound">GfxColorTransform</ref><sp/>*XYZ2DisplayTransformPerc;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/GfxState.h"/>
  </compounddef>
</doxygen>
