<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_pre_scan_output_dev_8h" kind="file" language="C++">
    <compoundname>PreScanOutputDev.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_gfx_state_8h" local="yes">GfxState.h</includes>
    <includes refid="_global_params_8h" local="yes">GlobalParams.h</includes>
    <includes refid="_output_dev_8h" local="yes">OutputDev.h</includes>
    <includedby refid="_pre_scan_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PreScanOutputDev.cc</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <incdepgraph>
      <node id="89405">
        <label>stdarg.h</label>
      </node>
      <node id="89415">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89400" relation="include">
        </childnode>
      </node>
      <node id="89416">
        <label>assert.h</label>
      </node>
      <node id="89414">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89415" relation="include">
        </childnode>
        <childnode refid="89416" relation="include">
        </childnode>
        <childnode refid="89417" relation="include">
        </childnode>
      </node>
      <node id="89406">
        <label>stdlib.h</label>
      </node>
      <node id="89402">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="89398" relation="include">
        </childnode>
        <childnode refid="89397" relation="include">
        </childnode>
      </node>
      <node id="89409">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89410" relation="include">
        </childnode>
      </node>
      <node id="89418">
        <label>GlobalParams.h</label>
        <link refid="_global_params_8h_source"/>
        <childnode refid="89416" relation="include">
        </childnode>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89398" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89419" relation="include">
        </childnode>
        <childnode refid="89410" relation="include">
        </childnode>
      </node>
      <node id="89417">
        <label>map</label>
      </node>
      <node id="89408">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="89405" relation="include">
        </childnode>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89403" relation="include">
        </childnode>
      </node>
      <node id="89412">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89410" relation="include">
        </childnode>
      </node>
      <node id="89404">
        <label>limits.h</label>
      </node>
      <node id="89397">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="89398" relation="include">
        </childnode>
      </node>
      <node id="89407">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="89413">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89398" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89410" relation="include">
        </childnode>
      </node>
      <node id="89411">
        <label>pthread.h</label>
      </node>
      <node id="89421">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="89399" relation="include">
        </childnode>
      </node>
      <node id="89401">
        <label>string.h</label>
      </node>
      <node id="89403">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="89404" relation="include">
        </childnode>
        <childnode refid="89405" relation="include">
        </childnode>
        <childnode refid="89406" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
      </node>
      <node id="89399">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="89400" relation="include">
        </childnode>
        <childnode refid="89398" relation="include">
        </childnode>
        <childnode refid="89401" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89402" relation="include">
        </childnode>
        <childnode refid="89403" relation="include">
        </childnode>
        <childnode refid="89407" relation="include">
        </childnode>
        <childnode refid="89408" relation="include">
        </childnode>
        <childnode refid="89409" relation="include">
        </childnode>
        <childnode refid="89412" relation="include">
        </childnode>
        <childnode refid="89413" relation="include">
        </childnode>
      </node>
      <node id="89420">
        <label>OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89419" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89421" relation="include">
        </childnode>
      </node>
      <node id="89410">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="89411" relation="include">
        </childnode>
      </node>
      <node id="89419">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="89396">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="89397" relation="include">
        </childnode>
      </node>
      <node id="89395">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.h</label>
        <link refid="_pre_scan_output_dev_8h"/>
        <childnode refid="89396" relation="include">
        </childnode>
        <childnode refid="89399" relation="include">
        </childnode>
        <childnode refid="89414" relation="include">
        </childnode>
        <childnode refid="89418" relation="include">
        </childnode>
        <childnode refid="89420" relation="include">
        </childnode>
      </node>
      <node id="89400">
        <label>set</label>
      </node>
      <node id="89398">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="89423">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.cc</label>
        <link refid="_pre_scan_output_dev_8cc_source"/>
      </node>
      <node id="89424">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="89422">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.h</label>
        <link refid="_pre_scan_output_dev_8h"/>
        <childnode refid="89423" relation="include">
        </childnode>
        <childnode refid="89424" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_pre_scan_output_dev" prot="public">PreScanOutputDev</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PreScanOutputDev.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2005<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011,<sp/>2014<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011,<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRESCANOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCANOUTPUTDEV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GlobalParams.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PreScanOutputDev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_pre_scan_output_dev" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pre_scan_output_dev" kindref="compound">PreScanOutputDev</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="class_pre_scan_output_dev" kindref="compound">PreScanOutputDev</ref>(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_pre_scan_output_dev" kindref="compound">PreScanOutputDev</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>get<sp/>info<sp/>about<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>upside-down<sp/>coordinates?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(Upside-down<sp/>means<sp/>(0,0)<sp/>is<sp/>the<sp/>top<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>page.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>upsideDown()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>drawChar()<sp/>or<sp/>drawString()?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useDrawChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>tilingPatternFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tiling<sp/>pattern<sp/>fills<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useTilingPatternFill()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>functionShadedFill(),<sp/>axialShadedFill(),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>radialShadedFill()?<sp/><sp/>If<sp/>this<sp/>returns<sp/>false,<sp/>these<sp/>shaded<sp/>fills</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>reduced<sp/>to<sp/>a<sp/>series<sp/>of<sp/>other<sp/>drawing<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>useShadedFills(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>device<sp/>use<sp/>beginType3Char/endType3Char?<sp/><sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>in<sp/>Type<sp/>3<sp/>fonts<sp/>will<sp/>be<sp/>drawn<sp/>with<sp/>drawChar/drawString.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>interpretType3Chars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>initialization<sp/>and<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startPage(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNum,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>a<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endPage();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>painting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stroke(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>tilingPatternFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx,<sp/><ref refid="class_catalog" kindref="compound">Catalog</ref><sp/>*cat,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*str,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pmat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>paintType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tilingType,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStep,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yStep);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>functionShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>axialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>radialShadedFill(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tMax);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>path<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eoClip(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>text<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginStringOp(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endStringOp(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>beginType3Char(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharCode<sp/>code,<sp/>Unicode<sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uLen);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endType3Char(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>image<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImageMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>invert,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*maskColors,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInvert,<sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSoftMaskedImage(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*maskStr,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskHeight,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*maskColorMap,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>maskInterpolate);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>transparency<sp/>groups<sp/>and<sp/>soft<sp/>masks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beginTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*blendingColorSpace,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>isolated,<sp/>GBool<sp/>knockout,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>forSoftMask);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintTransparencyGroup(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSoftMask(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,<sp/>GBool<sp/>alpha,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*transferFunc,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*backdropColor);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>special<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>operations<sp/>performed<sp/>since<sp/>the<sp/>last<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clearStats()<sp/>are<sp/>all<sp/>monochrome<sp/>(black<sp/>or<sp/>white).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>GBool<sp/>isMonochrome()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mono;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>operations<sp/>performed<sp/>since<sp/>the<sp/>last<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clearStats()<sp/>are<sp/>all<sp/>gray.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>GBool<sp/>isGray()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gray;<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>operations<sp/>performed<sp/>since<sp/>the<sp/>last<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clearStats()<sp/>included<sp/>any<sp/>transparency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>GBool<sp/>usesTransparency()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transparency;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>operations<sp/>performed<sp/>since<sp/>the<sp/>last<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clearStats()<sp/>are<sp/>all<sp/>rasterizable<sp/>by<sp/>GDI<sp/>calls<sp/>in<sp/>GDIOutputDev.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>GBool<sp/>isAllGDI()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gdi;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>operations<sp/>performed<sp/>since<sp/>the<sp/>last<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clearStats()<sp/>included<sp/>any<sp/>image<sp/>mask<sp/>fills<sp/>with<sp/>a<sp/>pattern<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>space.<sp/>(only<sp/>level1!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>GBool<sp/>usesPatternImageMask()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>patternImgMask;<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>stats<sp/>used<sp/>by<sp/>the<sp/>above<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearStats();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check(<ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*<ref refid="structcolor" kindref="compound">color</ref>,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>opacity,<sp/>GfxBlendMode<sp/>blendMode);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*doc;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>GBool<sp/>mono;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>GBool<sp/>gray;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>GBool<sp/>transparency;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>GBool<sp/>gdi;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>PSLevel<sp/>level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PostScript<sp/>level<sp/>(1,<sp/>2,<sp/>separation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>GBool<sp/>patternImgMask;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inTilingPatternFill;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/PreScanOutputDev.h"/>
  </compounddef>
</doxygen>
