<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_test_barline" kind="class" language="C++" prot="public">
    <compoundname>TestBarline</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref refid="class_ms_1_1_m_test" prot="public" virt="non-virtual">Ms::MTest</basecompoundref>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_barline_1a1b9f30b4283ebd67e18249e9cf533fe6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="35" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1a9c41278568ec8ae1949d4b842c6bf8bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline01</definition>
        <argsstring>()</argsstring>
        <name>barline01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="36" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="81" bodyend="130"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1a0cb755a10731b9a000f871e9593ae0a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline02</definition>
        <argsstring>()</argsstring>
        <name>barline02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline02 add a 3/4 time signature in the second measure and check bar line &apos;generated&apos; status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="37" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="139" bodyend="172"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1acf230b0b146b8df8da649c8e77cf65c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline03</definition>
        <argsstring>()</argsstring>
        <name>barline03</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline03 Sets a staff bar line span involving spanFrom and spanTo and check tht it is properly applied to start-repeat </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="38" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="182" bodyend="212"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1a9abf7831e1bb2ac7a028d1c39bf65e7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline04</definition>
        <argsstring>()</argsstring>
        <name>barline04</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline04 Sets custom span parameters to a system-initial start-repeat bar line and check tht it is properly applied to it and to the start-reapeat bar lines of staves below. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="39" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="222" bodyend="253"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1afd539246f888d4d25b51f03020183e60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline05</definition>
        <argsstring>()</argsstring>
        <name>barline05</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline05 Adds a line break in the middle of a end-start-repeat bar line and then checks the two resulting bar lines (an end-repeat and a start-repeat) are not marked as generated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="40" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="263" bodyend="300"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1a523c524b1eafe77807ca436151f59e69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline06</definition>
        <argsstring>()</argsstring>
        <name>barline06</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline06 Read a score with 3 staves and custom bar line sub-types for staff i-th at measure i-th and check the custom syb-types are applied only to their respective bar lines, rather than to whole measures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="41" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="311" bodyend="354"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_barline_1a11c3fa3c1c5f4edca686959a133707ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestBarline::barline179726</definition>
        <argsstring>()</argsstring>
        <name>barline179726</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>barline179726 Drop a normal barline onto measures and barlines of each type of barline </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/barline/tst_barline.cpp" line="42" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="381" bodyend="441"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="17011">
        <label>QObject</label>
      </node>
      <node id="17012">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
      </node>
      <node id="17010">
        <label>TestBarline</label>
        <link refid="class_test_barline"/>
        <childnode refid="17011" relation="public-inheritance">
        </childnode>
        <childnode refid="17012" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17027">
        <label>Ms::Sequencer</label>
        <link refid="class_ms_1_1_sequencer"/>
      </node>
      <node id="17014">
        <label>QObject</label>
      </node>
      <node id="17016">
        <label>Ms::EditData</label>
        <link refid="class_ms_1_1_edit_data"/>
        <childnode refid="17017" relation="usage">
          <edgelabel>duration</edgelabel>
        </childnode>
        <childnode refid="17018" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="17025" relation="usage">
          <edgelabel>element</edgelabel>
        </childnode>
      </node>
      <node id="17026">
        <label>Ms::MScore</label>
        <link refid="class_ms_1_1_m_score"/>
        <childnode refid="17014" relation="public-inheritance">
        </childnode>
        <childnode refid="17027" relation="usage">
          <edgelabel>seq</edgelabel>
        </childnode>
      </node>
      <node id="17024">
        <label>std::list&lt; SynthesizerGroup &gt;</label>
      </node>
      <node id="17023">
        <label>Ms::SynthesizerState</label>
        <link refid="class_ms_1_1_synthesizer_state"/>
        <childnode refid="17024" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17017">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="17020">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="17021" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="17021">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="17022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17015">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
        <childnode refid="17016" relation="usage">
          <edgelabel>ed</edgelabel>
        </childnode>
        <childnode refid="17019" relation="usage">
          <edgelabel>score</edgelabel>
        </childnode>
        <childnode refid="17026" relation="usage">
          <edgelabel>mscore</edgelabel>
        </childnode>
      </node>
      <node id="17019">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="17014" relation="public-inheritance">
        </childnode>
        <childnode refid="17020" relation="private-inheritance">
        </childnode>
        <childnode refid="17023" relation="usage">
          <edgelabel>_synthesizerState</edgelabel>
        </childnode>
      </node>
      <node id="17013">
        <label>TestBarline</label>
        <link refid="class_test_barline"/>
        <childnode refid="17014" relation="public-inheritance">
        </childnode>
        <childnode refid="17015" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17025">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="17020" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17022">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
      <node id="17018">
        <label>Ms::MuseScoreView</label>
        <link refid="class_ms_1_1_muse_score_view"/>
        <childnode refid="17019" relation="usage">
          <edgelabel>_score</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="mtest/libmscore/barline/tst_barline.cpp" line="31" column="1" bodyfile="mtest/libmscore/barline/tst_barline.cpp" bodystart="30" bodyend="43"/>
    <listofallmembers>
      <member refid="class_test_barline_1a9c41278568ec8ae1949d4b842c6bf8bf" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline01</name></member>
      <member refid="class_test_barline_1a0cb755a10731b9a000f871e9593ae0a9" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline02</name></member>
      <member refid="class_test_barline_1acf230b0b146b8df8da649c8e77cf65c0" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline03</name></member>
      <member refid="class_test_barline_1a9abf7831e1bb2ac7a028d1c39bf65e7e" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline04</name></member>
      <member refid="class_test_barline_1afd539246f888d4d25b51f03020183e60" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline05</name></member>
      <member refid="class_test_barline_1a523c524b1eafe77807ca436151f59e69" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline06</name></member>
      <member refid="class_test_barline_1a11c3fa3c1c5f4edca686959a133707ce" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>barline179726</name></member>
      <member refid="class_ms_1_1_m_test_1a37e6c16e898cab655f8ccd2518274acf" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>compareFiles</name></member>
      <member refid="class_ms_1_1_m_test_1a47c4f40157a350d27906dc6331e6cfd9" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>ed</name></member>
      <member refid="class_ms_1_1_m_test_1a0bf5210cc1ee4587d6959899aaff4a14" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>initMTest</name></member>
      <member refid="class_test_barline_1a1b9f30b4283ebd67e18249e9cf533fe6" prot="private" virt="non-virtual"><scope>TestBarline</scope><name>initTestCase</name></member>
      <member refid="class_ms_1_1_m_test_1a62fa3697bed02fa431b025df0457763e" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>mscore</name></member>
      <member refid="class_ms_1_1_m_test_1a744f5e054b180afc3e977956f58b069a" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>MTest</name></member>
      <member refid="class_ms_1_1_m_test_1af3c0a9c8bd7784086f966faf701429d3" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>readCreatedScore</name></member>
      <member refid="class_ms_1_1_m_test_1ac35525fff12b9e2d07806bcd6602217e" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>readScore</name></member>
      <member refid="class_ms_1_1_m_test_1a1891a6553283a1d3fda0aace440d359e" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>root</name></member>
      <member refid="class_ms_1_1_m_test_1a3014ea5ea6a33451fd5b26becb07cf7d" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveCompareMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a5c0af7fbce856e84aeda9c6699e2eeca" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveCompareMusicXmlScore</name></member>
      <member refid="class_ms_1_1_m_test_1a686ee7797f648e1d0e47e405ca90f92c" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveCompareScore</name></member>
      <member refid="class_ms_1_1_m_test_1a8e9111673d6bb2ed25851e4fa7858d03" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a740ba0e9f2c5ebc6e0937ed9dd0da64f" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveMusicXml</name></member>
      <member refid="class_ms_1_1_m_test_1a58c9c58bc05dec98a8a1b783e18a1703" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>savePdf</name></member>
      <member refid="class_ms_1_1_m_test_1a9191a2086f4eb17a64eb466327c74452" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>saveScore</name></member>
      <member refid="class_ms_1_1_m_test_1a7ae6f01386275392b5c840ad6e8006f4" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>score</name></member>
      <member refid="class_ms_1_1_m_test_1a752b054eee21c04a6084af6672447499" prot="protected" virt="non-virtual"><scope>TestBarline</scope><name>writeReadElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
