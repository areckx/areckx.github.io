<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_flate_encoder_8h" kind="file" language="C++">
    <compoundname>FlateEncoder.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="gfile_8h" local="yes">goo/gfile.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_decrypt_8h" local="yes">Decrypt.h</includes>
    <includes refid="_stream_8h" local="yes">Stream.h</includes>
    <includes refid="zlib_8h" local="no">zlib.h</includes>
    <includedby refid="_flate_encoder_8cc" local="yes">thirdparty/poppler/poppler/FlateEncoder.cc</includedby>
    <incdepgraph>
      <node id="86832">
        <label>stdarg.h</label>
      </node>
      <node id="86819">
        <label>thirdparty/poppler/poppler/FlateEncoder.h</label>
        <link refid="_flate_encoder_8h"/>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86821" relation="include">
        </childnode>
        <childnode refid="86822" relation="include">
        </childnode>
        <childnode refid="86823" relation="include">
        </childnode>
        <childnode refid="86824" relation="include">
        </childnode>
        <childnode refid="86825" relation="include">
        </childnode>
        <childnode refid="86826" relation="include">
        </childnode>
        <childnode refid="86827" relation="include">
        </childnode>
        <childnode refid="86831" relation="include">
        </childnode>
        <childnode refid="86835" relation="include">
        </childnode>
        <childnode refid="86843" relation="include">
        </childnode>
        <childnode refid="86842" relation="include">
        </childnode>
        <childnode refid="86844" relation="include">
        </childnode>
      </node>
      <node id="86827">
        <label>goo/gfile.h</label>
        <link refid="gfile_8h_source"/>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86821" relation="include">
        </childnode>
        <childnode refid="86822" relation="include">
        </childnode>
        <childnode refid="86823" relation="include">
        </childnode>
        <childnode refid="86828" relation="include">
        </childnode>
        <childnode refid="86829" relation="include">
        </childnode>
        <childnode refid="86830" relation="include">
        </childnode>
      </node>
      <node id="86822">
        <label>stdlib.h</label>
      </node>
      <node id="86826">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="86821" relation="include">
        </childnode>
        <childnode refid="86820" relation="include">
        </childnode>
      </node>
      <node id="86838">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86835" relation="include">
        </childnode>
        <childnode refid="86839" relation="include">
        </childnode>
      </node>
      <node id="86831">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="86832" relation="include">
        </childnode>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86830" relation="include">
        </childnode>
        <childnode refid="86833" relation="include">
        </childnode>
      </node>
      <node id="86844">
        <label>zlib.h</label>
        <link refid="zlib_8h_source"/>
        <childnode refid="86845" relation="include">
        </childnode>
      </node>
      <node id="86843">
        <label>Decrypt.h</label>
        <link refid="_decrypt_8h_source"/>
        <childnode refid="86830" relation="include">
        </childnode>
        <childnode refid="86833" relation="include">
        </childnode>
        <childnode refid="86835" relation="include">
        </childnode>
        <childnode refid="86842" relation="include">
        </childnode>
      </node>
      <node id="86841">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86835" relation="include">
        </childnode>
        <childnode refid="86839" relation="include">
        </childnode>
      </node>
      <node id="86823">
        <label>stddef.h</label>
      </node>
      <node id="86834">
        <label>limits.h</label>
      </node>
      <node id="86820">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="86821" relation="include">
        </childnode>
      </node>
      <node id="86837">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="86842">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="86820" relation="include">
        </childnode>
        <childnode refid="86821" relation="include">
        </childnode>
        <childnode refid="86830" relation="include">
        </childnode>
        <childnode refid="86835" relation="include">
        </childnode>
        <childnode refid="86839" relation="include">
        </childnode>
      </node>
      <node id="86840">
        <label>pthread.h</label>
      </node>
      <node id="86829">
        <label>sys/types.h</label>
      </node>
      <node id="86824">
        <label>string.h</label>
      </node>
      <node id="86833">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="86834" relation="include">
        </childnode>
        <childnode refid="86832" relation="include">
        </childnode>
        <childnode refid="86822" relation="include">
        </childnode>
        <childnode refid="86830" relation="include">
        </childnode>
      </node>
      <node id="86835">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="86836" relation="include">
        </childnode>
        <childnode refid="86821" relation="include">
        </childnode>
        <childnode refid="86824" relation="include">
        </childnode>
        <childnode refid="86830" relation="include">
        </childnode>
        <childnode refid="86826" relation="include">
        </childnode>
        <childnode refid="86833" relation="include">
        </childnode>
        <childnode refid="86837" relation="include">
        </childnode>
        <childnode refid="86831" relation="include">
        </childnode>
        <childnode refid="86838" relation="include">
        </childnode>
        <childnode refid="86841" relation="include">
        </childnode>
        <childnode refid="86842" relation="include">
        </childnode>
      </node>
      <node id="86828">
        <label>unistd.h</label>
      </node>
      <node id="86845">
        <label>zconf.h</label>
        <link refid="zconf_8h_source"/>
      </node>
      <node id="86839">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="86840" relation="include">
        </childnode>
      </node>
      <node id="86825">
        <label>ctype.h</label>
      </node>
      <node id="86830">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="86820" relation="include">
        </childnode>
      </node>
      <node id="86836">
        <label>set</label>
      </node>
      <node id="86821">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="86846">
        <label>thirdparty/poppler/poppler/FlateEncoder.h</label>
        <link refid="_flate_encoder_8h"/>
        <childnode refid="86847" relation="include">
        </childnode>
      </node>
      <node id="86847">
        <label>thirdparty/poppler/poppler/FlateEncoder.cc</label>
        <link refid="_flate_encoder_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_flate_encoder" prot="public">FlateEncoder</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FlateEncoder.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2016,<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>under<sp/>the<sp/>GPLv2<sp/>or<sp/>later<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FLATEENCODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLATEENCODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Decrypt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FlateEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_flate_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_flate_encoder" kindref="compound">FlateEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_flate_encoder" kindref="compound">FlateEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_flate_encoder" kindref="compound">FlateEncoder</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(outBufPtr<sp/>&gt;=<sp/>outBufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*outBufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(outBufPtr<sp/>&gt;=<sp/>outBufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*outBufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inBufSize<sp/>=<sp/>16384;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outBufSize<sp/>=<sp/>inBufSize;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>Guchar<sp/>inBuf[<sp/>inBufSize<sp/>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>Guchar<sp/>outBuf[<sp/>outBufSize<sp/>];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>Guchar<sp/>*outBufPtr;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>Guchar<sp/>*outBufEnd;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>GBool<sp/>inBufEof;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>GBool<sp/>outBufEof;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="structz__stream__s" kindref="compound">z_stream</ref><sp/>zlib_stream;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/FlateEncoder.h"/>
  </compounddef>
</doxygen>
