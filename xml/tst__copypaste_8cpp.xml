<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__copypaste_8cpp" kind="file" language="C++">
    <compoundname>tst_copypaste.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="chordrest_8h" local="yes">libmscore/chordrest.h</includes>
    <includes refid="chord_8h" local="yes">libmscore/chord.h</includes>
    <includes refid="xml_8h" local="yes">libmscore/xml.h</includes>
    <includes refid="durationtype_8h" local="yes">libmscore/durationtype.h</includes>
    <includes local="yes">tst_copypaste.moc</includes>
    <incdepgraph>
      <node id="72520">
        <label>tst_copypaste.moc</label>
      </node>
      <node id="72500">
        <label>list</label>
      </node>
      <node id="72494">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="72485" relation="include">
        </childnode>
      </node>
      <node id="72496">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="72514">
        <label>functional</label>
      </node>
      <node id="72515">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="72480" relation="include">
        </childnode>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
      </node>
      <node id="72511">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="72512" relation="include">
        </childnode>
      </node>
      <node id="72509">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="72510" relation="include">
        </childnode>
        <childnode refid="72479" relation="include">
        </childnode>
        <childnode refid="72511" relation="include">
        </childnode>
      </node>
      <node id="72482">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="72501">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="72512">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72482" relation="include">
        </childnode>
        <childnode refid="72485" relation="include">
        </childnode>
      </node>
      <node id="72487">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="72491">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72492" relation="include">
        </childnode>
      </node>
      <node id="72474">
        <label>mtest/libmscore/copypaste/tst_copypaste.cpp</label>
        <link refid="tst__copypaste_8cpp"/>
        <childnode refid="72475" relation="include">
        </childnode>
        <childnode refid="72476" relation="include">
        </childnode>
        <childnode refid="72483" relation="include">
        </childnode>
        <childnode refid="72509" relation="include">
        </childnode>
        <childnode refid="72512" relation="include">
        </childnode>
        <childnode refid="72513" relation="include">
        </childnode>
        <childnode refid="72516" relation="include">
        </childnode>
        <childnode refid="72517" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
        <childnode refid="72520" relation="include">
        </childnode>
      </node>
      <node id="72488">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="72479" relation="include">
        </childnode>
        <childnode refid="72489" relation="include">
        </childnode>
      </node>
      <node id="72502">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="72503" relation="include">
        </childnode>
      </node>
      <node id="72503">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="72504" relation="include">
        </childnode>
        <childnode refid="72505" relation="include">
        </childnode>
        <childnode refid="72506" relation="include">
        </childnode>
      </node>
      <node id="72516">
        <label>libmscore/chord.h</label>
        <link refid="chord_8h"/>
        <childnode refid="72514" relation="include">
        </childnode>
        <childnode refid="72513" relation="include">
        </childnode>
      </node>
      <node id="72510">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72507" relation="include">
        </childnode>
      </node>
      <node id="72495">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="72490" relation="include">
        </childnode>
      </node>
      <node id="72476">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
      </node>
      <node id="72504">
        <label>vector</label>
      </node>
      <node id="72492">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="72517">
        <label>libmscore/xml.h</label>
        <link refid="xml_8h_source"/>
        <childnode refid="72518" relation="include">
        </childnode>
        <childnode refid="72519" relation="include">
        </childnode>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72498" relation="include">
        </childnode>
      </node>
      <node id="72478">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="72508">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="72479">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="72480" relation="include">
        </childnode>
      </node>
      <node id="72490">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="72491" relation="include">
        </childnode>
      </node>
      <node id="72486">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="72487" relation="include">
        </childnode>
      </node>
      <node id="72497">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
      </node>
      <node id="72519">
        <label>interval.h</label>
        <link refid="interval_8h_source"/>
      </node>
      <node id="72507">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
      </node>
      <node id="72477">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="72478" relation="include">
        </childnode>
        <childnode refid="72479" relation="include">
        </childnode>
        <childnode refid="72481" relation="include">
        </childnode>
        <childnode refid="72482" relation="include">
        </childnode>
      </node>
      <node id="72499">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="72500" relation="include">
        </childnode>
      </node>
      <node id="72506">
        <label>iostream</label>
      </node>
      <node id="72485">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="72480" relation="include">
        </childnode>
        <childnode refid="72486" relation="include">
        </childnode>
      </node>
      <node id="72484">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="72485" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
        <childnode refid="72497" relation="include">
        </childnode>
      </node>
      <node id="72493">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="72518">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72478" relation="include">
        </childnode>
        <childnode refid="72485" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
      </node>
      <node id="72513">
        <label>libmscore/chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="72514" relation="include">
        </childnode>
        <childnode refid="72490" relation="include">
        </childnode>
        <childnode refid="72515" relation="include">
        </childnode>
        <childnode refid="72497" relation="include">
        </childnode>
        <childnode refid="72482" relation="include">
        </childnode>
      </node>
      <node id="72480">
        <label>config.h</label>
      </node>
      <node id="72505">
        <label>algorithm</label>
      </node>
      <node id="72483">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="72480" relation="include">
        </childnode>
        <childnode refid="72484" relation="include">
        </childnode>
        <childnode refid="72498" relation="include">
        </childnode>
        <childnode refid="72499" relation="include">
        </childnode>
        <childnode refid="72501" relation="include">
        </childnode>
        <childnode refid="72502" relation="include">
        </childnode>
        <childnode refid="72507" relation="include">
        </childnode>
        <childnode refid="72508" relation="include">
        </childnode>
      </node>
      <node id="72481">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="72498">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="72494" relation="include">
        </childnode>
        <childnode refid="72485" relation="include">
        </childnode>
        <childnode refid="72488" relation="include">
        </childnode>
      </node>
      <node id="72489">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="72477" relation="include">
        </childnode>
        <childnode refid="72490" relation="include">
        </childnode>
        <childnode refid="72493" relation="include">
        </childnode>
        <childnode refid="72494" relation="include">
        </childnode>
        <childnode refid="72482" relation="include">
        </childnode>
        <childnode refid="72495" relation="include">
        </childnode>
        <childnode refid="72496" relation="include">
        </childnode>
      </node>
      <node id="72475">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_copy_paste" prot="public">TestCopyPaste</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__copypaste_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/copypaste/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/copypaste/tst_copypaste.cpp" line="24" column="9" bodyfile="mtest/libmscore/copypaste/tst_copypaste.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/chordrest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chord_8h" kindref="compound">libmscore/chord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/xml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/durationtype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/copypaste/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestCopyPaste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_test_copy_paste" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_copy_paste" kindref="compound">TestCopyPaste</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypastestaff(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypastevoice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypastetuplet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste01()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;01&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste02()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;02&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste03()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;03&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste04()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;04&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste05()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;05&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste06()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;06&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>copypaste07()<sp/>{<sp/>copypaste(&quot;07&quot;);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>start<sp/>ottava</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste08()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;08&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>ottava</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste09()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;09&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ottava</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste10()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>slurs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste11()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grace<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste12()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>voices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPaste2Voice();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>voices-partial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPaste2Voice2()<sp/>{<sp/>copypastevoice(</highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal">,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPaste2Voice3()<sp/>{<sp/>copypastevoice(</highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">,<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPaste2Voice4()<sp/>{<sp/>copypastevoice(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">,1);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>shorten<sp/>last<sp/>cr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPaste2Voice5();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>and<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste2Voice6();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPasteOnlySecondVoice();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste19()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;19&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chord<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPasteShortTremolo()<sp/>{<sp/>copypastevoice(</highlight><highlight class="stringliteral">&quot;21&quot;</highlight><highlight class="normal">,<sp/>1);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>tremolo<sp/>on<sp/>shorten<sp/>note<sp/>#30411</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste22()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cross-staff<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste23()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;23&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>measure<sp/>tuplet<sp/>10/8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypaste24()<sp/>{<sp/>copypaste(</highlight><highlight class="stringliteral">&quot;24&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>complex<sp/>non<sp/>reduced<sp/>tuplet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copypastestaff50()<sp/>{<sp/>copypastestaff(</highlight><highlight class="stringliteral">&quot;50&quot;</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>staff<sp/>&amp;<sp/>slurs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPastePartial();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPasteTuplet01()<sp/>{<sp/>copypastetuplet(</highlight><highlight class="stringliteral">&quot;01&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyPasteTuplet02()<sp/>{<sp/>copypastetuplet(</highlight><highlight class="stringliteral">&quot;02&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::initTestCase()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>copypaste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>copy<sp/>measure<sp/>2,<sp/>paste<sp/>into<sp/>measure<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copypaste(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>idx)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m3<sp/>=<sp/>m2-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m4<sp/>=<sp/>m3-&gt;nextMeasure();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m3<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m4<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score-&gt;nstaves()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2,<sp/>SelectType::RANGE,<sp/>score-&gt;nstaves()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>ba<sp/>=<sp/>score-&gt;selection().mimeData();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>ba);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m4-&gt;first()-&gt;element(0)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m4-&gt;first()-&gt;element(0));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1-ref.mscx&quot;</highlight><highlight class="normal">).arg(idx)));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>copypaste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>copy<sp/>measure<sp/>2<sp/>from<sp/>first<sp/>staff,<sp/>paste<sp/>into<sp/>staff<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copypastestaff(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>idx)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2,<sp/>SelectType::RANGE,<sp/>0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;deselectAll();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2,<sp/>SelectType::RANGE,<sp/>1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1-ref.mscx&quot;</highlight><highlight class="normal">).arg(idx)));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copyPastePartial()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_partial_01.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(0));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(4),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m1-&gt;first(SegmentType::ChordRest)-&gt;element(0));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_partial_01.mscx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_partial_01-ref.mscx&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copyPaste2Voice()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste13.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>2<sp/>chord<sp/>rests<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>first<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(static_cast&lt;Ms::Chord*&gt;(s-&gt;element(0))-&gt;notes().at(0));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(0),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>paste<sp/>into<sp/>the<sp/>second<sp/>CR<sp/>of<sp/>second<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>secondCRSeg<sp/>=<sp/>m2-&gt;first()-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(secondCRSeg-&gt;element(0));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste13.mscx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste13-ref.mscx&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>copypaste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>copy<sp/>measure<sp/>2<sp/>from<sp/>first<sp/>staff,<sp/>paste<sp/>into<sp/>staff<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copypastevoice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voice)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>range<sp/>selection<sp/>on<sp/>2<sp/>and<sp/>3<sp/>beat<sp/>of<sp/>first<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SegmentType<sp/>segTypeCR<sp/>=<sp/>SegmentType::ChordRest;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(segTypeCR)-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(segTypeCR);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(static_cast&lt;Ms::Chord*&gt;(s-&gt;element(voice))-&gt;notes().at(0));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(voice),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//paste<sp/>to<sp/>second<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2-&gt;first()-&gt;element(0));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1.mscx&quot;</highlight><highlight class="normal">).arg(idx),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste%1-ref.mscx&quot;</highlight><highlight class="normal">).arg(idx)));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copyPaste2Voice5()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste17.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>range<sp/>selection<sp/>from<sp/>2<sp/>eighth<sp/>note<sp/>to<sp/>the<sp/>end<sp/>of<sp/>first<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SegmentType<sp/>segTypeCR<sp/>=<sp/>SegmentType::ChordRest;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(segTypeCR)-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(segTypeCR);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(static_cast&lt;Ms::Chord*&gt;(s-&gt;element(0))-&gt;notes().at(0));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>m1-&gt;last()-&gt;prev(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(0),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdDeleteSelection();<sp/></highlight><highlight class="comment">//cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//paste<sp/>to<sp/>quarter<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>dest<sp/>=<sp/>m1-&gt;first()-&gt;next(segTypeCR)-&gt;next(segTypeCR)-&gt;next(segTypeCR)-&gt;element(0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(dest-&gt;isRest()<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest)-&gt;durationType()<sp/>==<sp/>TDuration::DurationType::V_QUARTER);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(dest);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste17.mscx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste17-ref.mscx&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copyPasteOnlySecondVoice()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste18.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m1,<sp/>SelectType::RANGE,<sp/>0);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;selectionFilter().setFiltered(SelectionFilterType::FIRST_VOICE,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//paste<sp/>to<sp/>second<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;deselectAll();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;selectionFilter().setFiltered(SelectionFilterType::FIRST_VOICE,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(m2,SelectType::RANGE);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste18.mscx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste18-ref.mscx&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copypaste2Voice6()</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste20.mscx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(m1<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>range<sp/>selection<sp/>from<sp/>2nd<sp/>eighth<sp/>note<sp/>to<sp/>the<sp/>end<sp/>of<sp/>first<sp/>measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SegmentType<sp/>segTypeCR<sp/>=<sp/>SegmentType::ChordRest;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(segTypeCR)-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(segTypeCR);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(static_cast&lt;Ms::Chord*&gt;(s-&gt;element(0))-&gt;notes().at(0));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>m1-&gt;last()-&gt;prev(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(1),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//paste<sp/>to<sp/>16th<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>dest<sp/>=<sp/>m1-&gt;first(segTypeCR)-&gt;next(segTypeCR)-&gt;next(segTypeCR)-&gt;next(segTypeCR)-&gt;next(segTypeCR)-&gt;element(0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>int(dest-&gt;type());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(dest-&gt;isRest()</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest)-&gt;durationType()<sp/>==<sp/>TDuration::DurationType::V_16TH);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(dest);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste20.mscx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste20-ref.mscx&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestCopyPaste::copypastetuplet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>idx)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_tuplet_%1.mscx&quot;</highlight><highlight class="normal">).arg(idx));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m1<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m2<sp/>=<sp/>m1-&gt;nextMeasure();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m1-&gt;first(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(static_cast&lt;Ms::Chord*&gt;(s-&gt;element(0))-&gt;notes().at(0));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(s-&gt;element(0),<sp/>SelectType::RANGE);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;selection().canCopy());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>mimeType<sp/>=<sp/>score-&gt;selection().mimeType();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(!mimeType.isEmpty());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMimeData*<sp/>mimeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMimeData;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mimeData-&gt;setData(mimeType,<sp/>score-&gt;selection().mimeData());</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::clipboard()-&gt;setMimeData(mimeData);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>dest<sp/>=<sp/>m2-&gt;first(SegmentType::ChordRest)-&gt;element(0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;select(dest);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" kindref="member">startCmd</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdPaste(mimeData,0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" kindref="member">endCmd</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_tuplet_%1.mscx&quot;</highlight><highlight class="normal">).arg(idx),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DIR<sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;copypaste_tuplet_%1-ref.mscx&quot;</highlight><highlight class="normal">).arg(idx)));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_copy_paste" kindref="compound">TestCopyPaste</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_copypaste.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/copypaste/tst_copypaste.cpp"/>
  </compounddef>
</doxygen>
