<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="asn1t_8h" kind="file" language="C++">
    <compoundname>asn1t.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="asn1_8h" local="no">openssl/asn1.h</includes>
    <incdepgraph>
      <node id="82206">
        <label>stdarg.h</label>
      </node>
      <node id="82211">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82214">
        <label>stdint.h</label>
      </node>
      <node id="82208">
        <label>stdlib.h</label>
      </node>
      <node id="82204">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82200" relation="include">
        </childnode>
        <childnode refid="82205" relation="include">
        </childnode>
        <childnode refid="82206" relation="include">
        </childnode>
        <childnode refid="82207" relation="include">
        </childnode>
        <childnode refid="82214" relation="include">
        </childnode>
      </node>
      <node id="82209">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82199">
        <label>stddef.h</label>
      </node>
      <node id="82215">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82200" relation="include">
        </childnode>
        <childnode refid="82205" relation="include">
        </childnode>
        <childnode refid="82212" relation="include">
        </childnode>
        <childnode refid="82207" relation="include">
        </childnode>
      </node>
      <node id="82213">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82200" relation="include">
        </childnode>
      </node>
      <node id="82202">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="82203" relation="include">
        </childnode>
        <childnode refid="82200" relation="include">
        </childnode>
        <childnode refid="82204" relation="include">
        </childnode>
        <childnode refid="82209" relation="include">
        </childnode>
        <childnode refid="82210" relation="include">
        </childnode>
        <childnode refid="82213" relation="include">
        </childnode>
        <childnode refid="82212" relation="include">
        </childnode>
        <childnode refid="82215" relation="include">
        </childnode>
      </node>
      <node id="82210">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82209" relation="include">
        </childnode>
      </node>
      <node id="82203">
        <label>time.h</label>
      </node>
      <node id="82201">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82198">
        <label>thirdparty/openssl/include/openssl/asn1t.h</label>
        <link refid="asn1t_8h"/>
        <childnode refid="82199" relation="include">
        </childnode>
        <childnode refid="82200" relation="include">
        </childnode>
        <childnode refid="82202" relation="include">
        </childnode>
      </node>
      <node id="82200">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82201" relation="include">
        </childnode>
      </node>
      <node id="82205">
        <label>stdio.h</label>
      </node>
      <node id="82212">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82200" relation="include">
        </childnode>
      </node>
      <node id="82207">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82208" relation="include">
        </childnode>
        <childnode refid="82200" relation="include">
        </childnode>
        <childnode refid="82205" relation="include">
        </childnode>
        <childnode refid="82209" relation="include">
        </childnode>
        <childnode refid="82210" relation="include">
        </childnode>
        <childnode refid="82211" relation="include">
        </childnode>
        <childnode refid="82212" relation="include">
        </childnode>
        <childnode refid="82213" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" prot="public">ASN1_TEMPLATE_st</innerclass>
    <innerclass refid="struct_a_s_n1___a_d_b__st" prot="public">ASN1_ADB_st</innerclass>
    <innerclass refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" prot="public">ASN1_ADB_TABLE_st</innerclass>
    <innerclass refid="struct_a_s_n1___i_t_e_m__st" prot="public">ASN1_ITEM_st</innerclass>
    <innerclass refid="struct_a_s_n1___t_l_c__st" prot="public">ASN1_TLC_st</innerclass>
    <innerclass refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" prot="public">ASN1_COMPAT_FUNCS_st</innerclass>
    <innerclass refid="struct_a_s_n1___e_x_t_e_r_n___f_u_n_c_s__st" prot="public">ASN1_EXTERN_FUNCS_st</innerclass>
    <innerclass refid="struct_a_s_n1___p_r_i_m_i_t_i_v_e___f_u_n_c_s__st" prot="public">ASN1_PRIMITIVE_FUNCS_st</innerclass>
    <innerclass refid="struct_a_s_n1___a_u_x__st" prot="public">ASN1_AUX_st</innerclass>
    <innerclass refid="struct_a_s_n1___p_r_i_n_t___a_r_g__st" prot="public">ASN1_PRINT_ARG_st</innerclass>
    <innerclass refid="struct_a_s_n1___s_t_r_e_a_m___a_r_g__st" prot="public">ASN1_STREAM_ARG_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="asn1t_8h_1a07327bdaa5ae36305ca045dd10c9be97" prot="public" static="no">
        <name>ASN1_ADB_ptr</name>
        <param><defname>iptr</defname></param>
        <initializer>((const <ref refid="struct_a_s_n1___a_d_b__st" kindref="compound">ASN1_ADB</ref> *)(iptr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="80" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa8b0635fdd2f7ce4ac32699873ff9f20" prot="public" static="no">
        <name>ASN1_ITEM_start</name>
        <param><defname>itname</defname></param>
        <initializer>OPENSSL_GLOBAL const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> itname##_it = {</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="85" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1afe78e1ab3fca88d5a2d315993b73a139" prot="public" static="no">
        <name>ASN1_ITEM_end</name>
        <param><defname>itname</defname></param>
        <initializer>};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="88" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ada605ce8e3782a357b706ad0f1619be1" prot="public" static="no">
        <name>ASN1_ITEM_TEMPLATE</name>
        <param><defname>tname</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> tname##_item_tt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a44f4612fdd2edc96b9ac7e0ed908808f" prot="public" static="no">
        <name>ASN1_ITEM_TEMPLATE_END</name>
        <param><defname>tname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_PRIMITIVE,\
		-1,\
		&amp;tname##_item_tt,\
		0,\
		NULL,\
		0,\
		#tname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="117" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a813e34e01bb4a363e3db25d189dfff9d" prot="public" static="no">
        <name>ASN1_SEQUENCE</name>
        <param><defname>tname</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> tname##_seq_tt[]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="152" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a83bc6aa3385aae8a7604bb7c8fe2c8a1" prot="public" static="no">
        <name>ASN1_SEQUENCE_END</name>
        <param><defname>stname</defname></param>
        <initializer>ASN1_SEQUENCE_END_name(stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="155" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ac83645b735c6819f49d449b098ec840e" prot="public" static="no">
        <name>ASN1_SEQUENCE_END_name</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_SEQUENCE,\
		V_ASN1_SEQUENCE,\
		tname##_seq_tt,\
		sizeof(tname##_seq_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		NULL,\
		sizeof(stname),\
		#stname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="157" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a1772746916f256a7b002978ccaa94ce1" prot="public" static="no">
        <name>ASN1_NDEF_SEQUENCE</name>
        <param><defname>tname</defname></param>
        <initializer>ASN1_SEQUENCE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="169" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa1b1197a3db778c4321031b5fa8b18a7" prot="public" static="no">
        <name>ASN1_NDEF_SEQUENCE_cb</name>
        <param><defname>tname</defname></param>
        <param><defname>cb</defname></param>
        <initializer>ASN1_SEQUENCE_cb(tname, cb)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="172" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0e0c2f9baf359eece91d62d86771245c" prot="public" static="no">
        <name>ASN1_SEQUENCE_cb</name>
        <param><defname>tname</defname></param>
        <param><defname>cb</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref> tname##_aux = {NULL, 0, 0, 0, cb, 0}; \
	ASN1_SEQUENCE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="175" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a8d22ab04dc0311a567d244f446103309" prot="public" static="no">
        <name>ASN1_BROKEN_SEQUENCE</name>
        <param><defname>tname</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref> tname##_aux = {NULL, ASN1_AFLG_BROKEN, 0, 0, 0, 0}; \
	ASN1_SEQUENCE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="179" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a015be660048d7c5c35a8db10391a4d59" prot="public" static="no">
        <name>ASN1_SEQUENCE_ref</name>
        <param><defname>tname</defname></param>
        <param><defname>cb</defname></param>
        <param><defname>lck</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref> tname##_aux = {NULL, ASN1_AFLG_REFCOUNT, offsetof(tname, references), lck, cb, 0}; \
	ASN1_SEQUENCE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="183" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aea3f71c73caedaa0562a3421d2cad242" prot="public" static="no">
        <name>ASN1_SEQUENCE_enc</name>
        <param><defname>tname</defname></param>
        <param><defname>enc</defname></param>
        <param><defname>cb</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref> tname##_aux = {NULL, ASN1_AFLG_ENCODING, 0, 0, cb, offsetof(tname, enc)}; \
	ASN1_SEQUENCE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="187" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0296ad95ede6eee107e865a5cb231222" prot="public" static="no">
        <name>ASN1_NDEF_SEQUENCE_END</name>
        <param><defname>tname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_NDEF_SEQUENCE,\
		V_ASN1_SEQUENCE,\
		tname##_seq_tt,\
		sizeof(tname##_seq_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		NULL,\
		sizeof(tname),\
		#tname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="191" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0719407903b0c4643c834c7502eba12d" prot="public" static="no">
        <name>ASN1_BROKEN_SEQUENCE_END</name>
        <param><defname>stname</defname></param>
        <initializer>ASN1_SEQUENCE_END_ref(stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="203" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a208947792a24bf65b071ac33d87d8e0a" prot="public" static="no">
        <name>ASN1_SEQUENCE_END_enc</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>ASN1_SEQUENCE_END_ref(stname, tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="205" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aeeab9bb6bda2a0df1fa0c98a0ef1b70b" prot="public" static="no">
        <name>ASN1_SEQUENCE_END_cb</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>ASN1_SEQUENCE_END_ref(stname, tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="207" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad044e7b130648f1404f8298be8cdb1e4" prot="public" static="no">
        <name>ASN1_SEQUENCE_END_ref</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_SEQUENCE,\
		V_ASN1_SEQUENCE,\
		tname##_seq_tt,\
		sizeof(tname##_seq_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		&amp;tname##_aux,\
		sizeof(stname),\
		#stname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="209" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a2f4050e8669b375ed1ecebd6a40b0538" prot="public" static="no">
        <name>ASN1_NDEF_SEQUENCE_END_cb</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_NDEF_SEQUENCE,\
		V_ASN1_SEQUENCE,\
		tname##_seq_tt,\
		sizeof(tname##_seq_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		&amp;tname##_aux,\
		sizeof(stname),\
		#stname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="221" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1adf108286265eec52d8f0a489de203756" prot="public" static="no">
        <name>ASN1_CHOICE</name>
        <param><defname>tname</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> tname##_ch_tt[]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="256" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a8aa6cb65fa17bdc6b6218eea3ef701f3" prot="public" static="no">
        <name>ASN1_CHOICE_cb</name>
        <param><defname>tname</defname></param>
        <param><defname>cb</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref> tname##_aux = {NULL, 0, 0, 0, cb, 0}; \
	ASN1_CHOICE(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="259" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad3e87a8e13235bb49b4f42a3bd77d5f5" prot="public" static="no">
        <name>ASN1_CHOICE_END</name>
        <param><defname>stname</defname></param>
        <initializer>ASN1_CHOICE_END_name(stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="263" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a9eb29c376cc166fb1ecff0712b1c1cb2" prot="public" static="no">
        <name>ASN1_CHOICE_END_name</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <initializer>ASN1_CHOICE_END_selector(stname, tname, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="265" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0f0fe34b9f6325c4f22cd68e34e046ed" prot="public" static="no">
        <name>ASN1_CHOICE_END_selector</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <param><defname>selname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_CHOICE,\
		offsetof(stname,selname) ,\
		tname##_ch_tt,\
		sizeof(tname##_ch_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		NULL,\
		sizeof(stname),\
		#stname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="267" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a8fe995b35921e9ae2dcadbdf5b1c1c3d" prot="public" static="no">
        <name>ASN1_CHOICE_END_cb</name>
        <param><defname>stname</defname></param>
        <param><defname>tname</defname></param>
        <param><defname>selname</defname></param>
        <initializer>;\
	ASN1_ITEM_start(tname) \
		ASN1_ITYPE_CHOICE,\
		offsetof(stname,selname) ,\
		tname##_ch_tt,\
		sizeof(tname##_ch_tt) / sizeof(<ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref>),\
		&amp;tname##_aux,\
		sizeof(stname),\
		#stname \
	ASN1_ITEM_end(tname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="279" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a7f7ba02d153aaadda86eb3d049c0300e" prot="public" static="no">
        <name>ASN1_EX_TEMPLATE_TYPE</name>
        <param><defname>flags</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>{ \
	(flags), (tag), 0,\
	#name, ASN1_ITEM_ref(type) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="293" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1acb13b83ec5c4248d896fd8e48d063101" prot="public" static="no">
        <name>ASN1_EX_TYPE</name>
        <param><defname>flags</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>{ \
	(flags), (tag), offsetof(stname, field),\
	#field, ASN1_ITEM_ref(type) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="301" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1abddd4759085b713c7e760bf0c5517731" prot="public" static="no">
        <name>ASN1_EX_COMBINE</name>
        <param><defname>flags</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>type</defname></param>
        <initializer>{ \
	(flags)|ASN1_TFLG_COMBINE, (tag), 0, NULL, ASN1_ITEM_ref(type) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="307" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a13203917d84f6a39ce74060925cb1b54" prot="public" static="no">
        <name>ASN1_IMP_EX</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>ex</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_IMPLICIT | ex, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="312" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a3e5fd265c8c6335ee41b848cc5919d21" prot="public" static="no">
        <name>ASN1_EXP_EX</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>ex</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_EXPLICIT | ex, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="315" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a4a5f2d960f64995cea4d4c4cd82c90b6" prot="public" static="no">
        <name>ASN1_ADB_OBJECT</name>
        <param><defname>tblname</defname></param>
        <initializer>{ ASN1_TFLG_ADB_OID, -1, 0, #tblname, (const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *)&amp;(tblname##_adb) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="321" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a2b855746a964f9a88ae4856b69b3cb7a" prot="public" static="no">
        <name>ASN1_ADB_INTEGER</name>
        <param><defname>tblname</defname></param>
        <initializer>{ ASN1_TFLG_ADB_INT, -1, 0, #tblname, (const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *)&amp;(tblname##_adb) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="322" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad64d30ae1c2f4200ef0752ac5626da44" prot="public" static="no">
        <name>ASN1_SIMPLE</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(0,0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="328" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aab911e3dd2ad97da3d1a99fb6d01a62a" prot="public" static="no">
        <name>ASN1_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL, 0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="331" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a34618fb67633543f996f026ac2f9177a" prot="public" static="no">
        <name>ASN1_IMP</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="334" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0720d4e7182ecc1ecc821575455c7970" prot="public" static="no">
        <name>ASN1_IMP_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="337" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1abccb5b2cd8466388277e3e040dc090a1" prot="public" static="no">
        <name>ASN1_EXP</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="341" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aebbb1638ab5d584ba0880173372e9ba2" prot="public" static="no">
        <name>ASN1_EXP_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="342" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a98b40e1a78f633c967f6ae9fca8f8fdd" prot="public" static="no">
        <name>ASN1_SEQUENCE_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF, 0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="345" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6f952e1bfdd20e214b3039df1980d215" prot="public" static="no">
        <name>ASN1_SEQUENCE_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL, 0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="349" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a787d39eeb2bcad636d797752be818ec6" prot="public" static="no">
        <name>ASN1_SET_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_SET_OF, 0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="354" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a67ff9491a9f74916aa64ceef2c61a6b5" prot="public" static="no">
        <name>ASN1_SET_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL, 0, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="357" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aece13c33d3586ffd0a148d375757fda2" prot="public" static="no">
        <name>ASN1_IMP_SET_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="362" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab8ae80fd37d4bac4bd326061b35b0f2f" prot="public" static="no">
        <name>ASN1_EXP_SET_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="365" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a39c711847250fb361a99b5de897be157" prot="public" static="no">
        <name>ASN1_IMP_SET_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="368" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1afe8d21a9d4cc35edf3cd86ea87a0d400" prot="public" static="no">
        <name>ASN1_EXP_SET_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="371" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad4b3b0f2596a5538d243879ba1124be1" prot="public" static="no">
        <name>ASN1_IMP_SEQUENCE_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="374" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1abb25e893a60dfc90adb6c3c42f5a08d4" prot="public" static="no">
        <name>ASN1_IMP_SEQUENCE_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_IMP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="377" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a36d75c153b1f24bcb7337d5073df22ab" prot="public" static="no">
        <name>ASN1_EXP_SEQUENCE_OF</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="380" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1abc37780179813b1328652e0a4f6e35d7" prot="public" static="no">
        <name>ASN1_EXP_SEQUENCE_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="383" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a66055b5efc7756f8e707811908ae04fb" prot="public" static="no">
        <name>ASN1_NDEF_EXP</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_NDEF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="387" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a1f802390888e8ed4322e81e24be6a09e" prot="public" static="no">
        <name>ASN1_NDEF_EXP_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EXP_EX(stname, field, type, tag, ASN1_TFLG_OPTIONAL|ASN1_TFLG_NDEF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="391" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a2e5ce37bd918d0a3fd545ea1d148e6b9" prot="public" static="no">
        <name>ASN1_ADB</name>
        <param><defname>name</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" kindref="compound">ASN1_ADB_TABLE</ref> name##_adbtbl[]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="396" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a9c1e2a389a94d64182d3806520e15c22" prot="public" static="no">
        <name>ASN1_ADB_END</name>
        <param><defname>name</defname></param>
        <param><defname>flags</defname></param>
        <param><defname>field</defname></param>
        <param><defname>app_table</defname></param>
        <param><defname>def</defname></param>
        <param><defname>none</defname></param>
        <initializer>;\
	static const <ref refid="struct_a_s_n1___a_d_b__st" kindref="compound">ASN1_ADB</ref> name##_adb = {\
		flags,\
		offsetof(name, field),\
		app_table,\
		name##_adbtbl,\
		sizeof(name##_adbtbl) / sizeof(<ref refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" kindref="compound">ASN1_ADB_TABLE</ref>),\
		def,\
		none\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="401" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0b4e802c28a7651ac64f3d68261025da" prot="public" static="no">
        <name>ADB_ENTRY</name>
        <param><defname>val</defname></param>
        <param><defname>template</defname></param>
        <initializer>{val, template}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="435" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a287644b2d78a2a07a9c34b28eeb442f9" prot="public" static="no">
        <name>ASN1_ADB_TEMPLATE</name>
        <param><defname>name</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> name##_tt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="437" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a2a7f6ec335189d589c379a4bf60a1bf8" prot="public" static="no">
        <name>ASN1_TEMPLATE_item</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;item_ptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="458" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a34653ac313f8971702635e4c2b5b95c1" prot="public" static="no">
        <name>ASN1_TEMPLATE_adb</name>
        <param><defname>t</defname></param>
        <initializer>(t-&gt;item_ptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="459" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ae5f2aa52f77cc9cae3529f819bee655a" prot="public" static="no">
        <name>ASN1_TFLG_OPTIONAL</name>
        <initializer>(0x1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="482" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a21031011caea253ff174d1f3c161f6e5" prot="public" static="no">
        <name>ASN1_TFLG_SET_OF</name>
        <initializer>(0x1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="485" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa0e87e4a76a2f803e880affac12e6c19" prot="public" static="no">
        <name>ASN1_TFLG_SEQUENCE_OF</name>
        <initializer>(0x2 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="488" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ac7dddc8386ba2fbfaa612002d47a5b71" prot="public" static="no">
        <name>ASN1_TFLG_SET_ORDER</name>
        <initializer>(0x3 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="495" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ac9e13d8f8a5a8f989effccb3eda62695" prot="public" static="no">
        <name>ASN1_TFLG_SK_MASK</name>
        <initializer>(0x3 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="498" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a248e69981f173e43c3bc68540bd3c0a8" prot="public" static="no">
        <name>ASN1_TFLG_IMPTAG</name>
        <initializer>(0x1 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="506" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aceb86fd9ec64a36e9d3b55c4d1f86f66" prot="public" static="no">
        <name>ASN1_TFLG_EXPTAG</name>
        <initializer>(0x2 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="510" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6b65a2f5c1c0eb9b28256d35780bb471" prot="public" static="no">
        <name>ASN1_TFLG_TAG_MASK</name>
        <initializer>(0x3 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="512" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a68baefe616d383ce94de30d374e401d9" prot="public" static="no">
        <name>ASN1_TFLG_IMPLICIT</name>
        <initializer>ASN1_TFLG_IMPTAG|ASN1_TFLG_CONTEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="515" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa904ebe23a40826ffb5b69f5a62c039a" prot="public" static="no">
        <name>ASN1_TFLG_EXPLICIT</name>
        <initializer>ASN1_TFLG_EXPTAG|ASN1_TFLG_CONTEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="518" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a3801db277745b644ef1f4b24613fb265" prot="public" static="no">
        <name>ASN1_TFLG_UNIVERSAL</name>
        <initializer>(0x0&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="527" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a01ed9e9a3aa2f492744b498e7d96aad5" prot="public" static="no">
        <name>ASN1_TFLG_APPLICATION</name>
        <initializer>(0x1&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="529" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a682dde5377d8147e47b9904158d42ca5" prot="public" static="no">
        <name>ASN1_TFLG_CONTEXT</name>
        <initializer>(0x2&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="531" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad3940138c797eb62a9807aab6a17179a" prot="public" static="no">
        <name>ASN1_TFLG_PRIVATE</name>
        <initializer>(0x3&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="533" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a512049cc4b503fcd5d6d91c2213fd38f" prot="public" static="no">
        <name>ASN1_TFLG_TAG_CLASS</name>
        <initializer>(0x3&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="535" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a627853a788f729c9ca2c0b1d84cc19af" prot="public" static="no">
        <name>ASN1_TFLG_ADB_MASK</name>
        <initializer>(0x3&lt;&lt;8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="543" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a7a5311be37a87b1e7beb36e484d2690f" prot="public" static="no">
        <name>ASN1_TFLG_ADB_OID</name>
        <initializer>(0x1&lt;&lt;8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="545" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a696c7e367af4aca19cf17ba2e3499a42" prot="public" static="no">
        <name>ASN1_TFLG_ADB_INT</name>
        <initializer>(0x1&lt;&lt;9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="547" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1afbc8c857e9359cd31d1bba40f392b4d3" prot="public" static="no">
        <name>ASN1_TFLG_COMBINE</name>
        <initializer>(0x1&lt;&lt;10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="557" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aaa01dbc24e3db24a89dcfd3019adbb56" prot="public" static="no">
        <name>ASN1_TFLG_NDEF</name>
        <initializer>(0x1&lt;&lt;11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="564" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1abbb258305392fd99072a69884f00d994" prot="public" static="no">
        <name>ASN1_ITYPE_PRIMITIVE</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="624" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa6f91eb0c5cd67effa55edb87e99ec97" prot="public" static="no">
        <name>ASN1_ITYPE_SEQUENCE</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="626" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0cc6b2ea3f999f98632223c5cf6b0334" prot="public" static="no">
        <name>ASN1_ITYPE_CHOICE</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="628" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a66eef0de339bec7a229c96b8c47a818d" prot="public" static="no">
        <name>ASN1_ITYPE_COMPAT</name>
        <initializer>0x3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="630" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a408744db27f4e2c85ff479e691a99b30" prot="public" static="no">
        <name>ASN1_ITYPE_EXTERN</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="632" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aab22f163721be2d706b4303753ade93f" prot="public" static="no">
        <name>ASN1_ITYPE_MSTRING</name>
        <initializer>0x5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="634" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6c2a46d57cb73c2353d183e55324c5b2" prot="public" static="no">
        <name>ASN1_ITYPE_NDEF_SEQUENCE</name>
        <initializer>0x6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="636" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a005f65f6c4b0b7423d37acffa5be2c40" prot="public" static="no">
        <name>ASN1_AFLG_REFCOUNT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="751" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab46a974fd39f06b8aa967e594bb30463" prot="public" static="no">
        <name>ASN1_AFLG_ENCODING</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="753" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0eace2eccdc6b5faf6e31b62a42e90e3" prot="public" static="no">
        <name>ASN1_AFLG_BROKEN</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="755" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aabd7cefc6cbfa32bec24bb2bad9475ed" prot="public" static="no">
        <name>ASN1_OP_NEW_PRE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="759" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a3988521257de52125a2c584b324fa642" prot="public" static="no">
        <name>ASN1_OP_NEW_POST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="760" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1adc47a21baeed73a3573a99c56766d5d4" prot="public" static="no">
        <name>ASN1_OP_FREE_PRE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="761" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6f2b59c5bf13266417cbb680554d6147" prot="public" static="no">
        <name>ASN1_OP_FREE_POST</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="762" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab162bcfb8b8c723c4334167b897e89f0" prot="public" static="no">
        <name>ASN1_OP_D2I_PRE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="763" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ac0f2938fa25cb67984dc20eab36b4264" prot="public" static="no">
        <name>ASN1_OP_D2I_POST</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="764" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab0f3e83c893693dcc682f0ebf43eb85f" prot="public" static="no">
        <name>ASN1_OP_I2D_PRE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="765" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6ca1b5c6e4a8d405c2eab343b1fca259" prot="public" static="no">
        <name>ASN1_OP_I2D_POST</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="766" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a33516e5fc1e50875d611cdb9b89ca1d2" prot="public" static="no">
        <name>ASN1_OP_PRINT_PRE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="767" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ac8bf63150413588102dc0d3ea367e52e" prot="public" static="no">
        <name>ASN1_OP_PRINT_POST</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="768" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a33e9434d5d0027c32ecdac5b7749de55" prot="public" static="no">
        <name>ASN1_OP_STREAM_PRE</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="769" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa25e12bec9dc13e9304baa839d68cc85" prot="public" static="no">
        <name>ASN1_OP_STREAM_POST</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="770" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aae0d530e37711ceb91aea0342d531214" prot="public" static="no">
        <name>ASN1_OP_DETACHED_PRE</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="771" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a95136bd082be4810b37e89ad8c11fda3" prot="public" static="no">
        <name>ASN1_OP_DETACHED_POST</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="772" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aad8418160ff77f598cb9e4dc4b565ee6" prot="public" static="no">
        <name>IMPLEMENT_ASN1_TYPE</name>
        <param><defname>stname</defname></param>
        <initializer>IMPLEMENT_ASN1_TYPE_ex(stname, stname, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="775" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a87b9310852537145e6c70e3b076629a6" prot="public" static="no">
        <name>IMPLEMENT_ASN1_TYPE_ex</name>
        <param><defname>itname</defname></param>
        <param><defname>vname</defname></param>
        <param><defname>ex</defname></param>
        <initializer>ASN1_ITEM_start(itname) \
					ASN1_ITYPE_PRIMITIVE, V_##vname, NULL, 0, NULL, ex, #itname \
				ASN1_ITEM_end(itname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="776" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a9bf20f2a7a7ed88e027d4e0832f5927f" prot="public" static="no">
        <name>IMPLEMENT_ASN1_MSTRING</name>
        <param><defname>itname</defname></param>
        <param><defname>mask</defname></param>
        <initializer>ASN1_ITEM_start(itname) \
					ASN1_ITYPE_MSTRING, mask, NULL, 0, NULL, sizeof(<ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref>), #itname \
				ASN1_ITEM_end(itname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="782" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aee695c55bbd4ea10fb63ff15281fb4df" prot="public" static="no">
        <name>IMPLEMENT_COMPAT_ASN1</name>
        <param><defname>sname</defname></param>
        <initializer>IMPLEMENT_COMPAT_ASN1_type(sname, V_ASN1_SEQUENCE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="789" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1aa888723d9e9fd08db15e096b5ef6c2c5" prot="public" static="no">
        <name>IMPLEMENT_COMPAT_ASN1_type</name>
        <param><defname>sname</defname></param>
        <param><defname>tag</defname></param>
        <initializer>static const <ref refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" kindref="compound">ASN1_COMPAT_FUNCS</ref> sname##_ff = { \
		(ASN1_new_func *)sname##_new, \
		(ASN1_free_func *)sname##_free, \
		(ASN1_d2i_func *)d2i_##sname, \
		(ASN1_i2d_func *)i2d_##sname, \
	}; \
	ASN1_ITEM_start(sname) \
		ASN1_ITYPE_COMPAT, \
		tag, \
		NULL, \
		0, \
		&amp;sname##_ff, \
		0, \
		#sname \
	ASN1_ITEM_end(sname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="791" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a69e3b88857534d5dec51825d8597c499" prot="public" static="no">
        <name>IMPLEMENT_EXTERN_ASN1</name>
        <param><defname>sname</defname></param>
        <param><defname>tag</defname></param>
        <param><defname>fptrs</defname></param>
        <initializer>ASN1_ITEM_start(sname) \
		ASN1_ITYPE_EXTERN, \
		tag, \
		NULL, \
		0, \
		&amp;fptrs, \
		0, \
		#sname \
	ASN1_ITEM_end(sname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="808" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a1253a6ea10166c7524f6014238a52a37" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS</name>
        <param><defname>stname</defname></param>
        <initializer>IMPLEMENT_ASN1_FUNCTIONS_fname(stname, stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="821" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab9dd6bf7b194b2f80d62a2e1ed744a48" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS_name</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <initializer>IMPLEMENT_ASN1_FUNCTIONS_fname(stname, itname, itname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="823" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ad221cfae1d9f45e956688f20bdcf9b42" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS_ENCODE_name</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <initializer>IMPLEMENT_ASN1_FUNCTIONS_ENCODE_fname(stname, itname, itname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="825" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a98027de22e499c790d013eecfcc4766b" prot="public" static="no">
        <name>IMPLEMENT_STATIC_ASN1_ALLOC_FUNCTIONS</name>
        <param><defname>stname</defname></param>
        <initializer>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(static, stname, stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="828" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a078e3dc8426b893dafeb933a92e751a7" prot="public" static="no">
        <name>IMPLEMENT_ASN1_ALLOC_FUNCTIONS</name>
        <param><defname>stname</defname></param>
        <initializer>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="831" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a4f7438ece076d0b272c82aebfd5fd024" prot="public" static="no">
        <name>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname</name>
        <param><defname>pre</defname></param>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>pre stname *fname##_new(void) \
	{ \
		return (stname *)ASN1_item_new(ASN1_ITEM_rptr(itname)); \
	} \
	pre void fname##_free(stname *a) \
	{ \
		ASN1_item_free((ASN1_VALUE *)a, ASN1_ITEM_rptr(itname)); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="834" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a325c98362764a3a4c2504625d587e4c6" prot="public" static="no">
        <name>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>stname *fname##_new(void) \
	{ \
		return (stname *)ASN1_item_new(ASN1_ITEM_rptr(itname)); \
	} \
	void fname##_free(stname *a) \
	{ \
		ASN1_item_free((ASN1_VALUE *)a, ASN1_ITEM_rptr(itname)); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="844" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a62505ebadcb15333ae3b264c6703c455" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname, itname, fname) \
	IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, itname, fname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="854" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a2ae856cf880c98aebb0fd595c75df21e" prot="public" static="no">
        <name>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>stname *d2i_##fname(stname **a, const unsigned char **in, long len) \
	{ \
		return (stname *)ASN1_item_d2i((ASN1_VALUE **)a, in, len, ASN1_ITEM_rptr(itname));\
	} \
	int i2d_##fname(stname *a, unsigned char **out) \
	{ \
		return ASN1_item_i2d((ASN1_VALUE *)a, out, ASN1_ITEM_rptr(itname));\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="858" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a89f4c777ef45f8c2e4fcd15da92431ba" prot="public" static="no">
        <name>IMPLEMENT_ASN1_NDEF_FUNCTION</name>
        <param><defname>stname</defname></param>
        <initializer>int i2d_##stname##_NDEF(stname *a, unsigned char **out) \
	{ \
		return ASN1_item_ndef_i2d((ASN1_VALUE *)a, out, ASN1_ITEM_rptr(stname));\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="868" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="868" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a06de3cec2d9e135bb7218c2020fda269" prot="public" static="no">
        <name>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>stname *d2i_##fname(stname **a, const unsigned char **in, long len) \
	{ \
		return (stname *)ASN1_item_d2i((ASN1_VALUE **)a, in, len, ASN1_ITEM_rptr(itname));\
	} \
	int i2d_##fname(const stname *a, unsigned char **out) \
	{ \
		return ASN1_item_i2d((ASN1_VALUE *)a, out, ASN1_ITEM_rptr(itname));\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="877" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a5b9c059c17a307a4d8d346c4b1d04ab4" prot="public" static="no">
        <name>IMPLEMENT_ASN1_DUP_FUNCTION</name>
        <param><defname>stname</defname></param>
        <initializer>stname * stname##_dup(stname *x) \
        { \
        return ASN1_item_dup(ASN1_ITEM_rptr(stname), x); \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="887" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a6614062e7ddf4944da97041c0f6c336c" prot="public" static="no">
        <name>IMPLEMENT_ASN1_PRINT_FUNCTION</name>
        <param><defname>stname</defname></param>
        <initializer>IMPLEMENT_ASN1_PRINT_FUNCTION_fname(stname, stname, stname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="893" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a592808bc6765b07d16428ec81b6d6921" prot="public" static="no">
        <name>IMPLEMENT_ASN1_PRINT_FUNCTION_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>int fname##_print_ctx(<ref refid="structbio__st" kindref="compound">BIO</ref> *out, stname *x, int indent, \
						const ASN1_PCTX *pctx) \
	{ \
		return ASN1_item_print(out, (ASN1_VALUE *)x, indent, \
			ASN1_ITEM_rptr(itname), pctx); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="896" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1ab8631faf6c249d5b06d31f24e6d0a523" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS_const</name>
        <param><defname>name</defname></param>
        <initializer>IMPLEMENT_ASN1_FUNCTIONS_const_fname(name, name, name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="904" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asn1t_8h_1a0f6e3733cf71802efcdfcbf473644394" prot="public" static="no">
        <name>IMPLEMENT_ASN1_FUNCTIONS_const_fname</name>
        <param><defname>stname</defname></param>
        <param><defname>itname</defname></param>
        <param><defname>fname</defname></param>
        <initializer>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(stname, itname, fname) \
	IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname, itname, fname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="907" column="9" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="907" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="asn1t_8h_1a5fb2bc0218a977f3b0de4df83e654f94" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" kindref="compound">ASN1_ADB_TABLE_st</ref></type>
        <definition>typedef struct ASN1_ADB_TABLE_st ASN1_ADB_TABLE</definition>
        <argsstring></argsstring>
        <name>ASN1_ADB_TABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="573" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a89b41da76a387fd0d608a2b940492a5e" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___a_d_b__st" kindref="compound">ASN1_ADB_st</ref></type>
        <definition>typedef struct ASN1_ADB_st ASN1_ADB</definition>
        <argsstring></argsstring>
        <name>ASN1_ADB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="573" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a696ae7e8588980942989681270ec8244" prot="public" static="no">
        <type>ASN1_VALUE *</type>
        <definition>typedef ASN1_VALUE* ASN1_new_func(void)</definition>
        <argsstring>(void)</argsstring>
        <name>ASN1_new_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="654" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1ae84e006be7de18d7b22b41234df98f7e" prot="public" static="no">
        <type>void</type>
        <definition>typedef void ASN1_free_func(ASN1_VALUE *a)</definition>
        <argsstring>(ASN1_VALUE *a)</argsstring>
        <name>ASN1_free_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="655" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a560e54cc16622ea072a23306828eaf2a" prot="public" static="no">
        <type>ASN1_VALUE *</type>
        <definition>typedef ASN1_VALUE* ASN1_d2i_func(ASN1_VALUE **a, const unsigned char **in, long length)</definition>
        <argsstring>(ASN1_VALUE **a, const unsigned char **in, long length)</argsstring>
        <name>ASN1_d2i_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="656" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a851672d2447ec1a37c86990ade25c140" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_i2d_func(ASN1_VALUE *a, unsigned char **in)</definition>
        <argsstring>(ASN1_VALUE *a, unsigned char **in)</argsstring>
        <name>ASN1_i2d_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="657" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a664088a4b0e2ebbfea6565bbc5418fc0" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_ex_d2i(ASN1_VALUE **pval, const unsigned char **in, long len, const ASN1_ITEM *it, int tag, int aclass, char opt, ASN1_TLC *ctx)</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char **in, long len, const ASN1_ITEM *it, int tag, int aclass, char opt, ASN1_TLC *ctx)</argsstring>
        <name>ASN1_ex_d2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="659" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a21b1e839f19dc49f6d7dc03bd9234cc6" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_ex_i2d(ASN1_VALUE **pval, unsigned char **out, const ASN1_ITEM *it, int tag, int aclass)</definition>
        <argsstring>(ASN1_VALUE **pval, unsigned char **out, const ASN1_ITEM *it, int tag, int aclass)</argsstring>
        <name>ASN1_ex_i2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="662" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a974a90edb24a690e5e664128a975412e" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_ex_new_func(ASN1_VALUE **pval, const ASN1_ITEM *it)</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_ex_new_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="663" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a98b861bda8c86873a9d02978fcba10cf" prot="public" static="no">
        <type>void</type>
        <definition>typedef void ASN1_ex_free_func(ASN1_VALUE **pval, const ASN1_ITEM *it)</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_ex_free_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="664" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1aeecb5cffbc57ff964405d46408ae0e45" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_ex_print_func(BIO *out, ASN1_VALUE **pval, int indent, const char *fname, const ASN1_PCTX *pctx)</definition>
        <argsstring>(BIO *out, ASN1_VALUE **pval, int indent, const char *fname, const ASN1_PCTX *pctx)</argsstring>
        <name>ASN1_ex_print_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="666" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a72e2873d17f193fa4ea3065ec836faeb" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_primitive_i2c(ASN1_VALUE **pval, unsigned char *cont, int *putype, const ASN1_ITEM *it)</definition>
        <argsstring>(ASN1_VALUE **pval, unsigned char *cont, int *putype, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_primitive_i2c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="670" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1ab34a4f1715f45ed81e472fd414514dde" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_primitive_c2i(ASN1_VALUE **pval, const unsigned char *cont, int len, int utype, char *free_cont, const ASN1_ITEM *it)</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char *cont, int len, int utype, char *free_cont, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_primitive_c2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="671" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1ab187aa961b579cd7c27152c51a3e21b3" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_primitive_print(BIO *out, ASN1_VALUE **pval, const ASN1_ITEM *it, int indent, const ASN1_PCTX *pctx)</definition>
        <argsstring>(BIO *out, ASN1_VALUE **pval, const ASN1_ITEM *it, int indent, const ASN1_PCTX *pctx)</argsstring>
        <name>ASN1_primitive_print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="672" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1ab09babebc987dd9c24daa3ebdcf723d3" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" kindref="compound">ASN1_COMPAT_FUNCS_st</ref></type>
        <definition>typedef struct ASN1_COMPAT_FUNCS_st  ASN1_COMPAT_FUNCS</definition>
        <argsstring></argsstring>
        <name>ASN1_COMPAT_FUNCS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a576fcca8bbad3a79cdee12427a782089" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___e_x_t_e_r_n___f_u_n_c_s__st" kindref="compound">ASN1_EXTERN_FUNCS_st</ref></type>
        <definition>typedef struct ASN1_EXTERN_FUNCS_st  ASN1_EXTERN_FUNCS</definition>
        <argsstring></argsstring>
        <name>ASN1_EXTERN_FUNCS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a5baf45d4b0613073e45262834788bf08" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___p_r_i_m_i_t_i_v_e___f_u_n_c_s__st" kindref="compound">ASN1_PRIMITIVE_FUNCS_st</ref></type>
        <definition>typedef struct ASN1_PRIMITIVE_FUNCS_st  ASN1_PRIMITIVE_FUNCS</definition>
        <argsstring></argsstring>
        <name>ASN1_PRIMITIVE_FUNCS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a2b027ba8d1c547004686872d2ce6a295" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ASN1_aux_cb(int operation, ASN1_VALUE **in, const ASN1_ITEM *it, void *exarg)</definition>
        <argsstring>(int operation, ASN1_VALUE **in, const ASN1_ITEM *it, void *exarg)</argsstring>
        <name>ASN1_aux_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="719" column="1" bodyfile="thirdparty/openssl/include/openssl/asn1t.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1aafd97bc94c881dad039665a064d05e52" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX_st</ref></type>
        <definition>typedef struct ASN1_AUX_st  ASN1_AUX</definition>
        <argsstring></argsstring>
        <name>ASN1_AUX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="729" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1a5b5ace9009883d39c7b8f4dee3ffd5f0" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___p_r_i_n_t___a_r_g__st" kindref="compound">ASN1_PRINT_ARG_st</ref></type>
        <definition>typedef struct ASN1_PRINT_ARG_st  ASN1_PRINT_ARG</definition>
        <argsstring></argsstring>
        <name>ASN1_PRINT_ARG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="736" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="asn1t_8h_1abe48b017cbdc06f19ecd068b523e363c" prot="public" static="no">
        <type>struct <ref refid="struct_a_s_n1___s_t_r_e_a_m___a_r_g__st" kindref="compound">ASN1_STREAM_ARG_st</ref></type>
        <definition>typedef struct ASN1_STREAM_ARG_st  ASN1_STREAM_ARG</definition>
        <argsstring></argsstring>
        <name>ASN1_STREAM_ARG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="746" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="asn1t_8h_1a766a96532807da1cef6018bd701f7bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_ex_new</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_ex_new</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="926" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a81f38e01cf9280a511499cc54b299e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_item_ex_free</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_item_ex_free</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="927" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1acca509b2dc848263c98f1fe9890f1537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_template_new</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_TEMPLATE *tt)</argsstring>
        <name>ASN1_template_new</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a70d12aeacd426fd54b9a64837c4b0b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_primitive_new</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_primitive_new</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="929" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1ad841f6c7b40dffe25039a47d71f23c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_template_free</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_TEMPLATE *tt)</argsstring>
        <name>ASN1_template_free</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a97d8df6533ab027de378bc75f10f4fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_template_d2i</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char **in, long len, const ASN1_TEMPLATE *tt)</argsstring>
        <name>ASN1_template_d2i</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1ae468bdef89c57e81f1e6082f52b94c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_ex_d2i</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char **in, long len, const ASN1_ITEM *it, int tag, int aclass, char opt, ASN1_TLC *ctx)</argsstring>
        <name>ASN1_item_ex_d2i</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aclass</declname>
        </param>
        <param>
          <type>char</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="933" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a36ff8bc173ef93bbc04b5306fd1e8ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_ex_i2d</definition>
        <argsstring>(ASN1_VALUE **pval, unsigned char **out, const ASN1_ITEM *it, int tag, int aclass)</argsstring>
        <name>ASN1_item_ex_i2d</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a6fef57b7e893783326b407478b571591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_template_i2d</definition>
        <argsstring>(ASN1_VALUE **pval, unsigned char **out, const ASN1_TEMPLATE *tt)</argsstring>
        <name>ASN1_template_i2d</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="937" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a51e1d4cf5f73372f5bb70186c8de6e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ASN1_primitive_free</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>ASN1_primitive_free</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="938" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a41295e98b69146094285f74f7cf3aa73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_ex_i2c</definition>
        <argsstring>(ASN1_VALUE **pval, unsigned char *cont, int *putype, const ASN1_ITEM *it)</argsstring>
        <name>asn1_ex_i2c</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>putype</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a57618215d5aa6237763ff9fac9ba6391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_ex_c2i</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char *cont, int len, int utype, char *free_cont, const ASN1_ITEM *it)</argsstring>
        <name>asn1_ex_c2i</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utype</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>free_cont</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="941" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a479a3865a5fdd6fcdf64a87e2910e356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_get_choice_selector</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>asn1_get_choice_selector</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="943" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1ac61a38ce19a5c51726450e479ca698a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_set_choice_selector</definition>
        <argsstring>(ASN1_VALUE **pval, int value, const ASN1_ITEM *it)</argsstring>
        <name>asn1_set_choice_selector</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="944" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a15b5f094a23e8e68ac3ff70ccd1d09c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASN1_VALUE **</type>
        <definition>ASN1_VALUE** asn1_get_field_ptr</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_TEMPLATE *tt)</argsstring>
        <name>asn1_get_field_ptr</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="946" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a6960f69a6a696977ba45217156c479df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
        <definition>const ASN1_TEMPLATE* asn1_do_adb</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_TEMPLATE *tt, int nullerr)</argsstring>
        <name>asn1_do_adb</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref> *</type>
          <declname>tt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nullerr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a90db0dfa0fefe04eae9f2e3e2ec5f53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_do_lock</definition>
        <argsstring>(ASN1_VALUE **pval, int op, const ASN1_ITEM *it)</argsstring>
        <name>asn1_do_lock</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a3a9de1dd9de6c73e27bc8bb6db88c632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1_enc_init</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>asn1_enc_init</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="952" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a277178512b1dc9ae13d4ccd916fe37aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1_enc_free</definition>
        <argsstring>(ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>asn1_enc_free</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1a19d00761d6d4bb7438b91c50f788c225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_enc_restore</definition>
        <argsstring>(int *len, unsigned char **out, ASN1_VALUE **pval, const ASN1_ITEM *it)</argsstring>
        <name>asn1_enc_restore</name>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="asn1t_8h_1ad556d88ab021c6d1363de3d41f0b81c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int asn1_enc_save</definition>
        <argsstring>(ASN1_VALUE **pval, const unsigned char *in, int inlen, const ASN1_ITEM *it)</argsstring>
        <name>asn1_enc_save</name>
        <param>
          <type>ASN1_VALUE **</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inlen</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/asn1t.h" line="955" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>asn1t.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Written<sp/>by<sp/>Dr<sp/>Stephen<sp/>N<sp/>Henson<sp/>(steve@openssl.org)<sp/>for<sp/>the<sp/>OpenSSL</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>project<sp/>2000.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2000-2005<sp/>The<sp/>OpenSSL<sp/>Project.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgment:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit.<sp/>(http://www.OpenSSL.org/)&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>4.<sp/>The<sp/>names<sp/>&quot;OpenSSL<sp/>Toolkit&quot;<sp/>and<sp/>&quot;OpenSSL<sp/>Project&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>prior<sp/>written<sp/>permission.<sp/>For<sp/>written<sp/>permission,<sp/>please<sp/>contact</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>licensing@OpenSSL.org.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>5.<sp/>Products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>may<sp/>not<sp/>be<sp/>called<sp/>&quot;OpenSSL&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>nor<sp/>may<sp/>&quot;OpenSSL&quot;<sp/>appear<sp/>in<sp/>their<sp/>names<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>permission<sp/>of<sp/>the<sp/>OpenSSL<sp/>Project.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>6.<sp/>Redistributions<sp/>of<sp/>any<sp/>form<sp/>whatsoever<sp/>must<sp/>retain<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>acknowledgment:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit<sp/>(http://www.OpenSSL.org/)&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>OR</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by<sp/>Eric<sp/>Young</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>(eay@cryptsoft.com).<sp/><sp/>This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_ASN1T_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_ASN1T_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_BUILD_SHLIBCRYPTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>OPENSSL_EXTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>OPENSSL_EXTERN<sp/>OPENSSL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASN1<sp/>template<sp/>defines,<sp/>structures<sp/>and<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_EXPORT_VAR_AS_FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>obtain<sp/>ASN1_ADB<sp/>pointer<sp/>from<sp/>a<sp/>type<sp/>(only<sp/>used<sp/>internally)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_ptr(iptr)<sp/>((const<sp/>ASN1_ADB<sp/>*)(iptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>start<sp/>and<sp/>end<sp/>of<sp/>ASN1_ITEM<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_start(itname)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_GLOBAL<sp/>const<sp/>ASN1_ITEM<sp/>itname##_it<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_end(itname)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>obtain<sp/>ASN1_ADB<sp/>pointer<sp/>from<sp/>a<sp/>type<sp/>(only<sp/>used<sp/>internally)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_ptr(iptr)<sp/>((const<sp/>ASN1_ADB<sp/>*)(iptr()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>start<sp/>and<sp/>end<sp/>of<sp/>ASN1_ITEM<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_start(itname)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>ASN1_ITEM<sp/>*<sp/>itname##_it(void)<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_ITEM<sp/>local_it<sp/>=<sp/>{<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_end(itname)<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>&amp;local_it;<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>to<sp/>aid<sp/>ASN1<sp/>template<sp/>writing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_TEMPLATE(tname)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_TEMPLATE<sp/>tname##_item_tt<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITEM_TEMPLATE_END(tname)<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_PRIMITIVE,\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tname##_item_tt,\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#tname<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>ASN1<sp/>type<sp/>which<sp/>just<sp/>embeds<sp/>a<sp/>template<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>pair<sp/>helps<sp/>declare<sp/>a<sp/>SEQUENCE.<sp/>We<sp/>can<sp/>do:</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/>ASN1_SEQUENCE(stname)<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>SEQUENCE<sp/>components<sp/>...</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/>}<sp/>ASN1_SEQUENCE_END(stname)</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>will<sp/>produce<sp/>an<sp/>ASN1_ITEM<sp/>called<sp/>stname_it</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>a<sp/>structure<sp/>called<sp/>stname.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>you<sp/>want<sp/>the<sp/>same<sp/>structure<sp/>but<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/>name<sp/>then<sp/>use:</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/>ASN1_SEQUENCE(itname)<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>SEQUENCE<sp/>components<sp/>...</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/>}<sp/>ASN1_SEQUENCE_END_name(stname,<sp/>itname)</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>will<sp/>create<sp/>an<sp/>item<sp/>called<sp/>itname_it<sp/>using</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>structure<sp/>called<sp/>stname.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE(tname)<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_TEMPLATE<sp/>tname##_seq_tt[]<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_END(stname)<sp/>ASN1_SEQUENCE_END_name(stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_END_name(stname,<sp/>tname)<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_SEQUENCE,\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_seq_tt,\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_seq_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(stname),\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#stname<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_SEQUENCE(tname)<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_SEQUENCE_cb(tname,<sp/>cb)<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE_cb(tname,<sp/>cb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_cb(tname,<sp/>cb)<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_AUX<sp/>tname##_aux<sp/>=<sp/>{NULL,<sp/>0,<sp/>0,<sp/>0,<sp/>cb,<sp/>0};<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_BROKEN_SEQUENCE(tname)<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_AUX<sp/>tname##_aux<sp/>=<sp/>{NULL,<sp/>ASN1_AFLG_BROKEN,<sp/>0,<sp/>0,<sp/>0,<sp/>0};<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_ref(tname,<sp/>cb,<sp/>lck)<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_AUX<sp/>tname##_aux<sp/>=<sp/>{NULL,<sp/>ASN1_AFLG_REFCOUNT,<sp/>offsetof(tname,<sp/>references),<sp/>lck,<sp/>cb,<sp/>0};<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_enc(tname,<sp/>enc,<sp/>cb)<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_AUX<sp/>tname##_aux<sp/>=<sp/>{NULL,<sp/>ASN1_AFLG_ENCODING,<sp/>0,<sp/>0,<sp/>cb,<sp/>offsetof(tname,<sp/>enc)};<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_SEQUENCE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_SEQUENCE_END(tname)<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_NDEF_SEQUENCE,\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_seq_tt,\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_seq_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname),\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#tname<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_BROKEN_SEQUENCE_END(stname)<sp/>ASN1_SEQUENCE_END_ref(stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_END_enc(stname,<sp/>tname)<sp/>ASN1_SEQUENCE_END_ref(stname,<sp/>tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_END_cb(stname,<sp/>tname)<sp/>ASN1_SEQUENCE_END_ref(stname,<sp/>tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_END_ref(stname,<sp/>tname)<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_SEQUENCE,\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_seq_tt,\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_seq_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tname##_aux,\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(stname),\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#stname<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_SEQUENCE_END_cb(stname,<sp/>tname)<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_NDEF_SEQUENCE,\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_ASN1_SEQUENCE,\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_seq_tt,\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_seq_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tname##_aux,\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(stname),\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#stname<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>pair<sp/>helps<sp/>declare<sp/>a<sp/>CHOICE<sp/>type.<sp/>We<sp/>can<sp/>do:</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/><sp/>ASN1_CHOICE(chname)<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>CHOICE<sp/>options<sp/>...</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/><sp/>ASN1_CHOICE_END(chname)</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>will<sp/>produce<sp/>an<sp/>ASN1_ITEM<sp/>called<sp/>chname_it</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>a<sp/>structure<sp/>called<sp/>chname.<sp/>The<sp/>structure</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/><sp/>definition<sp/>must<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/><sp/>typedef<sp/>struct<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>type;</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>union<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_SOMETHING<sp/>*opt1;</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_SOMEOTHER<sp/>*opt2;</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/><sp/>}<sp/>chname;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>name<sp/>of<sp/>the<sp/>selector<sp/>must<sp/>be<sp/>&apos;type&apos;.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>use<sp/>an<sp/>alternative<sp/>selector<sp/>name<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>ASN1_CHOICE_END_selector()<sp/>version.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE(tname)<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_TEMPLATE<sp/>tname##_ch_tt[]<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE_cb(tname,<sp/>cb)<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_AUX<sp/>tname##_aux<sp/>=<sp/>{NULL,<sp/>0,<sp/>0,<sp/>0,<sp/>cb,<sp/>0};<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_CHOICE(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE_END(stname)<sp/>ASN1_CHOICE_END_name(stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE_END_name(stname,<sp/>tname)<sp/>ASN1_CHOICE_END_selector(stname,<sp/>tname,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE_END_selector(stname,<sp/>tname,<sp/>selname)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_CHOICE,\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetof(stname,selname)<sp/>,\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_ch_tt,\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_ch_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(stname),\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#stname<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_CHOICE_END_cb(stname,<sp/>tname,<sp/>selname)<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(tname)<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_CHOICE,\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetof(stname,selname)<sp/>,\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tname##_ch_tt,\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(tname##_ch_tt)<sp/>/<sp/>sizeof(ASN1_TEMPLATE),\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tname##_aux,\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(stname),\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#stname<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(tname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>helps<sp/>with<sp/>the<sp/>template<sp/>wrapper<sp/>form<sp/>of<sp/>ASN1_ITEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EX_TEMPLATE_TYPE(flags,<sp/>tag,<sp/>name,<sp/>type)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(flags),<sp/>(tag),<sp/>0,\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#name,<sp/>ASN1_ITEM_ref(type)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>help<sp/>with<sp/>SEQUENCE<sp/>or<sp/>CHOICE<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>declare<sp/>other<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EX_TYPE(flags,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(flags),<sp/>(tag),<sp/>offsetof(stname,<sp/>field),\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#field,<sp/>ASN1_ITEM_ref(type)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>used<sp/>when<sp/>the<sp/>structure<sp/>is<sp/>combined<sp/>with<sp/>the<sp/>parent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EX_COMBINE(flags,<sp/>tag,<sp/>type)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(flags)|ASN1_TFLG_COMBINE,<sp/>(tag),<sp/>0,<sp/>NULL,<sp/>ASN1_ITEM_ref(type)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>implicit<sp/>and<sp/>explicit<sp/>helper<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ex)<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_IMPLICIT<sp/>|<sp/>ex,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ex)<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_EXPLICIT<sp/>|<sp/>ex,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Any<sp/>defined<sp/>by<sp/>macros:<sp/>the<sp/>field<sp/>used<sp/>is<sp/>in<sp/>the<sp/>table<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_EXPORT_VAR_AS_FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_OBJECT(tblname)<sp/>{<sp/>ASN1_TFLG_ADB_OID,<sp/>-1,<sp/>0,<sp/>#tblname,<sp/>(const<sp/>ASN1_ITEM<sp/>*)&amp;(tblname##_adb)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_INTEGER(tblname)<sp/>{<sp/>ASN1_TFLG_ADB_INT,<sp/>-1,<sp/>0,<sp/>#tblname,<sp/>(const<sp/>ASN1_ITEM<sp/>*)&amp;(tblname##_adb)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_OBJECT(tblname)<sp/>{<sp/>ASN1_TFLG_ADB_OID,<sp/>-1,<sp/>0,<sp/>#tblname,<sp/>tblname##_adb<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_INTEGER(tblname)<sp/>{<sp/>ASN1_TFLG_ADB_INT,<sp/>-1,<sp/>0,<sp/>#tblname,<sp/>tblname##_adb<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Plain<sp/>simple<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SIMPLE(stname,<sp/>field,<sp/>type)<sp/>ASN1_EX_TYPE(0,0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OPTIONAL<sp/>simple<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OPT(stname,<sp/>field,<sp/>type)<sp/>ASN1_EX_TYPE(ASN1_TFLG_OPTIONAL,<sp/>0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPLICIT<sp/>tagged<sp/>simple<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPLICIT<sp/>tagged<sp/>OPTIONAL<sp/>simple<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Same<sp/>as<sp/>above<sp/>but<sp/>EXPLICIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SEQUENCE<sp/>OF<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_OF(stname,<sp/>field,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF,<sp/>0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OPTIONAL<sp/>SEQUENCE<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SEQUENCE_OF_OPT(stname,<sp/>field,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL,<sp/>0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Same<sp/>as<sp/>above<sp/>but<sp/>for<sp/>SET<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SET_OF(stname,<sp/>field,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_SET_OF,<sp/>0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_SET_OF_OPT(stname,<sp/>field,<sp/>type)<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL,<sp/>0,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Finally<sp/>compound<sp/>types<sp/>of<sp/>SEQUENCE,<sp/>SET,<sp/>IMPLICIT,<sp/>EXPLICIT<sp/>and<sp/>OPTIONAL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_SET_OF(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SET_OF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_SET_OF(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SET_OF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_SET_OF_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_SET_OF_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SET_OF|ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_SEQUENCE_OF(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SEQUENCE_OF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_IMP_SEQUENCE_OF_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_IMP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_SEQUENCE_OF(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SEQUENCE_OF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_EXP_SEQUENCE_OF_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_OPTIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EXPLICIT<sp/>using<sp/>indefinite<sp/>length<sp/>constructed<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_EXP(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_NDEF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EXPLICIT<sp/>OPTIONAL<sp/>using<sp/>indefinite<sp/>length<sp/>constructed<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_NDEF_EXP_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_EXP_EX(stname,<sp/>field,<sp/>type,<sp/>tag,<sp/>ASN1_TFLG_OPTIONAL|ASN1_TFLG_NDEF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>the<sp/>ASN1_ADB<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB(name)<sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_ADB_TABLE<sp/>name##_adbtbl[]<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_EXPORT_VAR_AS_FUNCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_END(name,<sp/>flags,<sp/>field,<sp/>app_table,<sp/>def,<sp/>none)<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_ADB<sp/>name##_adb<sp/>=<sp/>{\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags,\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetof(name,<sp/>field),\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_table,\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_adbtbl,\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(name##_adbtbl)<sp/>/<sp/>sizeof(ASN1_ADB_TABLE),\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def,\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>none\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_END(name,<sp/>flags,<sp/>field,<sp/>app_table,<sp/>def,<sp/>none)<sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>;\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_ITEM<sp/>*name##_adb(void)<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_ADB<sp/>internal_adb<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags,\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetof(name,<sp/>field),\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_table,\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_adbtbl,\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(name##_adbtbl)<sp/>/<sp/>sizeof(ASN1_ADB_TABLE),\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def,\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>none\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(const<sp/>ASN1_ITEM<sp/>*)<sp/>&amp;internal_adb;<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>dummy_function(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADB_ENTRY(val,<sp/>template)<sp/>{val,<sp/>template}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ADB_TEMPLATE(name)<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_TEMPLATE<sp/>name##_tt<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>ASN1<sp/>template<sp/>structure<sp/>that<sp/>defines</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>a<sp/>wrapper<sp/>round<sp/>the<sp/>actual<sp/>type.<sp/>It<sp/>determines<sp/>the</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>actual<sp/>position<sp/>of<sp/>the<sp/>field<sp/>in<sp/>the<sp/>value<sp/>structure,</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>various<sp/>flags<sp/>such<sp/>as<sp/>OPTIONAL<sp/>and<sp/>the<sp/>field<sp/>name.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE_st</ref><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Various<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tag,<sp/>not<sp/>used<sp/>if<sp/>no<sp/>tagging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>this<sp/>field<sp/>in<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_ASN1_FIELD_NAMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_name;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Field<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM_EXP</ref><sp/>*item;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Relevant<sp/>ASN1_ITEM<sp/>or<sp/>ASN1_ADB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>extract<sp/>ASN1_ITEM<sp/>and<sp/>ASN1_ADB<sp/>pointer<sp/>from<sp/>ASN1_TEMPLATE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TEMPLATE_item(t)<sp/>(t-&gt;item_ptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TEMPLATE_adb(t)<sp/>(t-&gt;item_ptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" kindref="compound">ASN1_ADB_TABLE_st</ref><sp/>ASN1_ADB_TABLE;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___a_d_b__st" kindref="compound">ASN1_ADB_st</ref><sp/>ASN1_ADB;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="struct_a_s_n1___a_d_b__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___a_d_b__st" kindref="compound">ASN1_ADB_st</ref><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Various<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>selector<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(ASN1_ADB_TABLE)<sp/>**app_items;<sp/></highlight><highlight class="comment">/*<sp/>Application<sp/>defined<sp/>items<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_ADB_TABLE<sp/>*tbl;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Table<sp/>of<sp/>possible<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tblcount;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>tbl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*default_tt;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>to<sp/>use<sp/>if<sp/>no<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*null_tt;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>to<sp/>use<sp/>if<sp/>selector<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___a_d_b___t_a_b_l_e__st" kindref="compound">ASN1_ADB_TABLE_st</ref><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NID<sp/>for<sp/>an<sp/>object<sp/>or<sp/>value<sp/>for<sp/>an<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>tt;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>item<sp/>for<sp/>this<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>template<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Field<sp/>is<sp/>optional<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_OPTIONAL<sp/><sp/>(0x1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Field<sp/>is<sp/>a<sp/>SET<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_SET_OF<sp/><sp/><sp/><sp/>(0x1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Field<sp/>is<sp/>a<sp/>SEQUENCE<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_SEQUENCE_OF<sp/><sp/><sp/>(0x2<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Special<sp/>case:<sp/>this<sp/>refers<sp/>to<sp/>a<sp/>SET<sp/>OF<sp/>that</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>will<sp/>be<sp/>sorted<sp/>into<sp/>DER<sp/>order<sp/>when<sp/>encoded<sp/>*and*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>the<sp/>corresponding<sp/>STACK<sp/>will<sp/>be<sp/>modified<sp/>to<sp/>match</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>the<sp/>new<sp/>order.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_SET_ORDER<sp/>(0x3<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mask<sp/>for<sp/>SET<sp/>OF<sp/>or<sp/>SEQUENCE<sp/>OF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_SK_MASK<sp/><sp/><sp/>(0x3<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>flags<sp/>mean<sp/>the<sp/>tag<sp/>should<sp/>be<sp/>taken<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>tag<sp/>field.<sp/>If<sp/>EXPLICIT<sp/>then<sp/>the<sp/>underlying<sp/>type</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>is<sp/>used<sp/>for<sp/>the<sp/>inner<sp/>tag.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPLICIT<sp/>tagging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_IMPTAG<sp/><sp/><sp/><sp/>(0x1<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EXPLICIT<sp/>tagging,<sp/>inner<sp/>tag<sp/>from<sp/>underlying<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_EXPTAG<sp/><sp/><sp/><sp/>(0x2<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_TAG_MASK<sp/><sp/>(0x3<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>context<sp/>specific<sp/>IMPLICIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_IMPLICIT<sp/><sp/>ASN1_TFLG_IMPTAG|ASN1_TFLG_CONTEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>context<sp/>specific<sp/>EXPLICIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_EXPLICIT<sp/><sp/>ASN1_TFLG_EXPTAG|ASN1_TFLG_CONTEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>tagging<sp/>is<sp/>in<sp/>force<sp/>these<sp/>determine<sp/>the</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>type<sp/>of<sp/>tag<sp/>to<sp/>use.<sp/>Otherwise<sp/>the<sp/>tag<sp/>is</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>determined<sp/>by<sp/>the<sp/>underlying<sp/>type.<sp/>These<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>values<sp/>reflect<sp/>the<sp/>actual<sp/>octet<sp/>format.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Universal<sp/>tag<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_UNIVERSAL<sp/>(0x0&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Application<sp/>tag<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_APPLICATION<sp/><sp/><sp/>(0x1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Context<sp/>specific<sp/>tag<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_CONTEXT<sp/><sp/><sp/>(0x2&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>tag<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_PRIVATE<sp/><sp/><sp/>(0x3&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_TAG_CLASS<sp/>(0x3&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>for<sp/>ANY<sp/>DEFINED<sp/>BY<sp/>type.<sp/>In<sp/>this<sp/>case</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>the<sp/>&apos;item&apos;<sp/>field<sp/>points<sp/>to<sp/>an<sp/>ASN1_ADB<sp/>structure</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>which<sp/>contains<sp/>a<sp/>table<sp/>of<sp/>values<sp/>to<sp/>decode<sp/>the</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>relevant<sp/>type</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_ADB_MASK<sp/><sp/>(0x3&lt;&lt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_ADB_OID<sp/><sp/><sp/>(0x1&lt;&lt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_ADB_INT<sp/><sp/><sp/>(0x1&lt;&lt;9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>means<sp/>a<sp/>parent<sp/>structure<sp/>is<sp/>passed</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>instead<sp/>of<sp/>the<sp/>field:<sp/>this<sp/>is<sp/>useful<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>SEQUENCE<sp/>is<sp/>being<sp/>combined<sp/>with<sp/>a<sp/>CHOICE<sp/>for</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>example.<sp/>Since<sp/>this<sp/>means<sp/>the<sp/>structure<sp/>and</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>item<sp/>name<sp/>will<sp/>differ<sp/>we<sp/>need<sp/>to<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>ASN1_CHOICE_END_name()<sp/>macro<sp/>for<sp/>example.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_COMBINE<sp/><sp/><sp/>(0x1&lt;&lt;10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>when<sp/>present<sp/>in<sp/>a<sp/>SEQUENCE<sp/>OF,<sp/>SET<sp/>OF</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>or<sp/>EXPLICIT<sp/>causes<sp/>indefinite<sp/>length<sp/>constructed</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>encoding<sp/>to<sp/>be<sp/>used<sp/>if<sp/>required.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_TFLG_NDEF<sp/><sp/><sp/><sp/><sp/><sp/>(0x1&lt;&lt;11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>actual<sp/>ASN1<sp/>item<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="struct_a_s_n1___i_t_e_m__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM_st</ref><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>itype;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>item<sp/>type,<sp/>primitive,<sp/>SEQUENCE,<sp/>CHOICE<sp/>or<sp/>extern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>utype;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>underlying<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*templates;<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>SEQUENCE<sp/>or<sp/>CHOICE<sp/>this<sp/>contains<sp/>the<sp/>contents<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tcount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>templates<sp/>if<sp/>SEQUENCE<sp/>or<sp/>CHOICE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*funcs;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>functions<sp/>that<sp/>handle<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Structure<sp/>size<sp/>(usually)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_ASN1_FIELD_NAMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sname;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Structure<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>values<sp/>for<sp/>the<sp/>itype<sp/>field<sp/>and</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>determine<sp/>how<sp/>the<sp/>type<sp/>is<sp/>interpreted.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/>For<sp/>PRIMITIVE<sp/>types<sp/>the<sp/>underlying<sp/>type</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>determines<sp/>the<sp/>behaviour<sp/>if<sp/>items<sp/>is<sp/>NULL.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>Otherwise<sp/>templates<sp/>must<sp/>contain<sp/>a<sp/>single<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>template<sp/>and<sp/>the<sp/>type<sp/>is<sp/>treated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>same<sp/>way<sp/>as<sp/>the<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>template.</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>For<sp/>SEQUENCE<sp/>types<sp/>the<sp/>templates<sp/>field<sp/>points</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>members,<sp/>the<sp/>size<sp/>field<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>structure<sp/>size.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>For<sp/>CHOICE<sp/>types<sp/>the<sp/>templates<sp/>field<sp/>points</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>to<sp/>each<sp/>possible<sp/>member<sp/>(typically<sp/>a<sp/>union)</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>&apos;size&apos;<sp/>field<sp/>is<sp/>the<sp/>offset<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>selector.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>The<sp/>&apos;funcs&apos;<sp/>field<sp/>is<sp/>used<sp/>for<sp/>application</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*<sp/>specific<sp/>functions.<sp/></highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*<sp/>For<sp/>COMPAT<sp/>types<sp/>the<sp/>funcs<sp/>field<sp/>gives<sp/>a</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>set<sp/>of<sp/>functions<sp/>that<sp/>handle<sp/>this<sp/>type,<sp/>this</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>supports<sp/>the<sp/>old<sp/>d2i,<sp/>i2d<sp/>convention.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>The<sp/>EXTERN<sp/>type<sp/>uses<sp/>a<sp/>new<sp/>style<sp/>d2i/i2d.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/>The<sp/>new<sp/>style<sp/>should<sp/>be<sp/>used<sp/>where<sp/>possible</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>because<sp/>it<sp/>avoids<sp/>things<sp/>like<sp/>the<sp/>d2i<sp/>IMPLICIT</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>hack.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>MSTRING<sp/>is<sp/>a<sp/>multiple<sp/>string<sp/>type,<sp/>it<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>CHOICE<sp/>of<sp/>character<sp/>strings<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*<sp/>actual<sp/>strings<sp/>all<sp/>occupy<sp/>an<sp/>ASN1_STRING</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>structure.<sp/>In<sp/>this<sp/>case<sp/>the<sp/>&apos;utype&apos;<sp/>field</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/>has<sp/>a<sp/>special<sp/>meaning,<sp/>it<sp/>is<sp/>used<sp/>as<sp/>a<sp/>mask</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>of<sp/>acceptable<sp/>types<sp/>using<sp/>the<sp/>B_ASN1<sp/>constants.</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>NDEF_SEQUENCE<sp/>is<sp/>the<sp/>same<sp/>as<sp/>SEQUENCE<sp/>except</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>that<sp/>it<sp/>will<sp/>use<sp/>indefinite<sp/>length<sp/>constructed</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>encoding<sp/>if<sp/>requested.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_PRIMITIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_SEQUENCE<sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_CHOICE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_COMPAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_EXTERN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_MSTRING<sp/><sp/><sp/><sp/><sp/><sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_ITYPE_NDEF_SEQUENCE<sp/><sp/><sp/><sp/>0x6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cache<sp/>for<sp/>ASN1<sp/>tag<sp/>and<sp/>length,<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>don&apos;t<sp/>keep<sp/>re-reading<sp/>it<sp/>for<sp/>things</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>like<sp/>CHOICE</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="struct_a_s_n1___t_l_c__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC_st</ref>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valid;<sp/></highlight><highlight class="comment">/*<sp/>Values<sp/>below<sp/>are<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>plen;<sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptag;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>class<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pclass;<sp/></highlight><highlight class="comment">/*<sp/>class<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hdrlen;<sp/></highlight><highlight class="comment">/*<sp/>header<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">};</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Typedefs<sp/>for<sp/>ASN1<sp/>function<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ASN1_VALUE<sp/>*<sp/>ASN1_new_func(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_free_func(ASN1_VALUE<sp/>*a);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ASN1_VALUE<sp/>*<sp/>ASN1_d2i_func(ASN1_VALUE<sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_i2d_func(ASN1_VALUE<sp/>*<sp/>a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_ex_d2i(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aclass,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>opt,<sp/><ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_ex_i2d(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aclass);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_ex_new_func(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_ex_free_func(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_ex_print_func(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>**pval,<sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_PCTX<sp/>*pctx);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_primitive_i2c(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cont,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*putype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_primitive_c2i(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cont,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utype,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*free_cont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_primitive_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/>ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_PCTX<sp/>*pctx);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674" refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" kindref="compound">ASN1_COMPAT_FUNCS_st</ref><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_new_func<sp/>*asn1_new;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_free_func<sp/>*asn1_free;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_d2i_func<sp/>*asn1_d2i;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_i2d_func<sp/>*asn1_i2d;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___c_o_m_p_a_t___f_u_n_c_s__st" kindref="compound">ASN1_COMPAT_FUNCS</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="struct_a_s_n1___e_x_t_e_r_n___f_u_n_c_s__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___e_x_t_e_r_n___f_u_n_c_s__st" kindref="compound">ASN1_EXTERN_FUNCS_st</ref><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*app_data;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_new_func<sp/>*asn1_ex_new;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_free_func<sp/>*asn1_ex_free;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_free_func<sp/>*asn1_ex_clear;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_d2i<sp/>*asn1_ex_d2i;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_i2d<sp/>*asn1_ex_i2d;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_print_func<sp/>*asn1_ex_print;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___e_x_t_e_r_n___f_u_n_c_s__st" kindref="compound">ASN1_EXTERN_FUNCS</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="struct_a_s_n1___p_r_i_m_i_t_i_v_e___f_u_n_c_s__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___p_r_i_m_i_t_i_v_e___f_u_n_c_s__st" kindref="compound">ASN1_PRIMITIVE_FUNCS_st</ref><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*app_data;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_new_func<sp/>*prim_new;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_free_func<sp/>*prim_free;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ex_free_func<sp/>*prim_clear;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_primitive_c2i<sp/>*prim_c2i;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_primitive_i2c<sp/>*prim_i2c;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_primitive_print<sp/>*prim_print;</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___p_r_i_m_i_t_i_v_e___f_u_n_c_s__st" kindref="compound">ASN1_PRIMITIVE_FUNCS</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>ASN1_AUX<sp/>structure:<sp/>it<sp/>handles<sp/>various</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*<sp/>miscellaneous<sp/>requirements.<sp/>For<sp/>example<sp/>the<sp/>use<sp/>of</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*<sp/>reference<sp/>counts<sp/>and<sp/>an<sp/>informational<sp/>callback.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/>*<sp/>The<sp/>&quot;informational<sp/>callback&quot;<sp/>is<sp/>called<sp/>at<sp/>various</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/>points<sp/>during<sp/>the<sp/>ASN1<sp/>encoding<sp/>and<sp/>decoding.<sp/>It<sp/>can</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>minor<sp/>customisation<sp/>of<sp/>the<sp/>structures</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>used.<sp/>This<sp/>is<sp/>most<sp/>useful<sp/>where<sp/>the<sp/>supplied<sp/>routines</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/>*almost*<sp/>do<sp/>the<sp/>right<sp/>thing<sp/>but<sp/>need<sp/>some<sp/>extra<sp/>help</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>at<sp/>a<sp/>few<sp/>points.<sp/>If<sp/>the<sp/>callback<sp/>returns<sp/>zero<sp/>then</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>assumed<sp/>a<sp/>fatal<sp/>error<sp/>has<sp/>occurred<sp/>and<sp/>the<sp/></highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*<sp/>main<sp/>operation<sp/>should<sp/>be<sp/>abandoned.</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/>If<sp/>major<sp/>changes<sp/>in<sp/>the<sp/>default<sp/>behaviour<sp/>are<sp/>required</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/>then<sp/>an<sp/>external<sp/>type<sp/>is<sp/>more<sp/>appropriate.</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_aux_cb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operation,<sp/>ASN1_VALUE<sp/>**in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*exarg);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="struct_a_s_n1___a_u_x__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX_st</ref><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*app_data;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref_offset;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>reference<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref_lock;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>type<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_aux_cb<sp/>*asn1_cb;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enc_offset;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>ASN1_ENCODING<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___a_u_x__st" kindref="compound">ASN1_AUX</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>print<sp/>related<sp/>callbacks<sp/>exarg<sp/>points<sp/>to<sp/>this<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="struct_a_s_n1___p_r_i_n_t___a_r_g__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___p_r_i_n_t___a_r_g__st" kindref="compound">ASN1_PRINT_ARG_st</ref><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ASN1_PCTX<sp/>*pctx;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___p_r_i_n_t___a_r_g__st" kindref="compound">ASN1_PRINT_ARG</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>streaming<sp/>related<sp/>callbacks<sp/>exarg<sp/>points<sp/>to<sp/>this<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739" refid="struct_a_s_n1___s_t_r_e_a_m___a_r_g__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_n1___s_t_r_e_a_m___a_r_g__st" kindref="compound">ASN1_STREAM_ARG_st</ref><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BIO<sp/>to<sp/>stream<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BIO<sp/>with<sp/>filters<sp/>appended<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*ndef_bio;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Streaming<sp/>I/O<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**boundary;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}<sp/><ref refid="struct_a_s_n1___s_t_r_e_a_m___a_r_g__st" kindref="compound">ASN1_STREAM_ARG</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>in<sp/>ASN1_AUX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>a<sp/>reference<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_AFLG_REFCOUNT<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>encoding<sp/>of<sp/>structure<sp/>(useful<sp/>for<sp/>signatures)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_AFLG_ENCODING<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>Sequence<sp/>length<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_AFLG_BROKEN<sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>operation<sp/>values<sp/>for<sp/>asn1_cb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_NEW_PRE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_NEW_POST<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_FREE_PRE<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_FREE_POST<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_D2I_PRE<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_D2I_POST<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_I2D_PRE<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_I2D_POST<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_PRINT_PRE<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_PRINT_POST<sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_STREAM_PRE<sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_STREAM_POST<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_DETACHED_PRE<sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_OP_DETACHED_POST<sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>implement<sp/>a<sp/>primitive<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_TYPE(stname)<sp/>IMPLEMENT_ASN1_TYPE_ex(stname,<sp/>stname,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_TYPE_ex(itname,<sp/>vname,<sp/>ex)<sp/>\</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_start(itname)<sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_PRIMITIVE,<sp/>V_##vname,<sp/>NULL,<sp/>0,<sp/>NULL,<sp/>ex,<sp/>#itname<sp/>\</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_end(itname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>implement<sp/>a<sp/>multi<sp/>string<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_MSTRING(itname,<sp/>mask)<sp/>\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_start(itname)<sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_MSTRING,<sp/>mask,<sp/>NULL,<sp/>0,<sp/>NULL,<sp/>sizeof(ASN1_STRING),<sp/>#itname<sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_end(itname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>implement<sp/>an<sp/>ASN1_ITEM<sp/>in<sp/>terms<sp/>of<sp/>old<sp/>style<sp/>funcs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_COMPAT_ASN1(sname)<sp/>IMPLEMENT_COMPAT_ASN1_type(sname,<sp/>V_ASN1_SEQUENCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_COMPAT_ASN1_type(sname,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ASN1_COMPAT_FUNCS<sp/>sname##_ff<sp/>=<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_new_func<sp/>*)sname##_new,<sp/>\</highlight></codeline>
<codeline lineno="794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_free_func<sp/>*)sname##_free,<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_d2i_func<sp/>*)d2i_##sname,<sp/>\</highlight></codeline>
<codeline lineno="796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ASN1_i2d_func<sp/>*)i2d_##sname,<sp/>\</highlight></codeline>
<codeline lineno="797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="798"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(sname)<sp/>\</highlight></codeline>
<codeline lineno="799"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_COMPAT,<sp/>\</highlight></codeline>
<codeline lineno="800"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag,<sp/>\</highlight></codeline>
<codeline lineno="801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="802"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="803"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sname##_ff,<sp/>\</highlight></codeline>
<codeline lineno="804"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="805"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#sname<sp/>\</highlight></codeline>
<codeline lineno="806"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(sname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_EXTERN_ASN1(sname,<sp/>tag,<sp/>fptrs)<sp/>\</highlight></codeline>
<codeline lineno="809"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_start(sname)<sp/>\</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITYPE_EXTERN,<sp/>\</highlight></codeline>
<codeline lineno="811"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag,<sp/>\</highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="813"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="814"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fptrs,<sp/>\</highlight></codeline>
<codeline lineno="815"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="816"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#sname<sp/>\</highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_ITEM_end(sname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>to<sp/>implement<sp/>standard<sp/>functions<sp/>in<sp/>terms<sp/>of<sp/>ASN1_ITEM<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS(stname)<sp/>IMPLEMENT_ASN1_FUNCTIONS_fname(stname,<sp/>stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS_name(stname,<sp/>itname)<sp/>IMPLEMENT_ASN1_FUNCTIONS_fname(stname,<sp/>itname,<sp/>itname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS_ENCODE_name(stname,<sp/>itname)<sp/>\</highlight></codeline>
<codeline lineno="826"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_FUNCTIONS_ENCODE_fname(stname,<sp/>itname,<sp/>itname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_STATIC_ASN1_ALLOC_FUNCTIONS(stname)<sp/>\</highlight></codeline>
<codeline lineno="829"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(static,<sp/>stname,<sp/>stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS(stname)<sp/>\</highlight></codeline>
<codeline lineno="832"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname,<sp/>stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(pre,<sp/>stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>pre<sp/>stname<sp/>*fname##_new(void)<sp/>\</highlight></codeline>
<codeline lineno="836"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="837"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(stname<sp/>*)ASN1_item_new(ASN1_ITEM_rptr(itname));<sp/>\</highlight></codeline>
<codeline lineno="838"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="839"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>pre<sp/>void<sp/>fname##_free(stname<sp/>*a)<sp/>\</highlight></codeline>
<codeline lineno="840"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="841"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_item_free((ASN1_VALUE<sp/>*)a,<sp/>ASN1_ITEM_rptr(itname));<sp/>\</highlight></codeline>
<codeline lineno="842"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="845"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>stname<sp/>*fname##_new(void)<sp/>\</highlight></codeline>
<codeline lineno="846"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="847"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(stname<sp/>*)ASN1_item_new(ASN1_ITEM_rptr(itname));<sp/>\</highlight></codeline>
<codeline lineno="848"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="849"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>fname##_free(stname<sp/>*a)<sp/>\</highlight></codeline>
<codeline lineno="850"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="851"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_item_free((ASN1_VALUE<sp/>*)a,<sp/>ASN1_ITEM_rptr(itname));<sp/>\</highlight></codeline>
<codeline lineno="852"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="855"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="856"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="859"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>stname<sp/>*d2i_##fname(stname<sp/>**a,<sp/>const<sp/>unsigned<sp/>char<sp/>**in,<sp/>long<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="860"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="861"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(stname<sp/>*)ASN1_item_d2i((ASN1_VALUE<sp/>**)a,<sp/>in,<sp/>len,<sp/>ASN1_ITEM_rptr(itname));\</highlight></codeline>
<codeline lineno="862"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="863"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##fname(stname<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out)<sp/>\</highlight></codeline>
<codeline lineno="864"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="865"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ASN1_item_i2d((ASN1_VALUE<sp/>*)a,<sp/>out,<sp/>ASN1_ITEM_rptr(itname));\</highlight></codeline>
<codeline lineno="866"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_NDEF_FUNCTION(stname)<sp/>\</highlight></codeline>
<codeline lineno="869"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##stname##_NDEF(stname<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out)<sp/>\</highlight></codeline>
<codeline lineno="870"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="871"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ASN1_item_ndef_i2d((ASN1_VALUE<sp/>*)a,<sp/>out,<sp/>ASN1_ITEM_rptr(stname));\</highlight></codeline>
<codeline lineno="872"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>includes<sp/>evil<sp/>casts<sp/>to<sp/>remove<sp/>const:<sp/>they<sp/>will<sp/>go<sp/>away<sp/>when<sp/>full</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*<sp/>ASN1<sp/>constification<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="878"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>stname<sp/>*d2i_##fname(stname<sp/>**a,<sp/>const<sp/>unsigned<sp/>char<sp/>**in,<sp/>long<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="879"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="880"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(stname<sp/>*)ASN1_item_d2i((ASN1_VALUE<sp/>**)a,<sp/>in,<sp/>len,<sp/>ASN1_ITEM_rptr(itname));\</highlight></codeline>
<codeline lineno="881"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="882"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>i2d_##fname(const<sp/>stname<sp/>*a,<sp/>unsigned<sp/>char<sp/>**out)<sp/>\</highlight></codeline>
<codeline lineno="883"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="884"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ASN1_item_i2d((ASN1_VALUE<sp/>*)a,<sp/>out,<sp/>ASN1_ITEM_rptr(itname));\</highlight></codeline>
<codeline lineno="885"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_DUP_FUNCTION(stname)<sp/>\</highlight></codeline>
<codeline lineno="888"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>stname<sp/>*<sp/>stname##_dup(stname<sp/>*x)<sp/>\</highlight></codeline>
<codeline lineno="889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ASN1_item_dup(ASN1_ITEM_rptr(stname),<sp/>x);<sp/>\</highlight></codeline>
<codeline lineno="891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_PRINT_FUNCTION(stname)<sp/>\</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_PRINT_FUNCTION_fname(stname,<sp/>stname,<sp/>stname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_PRINT_FUNCTION_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="897"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>fname##_print_ctx(BIO<sp/>*out,<sp/>stname<sp/>*x,<sp/>int<sp/>indent,<sp/>\</highlight></codeline>
<codeline lineno="898"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ASN1_PCTX<sp/>*pctx)<sp/>\</highlight></codeline>
<codeline lineno="899"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="900"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ASN1_item_print(out,<sp/>(ASN1_VALUE<sp/>*)x,<sp/>indent,<sp/>\</highlight></codeline>
<codeline lineno="901"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_ITEM_rptr(itname),<sp/>pctx);<sp/>\</highlight></codeline>
<codeline lineno="902"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS_const(name)<sp/>\</highlight></codeline>
<codeline lineno="905"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_FUNCTIONS_const_fname(name,<sp/>name,<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_ASN1_FUNCTIONS_const_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(stname,<sp/>itname,<sp/>fname)<sp/>\</highlight></codeline>
<codeline lineno="909"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(stname,<sp/>itname,<sp/>fname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>external<sp/>definitions<sp/>for<sp/>primitive<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal">DECLARE_ASN1_ITEM(ASN1_BOOLEAN)</highlight></codeline>
<codeline lineno="914"><highlight class="normal">DECLARE_ASN1_ITEM(ASN1_TBOOLEAN)</highlight></codeline>
<codeline lineno="915"><highlight class="normal">DECLARE_ASN1_ITEM(ASN1_FBOOLEAN)</highlight></codeline>
<codeline lineno="916"><highlight class="normal">DECLARE_ASN1_ITEM(ASN1_SEQUENCE)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">DECLARE_ASN1_ITEM(CBIGNUM)</highlight></codeline>
<codeline lineno="918"><highlight class="normal">DECLARE_ASN1_ITEM(<ref refid="structbignum__st" kindref="compound">BIGNUM</ref>)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">DECLARE_ASN1_ITEM(LONG)</highlight></codeline>
<codeline lineno="920"><highlight class="normal">DECLARE_ASN1_ITEM(ZLONG)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">DECLARE_STACK_OF(ASN1_VALUE)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>used<sp/>internally<sp/>by<sp/>the<sp/>ASN1<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_ex_new(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_item_ex_free(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_template_new(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_primitive_new(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_template_free(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_template_d2i(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_ex_d2i(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aclass,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>opt,<sp/><ref refid="struct_a_s_n1___t_l_c__st" kindref="compound">ASN1_TLC</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_ex_i2d(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aclass);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_template_i2d(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ASN1_primitive_free(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_ex_i2c(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cont,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*putype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_ex_c2i(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cont,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utype,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*free_cont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_get_choice_selector(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_set_choice_selector(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">ASN1_VALUE<sp/>**<sp/>asn1_get_field_ptr(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*asn1_do_adb(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___t_e_m_p_l_a_t_e__st" kindref="compound">ASN1_TEMPLATE</ref><sp/>*tt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nullerr);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_do_lock(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asn1_enc_init(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asn1_enc_free(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_enc_restore(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/>ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asn1_enc_save(ASN1_VALUE<sp/>**pval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/asn1t.h"/>
  </compounddef>
</doxygen>
