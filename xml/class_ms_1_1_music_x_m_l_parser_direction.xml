<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_music_x_m_l_parser_direction" kind="class" language="C++" prot="public">
    <compoundname>Ms::MusicXMLParserDirection</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1ad2c8451351c0a9b81155726647f13418" prot="private" static="no" mutable="no">
        <type>QXmlStreamReader &amp;</type>
        <definition>QXmlStreamReader&amp; Ms::MusicXMLParserDirection::_e</definition>
        <argsstring></argsstring>
        <name>_e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="218" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1ad42f8cfeea8c5adfd66fcea72e3eaf4a" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *const</type>
        <definition>Score* const Ms::MusicXMLParserDirection::_score</definition>
        <argsstring></argsstring>
        <name>_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="219" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a97688edcce3d11dbff2cfc4ca78920dc" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_ms_1_1_music_x_m_l_parser_pass1" kindref="compound">MusicXMLParserPass1</ref> &amp;</type>
        <definition>const MusicXMLParserPass1&amp; Ms::MusicXMLParserDirection::_pass1</definition>
        <argsstring></argsstring>
        <name>_pass1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="220" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a7b3e13b5c7d57b409a34afe26f3dad63" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_music_x_m_l_parser_pass2" kindref="compound">MusicXMLParserPass2</ref> &amp;</type>
        <definition>MusicXMLParserPass2&amp; Ms::MusicXMLParserDirection::_pass2</definition>
        <argsstring></argsstring>
        <name>_pass2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="221" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a5640783c80ed1ffb10549d094c7213d3" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList Ms::MusicXMLParserDirection::_dynamicsList</definition>
        <argsstring></argsstring>
        <name>_dynamicsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="223" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a2a3d6b6a9af4e15556fda9f9b192b079" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_enclosure</definition>
        <argsstring></argsstring>
        <name>_enclosure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="224" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a34e3a2f0243b530f19c278ea2c18046a" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_wordsText</definition>
        <argsstring></argsstring>
        <name>_wordsText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="225" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1add0675ea224b724f769ef42b28ceb748" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_metroText</definition>
        <argsstring></argsstring>
        <name>_metroText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="226" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a58c895e4d56b1330718493e5cf917132" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_rehearsalText</definition>
        <argsstring></argsstring>
        <name>_rehearsalText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="227" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1ac94c4c5b740bff579e8905dd4226fa20" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_dynaVelocity</definition>
        <argsstring></argsstring>
        <name>_dynaVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="228" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1aa945a7ef89b9803cef00e9fec85db258" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_tempo</definition>
        <argsstring></argsstring>
        <name>_tempo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="229" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1ab07e3cad899d5354bb041a68ed55843d" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndCapo</definition>
        <argsstring></argsstring>
        <name>_sndCapo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="230" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a31a2cfc0780a337ee723248fd5854813" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndCoda</definition>
        <argsstring></argsstring>
        <name>_sndCoda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="231" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a4625c6313435810f6a64d97cb3d26882" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndDacapo</definition>
        <argsstring></argsstring>
        <name>_sndDacapo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="232" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1af2f5af79cbf874c3b441bf9c17a225b2" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndDalsegno</definition>
        <argsstring></argsstring>
        <name>_sndDalsegno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="233" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a714a657abda91075e99e76c649ec2cfc" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndSegno</definition>
        <argsstring></argsstring>
        <name>_sndSegno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="234" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a9030e61d330246f23f4fc867adef7db7" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::_sndFine</definition>
        <argsstring></argsstring>
        <name>_sndFine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="235" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a48af1649549ccfd66a565e8495c74630" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MusicXMLParserDirection::_hasDefaultY</definition>
        <argsstring></argsstring>
        <name>_hasDefaultY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="236" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1abd0675ba6e5559b4c9449949dd011380" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::MusicXMLParserDirection::_defaultY</definition>
        <argsstring></argsstring>
        <name>_defaultY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="237" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a5b062ad6a3b52cb58dd70125218cbda5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MusicXMLParserDirection::_coda</definition>
        <argsstring></argsstring>
        <name>_coda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="238" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1ad8d530f6671275f5c74ed1593000bf49" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MusicXMLParserDirection::_segno</definition>
        <argsstring></argsstring>
        <name>_segno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="239" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a98de99ed31e6fb69d4945aad494f046a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ms::MusicXMLParserDirection::_tpoMetro</definition>
        <argsstring></argsstring>
        <name>_tpoMetro</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="240" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a75cff353767f3957b224b3df983f4ce6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Ms::MusicXMLParserDirection::_tpoSound</definition>
        <argsstring></argsstring>
        <name>_tpoSound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="241" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_music_x_m_l_parser_direction_1a93a8a8809a02f0a7c95f46d61a95d54b" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt;</type>
        <definition>QList&lt;Element*&gt; Ms::MusicXMLParserDirection::_elems</definition>
        <argsstring></argsstring>
        <name>_elems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="242" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1ad718d8f199895cd27d32117f3229484a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::MusicXMLParserDirection::MusicXMLParserDirection</definition>
        <argsstring>(QXmlStreamReader &amp;e, Score *score, const MusicXMLParserPass1 &amp;pass1, MusicXMLParserPass2 &amp;pass2)</argsstring>
        <name>MusicXMLParserDirection</name>
        <param>
          <type>QXmlStreamReader &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_music_x_m_l_parser_pass1" kindref="compound">MusicXMLParserPass1</ref> &amp;</type>
          <declname>pass1</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_music_x_m_l_parser_pass2" kindref="compound">MusicXMLParserPass2</ref> &amp;</type>
          <declname>pass2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_ms_1_1_music_x_m_l_parser_direction" kindref="compound">MusicXMLParserDirection</ref> constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="211" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="6007" bodyend="6016"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a288e85af15748149c954237d3b3b8688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::direction</definition>
        <argsstring>(const QString &amp;partId, Measure *measure, const int tick, MusicXmlSpannerMap &amp;spanners)</argsstring>
        <name>direction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>partId</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>MusicXmlSpannerMap &amp;</type>
          <declname>spanners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="212" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2310" bodyend="2462"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a06ec4ebe7b85a66090add2c30cad1e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::logError</definition>
        <argsstring>(const QString &amp;error)</argsstring>
        <name>logError</name>
        <param>
          <type>const QString &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log <emphasis>error</emphasis> (possibly non-fatal but to be reported to the user anyway). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="213" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="1579" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a9bf4e7ad2429e07b36ede47764c7a2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::logDebugInfo</definition>
        <argsstring>(const QString &amp;info)</argsstring>
        <name>logDebugInfo</name>
        <param>
          <type>const QString &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log debug <emphasis>info</emphasis> (non-fatal events relevant for debugging). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="214" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="1565" bodyend="1569"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a24827f168c7a6b544b422d0167aa5ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::skipLogCurrElem</definition>
        <argsstring>()</argsstring>
        <name>skipLogCurrElem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip the current element, log debug as info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="215" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="1551" bodyend="1555"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1afed06709f0b836b8e2e0d640350dcb0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::directionType</definition>
        <argsstring>(QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>directionType</name>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="244" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2472" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a9506eee38ea6a9183f66811878d0b2fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::bracket</definition>
        <argsstring>(const QString &amp;type, const int number, QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>bracket</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/bracket node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="245" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2731" bodyend="2772"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a566731da03f8247e668ca7f90841274a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::octaveShift</definition>
        <argsstring>(const QString &amp;type, const int number, QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>octaveShift</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/octave-shift node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="246" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2818" bodyend="2842"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1aa2e8b008500e2fc90db75f219ede22e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::pedal</definition>
        <argsstring>(const QString &amp;type, const int number, QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>pedal</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/pedal node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="247" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2852" bodyend="2913"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a2f228dc2bab0872c6a4998886893074d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::dashes</definition>
        <argsstring>(const QString &amp;type, const int number, QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>dashes</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/dashes node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="248" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2782" bodyend="2808"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a6606b231c05dd2f015ae28273c443231" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::wedge</definition>
        <argsstring>(const QString &amp;type, const int number, QList&lt; MusicXmlSpannerDesc &gt; &amp;starts, QList&lt; MusicXmlSpannerDesc &gt; &amp;stops)</argsstring>
        <name>wedge</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>starts</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="struct_ms_1_1_music_xml_spanner_desc" kindref="compound">MusicXmlSpannerDesc</ref> &gt; &amp;</type>
          <declname>stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/wedge node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="249" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2923" bodyend="2942"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1af722887749c9d1d2d10d20c5b308bb35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MusicXMLParserDirection::metronome</definition>
        <argsstring>(double &amp;r)</argsstring>
        <name>metronome</name>
        <param>
          <type>double &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/metronome node. Convert to text and set r to calculated tempo. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="250" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="3005" bodyend="3060"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1ab05e7d83d0c1f4e8120f89cb84fbb9a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::sound</definition>
        <argsstring>()</argsstring>
        <name>sound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/sound node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="251" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2536" bodyend="2550"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1ae17180b68b979aa48af77dbcc9eece03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::dynamics</definition>
        <argsstring>()</argsstring>
        <name>dynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the /score-partwise/part/measure/direction/direction-type/dynamics node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="252" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2560" bodyend="2572"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_x_m_l_parser_direction_1a74aa578a36a43a3ca7488e9155a25022" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXMLParserDirection::handleRepeats</definition>
        <argsstring>(Measure *measure, const int track)</argsstring>
        <name>handleRepeats</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmxmlpass2.h" line="253" column="1" bodyfile="mscore/importmxmlpass2.cpp" bodystart="2681" bodyend="2721"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/importmxmlpass2.h" line="209" column="1" bodyfile="mscore/importmxmlpass2.h" bodystart="209" bodyend="254"/>
    <listofallmembers>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a5b062ad6a3b52cb58dd70125218cbda5" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_coda</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1abd0675ba6e5559b4c9449949dd011380" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_defaultY</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a5640783c80ed1ffb10549d094c7213d3" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_dynamicsList</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ac94c4c5b740bff579e8905dd4226fa20" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_dynaVelocity</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ad2c8451351c0a9b81155726647f13418" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_e</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a93a8a8809a02f0a7c95f46d61a95d54b" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_elems</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a2a3d6b6a9af4e15556fda9f9b192b079" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_enclosure</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a48af1649549ccfd66a565e8495c74630" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_hasDefaultY</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1add0675ea224b724f769ef42b28ceb748" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_metroText</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a97688edcce3d11dbff2cfc4ca78920dc" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_pass1</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a7b3e13b5c7d57b409a34afe26f3dad63" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_pass2</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a58c895e4d56b1330718493e5cf917132" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_rehearsalText</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ad42f8cfeea8c5adfd66fcea72e3eaf4a" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_score</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ad8d530f6671275f5c74ed1593000bf49" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_segno</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ab07e3cad899d5354bb041a68ed55843d" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndCapo</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a31a2cfc0780a337ee723248fd5854813" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndCoda</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a4625c6313435810f6a64d97cb3d26882" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndDacapo</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1af2f5af79cbf874c3b441bf9c17a225b2" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndDalsegno</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a9030e61d330246f23f4fc867adef7db7" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndFine</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a714a657abda91075e99e76c649ec2cfc" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_sndSegno</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1aa945a7ef89b9803cef00e9fec85db258" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_tempo</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a98de99ed31e6fb69d4945aad494f046a" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_tpoMetro</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a75cff353767f3957b224b3df983f4ce6" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_tpoSound</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a34e3a2f0243b530f19c278ea2c18046a" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>_wordsText</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a9506eee38ea6a9183f66811878d0b2fc" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>bracket</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a2f228dc2bab0872c6a4998886893074d" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>dashes</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a288e85af15748149c954237d3b3b8688" prot="public" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>direction</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1afed06709f0b836b8e2e0d640350dcb0b" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>directionType</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ae17180b68b979aa48af77dbcc9eece03" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>dynamics</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a74aa578a36a43a3ca7488e9155a25022" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>handleRepeats</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a9bf4e7ad2429e07b36ede47764c7a2ee" prot="public" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>logDebugInfo</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a06ec4ebe7b85a66090add2c30cad1e14" prot="public" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>logError</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1af722887749c9d1d2d10d20c5b308bb35" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>metronome</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ad718d8f199895cd27d32117f3229484a" prot="public" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>MusicXMLParserDirection</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a566731da03f8247e668ca7f90841274a" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>octaveShift</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1aa2e8b008500e2fc90db75f219ede22e2" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>pedal</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a24827f168c7a6b544b422d0167aa5ad0" prot="public" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>skipLogCurrElem</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1ab05e7d83d0c1f4e8120f89cb84fbb9a4" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>sound</name></member>
      <member refid="class_ms_1_1_music_x_m_l_parser_direction_1a6606b231c05dd2f015ae28273c443231" prot="private" virt="non-virtual"><scope>Ms::MusicXMLParserDirection</scope><name>wedge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
