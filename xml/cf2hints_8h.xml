<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cf2hints_8h" kind="file" language="C++">
    <compoundname>cf2hints.h</compoundname>
    <includedby refid="cf2blues_8c" local="yes">thirdparty/freetype/src/cff/cf2blues.c</includedby>
    <includedby refid="cf2intrp_8h" local="yes">thirdparty/freetype/src/cff/cf2intrp.h</includedby>
    <includedby refid="cf2hints_8c" local="yes">thirdparty/freetype/src/cff/cf2hints.c</includedby>
    <includedby refid="cf2intrp_8c" local="yes">thirdparty/freetype/src/cff/cf2intrp.c</includedby>
    <invincdepgraph>
      <node id="79208">
        <label>thirdparty/freetype/src/cff/cf2hints.c</label>
        <link refid="cf2hints_8c_source"/>
        <childnode refid="79205" relation="include">
        </childnode>
      </node>
      <node id="79203">
        <label>thirdparty/freetype/src/cff/cf2hints.h</label>
        <link refid="cf2hints_8h"/>
        <childnode refid="79204" relation="include">
        </childnode>
        <childnode refid="79206" relation="include">
        </childnode>
        <childnode refid="79208" relation="include">
        </childnode>
        <childnode refid="79209" relation="include">
        </childnode>
      </node>
      <node id="79207">
        <label>thirdparty/freetype/src/cff/cf2font.c</label>
        <link refid="cf2font_8c_source"/>
        <childnode refid="79205" relation="include">
        </childnode>
      </node>
      <node id="79209">
        <label>thirdparty/freetype/src/cff/cf2intrp.c</label>
        <link refid="cf2intrp_8c_source"/>
        <childnode refid="79205" relation="include">
        </childnode>
      </node>
      <node id="79206">
        <label>thirdparty/freetype/src/cff/cf2intrp.h</label>
        <link refid="cf2intrp_8h_source"/>
        <childnode refid="79207" relation="include">
        </childnode>
        <childnode refid="79208" relation="include">
        </childnode>
        <childnode refid="79209" relation="include">
        </childnode>
      </node>
      <node id="79204">
        <label>thirdparty/freetype/src/cff/cf2blues.c</label>
        <link refid="cf2blues_8c_source"/>
        <childnode refid="79205" relation="include">
        </childnode>
      </node>
      <node id="79205">
        <label>thirdparty/freetype/src/cff/cff.c</label>
        <link refid="cff_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_c_f2___hint_mask_rec__" prot="public">CF2_HintMaskRec_</innerclass>
    <innerclass refid="struct_c_f2___stem_hint_rec__" prot="public">CF2_StemHintRec_</innerclass>
    <innerclass refid="struct_c_f2___hint_map_rec__" prot="public">CF2_HintMapRec_</innerclass>
    <innerclass refid="struct_c_f2___glyph_path_rec__" prot="public">CF2_GlyphPathRec_</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cf2hints_8h_1aeb8e1c282570d629a6b603a94a4650d6" prot="public" static="no">
        <name>@68</name>
        <enumvalue id="cf2hints_8h_1aeb8e1c282570d629a6b603a94a4650d6aad8626689f8ce96fdcd1b8fd14a55947" prot="public">
          <name>CF2_MAX_HINTS</name>
          <initializer>= 96</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="47" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="enum" id="cf2hints_8h_1a109bfaad92bd6d348dab484aec11edbb" prot="public" static="no">
        <name>@69</name>
        <enumvalue id="cf2hints_8h_1a109bfaad92bd6d348dab484aec11edbbabddfc0930efc79aceebef672b7b63a99" prot="public">
          <name>CF2_MAX_HINT_EDGES</name>
          <initializer>= CF2_MAX_HINTS * 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="122" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.h" bodystart="121" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cf2hints_8h_1aa53cd0d51eeaaa62bba13592ea3ac2a9" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMaskRec_</ref></type>
        <definition>typedef struct CF2_HintMaskRec_  CF2_HintMaskRec</definition>
        <argsstring></argsstring>
        <name>CF2_HintMaskRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1ad6df4b6316911c6ea99b0492846233ea" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMaskRec_</ref> *</type>
        <definition>typedef struct CF2_HintMaskRec_ * CF2_HintMask</definition>
        <argsstring></argsstring>
        <name>CF2_HintMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1af6dcf47aaa2b30e4f54b9e7c5976d8e4" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___stem_hint_rec__" kindref="compound">CF2_StemHintRec_</ref></type>
        <definition>typedef struct CF2_StemHintRec_  CF2_StemHintRec</definition>
        <argsstring></argsstring>
        <name>CF2_StemHintRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1a1cbf923ff372b97aa2323e3237ec1f85" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___stem_hint_rec__" kindref="compound">CF2_StemHintRec_</ref> *</type>
        <definition>typedef struct CF2_StemHintRec_ * CF2_StemHint</definition>
        <argsstring></argsstring>
        <name>CF2_StemHint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1a73f8cdf89d857de19e8cccff32039f33" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec_</ref></type>
        <definition>typedef struct CF2_HintMapRec_  CF2_HintMapRec</definition>
        <argsstring></argsstring>
        <name>CF2_HintMapRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1a4ecd32f738aa3f156019609f150618c8" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec_</ref> *</type>
        <definition>typedef struct CF2_HintMapRec_ * CF2_HintMap</definition>
        <argsstring></argsstring>
        <name>CF2_HintMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1a8725e6cb1901e9e14abaacf5ca7a5572" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPathRec_</ref></type>
        <definition>typedef struct CF2_GlyphPathRec_  CF2_GlyphPathRec</definition>
        <argsstring></argsstring>
        <name>CF2_GlyphPathRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cf2hints_8h_1a6dea614db0967e1e9d2f0872a8f0d2d0" prot="public" static="no">
        <type>struct <ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPathRec_</ref> *</type>
        <definition>typedef struct CF2_GlyphPathRec_ * CF2_GlyphPath</definition>
        <argsstring></argsstring>
        <name>CF2_GlyphPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cf2hints_8h_1aa9327b4ff1fb11cc4820618c7268ed9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hint_isValid</definition>
        <argsstring>(const CF2_Hint hint)</argsstring>
        <name>cf2_hint_isValid</name>
        <param>
          <type>const <ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="152" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a2420837d3b6bb72102aac449cdfc9e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hint_isTop</definition>
        <argsstring>(const CF2_Hint hint)</argsstring>
        <name>cf2_hint_isTop</name>
        <param>
          <type>const <ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="154" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a0732d79b083ef204ba7503ed03a62f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hint_isBottom</definition>
        <argsstring>(const CF2_Hint hint)</argsstring>
        <name>cf2_hint_isBottom</name>
        <param>
          <type>const <ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="156" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a9c2a2fea095986e9b85258790703dbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hint_lock</definition>
        <argsstring>(CF2_Hint hint)</argsstring>
        <name>cf2_hint_lock</name>
        <param>
          <type><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref></type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="158" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1ab6e73561324e1c1fa443c97b6ebbd86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hintmap_init</definition>
        <argsstring>(CF2_HintMap hintmap, CF2_Font font, CF2_HintMap initialMap, CF2_ArrStack hintMoves, CF2_Fixed scale)</argsstring>
        <name>cf2_hintmap_init</name>
        <param>
          <type><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMap</ref></type>
          <declname>hintmap</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref></type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMap</ref></type>
          <declname>initialMap</declname>
        </param>
        <param>
          <type>CF2_ArrStack</type>
          <declname>hintMoves</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="162" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="277" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a451c117b476c1a9a456266eeacd69be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_hintmap_build</definition>
        <argsstring>(CF2_HintMap hintmap, CF2_ArrStack hStemHintArray, CF2_ArrStack vStemHintArray, CF2_HintMask hintMask, CF2_Fixed hintOrigin, FT_Bool initialMap)</argsstring>
        <name>cf2_hintmap_build</name>
        <param>
          <type><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMap</ref></type>
          <declname>hintmap</declname>
        </param>
        <param>
          <type>CF2_ArrStack</type>
          <declname>hStemHintArray</declname>
        </param>
        <param>
          <type>CF2_ArrStack</type>
          <declname>vStemHintArray</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref></type>
          <declname>hintMask</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>hintOrigin</declname>
        </param>
        <param>
          <type>FT_Bool</type>
          <declname>initialMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="168" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="746" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a866d21f61c1356e0a1969736f5582fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_init</definition>
        <argsstring>(CF2_GlyphPath glyphpath, CF2_Font font, CF2_OutlineCallbacks callbacks, CF2_Fixed scaleY, CF2_ArrStack hStemHintArray, CF2_ArrStack vStemHintArray, CF2_HintMask hintMask, CF2_Fixed hintOrigin, const CF2_Blues blues, const FT_Vector *fractionalTranslation)</argsstring>
        <name>cf2_glyphpath_init</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref></type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>scaleY</declname>
        </param>
        <param>
          <type>CF2_ArrStack</type>
          <declname>hStemHintArray</declname>
        </param>
        <param>
          <type>CF2_ArrStack</type>
          <declname>vStemHintArray</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref></type>
          <declname>hintMask</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>hintOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_f2___blues_rec__" kindref="compound">CF2_Blues</ref></type>
          <declname>blues</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>fractionalTranslation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="249" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1004" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a328e83a545f5bfd3ff659d77a0152b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_finalize</definition>
        <argsstring>(CF2_GlyphPath glyphpath)</argsstring>
        <name>cf2_glyphpath_finalize</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="261" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1075" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a0aff04a3f60e7c983b00bc8b1d627083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_moveTo</definition>
        <argsstring>(CF2_GlyphPath glyphpath, CF2_Fixed x, CF2_Fixed y)</argsstring>
        <name>cf2_glyphpath_moveTo</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>x</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="264" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1590" bodyend="1616"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a883983c021714ea3510818ee981038c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_lineTo</definition>
        <argsstring>(CF2_GlyphPath glyphpath, CF2_Fixed x, CF2_Fixed y)</argsstring>
        <name>cf2_glyphpath_lineTo</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>x</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="268" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1620" bodyend="1722"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a4995af9e8a415785bb32356638fd75e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_curveTo</definition>
        <argsstring>(CF2_GlyphPath glyphpath, CF2_Fixed x1, CF2_Fixed y1, CF2_Fixed x2, CF2_Fixed y2, CF2_Fixed x3, CF2_Fixed y3)</argsstring>
        <name>cf2_glyphpath_curveTo</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>y3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="272" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1726" bodyend="1811"/>
      </memberdef>
      <memberdef kind="function" id="cf2hints_8h_1a5609bd67dc3b87430a9144f085da8ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_glyphpath_closeOpenPath</definition>
        <argsstring>(CF2_GlyphPath glyphpath)</argsstring>
        <name>cf2_glyphpath_closeOpenPath</name>
        <param>
          <type><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref></type>
          <declname>glyphpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2hints.h" line="280" column="1" bodyfile="thirdparty/freetype/src/cff/cf2hints.c" bodystart="1815" bodyend="1844"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>cf2hints.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Adobe&apos;s<sp/>code<sp/>for<sp/>handling<sp/>CFF<sp/>hints<sp/>(body).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2007-2013<sp/>Adobe<sp/>Systems<sp/>Incorporated.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>software,<sp/>and<sp/>all<sp/>works<sp/>of<sp/>authorship,<sp/>whether<sp/>in<sp/>source<sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>object<sp/>code<sp/>form<sp/>as<sp/>indicated<sp/>by<sp/>the<sp/>copyright<sp/>notice(s)<sp/>included<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>herein<sp/>(collectively,<sp/>the<sp/>&quot;Work&quot;)<sp/>is<sp/>made<sp/>available,<sp/>and<sp/>may<sp/>only<sp/>be<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>used,<sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>FreeType<sp/>Project<sp/>License,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>LICENSE.TXT.<sp/><sp/>Additionally,<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License,<sp/>each<sp/>contributor<sp/>to<sp/>the<sp/>Work<sp/>hereby<sp/>grants<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>to<sp/>any<sp/>individual<sp/>or<sp/>legal<sp/>entity<sp/>exercising<sp/>permissions<sp/>granted<sp/>by<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>FreeType<sp/>Project<sp/>License<sp/>and<sp/>this<sp/>section<sp/>(hereafter,<sp/>&quot;You&quot;<sp/>or<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>&quot;Your&quot;)<sp/>a<sp/>perpetual,<sp/>worldwide,<sp/>non-exclusive,<sp/>no-charge,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>royalty-free,<sp/>irrevocable<sp/>(except<sp/>as<sp/>stated<sp/>in<sp/>this<sp/>section)<sp/>patent<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license<sp/>to<sp/>make,<sp/>have<sp/>made,<sp/>use,<sp/>offer<sp/>to<sp/>sell,<sp/>sell,<sp/>import,<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>otherwise<sp/>transfer<sp/>the<sp/>Work,<sp/>where<sp/>such<sp/>license<sp/>applies<sp/>only<sp/>to<sp/>those<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>patent<sp/>claims<sp/>licensable<sp/>by<sp/>such<sp/>contributor<sp/>that<sp/>are<sp/>necessarily<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>infringed<sp/>by<sp/>their<sp/>contribution(s)<sp/>alone<sp/>or<sp/>by<sp/>combination<sp/>of<sp/>their<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>contribution(s)<sp/>with<sp/>the<sp/>Work<sp/>to<sp/>which<sp/>such<sp/>contribution(s)<sp/>was<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>submitted.<sp/><sp/>If<sp/>You<sp/>institute<sp/>patent<sp/>litigation<sp/>against<sp/>any<sp/>entity<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>(including<sp/>a<sp/>cross-claim<sp/>or<sp/>counterclaim<sp/>in<sp/>a<sp/>lawsuit)<sp/>alleging<sp/>that<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>Work<sp/>or<sp/>a<sp/>contribution<sp/>incorporated<sp/>within<sp/>the<sp/>Work<sp/>constitutes<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>direct<sp/>or<sp/>contributory<sp/>patent<sp/>infringement,<sp/>then<sp/>any<sp/>patent<sp/>licenses<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>granted<sp/>to<sp/>You<sp/>under<sp/>this<sp/>License<sp/>for<sp/>that<sp/>Work<sp/>shall<sp/>terminate<sp/>as<sp/>of<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>date<sp/>such<sp/>litigation<sp/>is<sp/>filed.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>By<sp/>using,<sp/>modifying,<sp/>or<sp/>distributing<sp/>the<sp/>Work<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>have<sp/>read<sp/>and<sp/>understood<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License<sp/>as<sp/>well<sp/>as<sp/>those<sp/>provided<sp/>in<sp/>this<sp/>section,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>and<sp/>you<sp/>accept<sp/>them<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CF2HINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CF2HINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_MAX_HINTS<sp/>=<sp/>96<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>#<sp/>of<sp/>hints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>HintMask<sp/>object<sp/>stores<sp/>a<sp/>bit<sp/>mask<sp/>that<sp/>specifies<sp/>which<sp/>hints<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/>charstring<sp/>are<sp/>active<sp/>at<sp/>a<sp/>given<sp/>time.<sp/><sp/>Hints<sp/>in<sp/>CFF<sp/>must<sp/>be<sp/>declared</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*<sp/>at<sp/>the<sp/>start,<sp/>before<sp/>any<sp/>drawing<sp/>operators,<sp/>with<sp/>horizontal<sp/>hints</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*<sp/>preceding<sp/>vertical<sp/>hints.<sp/><sp/>The<sp/>HintMask<sp/>is<sp/>ordered<sp/>the<sp/>same<sp/>way,<sp/>with</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*<sp/>horizontal<sp/>hints<sp/>immediately<sp/>followed<sp/>by<sp/>vertical<sp/>hints.<sp/><sp/>Clients<sp/>are</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*<sp/>responsible<sp/>for<sp/>knowing<sp/>how<sp/>many<sp/>of<sp/>each<sp/>type<sp/>are<sp/>present.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>maximum<sp/>total<sp/>number<sp/>of<sp/>hints<sp/>is<sp/>96,<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>CFF</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/>specification.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>HintMask<sp/>is<sp/>built<sp/>0<sp/>or<sp/>more<sp/>times<sp/>while<sp/>interpreting<sp/>a<sp/>charstring,<sp/>by</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>HintMask<sp/>operator.<sp/><sp/>There<sp/>is<sp/>only<sp/>one<sp/>HintMask,<sp/>but<sp/>it<sp/>is<sp/>built<sp/>or</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/>rebuilt<sp/>each<sp/>time<sp/>there<sp/>is<sp/>a<sp/>hint<sp/>substitution<sp/>(HintMask<sp/>operator)<sp/>in</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>charstring.<sp/><sp/>A<sp/>default<sp/>HintMask<sp/>with<sp/>all<sp/>bits<sp/>set<sp/>is<sp/>built<sp/>if<sp/>there</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*<sp/>has<sp/>been<sp/>no<sp/>HintMask<sp/>operator<sp/>prior<sp/>to<sp/>the<sp/>first<sp/>drawing<sp/>operator.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_c_f2___hint_mask_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMaskRec_</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>isValid;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>isNew;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/>bitCount;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/>byteCount;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>mask[(<sp/>CF2_MAX_HINTS<sp/>+<sp/>7<sp/>)<sp/>/<sp/>8];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMaskRec</ref>,<sp/>*<ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_c_f2___stem_hint_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_c_f2___stem_hint_rec__" kindref="compound">CF2_StemHintRec_</ref></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>used;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DS<sp/>positions<sp/>are<sp/>valid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>min;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original<sp/>character<sp/>space<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>max;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>minDS;<sp/><sp/></highlight><highlight class="comment">/*<sp/>DS<sp/>position<sp/>after<sp/>first<sp/>use<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>maxDS;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_c_f2___stem_hint_rec__" kindref="compound">CF2_StemHintRec</ref>,<sp/>*<ref refid="struct_c_f2___stem_hint_rec__" kindref="compound">CF2_StemHint</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>HintMap<sp/>object<sp/>stores<sp/>a<sp/>piecewise<sp/>linear<sp/>function<sp/>for<sp/>mapping</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*<sp/>y-coordinates<sp/>from<sp/>character<sp/>space<sp/>to<sp/>device<sp/>space,<sp/>providing</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*<sp/>appropriate<sp/>pixel<sp/>alignment<sp/>to<sp/>stem<sp/>edges.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>map<sp/>is<sp/>implemented<sp/>as<sp/>an<sp/>array<sp/>of<sp/>`CF2_Hint&apos;<sp/>elements,<sp/>each</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/>representing<sp/>an<sp/>edge.<sp/><sp/>When<sp/>edges<sp/>are<sp/>paired,<sp/>as<sp/>from<sp/>stem<sp/>hints,<sp/>the</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*<sp/>bottom<sp/>edge<sp/>must<sp/>immediately<sp/>precede<sp/>the<sp/>top<sp/>edge<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Element<sp/>character<sp/>space<sp/>AND<sp/>device<sp/>space<sp/>positions<sp/>must<sp/>both<sp/>increase</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*<sp/>monotonically<sp/>in<sp/>the<sp/>array.<sp/><sp/>`CF2_Hint&apos;<sp/>elements<sp/>are<sp/>also<sp/>used<sp/>as</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>*<sp/>parameters<sp/>to<sp/>`cf2_blues_capture&apos;.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>`cf2_hintmap_build&apos;<sp/>method<sp/>must<sp/>be<sp/>called<sp/>before<sp/>any<sp/>drawing</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>*<sp/>operation<sp/>(beginning<sp/>with<sp/>a<sp/>Move<sp/>operator)<sp/>and<sp/>at<sp/>each<sp/>hint</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/>substitution<sp/>(HintMask<sp/>operator).</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>`cf2_hintmap_map&apos;<sp/>method<sp/>is<sp/>called<sp/>to<sp/>transform<sp/>y-coordinates<sp/>at</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/>each<sp/>drawing<sp/>operation<sp/>(move,<sp/>line,<sp/>curve).</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>make<sp/>this<sp/>a<sp/>CF2_ArrStack<sp/>and<sp/>add<sp/>a<sp/>deep<sp/>copy<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_MAX_HINT_EDGES<sp/>=<sp/>CF2_MAX_HINTS<sp/>*<sp/>2</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="struct_c_f2___hint_map_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec_</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><ref refid="structfont" kindref="compound">font</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initial<sp/>map<sp/>based<sp/>on<sp/>blue<sp/>zones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec_</ref>*<sp/><sp/>initialHintMap;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>working<sp/>storage<sp/>for<sp/>2nd<sp/>pass<sp/>adjustHints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/>hintMoves;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>isValid;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>hinted;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>scale;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_UInt<sp/><sp/><sp/>count;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>search<sp/>from<sp/>this<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_UInt<sp/><sp/>lastIndex;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_HintRec</ref><sp/><sp/>edge[CF2_MAX_HINT_EDGES];<sp/></highlight><highlight class="comment">/*<sp/>192<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec</ref>,<sp/>*<ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMap</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Bool<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>cf2_hint_isValid(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref><sp/><sp/>hint<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Bool<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>cf2_hint_isTop(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref><sp/><sp/>hint<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Bool<sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>cf2_hint_isBottom(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref><sp/><sp/>hint<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>cf2_hint_lock(<sp/><ref refid="struct_c_f2___hint_rec__" kindref="compound">CF2_Hint</ref><sp/><sp/>hint<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>cf2_hintmap_init(<sp/>CF2_HintMap<sp/><sp/><sp/>hintmap,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfont" kindref="compound">font</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_HintMap<sp/><sp/><sp/>initialMap,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/>hintMoves,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>cf2_hintmap_build(<sp/>CF2_HintMap<sp/><sp/><sp/>hintmap,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/>hStemHintArray,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/>vStemHintArray,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref><sp/><sp/>hintMask,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/>hintOrigin,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialMap<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*<sp/>GlyphPath<sp/>is<sp/>a<sp/>wrapper<sp/>for<sp/>drawing<sp/>operations<sp/>that<sp/>scales<sp/>the</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/>coordinates<sp/>according<sp/>to<sp/>the<sp/>render<sp/>matrix<sp/>and<sp/>HintMap.<sp/><sp/>It<sp/>also<sp/>tracks</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/>open<sp/>paths<sp/>to<sp/>control<sp/>ClosePath<sp/>and<sp/>to<sp/>insert<sp/>MoveTo<sp/>for<sp/>broken<sp/>fonts.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="struct_c_f2___glyph_path_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPathRec_</ref></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>gather<sp/>some<sp/>of<sp/>these<sp/>into<sp/>a<sp/>hinting<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>font<sp/>instance<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref><sp/><sp/>callbacks;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>outline<sp/>consumer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec</ref><sp/><sp/>hintMap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>hint<sp/>map<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec</ref><sp/><sp/>firstHintMap;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>saved<sp/>copy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_map_rec__" kindref="compound">CF2_HintMapRec</ref><sp/><sp/>initialHintMap;<sp/></highlight><highlight class="comment">/*<sp/>based<sp/>on<sp/>all<sp/>captured<sp/>hints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_ArrStackRec<sp/><sp/>hintMoves;<sp/><sp/></highlight><highlight class="comment">/*<sp/>list<sp/>of<sp/>hint<sp/>moves<sp/>for<sp/>2nd<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>scaleX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>a<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>scaleC;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>scaleY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>d<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>fractionalTranslation;<sp/><sp/></highlight><highlight class="comment">/*<sp/>including<sp/>deviceXScale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>hShift;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>character<sp/>space<sp/>horizontal<sp/>shift<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(for<sp/>fauxing)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>pathIsOpen;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>after<sp/>MoveTo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>pathIsClosing;<sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>when<sp/>synthesizing<sp/>closepath<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>darken;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>stem<sp/>darkening<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>moveIsPending;<sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>between<sp/>MoveTo<sp/>and<sp/>offset<sp/>MoveTo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>references<sp/>used<sp/>to<sp/>call<sp/>`cf2_hintmap_build&apos;,<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hStemHintArray;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vStemHintArray;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hintMask;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ptr<sp/>to<sp/>the<sp/>current<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hintOriginY;<sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>of<sp/>current<sp/>origin<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___blues_rec__" kindref="compound">CF2_BluesRec</ref>*<sp/><sp/>blues;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>xOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>character<sp/>space<sp/>offsets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>yOffset;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>character<sp/>space<sp/>miter<sp/>limit<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>miterLimit;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>vertical/horzizontal<sp/>snap<sp/>distance<sp/>in<sp/>character<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>snapThreshold;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>offsetStart0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>and<sp/>second<sp/>points<sp/>of<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>offsetStart1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>element<sp/>with<sp/>offset<sp/>applied<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>point,<sp/>character<sp/>space,<sp/>before<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>currentCS;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>point,<sp/>device<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>currentDS;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>point<sp/>of<sp/>subpath,<sp/>character<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>start;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>members<sp/>constitute<sp/>the<sp/>`queue&apos;<sp/>of<sp/>one<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>elemIsQueued;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Int<sp/><sp/>prevElemOp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>prevElemP0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>prevElemP1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>prevElemP2;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref><sp/><sp/>prevElemP3;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPathRec</ref>,<sp/>*<ref refid="struct_c_f2___glyph_path_rec__" kindref="compound">CF2_GlyphPath</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>cf2_glyphpath_init(<sp/>CF2_GlyphPath<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyphpath,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref><sp/><sp/>callbacks,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleY,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CF2_Fixed<sp/>hShift,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hStemHintArray,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_ArrStack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vStemHintArray,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___hint_mask_rec__" kindref="compound">CF2_HintMask</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hintMask,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hintOrigin,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___blues_rec__" kindref="compound">CF2_Blues</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blues,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>fractionalTranslation<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>cf2_glyphpath_finalize(<sp/>CF2_GlyphPath<sp/><sp/>glyphpath<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>cf2_glyphpath_moveTo(<sp/>CF2_GlyphPath<sp/><sp/>glyphpath,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>x,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>cf2_glyphpath_lineTo(<sp/>CF2_GlyphPath<sp/><sp/>glyphpath,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>x,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>cf2_glyphpath_curveTo(<sp/>CF2_GlyphPath<sp/><sp/>glyphpath,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>x1,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>y1,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>x2,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>y2,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>x3,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/><sp/><sp/>y3<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>cf2_glyphpath_closeOpenPath(<sp/>CF2_GlyphPath<sp/><sp/>glyphpath<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__CF2HINTS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/cff/cf2hints.h"/>
  </compounddef>
</doxygen>
