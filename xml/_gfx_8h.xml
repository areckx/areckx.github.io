<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_gfx_8h" kind="file" language="C++">
    <compoundname>Gfx.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_goo_list_8h" local="yes">goo/GooList.h</includes>
    <includes refid="_gfx_state_8h" local="yes">GfxState.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_poppler_cache_8h" local="yes">PopplerCache.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="_annot_8cc" local="yes">thirdparty/poppler/poppler/Annot.cc</includedby>
    <includedby refid="_cairo_font_engine_8cc" local="yes">thirdparty/poppler/poppler/CairoFontEngine.cc</includedby>
    <includedby refid="_cairo_output_dev_8cc" local="yes">thirdparty/poppler/poppler/CairoOutputDev.cc</includedby>
    <includedby refid="_form_8cc" local="yes">thirdparty/poppler/poppler/Form.cc</includedby>
    <includedby refid="_gfx_8cc" local="yes">thirdparty/poppler/poppler/Gfx.cc</includedby>
    <includedby refid="_gfx_state_8cc" local="yes">thirdparty/poppler/poppler/GfxState.cc</includedby>
    <includedby refid="_page_8cc" local="yes">thirdparty/poppler/poppler/Page.cc</includedby>
    <includedby refid="_pre_scan_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PreScanOutputDev.cc</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <includedby refid="_splash_output_dev_8cc" local="yes">thirdparty/poppler/poppler/SplashOutputDev.cc</includedby>
    <includedby refid="poppler-annotation_8cc" local="no">thirdparty/poppler/qt5/poppler-annotation.cc</includedby>
    <incdepgraph>
      <node id="87232">
        <label>stdarg.h</label>
      </node>
      <node id="87241">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87227" relation="include">
        </childnode>
      </node>
      <node id="87242">
        <label>assert.h</label>
      </node>
      <node id="87225">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87241" relation="include">
        </childnode>
        <childnode refid="87242" relation="include">
        </childnode>
        <childnode refid="87243" relation="include">
        </childnode>
      </node>
      <node id="87233">
        <label>stdlib.h</label>
      </node>
      <node id="87229">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87222" relation="include">
        </childnode>
        <childnode refid="87221" relation="include">
        </childnode>
      </node>
      <node id="87236">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87237" relation="include">
        </childnode>
      </node>
      <node id="87243">
        <label>map</label>
      </node>
      <node id="87235">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87232" relation="include">
        </childnode>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87230" relation="include">
        </childnode>
      </node>
      <node id="87220">
        <label>thirdparty/poppler/poppler/Gfx.h</label>
        <link refid="_gfx_8h"/>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87224" relation="include">
        </childnode>
        <childnode refid="87225" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87244" relation="include">
        </childnode>
        <childnode refid="87245" relation="include">
        </childnode>
      </node>
      <node id="87224">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="87223" relation="include">
        </childnode>
      </node>
      <node id="87239">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87237" relation="include">
        </childnode>
      </node>
      <node id="87231">
        <label>limits.h</label>
      </node>
      <node id="87221">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87222" relation="include">
        </childnode>
      </node>
      <node id="87234">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87240">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87221" relation="include">
        </childnode>
        <childnode refid="87222" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87226" relation="include">
        </childnode>
        <childnode refid="87237" relation="include">
        </childnode>
      </node>
      <node id="87238">
        <label>pthread.h</label>
      </node>
      <node id="87244">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="87226" relation="include">
        </childnode>
      </node>
      <node id="87228">
        <label>string.h</label>
      </node>
      <node id="87230">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87231" relation="include">
        </childnode>
        <childnode refid="87232" relation="include">
        </childnode>
        <childnode refid="87233" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
      </node>
      <node id="87226">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87227" relation="include">
        </childnode>
        <childnode refid="87222" relation="include">
        </childnode>
        <childnode refid="87228" relation="include">
        </childnode>
        <childnode refid="87223" relation="include">
        </childnode>
        <childnode refid="87229" relation="include">
        </childnode>
        <childnode refid="87230" relation="include">
        </childnode>
        <childnode refid="87234" relation="include">
        </childnode>
        <childnode refid="87235" relation="include">
        </childnode>
        <childnode refid="87236" relation="include">
        </childnode>
        <childnode refid="87239" relation="include">
        </childnode>
        <childnode refid="87240" relation="include">
        </childnode>
      </node>
      <node id="87245">
        <label>vector</label>
      </node>
      <node id="87237">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87238" relation="include">
        </childnode>
      </node>
      <node id="87223">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87221" relation="include">
        </childnode>
      </node>
      <node id="87227">
        <label>set</label>
      </node>
      <node id="87222">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="87248">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="87257">
        <label>thirdparty/poppler/qt5/poppler-annotation.cc</label>
        <link refid="poppler-annotation_8cc_source"/>
      </node>
      <node id="87254">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.cc</label>
        <link refid="_pre_scan_output_dev_8cc_source"/>
      </node>
      <node id="87246">
        <label>thirdparty/poppler/poppler/Gfx.h</label>
        <link refid="_gfx_8h"/>
        <childnode refid="87247" relation="include">
        </childnode>
        <childnode refid="87248" relation="include">
        </childnode>
        <childnode refid="87249" relation="include">
        </childnode>
        <childnode refid="87250" relation="include">
        </childnode>
        <childnode refid="87251" relation="include">
        </childnode>
        <childnode refid="87252" relation="include">
        </childnode>
        <childnode refid="87253" relation="include">
        </childnode>
        <childnode refid="87254" relation="include">
        </childnode>
        <childnode refid="87255" relation="include">
        </childnode>
        <childnode refid="87256" relation="include">
        </childnode>
        <childnode refid="87257" relation="include">
        </childnode>
      </node>
      <node id="87249">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="87256">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="87255">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="87253">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
      <node id="87247">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="87252">
        <label>thirdparty/poppler/poppler/GfxState.cc</label>
        <link refid="_gfx_state_8cc_source"/>
      </node>
      <node id="87251">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
      <node id="87250">
        <label>thirdparty/poppler/poppler/Form.cc</label>
        <link refid="_form_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_operator" prot="public">Operator</innerclass>
    <innerclass refid="class_gfx_resources" prot="public">GfxResources</innerclass>
    <innerclass refid="class_gfx" prot="public">Gfx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_gfx_8h_1a6f63b27de0e56c32c125896c6b5cb7b3" prot="public" static="no">
        <name>maxArgs</name>
        <initializer>33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Gfx.h" line="98" column="9" bodyfile="thirdparty/poppler/poppler/Gfx.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_gfx_8h_1a7ddc0dffe1842920d0eddd5b5cbcb5e3" prot="public" static="no">
        <name>GfxClipType</name>
        <enumvalue id="_gfx_8h_1a7ddc0dffe1842920d0eddd5b5cbcb5e3ae42557cdaae7e4d767c440199f8e5eef" prot="public">
          <name>clipNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1a7ddc0dffe1842920d0eddd5b5cbcb5e3a2dad790b876f6246108fbb6cd0086fa7" prot="public">
          <name>clipNormal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1a7ddc0dffe1842920d0eddd5b5cbcb5e3a614b11b8d0d0e3222445dfcb39ed4149" prot="public">
          <name>clipEO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Gfx.h" line="80" column="1" bodyfile="thirdparty/poppler/poppler/Gfx.h" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187" prot="public" static="no">
        <name>TchkType</name>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a387fa1a6009e629ee868d541692a1091" prot="public">
          <name>tchkBool</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a0f363337b3c4d10b5a014f617e723619" prot="public">
          <name>tchkInt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a8158bd4d79f911f348e829bd18116b16" prot="public">
          <name>tchkNum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187afd099432d2ccd32605b34108211a6072" prot="public">
          <name>tchkString</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a3f65449e119785dc734a9b0d4822308d" prot="public">
          <name>tchkName</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a132b43cbe720b57d41e95bc15db818ab" prot="public">
          <name>tchkArray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187a95063f3df73f425926cdbea4fc9d64fa" prot="public">
          <name>tchkProps</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187afd8d8c2f26d48e01c8677448818c1793" prot="public">
          <name>tchkSCN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_8h_1ab1b90601150a70f79e8b8114b1aca187ad0a9c85a5720f6a7ba6486b66433282c" prot="public">
          <name>tchkNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Gfx.h" line="86" column="1" bodyfile="thirdparty/poppler/poppler/Gfx.h" bodystart="86" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gfx.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Jonathan<sp/>Blandford<sp/>&lt;jrb@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Iñigo<sp/>Martínez<sp/>&lt;inigomartinez@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Brad<sp/>Hards<sp/>&lt;bradh@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008,<sp/>2010<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009-2013<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009,<sp/>2010,<sp/>2012,<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>David<sp/>Benjamin<sp/>&lt;davidben@mit.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Christian<sp/>Feuersänger<sp/>&lt;cfeuersaenger@googlemail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GFX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GFX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PopplerCache.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_x_ref" kindref="compound">XRef</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_array" kindref="compound">Array</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream" kindref="compound">Stream</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_parser" kindref="compound">Parser</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_function" kindref="compound">Function</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_output_dev" kindref="compound">OutputDev</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font" kindref="compound">GfxFont</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_state" kindref="compound">GfxState</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx" kindref="compound">Gfx</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_annot_border" kindref="compound">AnnotBorder</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_annot_color" kindref="compound">AnnotColor</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_catalog" kindref="compound">Catalog</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_marked_content_stack" kindref="compound">MarkedContentStack</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GfxClipType<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>clipNone,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>clipNormal,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>clipEO</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>TchkType<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>tchkBool,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>tchkInt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>tchkNum,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>(integer<sp/>or<sp/>real)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>tchkString,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>tchkName,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>tchkArray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>tchkProps,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>properties<sp/>(dictionary<sp/>or<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>tchkSCN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scn/SCN<sp/>args<sp/>(number<sp/>of<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>tchkNone<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>avoid<sp/>empty<sp/>initializer<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>maxArgs<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_operator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_operator" kindref="compound">Operator</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[4];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>TchkType<sp/>tchk[maxArgs];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>void<sp/>(<ref refid="class_gfx" kindref="compound">Gfx</ref>::*func)(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_gfx_resources" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,<sp/><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*nextA);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_resources" kindref="compound">GfxResources</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*lookupFont(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>GBool<sp/>lookupXObject(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>GBool<sp/>lookupXObjectNF(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>GBool<sp/>lookupMarkedContentNF(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lookupColorSpace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_pattern" kindref="compound">GfxPattern</ref><sp/>*lookupPattern(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_shading" kindref="compound">GfxShading</ref><sp/>*lookupShading(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>GBool<sp/>lookupGState(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>GBool<sp/>lookupGStateNF(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*getNext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref><sp/>*fonts;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>xObjDict;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>colorSpaceDict;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>patternDict;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>shadingDict;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>gStateDict;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="class_poppler_object_cache" kindref="compound">PopplerObjectCache</ref><sp/>gStateCache;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>propertiesDict;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*next;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gfx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_gfx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>for<sp/>regular<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="class_gfx" kindref="compound">Gfx</ref>(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*outA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNum,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,<sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*box,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*cropBox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*abortCheckCbkA)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkDataA<sp/>=<sp/>NULL,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>for<sp/>a<sp/>sub-page<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="class_gfx" kindref="compound">Gfx</ref>(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*outA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*box,<sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*cropBox,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*abortCheckCbkA)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkDataA<sp/>=<sp/>NULL,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_CMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initDisplayProfile();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx" kindref="compound">Gfx</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*getXRef()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xref;<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Interpret<sp/>a<sp/>stream<sp/>or<sp/>array<sp/>of<sp/>streams.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>display(<ref refid="class_object" kindref="compound">Object</ref><sp/>*obj,<sp/>GBool<sp/>topLevel<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>an<sp/>annotation,<sp/>given<sp/>its<sp/>appearance<sp/>(a<sp/>Form<sp/>XObject),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>border<sp/>style,<sp/>and<sp/>bounding<sp/>box<sp/>(in<sp/>default<sp/>user<sp/>space).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawAnnot(<ref refid="class_object" kindref="compound">Object</ref><sp/>*str,<sp/><ref refid="class_annot_border" kindref="compound">AnnotBorder</ref><sp/>*border,<sp/><ref refid="class_annot_color" kindref="compound">AnnotColor</ref><sp/>*aColor,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yMax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>graphics<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveState();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>a<sp/>new<sp/>state<sp/>guard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushStateGuard();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>graphics<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restoreState();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>to<sp/>state<sp/>guard<sp/>and<sp/>pop<sp/>guard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popStateGuard();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>graphics<sp/>state<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*getState()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>GBool<sp/>checkTransparencyGroup(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawForm(<ref refid="class_object" kindref="compound">Object</ref><sp/>*str,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*matrix,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bbox,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>transpGroup<sp/>=<sp/>gFalse,<sp/>GBool<sp/>softMask<sp/>=<sp/>gFalse,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*blendingColorSpace<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>isolated<sp/>=<sp/>gFalse,<sp/>GBool<sp/>knockout<sp/>=<sp/>gFalse,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>alpha<sp/>=<sp/>gFalse,<sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*transferFunc<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*backdropColor<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushResources(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popResources();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*doc;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>xref<sp/>table<sp/>for<sp/>this<sp/>PDF<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="class_catalog" kindref="compound">Catalog</ref><sp/>*catalog;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Catalog<sp/>for<sp/>this<sp/>PDF<sp/>file<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>GBool<sp/>subPage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>this<sp/>a<sp/>sub-page<sp/>object?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>GBool<sp/>printCommands;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>the<sp/>drawing<sp/>commands<sp/>(for<sp/>debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>GBool<sp/>profileCommands;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>profile<sp/>the<sp/>drawing<sp/>commands<sp/>(for<sp/>debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>GBool<sp/>commandAborted;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>did<sp/>the<sp/>previous<sp/>command<sp/>abort<sp/>the<sp/>drawing?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref><sp/>*res;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resource<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updateLevel;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>graphics<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stackHeight;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>height<sp/>of<sp/>the<sp/>current<sp/>graphics<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>stateGuards;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>stack<sp/>of<sp/>state<sp/>limits;<sp/>to<sp/>guard<sp/>against<sp/>unmatched<sp/>pops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>GBool<sp/>fontChanged;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>font<sp/>or<sp/>text<sp/>matrix<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>GfxClipType<sp/>clip;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>a<sp/>clip?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ignoreUndef;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>BX/EX<sp/>nesting<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseMatrix[6];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>matrix<sp/>for<sp/>most<sp/>recent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>page/form/pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>formDepth;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>GBool<sp/>ocState;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>drawing<sp/>is<sp/>enabled,<sp/>false<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="struct_marked_content_stack" kindref="compound">MarkedContentStack</ref><sp/>*mcStack;<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>BMC/EMC<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="class_parser" kindref="compound">Parser</ref><sp/>*parser;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parser<sp/>for<sp/>page<sp/>content<sp/>stream(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>std::set&lt;int&gt;<sp/>formsDrawing;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>forms<sp/>that<sp/>are<sp/>being<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>GBool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callback<sp/>to<sp/>check<sp/>for<sp/>an<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>(*abortCheckCbk)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkData;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_operator" kindref="compound">Operator</ref><sp/>opTab[];<sp/><sp/></highlight><highlight class="comment">//<sp/>table<sp/>of<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>go(GBool<sp/>topLevel);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execOp(<ref refid="class_object" kindref="compound">Object</ref><sp/>*cmd,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="struct_operator" kindref="compound">Operator</ref><sp/>*findOp(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>GBool<sp/>checkArg(<ref refid="class_object" kindref="compound">Object</ref><sp/>*arg,<sp/>TchkType<sp/>type);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>Goffset<sp/>getPos();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottomGuard();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>graphics<sp/>state<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSave(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opRestore(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opConcat(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetDash(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFlat(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetLineJoin(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetLineCap(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetMiterLimit(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetLineWidth(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetExtGState(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doSoftMask(<ref refid="class_object" kindref="compound">Object</ref><sp/>*str,<sp/>GBool<sp/>alpha,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*blendingColorSpace,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>isolated,<sp/>GBool<sp/>knockout,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>*transferFunc,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*backdropColor);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetRenderingIntent(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillGray(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeGray(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillCMYKColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeCMYKColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillRGBColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeRGBColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillColorSpace(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeColorSpace(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeColor(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFillColorN(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetStrokeColorN(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>segment<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opMoveTo(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opLineTo(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCurveTo(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCurveTo1(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCurveTo2(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opRectangle(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opClosePath(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>painting<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEndPath(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCloseStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opFill(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEOFill(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opFillStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCloseFillStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEOFillStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opCloseEOFillStroke(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPatternFill(GBool<sp/>eoFill);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPatternStroke();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPatternText();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPatternImageMask(<ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>invert,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doTilingPatternFill(<ref refid="class_gfx_tiling_pattern" kindref="compound">GfxTilingPattern</ref><sp/>*tPat,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>stroke,<sp/>GBool<sp/>eoFill,<sp/>GBool<sp/>text);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doShadingPatternFill(<ref refid="class_gfx_shading_pattern" kindref="compound">GfxShadingPattern</ref><sp/>*sPat,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>stroke,<sp/>GBool<sp/>eoFill,<sp/>GBool<sp/>text);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opShFill(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFunctionShFill(<ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFunctionShFill1(<ref refid="class_gfx_function_shading" kindref="compound">GfxFunctionShading</ref><sp/>*shading,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*colors,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAxialShFill(<ref refid="class_gfx_axial_shading" kindref="compound">GfxAxialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doRadialShFill(<ref refid="class_gfx_radial_shading" kindref="compound">GfxRadialShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doGouraudTriangleShFill(<ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gouraudFillTriangle(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color0,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color1,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,<sp/><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref><sp/>*color2,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">GfxState::ReusablePathIterator</ref><sp/>*path);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gouraudFillTriangle(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color0,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color1,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color2,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refineColorThreshold,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/><ref refid="class_gfx_gouraud_triangle_shading" kindref="compound">GfxGouraudTriangleShading</ref><sp/>*shading,<sp/><ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">GfxState::ReusablePathIterator</ref><sp/>*path);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doPatchMeshShFill(<ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillPatch(<ref refid="struct_gfx_patch" kindref="compound">GfxPatch</ref><sp/>*patch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorComps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>patchColorComps,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refineColorThreshold,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/><ref refid="class_gfx_patch_mesh_shading" kindref="compound">GfxPatchMeshShading</ref><sp/>*shading);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doEndPath();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>clipping<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opClip(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEOClip(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>object<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opBeginText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEndText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>state<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetCharSpacing(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetFont(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetTextLeading(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetTextRender(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetTextRise(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetWordSpacing(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetHorizScaling(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>positioning<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opTextMove(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opTextMoveSet(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetTextMatrix(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opTextNextLine(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>string<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opShowText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opMoveShowText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opMoveSetShowText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opShowSpaceText(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doShowText(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doIncCharCount(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>XObject<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opXObject(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doImage(<ref refid="class_object" kindref="compound">Object</ref><sp/>*ref,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/>GBool<sp/>inlineImg);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doForm(<ref refid="class_object" kindref="compound">Object</ref><sp/>*str);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in-line<sp/>image<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opBeginImage(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*buildImageStream();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opImageData(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEndImage(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>3<sp/>font<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetCharWidth(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opSetCacheDevice(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compatibility<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opBeginIgnoreUndef(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEndIgnoreUndef(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>marked<sp/>content<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opBeginMarkedContent(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opEndMarkedContent(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>opMarkPoint(<ref refid="class_object" kindref="compound">Object</ref><sp/>args[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArgs);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*saveStateStack();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restoreStateStack(<ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*oldState);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>GBool<sp/>contentIsHidden();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pushMarkedContent();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>popMarkedContent();</highlight></codeline>
<codeline lineno="385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/Gfx.h"/>
  </compounddef>
</doxygen>
