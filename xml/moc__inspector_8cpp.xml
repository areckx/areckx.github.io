<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="moc__inspector_8cpp" kind="file" language="C++">
    <compoundname>moc_inspector.cpp</compoundname>
    <includes refid="inspector_8h" local="yes">../../../../mscore/inspector/inspector.h</includes>
    <includes local="no">QtCore/qbytearray.h</includes>
    <includes local="no">QtCore/qmetatype.h</includes>
    <includedby refid="mscore_2mscore__autogen_2moc__compilation_8cpp" local="yes">build.release/mscore/mscore_autogen/moc_compilation.cpp</includedby>
    <incdepgraph>
      <node id="7165">
        <label>QtWidgets/QWidget</label>
      </node>
      <node id="7193">
        <label>ui_scale_select.h</label>
        <link refid="ui__scale__select_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7156">
        <label>QtWidgets/QCheckBox</label>
      </node>
      <node id="7170">
        <label>inspectorTextBase.h</label>
        <link refid="inspector_text_base_8h_source"/>
        <childnode refid="7150" relation="include">
        </childnode>
        <childnode refid="7171" relation="include">
        </childnode>
      </node>
      <node id="7161">
        <label>QtWidgets/QLabel</label>
      </node>
      <node id="7149">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="7195">
        <label>ui_inspector_volta.h</label>
        <link refid="ui__inspector__volta_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7196" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7169">
        <label>QtWidgets/QDoubleSpinBox</label>
      </node>
      <node id="7188">
        <label>ui_inspector_chord.h</label>
        <link refid="ui__inspector__chord_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
        <childnode refid="7167" relation="include">
        </childnode>
      </node>
      <node id="7206">
        <label>ui_inspector_caesura.h</label>
        <link refid="ui__inspector__caesura_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7187">
        <label>ui_inspector_note.h</label>
        <link refid="ui__inspector__note_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7207">
        <label>ui_inspector_bracket.h</label>
        <link refid="ui__inspector__bracket_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7167">
        <label>inspector/offsetSelect.h</label>
        <link refid="offset_select_8h_source"/>
        <childnode refid="7168" relation="include">
        </childnode>
      </node>
      <node id="7184">
        <label>ui_inspector_articulation.h</label>
        <link refid="ui__inspector__articulation_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7182">
        <label>ui_inspector_tbox.h</label>
        <link refid="ui__inspector__tbox_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7146">
        <label>inspectorBase.h</label>
        <link refid="inspector_base_8h_source"/>
        <childnode refid="7147" relation="include">
        </childnode>
        <childnode refid="7148" relation="include">
        </childnode>
      </node>
      <node id="7145">
        <label>../../../../mscore/inspector/inspector.h</label>
        <link refid="inspector_8h_source"/>
        <childnode refid="7146" relation="include">
        </childnode>
        <childnode refid="7150" relation="include">
        </childnode>
        <childnode refid="7170" relation="include">
        </childnode>
        <childnode refid="7177" relation="include">
        </childnode>
        <childnode refid="7178" relation="include">
        </childnode>
        <childnode refid="7179" relation="include">
        </childnode>
        <childnode refid="7181" relation="include">
        </childnode>
        <childnode refid="7182" relation="include">
        </childnode>
        <childnode refid="7183" relation="include">
        </childnode>
        <childnode refid="7184" relation="include">
        </childnode>
        <childnode refid="7185" relation="include">
        </childnode>
        <childnode refid="7186" relation="include">
        </childnode>
        <childnode refid="7187" relation="include">
        </childnode>
        <childnode refid="7188" relation="include">
        </childnode>
        <childnode refid="7189" relation="include">
        </childnode>
        <childnode refid="7190" relation="include">
        </childnode>
        <childnode refid="7191" relation="include">
        </childnode>
        <childnode refid="7194" relation="include">
        </childnode>
        <childnode refid="7195" relation="include">
        </childnode>
        <childnode refid="7197" relation="include">
        </childnode>
        <childnode refid="7198" relation="include">
        </childnode>
        <childnode refid="7199" relation="include">
        </childnode>
        <childnode refid="7200" relation="include">
        </childnode>
        <childnode refid="7201" relation="include">
        </childnode>
        <childnode refid="7202" relation="include">
        </childnode>
        <childnode refid="7203" relation="include">
        </childnode>
        <childnode refid="7171" relation="include">
        </childnode>
        <childnode refid="7204" relation="include">
        </childnode>
        <childnode refid="7205" relation="include">
        </childnode>
        <childnode refid="7206" relation="include">
        </childnode>
        <childnode refid="7207" relation="include">
        </childnode>
        <childnode refid="7208" relation="include">
        </childnode>
      </node>
      <node id="7177">
        <label>ui_inspector_bend.h</label>
        <link refid="ui__inspector__bend_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7172" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7173" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7189">
        <label>ui_inspector_rest.h</label>
        <link refid="ui__inspector__rest_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7174">
        <label>QtWidgets/QSpacerItem</label>
      </node>
      <node id="7204">
        <label>ui_inspector_fret.h</label>
        <link refid="ui__inspector__fret_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7151">
        <label>ui_inspector_element.h</label>
        <link refid="ui__inspector__element_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
        <childnode refid="7166" relation="include">
        </childnode>
        <childnode refid="7167" relation="include">
        </childnode>
      </node>
      <node id="7194">
        <label>ui_inspector_keysig.h</label>
        <link refid="ui__inspector__keysig_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7152">
        <label>QtCore/QVariant</label>
      </node>
      <node id="7176">
        <label>ui_align_select.h</label>
        <link refid="ui__align__select_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7202">
        <label>ui_inspector_slur.h</label>
        <link refid="ui__inspector__slur_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7168">
        <label>ui_offset_select.h</label>
        <link refid="ui__offset__select_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7178">
        <label>ui_inspector_break.h</label>
        <link refid="ui__inspector__break_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7173">
        <label>QtWidgets/QPushButton</label>
      </node>
      <node id="7196">
        <label>QtWidgets/QLineEdit</label>
      </node>
      <node id="7144">
        <label>build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp</label>
        <link refid="moc__inspector_8cpp"/>
        <childnode refid="7145" relation="include">
        </childnode>
        <childnode refid="7209" relation="include">
        </childnode>
        <childnode refid="7210" relation="include">
        </childnode>
      </node>
      <node id="7185">
        <label>ui_inspector_spacer.h</label>
        <link refid="ui__inspector__spacer_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7163">
        <label>QtWidgets/QToolButton</label>
      </node>
      <node id="7183">
        <label>ui_inspector_hbox.h</label>
        <link refid="ui__inspector__hbox_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7208">
        <label>ui_inspector_iname.h</label>
        <link refid="ui__inspector__iname_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7198">
        <label>ui_inspector_accidental.h</label>
        <link refid="ui__inspector__accidental_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7160">
        <label>QtWidgets/QHeaderView</label>
      </node>
      <node id="7147">
        <label>libmscore/property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="7171">
        <label>ui_inspector_text.h</label>
        <link refid="ui__inspector__text_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7172" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7159" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7173" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
        <childnode refid="7166" relation="include">
        </childnode>
        <childnode refid="7175" relation="include">
        </childnode>
      </node>
      <node id="7153">
        <label>QtWidgets/QAction</label>
      </node>
      <node id="7148">
        <label>libmscore/style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="7149" relation="include">
        </childnode>
      </node>
      <node id="7155">
        <label>QtWidgets/QButtonGroup</label>
      </node>
      <node id="7181">
        <label>ui_inspector_vbox.h</label>
        <link refid="ui__inspector__vbox_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7186">
        <label>ui_inspector_segment.h</label>
        <link refid="ui__inspector__segment_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7159">
        <label>QtWidgets/QHBoxLayout</label>
      </node>
      <node id="7209">
        <label>QtCore/qbytearray.h</label>
      </node>
      <node id="7191">
        <label>ui_inspector_timesig.h</label>
        <link refid="ui__inspector__timesig_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
        <childnode refid="7192" relation="include">
        </childnode>
      </node>
      <node id="7162">
        <label>QtWidgets/QSpinBox</label>
      </node>
      <node id="7166">
        <label>awl/colorlabel.h</label>
        <link refid="colorlabel_8h_source"/>
      </node>
      <node id="7157">
        <label>QtWidgets/QFrame</label>
      </node>
      <node id="7154">
        <label>QtWidgets/QApplication</label>
      </node>
      <node id="7190">
        <label>ui_inspector_clef.h</label>
        <link refid="ui__inspector__clef_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7179">
        <label>ui_inspector_stafftypechange.h</label>
        <link refid="ui__inspector__stafftypechange_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7180">
        <label>QtWidgets/QComboBox</label>
      </node>
      <node id="7150">
        <label>inspectorElementBase.h</label>
        <link refid="inspector_element_base_8h_source"/>
        <childnode refid="7151" relation="include">
        </childnode>
        <childnode refid="7146" relation="include">
        </childnode>
      </node>
      <node id="7205">
        <label>ui_inspector_tremolo.h</label>
        <link refid="ui__inspector__tremolo_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7174" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7175">
        <label>inspector/alignSelect.h</label>
        <link refid="align_select_8h_source"/>
        <childnode refid="7176" relation="include">
        </childnode>
      </node>
      <node id="7197">
        <label>ui_inspector_tuplet.h</label>
        <link refid="ui__inspector__tuplet_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7203">
        <label>ui_inspector_empty.h</label>
        <link refid="ui__inspector__empty_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7210">
        <label>QtCore/qmetatype.h</label>
      </node>
      <node id="7172">
        <label>QtWidgets/QFontComboBox</label>
      </node>
      <node id="7201">
        <label>ui_inspector_stafftext.h</label>
        <link refid="ui__inspector__stafftext_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7199">
        <label>ui_inspector_tempotext.h</label>
        <link refid="ui__inspector__tempotext_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7156" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7169" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
      <node id="7158">
        <label>QtWidgets/QGridLayout</label>
      </node>
      <node id="7192">
        <label>inspector/scaleSelect.h</label>
        <link refid="scale_select_8h_source"/>
        <childnode refid="7193" relation="include">
        </childnode>
      </node>
      <node id="7164">
        <label>QtWidgets/QVBoxLayout</label>
      </node>
      <node id="7200">
        <label>ui_inspector_lyric.h</label>
        <link refid="ui__inspector__lyric_8h_source"/>
        <childnode refid="7152" relation="include">
        </childnode>
        <childnode refid="7153" relation="include">
        </childnode>
        <childnode refid="7154" relation="include">
        </childnode>
        <childnode refid="7155" relation="include">
        </childnode>
        <childnode refid="7180" relation="include">
        </childnode>
        <childnode refid="7157" relation="include">
        </childnode>
        <childnode refid="7158" relation="include">
        </childnode>
        <childnode refid="7160" relation="include">
        </childnode>
        <childnode refid="7161" relation="include">
        </childnode>
        <childnode refid="7162" relation="include">
        </childnode>
        <childnode refid="7163" relation="include">
        </childnode>
        <childnode refid="7164" relation="include">
        </childnode>
        <childnode refid="7165" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7211">
        <label>build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp</label>
        <link refid="moc__inspector_8cpp"/>
        <childnode refid="7212" relation="include">
        </childnode>
      </node>
      <node id="7212">
        <label>build.release/mscore/mscore_autogen/moc_compilation.cpp</label>
        <link refid="mscore_2mscore__autogen_2moc__compilation_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_element__t" prot="public">qt_meta_stringdata_Ms__InspectorElement_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_break__t" prot="public">qt_meta_stringdata_Ms__InspectorBreak_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" prot="public">qt_meta_stringdata_Ms__InspectorStaffTypeChange_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_v_box__t" prot="public">qt_meta_stringdata_Ms__InspectorVBox_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_t_box__t" prot="public">qt_meta_stringdata_Ms__InspectorTBox_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_h_box__t" prot="public">qt_meta_stringdata_Ms__InspectorHBox_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_articulation__t" prot="public">qt_meta_stringdata_Ms__InspectorArticulation_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_spacer__t" prot="public">qt_meta_stringdata_Ms__InspectorSpacer_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_rest__t" prot="public">qt_meta_stringdata_Ms__InspectorRest_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_clef__t" prot="public">qt_meta_stringdata_Ms__InspectorClef_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" prot="public">qt_meta_stringdata_Ms__InspectorTimeSig_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" prot="public">qt_meta_stringdata_Ms__InspectorKeySig_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" prot="public">qt_meta_stringdata_Ms__InspectorTuplet_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_accidental__t" prot="public">qt_meta_stringdata_Ms__InspectorAccidental_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_bend__t" prot="public">qt_meta_stringdata_Ms__InspectorBend_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" prot="public">qt_meta_stringdata_Ms__InspectorTremoloBar_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" prot="public">qt_meta_stringdata_Ms__InspectorTempoText_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_lyric__t" prot="public">qt_meta_stringdata_Ms__InspectorLyric_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" prot="public">qt_meta_stringdata_Ms__InspectorStaffText_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector__t" prot="public">qt_meta_stringdata_Ms__Inspector_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" prot="public">qt_meta_stringdata_Ms__InspectorSlurTie_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_caesura__t" prot="public">qt_meta_stringdata_Ms__InspectorCaesura_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_bracket__t" prot="public">qt_meta_stringdata_Ms__InspectorBracket_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_iname__t" prot="public">qt_meta_stringdata_Ms__InspectorIname_t</innerclass>
    <innerclass refid="structqt__meta__stringdata___ms_____inspector_empty__t" prot="public">qt_meta_stringdata_Ms__InspectorEmpty_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_element__t" kindref="compound">qt_meta_stringdata_Ms__InspectorElement_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="27" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_break__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBreak_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="95" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffTypeChange_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="163" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_v_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorVBox_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="231" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_t_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTBox_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="299" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_h_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorHBox_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="367" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_articulation__t" kindref="compound">qt_meta_stringdata_Ms__InspectorArticulation_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="435" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_spacer__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSpacer_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="503" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_rest__t" kindref="compound">qt_meta_stringdata_Ms__InspectorRest_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="571" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_clef__t" kindref="compound">qt_meta_stringdata_Ms__InspectorClef_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="661" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTimeSig_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="751" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorKeySig_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="819" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTuplet_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="887" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_accidental__t" kindref="compound">qt_meta_stringdata_Ms__InspectorAccidental_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="955" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_bend__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBend_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1023" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTremoloBar_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1114" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTempoText_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1205" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_lyric__t" kindref="compound">qt_meta_stringdata_Ms__InspectorLyric_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1273" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffText_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1363" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector__t" kindref="compound">qt_meta_stringdata_Ms__Inspector_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1431" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSlurTie_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1521" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_caesura__t" kindref="compound">qt_meta_stringdata_Ms__InspectorCaesura_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1589" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_bracket__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBracket_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1657" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_iname__t" kindref="compound">qt_meta_stringdata_Ms__InspectorIname_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1725" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moc__inspector_8cpp_1a75bb9482d242cde0a06c9dbdc6b83abe" prot="public" static="no">
        <name>QT_MOC_LITERAL</name>
        <param><defname>idx</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(<ref refid="structqt__meta__stringdata___ms_____inspector_empty__t" kindref="compound">qt_meta_stringdata_Ms__InspectorEmpty_t</ref>, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1793" column="9" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1793" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="moc__inspector_8cpp_1a6e38e78cd2edc13ae5c1438f63cbd271" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_element__t" kindref="compound">qt_meta_stringdata_Ms__InspectorElement_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorElement_t qt_meta_stringdata_Ms__InspectorElement</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorElement</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 20) 

    },
    &quot;Ms::InspectorElement&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="32" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aa54ddcdfae94f3fda924c17059ff3d96" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorElement[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorElement</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="41" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1adcc8051381ea8b631abddb845dc14f4f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_break__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBreak_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorBreak_t qt_meta_stringdata_Ms__InspectorBreak</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorBreak</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 18) 

    },
    &quot;Ms::InspectorBreak&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="100" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a6b6b2c4d388c67dce9bea8a1c570fa87" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorBreak[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorBreak</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="109" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aaddf1c7fc5204e43ffbbc9051887df81" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffTypeChange_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorStaffTypeChange_t qt_meta_stringdata_Ms__InspectorStaffTypeChange</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorStaffTypeChange</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 28) 

    },
    &quot;Ms::InspectorStaffTypeChange&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="168" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ad538abd5d25828c625c8b4ad509bafde" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorStaffTypeChange[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorStaffTypeChange</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="177" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a1b4a359e1fef4493782b3a4b05123eff" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_v_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorVBox_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorVBox_t qt_meta_stringdata_Ms__InspectorVBox</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorVBox</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17) 

    },
    &quot;Ms::InspectorVBox&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="236" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a097721b4864dcf03779e12480c0e422a" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorVBox[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorVBox</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="245" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a0c612158c0e42d2f15979025ab9002bf" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_t_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTBox_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorTBox_t qt_meta_stringdata_Ms__InspectorTBox</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorTBox</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17) 

    },
    &quot;Ms::InspectorTBox&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="304" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ab5ae41f79ea061732f442f07bc249347" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorTBox[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorTBox</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="313" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a0ad3e04736df30bbfb8fa4aceb937465" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_h_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorHBox_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorHBox_t qt_meta_stringdata_Ms__InspectorHBox</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorHBox</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17) 

    },
    &quot;Ms::InspectorHBox&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="372" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a3296716c1e41e02ab6001803754a06e9" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorHBox[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorHBox</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="381" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a9eac189d9399ce413765c6977d4ff606" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_articulation__t" kindref="compound">qt_meta_stringdata_Ms__InspectorArticulation_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorArticulation_t qt_meta_stringdata_Ms__InspectorArticulation</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorArticulation</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 25) 

    },
    &quot;Ms::InspectorArticulation&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="440" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1af7a1527b1e04e31ce1b521aa9200c5c2" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorArticulation[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorArticulation</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="449" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1af2ea387900cbefcb3ffadf194e0044e2" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_spacer__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSpacer_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorSpacer_t qt_meta_stringdata_Ms__InspectorSpacer</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorSpacer</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 19) 

    },
    &quot;Ms::InspectorSpacer&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="508" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a91cd68889e7e936b1c4c70b4e7de8ce0" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorSpacer[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorSpacer</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="517" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a45cccb8b791b5ec938eb0a0c05080c64" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_rest__t" kindref="compound">qt_meta_stringdata_Ms__InspectorRest_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorRest_t qt_meta_stringdata_Ms__InspectorRest</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorRest</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17), 
QT_MOC_LITERAL(1, 18, 13), 
QT_MOC_LITERAL(2, 32, 0) 

    },
    &quot;Ms::InspectorRest\0tupletClicked\0&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="576" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a58516483774129534c7779aee55fc97a" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorRest[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorRest</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    0,   19,    2, 0x08 ,

 
    QMetaType::Void,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="587" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aba7f49a3b8badc97192326ad556ab326" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_clef__t" kindref="compound">qt_meta_stringdata_Ms__InspectorClef_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorClef_t qt_meta_stringdata_Ms__InspectorClef</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorClef</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17), 
QT_MOC_LITERAL(1, 18, 12), 
QT_MOC_LITERAL(2, 31, 0), 
QT_MOC_LITERAL(3, 32, 3) 

    },
    &quot;Ms::InspectorClef\0valueChanged\0\0idx&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="666" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a4759eb5ea2a524e134c503b564efae81" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorClef[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorClef</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    1,   19,    2, 0x09 ,

 
    QMetaType::Void, QMetaType::Int,    3,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="678" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a43e7dfce4f46e2948cb6cf8137a0af55" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTimeSig_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorTimeSig_t qt_meta_stringdata_Ms__InspectorTimeSig</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorTimeSig</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 20) 

    },
    &quot;Ms::InspectorTimeSig&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="756" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a006ad81f4c2f7a2251f92927a6fde396" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorTimeSig[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorTimeSig</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="765" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ab94e11afaca41da0db71ee4b82072bef" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorKeySig_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorKeySig_t qt_meta_stringdata_Ms__InspectorKeySig</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorKeySig</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 19) 

    },
    &quot;Ms::InspectorKeySig&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="824" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ac4a40131927ec97b4c383ce83b5cd1d2" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorKeySig[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorKeySig</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="833" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ad479243e9235ae33cc2a2165414f7ff4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTuplet_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorTuplet_t qt_meta_stringdata_Ms__InspectorTuplet</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorTuplet</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 19) 

    },
    &quot;Ms::InspectorTuplet&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="892" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="892" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ae224fdc07086d711e4737133b03f7d29" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorTuplet[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorTuplet</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="901" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ae559f594301cb86d48db4b1a4e6efefb" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_accidental__t" kindref="compound">qt_meta_stringdata_Ms__InspectorAccidental_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorAccidental_t qt_meta_stringdata_Ms__InspectorAccidental</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorAccidental</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 23) 

    },
    &quot;Ms::InspectorAccidental&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="960" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="960" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a11967dd390b06dcced19bb3932b12065" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorAccidental[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorAccidental</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="969" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a3c1d9a3051a21f1106007f4d5caa29d8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_bend__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBend_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorBend_t qt_meta_stringdata_Ms__InspectorBend</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorBend</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 17), 
QT_MOC_LITERAL(1, 18, 17), 
QT_MOC_LITERAL(2, 36, 0) 

    },
    &quot;Ms::InspectorBend\0propertiesClicked\0&quot;
    &quot;&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1028" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1028" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a0cff461b3cf5582c052dc0249d566fa8" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorBend[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorBend</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    0,   19,    2, 0x08 ,

 
    QMetaType::Void,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1040" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a3f32e7d4ddd5ca7f521ceea1f1bff6d3" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTremoloBar_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorTremoloBar_t qt_meta_stringdata_Ms__InspectorTremoloBar</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorTremoloBar</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 23), 
QT_MOC_LITERAL(1, 24, 17), 
QT_MOC_LITERAL(2, 42, 0) 

    },
    &quot;Ms::InspectorTremoloBar\0propertiesClicked\0&quot;
    &quot;&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1119" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a1af798b391b9329b4384e40346fcef81" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorTremoloBar[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorTremoloBar</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    0,   19,    2, 0x08 ,

 
    QMetaType::Void,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1131" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ae57c437679625d31628ee02facba03ac" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTempoText_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorTempoText_t qt_meta_stringdata_Ms__InspectorTempoText</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorTempoText</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 22) 

    },
    &quot;Ms::InspectorTempoText&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1210" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a8bf9c2f5bf77a554b6f85ae1b153f13a" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorTempoText[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorTempoText</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1219" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ae5e7aa90077f17dc6b6d4f090dd160eb" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_lyric__t" kindref="compound">qt_meta_stringdata_Ms__InspectorLyric_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorLyric_t qt_meta_stringdata_Ms__InspectorLyric</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorLyric</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 18), 
QT_MOC_LITERAL(1, 19, 12), 
QT_MOC_LITERAL(2, 32, 0), 
QT_MOC_LITERAL(3, 33, 3) 

    },
    &quot;Ms::InspectorLyric\0valueChanged\0\0idx&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1278" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a043511307882193b3c0e8b298760a324" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorLyric[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorLyric</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    1,   19,    2, 0x08 ,

 
    QMetaType::Void, QMetaType::Int,    3,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1290" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a96ce62ead1ef42f8a431690947e5a8be" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffText_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorStaffText_t qt_meta_stringdata_Ms__InspectorStaffText</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorStaffText</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 22) 

    },
    &quot;Ms::InspectorStaffText&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1368" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aa64121f06fcec356f4e2b78bf64b2030" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorStaffText[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorStaffText</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1377" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a731f3c59bf64b07f3867367483dd8b4a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector__t" kindref="compound">qt_meta_stringdata_Ms__Inspector_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__Inspector_t qt_meta_stringdata_Ms__Inspector</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__Inspector</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 13), 
QT_MOC_LITERAL(1, 14, 6), 
QT_MOC_LITERAL(2, 21, 0) 

    },
    &quot;Ms::Inspector\0update\0&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1436" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aa8722d09944a6354e23d20847f5361e1" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__Inspector[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__Inspector</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       1,   14, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

 
       1,    0,   19,    2, 0x0a ,

 
    QMetaType::Void,

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1447" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1af52442e2ecf9cab292a7db19f1113426" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSlurTie_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorSlurTie_t qt_meta_stringdata_Ms__InspectorSlurTie</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorSlurTie</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 20) 

    },
    &quot;Ms::InspectorSlurTie&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1526" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a8a3f2bb2e1771e7fb8271ef011573fbd" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorSlurTie[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorSlurTie</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1535" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1af1c3a9842c542d68f16e917b73e50a70" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_caesura__t" kindref="compound">qt_meta_stringdata_Ms__InspectorCaesura_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorCaesura_t qt_meta_stringdata_Ms__InspectorCaesura</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorCaesura</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 20) 

    },
    &quot;Ms::InspectorCaesura&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1594" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1aece536ea09a1a7c9914980b1c2c92e1e" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorCaesura[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorCaesura</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1603" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a8630777bed9f024fcd510c0d12f24d52" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_bracket__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBracket_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorBracket_t qt_meta_stringdata_Ms__InspectorBracket</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorBracket</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 20) 

    },
    &quot;Ms::InspectorBracket&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1662" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a69e7890faaf28668155e7f125fd4ce76" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorBracket[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorBracket</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1671" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a06b819e57d18f41f8db5f5a8ca264234" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_iname__t" kindref="compound">qt_meta_stringdata_Ms__InspectorIname_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorIname_t qt_meta_stringdata_Ms__InspectorIname</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorIname</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 18) 

    },
    &quot;Ms::InspectorIname&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1730" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a941910f5818071f9446bd2b575610780" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorIname[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorIname</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1739" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1ac242d9fe53871fa9d315e1c65a9d2784" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structqt__meta__stringdata___ms_____inspector_empty__t" kindref="compound">qt_meta_stringdata_Ms__InspectorEmpty_t</ref></type>
        <definition>const qt_meta_stringdata_Ms__InspectorEmpty_t qt_meta_stringdata_Ms__InspectorEmpty</definition>
        <argsstring></argsstring>
        <name>qt_meta_stringdata_Ms__InspectorEmpty</name>
        <initializer>= {
    {
QT_MOC_LITERAL(0, 0, 18) 

    },
    &quot;Ms::InspectorEmpty&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1798" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moc__inspector_8cpp_1a31e872e77cb2ae8477491f426b0cbb64" prot="public" static="yes" mutable="no">
        <type>const uint</type>
        <definition>const uint qt_meta_data_Ms__InspectorEmpty[]</definition>
        <argsstring>[]</argsstring>
        <name>qt_meta_data_Ms__InspectorEmpty</name>
        <initializer>= {

 
       7,       
       0,       
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,    0, 
       0,       
       0,       

       0        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" line="1807" column="1" bodyfile="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp" bodystart="1807" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Meta<sp/>object<sp/>code<sp/>from<sp/>reading<sp/>C++<sp/>file<sp/>&apos;inspector.h&apos;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Created<sp/>by:<sp/>The<sp/>Qt<sp/>Meta<sp/>Object<sp/>Compiler<sp/>version<sp/>67<sp/>(Qt<sp/>5.8.0)</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>WARNING!<sp/>All<sp/>changes<sp/>made<sp/>in<sp/>this<sp/>file<sp/>will<sp/>be<sp/>lost!</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../mscore/inspector/inspector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/qbytearray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/qmetatype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(Q_MOC_OUTPUT_REVISION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;The<sp/>header<sp/>file<sp/>&apos;inspector.h&apos;<sp/>doesn&apos;t<sp/>include<sp/>&lt;QObject&gt;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>Q_MOC_OUTPUT_REVISION<sp/>!=<sp/>67</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;This<sp/>file<sp/>was<sp/>generated<sp/>using<sp/>the<sp/>moc<sp/>from<sp/>5.8.0.<sp/>It&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;cannot<sp/>be<sp/>used<sp/>with<sp/>the<sp/>include<sp/>files<sp/>from<sp/>this<sp/>version<sp/>of<sp/>Qt.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;(The<sp/>moc<sp/>has<sp/>changed<sp/>too<sp/>much.)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">QT_BEGIN_MOC_NAMESPACE</highlight></codeline>
<codeline lineno="21"><highlight class="normal">QT_WARNING_PUSH</highlight></codeline>
<codeline lineno="22"><highlight class="normal">QT_WARNING_DISABLE_DEPRECATED</highlight></codeline>
<codeline lineno="23" refid="structqt__meta__stringdata___ms_____inspector_element__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_element__t" kindref="compound">qt_meta_stringdata_Ms__InspectorElement_t</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[21];</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorElement_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_element__t" kindref="compound">qt_meta_stringdata_Ms__InspectorElement_t</ref><sp/>qt_meta_stringdata_Ms__InspectorElement<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>20)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorElement&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorElement&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorElement[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorElement::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorElement::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorElement.data,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorElement,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorElement::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorElement::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorElement.stringdata0))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorElement*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorElement::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91" refid="structqt__meta__stringdata___ms_____inspector_break__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_break__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBreak_t</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[19];</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorBreak_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_break__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBreak_t</ref><sp/>qt_meta_stringdata_Ms__InspectorBreak<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>18)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorBreak&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorBreak&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorBreak[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorBreak::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorBreak::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorBreak.data,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorBreak,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorBreak::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorBreak::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorBreak.stringdata0))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorBreak*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorBreak::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159" refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffTypeChange_t</ref><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[29];</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorStaffTypeChange_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_staff_type_change__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffTypeChange_t</ref><sp/>qt_meta_stringdata_Ms__InspectorStaffTypeChange<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>28)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorStaffTypeChange&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorStaffTypeChange&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorStaffTypeChange[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorStaffTypeChange::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorStaffTypeChange::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorStaffTypeChange.data,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorStaffTypeChange,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorStaffTypeChange::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="208"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorStaffTypeChange::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorStaffTypeChange.stringdata0))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorStaffTypeChange*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorStaffTypeChange::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227" refid="structqt__meta__stringdata___ms_____inspector_v_box__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_v_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorVBox_t</ref><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[18];</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorVBox_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_v_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorVBox_t</ref><sp/>qt_meta_stringdata_Ms__InspectorVBox<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorVBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorVBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorVBox[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorVBox::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorVBox::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorVBox.data,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorVBox,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorVBox::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorVBox::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorVBox.stringdata0))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorVBox*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorVBox::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="structqt__meta__stringdata___ms_____inspector_t_box__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_t_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTBox_t</ref><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[18];</highlight></codeline>
<codeline lineno="298"><highlight class="normal">};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorTBox_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_t_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTBox_t</ref><sp/>qt_meta_stringdata_Ms__InspectorTBox<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorTBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorTBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorTBox[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorTBox::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorTBox::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorTBox.data,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorTBox,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorTBox::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorTBox::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorTBox.stringdata0))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorTBox*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorTBox::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363" refid="structqt__meta__stringdata___ms_____inspector_h_box__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_h_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorHBox_t</ref><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[18];</highlight></codeline>
<codeline lineno="366"><highlight class="normal">};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorHBox_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_h_box__t" kindref="compound">qt_meta_stringdata_Ms__InspectorHBox_t</ref><sp/>qt_meta_stringdata_Ms__InspectorHBox<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorHBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorHBox&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorHBox[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorHBox::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorHBox::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorHBox.data,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorHBox,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="408"><highlight class="normal">};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorHBox::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="412"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorHBox::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorHBox.stringdata0))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorHBox*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorHBox::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431" refid="structqt__meta__stringdata___ms_____inspector_articulation__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_articulation__t" kindref="compound">qt_meta_stringdata_Ms__InspectorArticulation_t</ref><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[26];</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorArticulation_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_articulation__t" kindref="compound">qt_meta_stringdata_Ms__InspectorArticulation_t</ref><sp/>qt_meta_stringdata_Ms__InspectorArticulation<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>25)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorArticulation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorArticulation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">};</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorArticulation[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorArticulation::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorArticulation::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorArticulation.data,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorArticulation,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorArticulation::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorArticulation::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorArticulation.stringdata0))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorArticulation*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorArticulation::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499" refid="structqt__meta__stringdata___ms_____inspector_spacer__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_spacer__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSpacer_t</ref><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[20];</highlight></codeline>
<codeline lineno="502"><highlight class="normal">};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorSpacer_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_spacer__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSpacer_t</ref><sp/>qt_meta_stringdata_Ms__InspectorSpacer<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>19)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorSpacer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorSpacer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorSpacer[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorSpacer::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorSpacer::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorSpacer.data,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorSpacer,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="544"><highlight class="normal">};</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorSpacer::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="548"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorSpacer::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorSpacer.stringdata0))</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorSpacer*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorSpacer::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567" refid="structqt__meta__stringdata___ms_____inspector_rest__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_rest__t" kindref="compound">qt_meta_stringdata_Ms__InspectorRest_t</ref><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[3];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[33];</highlight></codeline>
<codeline lineno="570"><highlight class="normal">};</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorRest_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_rest__t" kindref="compound">qt_meta_stringdata_Ms__InspectorRest_t</ref><sp/>qt_meta_stringdata_Ms__InspectorRest<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorRest&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>18,<sp/>13),<sp/></highlight><highlight class="comment">//<sp/>&quot;tupletClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>32,<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorRest\0tupletClicked\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">};</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorRest[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">};</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorRest::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InspectorRest<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">InspectorRest<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;tupletClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorRest::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorRest.data,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorRest,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">};</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorRest::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="629"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorRest::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorRest.stringdata0))</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorRest*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorRest::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657" refid="structqt__meta__stringdata___ms_____inspector_clef__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_clef__t" kindref="compound">qt_meta_stringdata_Ms__InspectorClef_t</ref><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[4];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[36];</highlight></codeline>
<codeline lineno="660"><highlight class="normal">};</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorClef_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_clef__t" kindref="compound">qt_meta_stringdata_Ms__InspectorClef_t</ref><sp/>qt_meta_stringdata_Ms__InspectorClef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorClef&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>18,<sp/>12),<sp/></highlight><highlight class="comment">//<sp/>&quot;valueChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>31,<sp/>0),<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">QT_MOC_LITERAL(3,<sp/>32,<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>&quot;idx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorClef\0valueChanged\0\0idx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">};</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorClef[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x09<sp/></highlight><highlight class="comment">/*<sp/>Protected<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Int,<sp/><sp/><sp/><sp/>3,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">};</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorClef::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InspectorClef<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">InspectorClef<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;valueChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorClef::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorClef.data,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorClef,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="715"><highlight class="normal">};</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorClef::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="719"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorClef::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorClef.stringdata0))</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorClef*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorClef::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747" refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTimeSig_t</ref><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[21];</highlight></codeline>
<codeline lineno="750"><highlight class="normal">};</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorTimeSig_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_time_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTimeSig_t</ref><sp/>qt_meta_stringdata_Ms__InspectorTimeSig<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>20)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorTimeSig&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorTimeSig&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorTimeSig[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">};</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorTimeSig::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorTimeSig::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorTimeSig.data,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorTimeSig,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="792"><highlight class="normal">};</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorTimeSig::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="796"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorTimeSig::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorTimeSig.stringdata0))</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorTimeSig*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorTimeSig::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815" refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorKeySig_t</ref><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[20];</highlight></codeline>
<codeline lineno="818"><highlight class="normal">};</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="821"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorKeySig_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="822"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="823"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_key_sig__t" kindref="compound">qt_meta_stringdata_Ms__InspectorKeySig_t</ref><sp/>qt_meta_stringdata_Ms__InspectorKeySig<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>19)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorKeySig&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorKeySig&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">};</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorKeySig[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal">};</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorKeySig::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorKeySig::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorKeySig.data,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorKeySig,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="860"><highlight class="normal">};</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorKeySig::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="864"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorKeySig::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorKeySig.stringdata0))</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorKeySig*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorKeySig::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883" refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTuplet_t</ref><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[20];</highlight></codeline>
<codeline lineno="886"><highlight class="normal">};</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="888"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="889"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorTuplet_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_tuplet__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTuplet_t</ref><sp/>qt_meta_stringdata_Ms__InspectorTuplet<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>19)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorTuplet&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorTuplet&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal">};</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorTuplet[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal">};</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorTuplet::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorTuplet::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorTuplet.data,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorTuplet,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="928"><highlight class="normal">};</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorTuplet::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="932"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorTuplet::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorTuplet.stringdata0))</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorTuplet*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorTuplet::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951" refid="structqt__meta__stringdata___ms_____inspector_accidental__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_accidental__t" kindref="compound">qt_meta_stringdata_Ms__InspectorAccidental_t</ref><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[24];</highlight></codeline>
<codeline lineno="954"><highlight class="normal">};</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="956"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="957"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorAccidental_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="958"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="959"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_accidental__t" kindref="compound">qt_meta_stringdata_Ms__InspectorAccidental_t</ref><sp/>qt_meta_stringdata_Ms__InspectorAccidental<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>23)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorAccidental&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorAccidental&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal">};</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorAccidental[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal">};</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorAccidental::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorAccidental::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorAccidental.data,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorAccidental,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="996"><highlight class="normal">};</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorAccidental::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1000"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorAccidental::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorAccidental.stringdata0))</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorAccidental*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorAccidental::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019" refid="structqt__meta__stringdata___ms_____inspector_bend__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_bend__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBend_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[3];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[37];</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1025"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorBend_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1026"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1027"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_bend__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBend_t</ref><sp/>qt_meta_stringdata_Ms__InspectorBend<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorBend&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>18,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;propertiesClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>36,<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorBend\0propertiesClicked\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorBend[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorBend::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InspectorBend<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">InspectorBend<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;propertiesClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorBend::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorBend.data,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorBend,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorBend::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1082"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorBend::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorBend.stringdata0))</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorBend*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorBend::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110" refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTremoloBar_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[3];</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[43];</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorTremoloBar_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_tremolo_bar__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTremoloBar_t</ref><sp/>qt_meta_stringdata_Ms__InspectorTremoloBar<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>23),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorTremoloBar&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>24,<sp/>17),<sp/></highlight><highlight class="comment">//<sp/>&quot;propertiesClicked&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>42,<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorTremoloBar\0propertiesClicked\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorTremoloBar[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorTremoloBar::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InspectorTremoloBar<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">InspectorTremoloBar<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;propertiesClicked();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorTremoloBar::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorTremoloBar.data,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorTremoloBar,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorTremoloBar::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorTremoloBar::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorTremoloBar.stringdata0))</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorTremoloBar*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorTremoloBar::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201" refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTempoText_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[23];</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorTempoText_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_tempo_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorTempoText_t</ref><sp/>qt_meta_stringdata_Ms__InspectorTempoText<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>22)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorTempoText&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorTempoText&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorTempoText[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorTempoText::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorTempoText::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorTextBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorTempoText.data,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorTempoText,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorTempoText::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorTempoText::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorTempoText.stringdata0))</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorTempoText*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorTextBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorTempoText::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorTextBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1269" refid="structqt__meta__stringdata___ms_____inspector_lyric__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_lyric__t" kindref="compound">qt_meta_stringdata_Ms__InspectorLyric_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[4];</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[37];</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorLyric_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_lyric__t" kindref="compound">qt_meta_stringdata_Ms__InspectorLyric_t</ref><sp/>qt_meta_stringdata_Ms__InspectorLyric<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>18),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorLyric&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>19,<sp/>12),<sp/></highlight><highlight class="comment">//<sp/>&quot;valueChanged&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>32,<sp/>0),<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal">QT_MOC_LITERAL(3,<sp/>33,<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>&quot;idx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorLyric\0valueChanged\0\0idx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorLyric[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x08<sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,<sp/>QMetaType::Int,<sp/><sp/><sp/><sp/>3,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorLyric::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InspectorLyric<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">InspectorLyric<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;valueChanged((*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[1])));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorLyric::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorTextBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorLyric.data,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorLyric,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorLyric::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1331"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorLyric::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorLyric.stringdata0))</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorLyric*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorTextBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorLyric::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorTextBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359" refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffText_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[23];</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorStaffText_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_staff_text__t" kindref="compound">qt_meta_stringdata_Ms__InspectorStaffText_t</ref><sp/>qt_meta_stringdata_Ms__InspectorStaffText<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>22)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorStaffText&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorStaffText&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorStaffText[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorStaffText::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorStaffText::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorTextBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorStaffText.data,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorStaffText,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorStaffText::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorStaffText::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorStaffText.stringdata0))</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorStaffText*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorTextBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorStaffText::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorTextBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1427" refid="structqt__meta__stringdata___ms_____inspector__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector__t" kindref="compound">qt_meta_stringdata_Ms__Inspector_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[3];</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[22];</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__Inspector_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector__t" kindref="compound">qt_meta_stringdata_Ms__Inspector_t</ref><sp/>qt_meta_stringdata_Ms__Inspector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>13),<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::Inspector&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal">QT_MOC_LITERAL(1,<sp/>14,<sp/>6),<sp/></highlight><highlight class="comment">//<sp/>&quot;update&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal">QT_MOC_LITERAL(2,<sp/>21,<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::Inspector\0update\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__Inspector[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>14,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>name,<sp/>argc,<sp/>parameters,<sp/>tag,<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>2,<sp/>0x0a<sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>slots:<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaType::Void,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::Inspector::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inspector<sp/>*_t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Inspector<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_o);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNUSED(_t)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_id)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>_t-&gt;update();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::Inspector::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;QDockWidget::staticMetaObject,<sp/>qt_meta_stringdata_Ms__Inspector.data,</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__Inspector,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::Inspector::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1489"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::Inspector::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__Inspector.stringdata0))</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>Inspector*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QDockWidget::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::Inspector::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>QDockWidget::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::InvokeMetaMethod)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qt_static_metacall(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_c<sp/>==<sp/>QMetaObject::RegisterMethodArgumentMetaType)<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_a[0])<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1517" refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSlurTie_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[21];</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorSlurTie_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_slur_tie__t" kindref="compound">qt_meta_stringdata_Ms__InspectorSlurTie_t</ref><sp/>qt_meta_stringdata_Ms__InspectorSlurTie<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>20)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorSlurTie&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorSlurTie&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorSlurTie[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorSlurTie::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorSlurTie::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorSlurTie.data,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorSlurTie,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorSlurTie::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1566"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorSlurTie::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorSlurTie.stringdata0))</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorSlurTie*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorSlurTie::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1585" refid="structqt__meta__stringdata___ms_____inspector_caesura__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_caesura__t" kindref="compound">qt_meta_stringdata_Ms__InspectorCaesura_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[21];</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorCaesura_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_caesura__t" kindref="compound">qt_meta_stringdata_Ms__InspectorCaesura_t</ref><sp/>qt_meta_stringdata_Ms__InspectorCaesura<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>20)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorCaesura&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorCaesura&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorCaesura[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorCaesura::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorCaesura::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorElementBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorCaesura.data,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorCaesura,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorCaesura::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1634"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorCaesura::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorCaesura.stringdata0))</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorCaesura*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorElementBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorCaesura::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorElementBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653" refid="structqt__meta__stringdata___ms_____inspector_bracket__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_bracket__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBracket_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[21];</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorBracket_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_bracket__t" kindref="compound">qt_meta_stringdata_Ms__InspectorBracket_t</ref><sp/>qt_meta_stringdata_Ms__InspectorBracket<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>20)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorBracket&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorBracket&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorBracket[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorBracket::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorBracket::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorBracket.data,</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorBracket,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorBracket::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1702"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorBracket::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorBracket.stringdata0))</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorBracket*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorBracket::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721" refid="structqt__meta__stringdata___ms_____inspector_iname__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_iname__t" kindref="compound">qt_meta_stringdata_Ms__InspectorIname_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[19];</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorIname_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_iname__t" kindref="compound">qt_meta_stringdata_Ms__InspectorIname_t</ref><sp/>qt_meta_stringdata_Ms__InspectorIname<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>18)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorIname&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorIname&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorIname[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorIname::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorIname::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorTextBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorIname.data,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorIname,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorIname::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1770"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorIname::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorIname.stringdata0))</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorIname*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorTextBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorIname::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorTextBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789" refid="structqt__meta__stringdata___ms_____inspector_empty__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqt__meta__stringdata___ms_____inspector_empty__t" kindref="compound">qt_meta_stringdata_Ms__InspectorEmpty_t</ref><sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArrayData<sp/>data[1];</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringdata0[19];</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QT_MOC_LITERAL(idx,<sp/>ofs,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="1794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len,<sp/>\</highlight></codeline>
<codeline lineno="1795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>qptrdiff(offsetof(qt_meta_stringdata_Ms__InspectorEmpty_t,<sp/>stringdata0)<sp/>+<sp/>ofs<sp/>\</highlight></codeline>
<codeline lineno="1796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>idx<sp/>*<sp/>sizeof(QByteArrayData))<sp/>\</highlight></codeline>
<codeline lineno="1797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structqt__meta__stringdata___ms_____inspector_empty__t" kindref="compound">qt_meta_stringdata_Ms__InspectorEmpty_t</ref><sp/>qt_meta_stringdata_Ms__InspectorEmpty<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">QT_MOC_LITERAL(0,<sp/>0,<sp/>18)<sp/></highlight><highlight class="comment">//<sp/>&quot;Ms::InspectorEmpty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ms::InspectorEmpty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>QT_MOC_LITERAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>qt_meta_data_Ms__InspectorEmpty[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>content:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>classinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>enums/sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signalCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ms::InspectorEmpty::qt_static_metacall(QObject<sp/>*_o,<sp/>QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_o);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_id);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_c);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(_a);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>Ms::InspectorEmpty::staticMetaObject<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>&amp;InspectorBase::staticMetaObject,<sp/>qt_meta_stringdata_Ms__InspectorEmpty.data,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qt_meta_data_Ms__InspectorEmpty,<sp/><sp/>qt_static_metacall,<sp/>Q_NULLPTR,<sp/>Q_NULLPTR}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMetaObject<sp/>*Ms::InspectorEmpty::metaObject()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1838"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::d_ptr-&gt;metaObject<sp/>?<sp/>QObject::d_ptr-&gt;dynamicMetaObject()<sp/>:<sp/>&amp;staticMetaObject;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Ms::InspectorEmpty::qt_metacast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_clname)</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_clname)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Q_NULLPTR;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(_clname,<sp/>qt_meta_stringdata_Ms__InspectorEmpty.stringdata0))</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>InspectorEmpty*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InspectorBase::qt_metacast(_clname);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ms::InspectorEmpty::qt_metacall(QMetaObject::Call<sp/>_c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**_a)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>_id<sp/>=<sp/>InspectorBase::qt_metacall(_c,<sp/>_id,<sp/>_a);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal">QT_WARNING_POP</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">QT_END_MOC_NAMESPACE</highlight></codeline>
    </programlisting>
    <location file="build.release/mscore/mscore_autogen/L7N3VMFSKL/moc_inspector.cpp"/>
  </compounddef>
</doxygen>
