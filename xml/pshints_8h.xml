<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pshints_8h" kind="file" language="C++">
    <compoundname>pshints.h</compoundname>
    <includes local="no">ft2build.h</includes>
    <incdepgraph>
      <node id="77576">
        <label>ft2build.h</label>
      </node>
      <node id="77575">
        <label>thirdparty/freetype/include/freetype/internal/pshints.h</label>
        <link refid="pshints_8h"/>
        <childnode refid="77576" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_p_s_h___globals___funcs_rec__" prot="public">PSH_Globals_FuncsRec_</innerclass>
    <innerclass refid="struct_t1___hints___funcs_rec__" prot="public">T1_Hints_FuncsRec_</innerclass>
    <innerclass refid="struct_t2___hints___funcs_rec__" prot="public">T2_Hints_FuncsRec_</innerclass>
    <innerclass refid="struct_p_s_hinter___interface__" prot="public">PSHinter_Interface_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pshints_8h_1a04b620fdf513c7156a64d91f7cad0573" prot="public" static="no">
        <name>FT_DEFINE_PSHINTER_INTERFACE</name>
        <param><defname>class_</defname></param>
        <param><defname>get_globals_funcs_</defname></param>
        <param><defname>get_t1_funcs_</defname></param>
        <param><defname>get_t2_funcs_</defname></param>
        <initializer>static const <ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface</ref>  class_ =  \
  {                                          \
    get_globals_funcs_,                      \
    get_t1_funcs_,                           \
    get_t2_funcs_                            \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="689" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="685" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pshints_8h_1aed4220b62b12a76456f9f47bafa5fe52" prot="public" static="no">
        <type>typedefFT_BEGIN_HEADER struct <ref refid="struct_p_s_h___globals_rec__" kindref="compound">PSH_GlobalsRec_</ref> *</type>
        <definition>typedef typedefFT_BEGIN_HEADER struct PSH_GlobalsRec_* PSH_Globals</definition>
        <argsstring></argsstring>
        <name>PSH_Globals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="41" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1afbf130386528b97978b50709b75124b4" prot="public" static="no">
        <type>FT_Error(*</type>
        <definition>typedef FT_Error(* PSH_Globals_NewFunc) (FT_Memory memory, T1_Private *private_dict, PSH_Globals *aglobals)</definition>
        <argsstring>)(FT_Memory memory, T1_Private *private_dict, PSH_Globals *aglobals)</argsstring>
        <name>PSH_Globals_NewFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="43" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a1bfdeb88ed68e496fbbaea9ee98a2df5" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* PSH_Globals_SetScaleFunc) (PSH_Globals globals, FT_Fixed x_scale, FT_Fixed y_scale, FT_Fixed x_delta, FT_Fixed y_delta)</definition>
        <argsstring>)(PSH_Globals globals, FT_Fixed x_scale, FT_Fixed y_scale, FT_Fixed x_delta, FT_Fixed y_delta)</argsstring>
        <name>PSH_Globals_SetScaleFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="48" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a25e3190b7ca95e2164574e2b68274c29" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* PSH_Globals_DestroyFunc) (PSH_Globals globals)</definition>
        <argsstring>)(PSH_Globals globals)</argsstring>
        <name>PSH_Globals_DestroyFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="55" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a8be972c1f146073eb83502c362444114" prot="public" static="no">
        <type>struct <ref refid="struct_p_s_h___globals___funcs_rec__" kindref="compound">PSH_Globals_FuncsRec_</ref></type>
        <definition>typedef struct PSH_Globals_FuncsRec_  PSH_Globals_FuncsRec</definition>
        <argsstring></argsstring>
        <name>PSH_Globals_FuncsRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1ac83db932351480e591fa91ea38fca5ac" prot="public" static="no">
        <type>struct <ref refid="struct_p_s_h___globals___funcs_rec__" kindref="compound">PSH_Globals_FuncsRec_</ref> *</type>
        <definition>typedef struct PSH_Globals_FuncsRec_ * PSH_Globals_Funcs</definition>
        <argsstring></argsstring>
        <name>PSH_Globals_Funcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a86b4b4d3662e7a6eae4dd00eacf88719" prot="public" static="no">
        <type>struct T1_HintsRec_ *</type>
        <definition>typedef struct T1_HintsRec_* T1_Hints</definition>
        <argsstring></argsstring>
        <name>T1_Hints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="104" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a58382619ef239247c0769c04dcd6e4d8" prot="public" static="no">
        <type>const struct <ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_FuncsRec_</ref> *</type>
        <definition>typedef const struct T1_Hints_FuncsRec_* T1_Hints_Funcs</definition>
        <argsstring></argsstring>
        <name>T1_Hints_Funcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="117" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a20fe0a578a0937e5f4d1d8f8191287b1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T1_Hints_OpenFunc) (T1_Hints hints)</definition>
        <argsstring>)(T1_Hints hints)</argsstring>
        <name>T1_Hints_OpenFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="138" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a1ab415d7c862212afb0e25cdbd91b685" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T1_Hints_SetStemFunc) (T1_Hints hints, FT_UInt dimension, FT_Fixed *coords)</definition>
        <argsstring>)(T1_Hints hints, FT_UInt dimension, FT_Fixed *coords)</argsstring>
        <name>T1_Hints_SetStemFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="178" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a2c024a8f57a1cd46c51f06db7b6b6c3c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T1_Hints_SetStem3Func) (T1_Hints hints, FT_UInt dimension, FT_Fixed *coords)</definition>
        <argsstring>)(T1_Hints hints, FT_UInt dimension, FT_Fixed *coords)</argsstring>
        <name>T1_Hints_SetStem3Func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="212" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1ae0f27b7b6864d22befdb19901d3ff5a4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T1_Hints_ResetFunc) (T1_Hints hints, FT_UInt end_point)</definition>
        <argsstring>)(T1_Hints hints, FT_UInt end_point)</argsstring>
        <name>T1_Hints_ResetFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="236" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a5cec166fe2569a2808b0317b69c480e4" prot="public" static="no">
        <type>FT_Error(*</type>
        <definition>typedef FT_Error(* T1_Hints_CloseFunc) (T1_Hints hints, FT_UInt end_point)</definition>
        <argsstring>)(T1_Hints hints, FT_UInt end_point)</argsstring>
        <name>T1_Hints_CloseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="265" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1abc0c6713cd8d4beea523000a30607a6c" prot="public" static="no">
        <type>FT_Error(*</type>
        <definition>typedef FT_Error(* T1_Hints_ApplyFunc) (T1_Hints hints, FT_Outline *outline, PSH_Globals globals, FT_Render_Mode hint_mode)</definition>
        <argsstring>)(T1_Hints hints, FT_Outline *outline, PSH_Globals globals, FT_Render_Mode hint_mode)</argsstring>
        <name>T1_Hints_ApplyFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="304" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1ac60627ad0cebcb7d6b21db715f87c46b" prot="public" static="no">
        <type>struct <ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_FuncsRec_</ref></type>
        <definition>typedef struct T1_Hints_FuncsRec_  T1_Hints_FuncsRec</definition>
        <argsstring></argsstring>
        <name>T1_Hints_FuncsRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1af8b52db788301c01e97599916a2c819e" prot="public" static="no">
        <type>struct T2_HintsRec_ *</type>
        <definition>typedef struct T2_HintsRec_* T2_Hints</definition>
        <argsstring></argsstring>
        <name>T2_Hints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="391" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a0aa727e5db76dbf6b39051afd1ce1536" prot="public" static="no">
        <type>const struct <ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_FuncsRec_</ref> *</type>
        <definition>typedef const struct T2_Hints_FuncsRec_* T2_Hints_Funcs</definition>
        <argsstring></argsstring>
        <name>T2_Hints_Funcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="404" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a5e8490d4430395e57dae95bdbac6cff7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T2_Hints_OpenFunc) (T2_Hints hints)</definition>
        <argsstring>)(T2_Hints hints)</argsstring>
        <name>T2_Hints_OpenFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="425" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a3a7e02d7c2f03b37c37f44f6f2d8d194" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T2_Hints_StemsFunc) (T2_Hints hints, FT_UInt dimension, FT_Int count, FT_Fixed *coordinates)</definition>
        <argsstring>)(T2_Hints hints, FT_UInt dimension, FT_Int count, FT_Fixed *coordinates)</argsstring>
        <name>T2_Hints_StemsFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="465" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a9c018e10457d088e6d5225cf905e5b2b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T2_Hints_MaskFunc) (T2_Hints hints, FT_UInt end_point, FT_UInt bit_count, const FT_Byte *bytes)</definition>
        <argsstring>)(T2_Hints hints, FT_UInt end_point, FT_UInt bit_count, const FT_Byte *bytes)</argsstring>
        <name>T2_Hints_MaskFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="507" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a1390b9a89729bbb804abd35305e576c8" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* T2_Hints_CounterFunc) (T2_Hints hints, FT_UInt bit_count, const FT_Byte *bytes)</definition>
        <argsstring>)(T2_Hints hints, FT_UInt bit_count, const FT_Byte *bytes)</argsstring>
        <name>T2_Hints_CounterFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="549" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a066c99b26618748e5534b3d830b545f4" prot="public" static="no">
        <type>FT_Error(*</type>
        <definition>typedef FT_Error(* T2_Hints_CloseFunc) (T2_Hints hints, FT_UInt end_point)</definition>
        <argsstring>)(T2_Hints hints, FT_UInt end_point)</argsstring>
        <name>T2_Hints_CloseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="579" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1ad50fae88020dff07eba4ab0385b7ccf9" prot="public" static="no">
        <type>FT_Error(*</type>
        <definition>typedef FT_Error(* T2_Hints_ApplyFunc) (T2_Hints hints, FT_Outline *outline, PSH_Globals globals, FT_Render_Mode hint_mode)</definition>
        <argsstring>)(T2_Hints hints, FT_Outline *outline, PSH_Globals globals, FT_Render_Mode hint_mode)</argsstring>
        <name>T2_Hints_ApplyFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="618" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a7e4f3926b4ccfe5c902b1b9350b46a6c" prot="public" static="no">
        <type>struct <ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_FuncsRec_</ref></type>
        <definition>typedef struct T2_Hints_FuncsRec_  T2_Hints_FuncsRec</definition>
        <argsstring></argsstring>
        <name>T2_Hints_FuncsRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="666" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1a631e5a322a5adc5e55748e97b02773a4" prot="public" static="no">
        <type>struct <ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface_</ref></type>
        <definition>typedef struct PSHinter_Interface_  PSHinter_Interface</definition>
        <argsstring></argsstring>
        <name>PSHinter_Interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="678" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pshints_8h_1ab04788eaf1f01cf5c72f8db0dd169e1c" prot="public" static="no">
        <type><ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface</ref> *</type>
        <definition>typedef PSHinter_Interface* PSHinter_Service</definition>
        <argsstring></argsstring>
        <name>PSHinter_Service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/pshints.h" line="680" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/pshints.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>pshints.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Interface<sp/>to<sp/>Postscript-specific<sp/>(Type<sp/>1<sp/>and<sp/>Type<sp/>2)<sp/>hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>recorders<sp/>(specification<sp/>only).<sp/><sp/>These<sp/>are<sp/>used<sp/>to<sp/>support<sp/>native<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>T1/T2<sp/>hints<sp/>in<sp/>the<sp/>`type1&apos;,<sp/>`cid&apos;,<sp/>and<sp/>`cff&apos;<sp/>font<sp/>drivers.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2001-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__PSHINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PSHINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_FREETYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_TYPE1_TABLES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERNAL<sp/>REPRESENTATION<sp/>OF<sp/>GLOBALS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_s_h___globals_rec__" kindref="compound">PSH_GlobalsRec_</ref>*<sp/><sp/>PSH_Globals;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>(*PSH_Globals_NewFunc)(<sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/>memory,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_s___private_rec__" kindref="compound">T1_Private</ref>*<sp/><sp/><sp/>private_dict,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PSH_Globals*<sp/><sp/>aglobals<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>(*PSH_Globals_SetScaleFunc)(<sp/>PSH_Globals<sp/><sp/>globals,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/>x_scale,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/>y_scale,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/>x_delta,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/>y_delta<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>(*PSH_Globals_DestroyFunc)(<sp/>PSH_Globals<sp/><sp/>globals<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_p_s_h___globals___funcs_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_s_h___globals___funcs_rec__" kindref="compound">PSH_Globals_FuncsRec_</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>PSH_Globals_NewFunc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>create;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>PSH_Globals_SetScaleFunc<sp/><sp/>set_scale;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>PSH_Globals_DestroyFunc<sp/><sp/><sp/>destroy;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_s_h___globals___funcs_rec__" kindref="compound">PSH_Globals_FuncsRec</ref>,<sp/>*<ref refid="struct_p_s_h___globals___funcs_rec__" kindref="compound">PSH_Globals_Funcs</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUBLIC<sp/>TYPE<sp/>1<sp/>HINTS<sp/>RECORDER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@type:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>handle<sp/>to<sp/>an<sp/>opaque<sp/>structure<sp/>used<sp/>to<sp/>record<sp/>glyph<sp/>hints</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>from<sp/>a<sp/>Type<sp/>1<sp/>character<sp/>glyph<sp/>character<sp/>string.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>methods<sp/>used<sp/>to<sp/>operate<sp/>on<sp/>this<sp/>object<sp/>are<sp/>defined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@T1_Hints_FuncsRec<sp/>structure.<sp/><sp/>Recording<sp/>glyph<sp/>hints<sp/>is<sp/>normally</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>achieved<sp/>through<sp/>the<sp/>following<sp/>scheme:</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>Open<sp/>a<sp/>new<sp/>hint<sp/>recording<sp/>session<sp/>by<sp/>calling<sp/>the<sp/>`open&apos;<sp/>method.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>This<sp/>rewinds<sp/>the<sp/>recorder<sp/>and<sp/>prepare<sp/>it<sp/>for<sp/>new<sp/>input.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>For<sp/>each<sp/>hint<sp/>found<sp/>in<sp/>the<sp/>glyph<sp/>charstring,<sp/>call<sp/>the<sp/>corresponding</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>method<sp/>(`stem&apos;,<sp/>`stem3&apos;,<sp/>or<sp/>`reset&apos;).<sp/><sp/>Note<sp/>that<sp/>these<sp/>functions<sp/>do</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>not<sp/>return<sp/>an<sp/>error<sp/>code.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>Close<sp/>the<sp/>recording<sp/>session<sp/>by<sp/>calling<sp/>the<sp/>`close&apos;<sp/>method.<sp/><sp/>It</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>returns<sp/>an<sp/>error<sp/>code<sp/>if<sp/>the<sp/>hints<sp/>were<sp/>invalid<sp/>or<sp/>something</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>strange<sp/>happened<sp/>(e.g.,<sp/>memory<sp/>shortage).</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>hints<sp/>accumulated<sp/>in<sp/>the<sp/>object<sp/>can<sp/>later<sp/>be<sp/>used<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>PostScript<sp/>hinter.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">T1_HintsRec_*<sp/><sp/>T1_Hints;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@type:</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_Funcs</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>@T1_Hints_FuncsRec<sp/>structure<sp/>that<sp/>defines<sp/>the<sp/>API<sp/>of</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>a<sp/>given<sp/>@T1_Hints<sp/>object.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_FuncsRec_</ref>*<sp/><sp/><ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_Funcs</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_OpenFunc</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>prepare<sp/>it<sp/>for<sp/>a<sp/>new<sp/>Type<sp/>1</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>always<sp/>call<sp/>the<sp/>@T1_Hints_CloseFunc<sp/>method<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>close<sp/>an<sp/>opened<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>(*T1_Hints_OpenFunc)(<sp/>T1_Hints<sp/><sp/>hints<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_SetStemFunc</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>record<sp/>a<sp/>new<sp/>horizontal<sp/>or</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>vertical<sp/>stem.<sp/><sp/>This<sp/>corresponds<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>`hstem&apos;<sp/>and<sp/>`vstem&apos;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>operators.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>dimension<sp/>::</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>0<sp/>for<sp/>horizontal<sp/>stems<sp/>(hstem),<sp/>1<sp/>for<sp/>vertical<sp/>ones<sp/>(vstem).</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>coords<sp/>::</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>2<sp/>coordinates<sp/>in<sp/>16.16<sp/>format,<sp/>used<sp/>as<sp/>(position,length)</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>stem<sp/>descriptor.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>vertical<sp/>coordinates<sp/>(y)<sp/>for<sp/>horizontal<sp/>stems<sp/>(dim=0).<sp/><sp/>Use</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>horizontal<sp/>coordinates<sp/>(x)<sp/>for<sp/>vertical<sp/>stems<sp/>(dim=1).</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`coords[0]&apos;<sp/>is<sp/>the<sp/>absolute<sp/>stem<sp/>position<sp/>(lowest<sp/>coordinate);</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`coords[1]&apos;<sp/>is<sp/>the<sp/>length.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>length<sp/>can<sp/>be<sp/>negative,<sp/>in<sp/>which<sp/>case<sp/>it<sp/>must<sp/>be<sp/>either<sp/>-20<sp/>or</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-21.<sp/><sp/>It<sp/>is<sp/>interpreted<sp/>as<sp/>a<sp/>`ghost&apos;<sp/>stem,<sp/>according<sp/>to<sp/>the<sp/>Type<sp/>1</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>specification.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>the<sp/>length<sp/>is<sp/>-21<sp/>(corresponding<sp/>to<sp/>a<sp/>bottom<sp/>ghost<sp/>stem),<sp/>then</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>real<sp/>stem<sp/>position<sp/>is<sp/>`coords[0]+coords[1]&apos;.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>(*T1_Hints_SetStemFunc)(<sp/>T1_Hints<sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>dimension,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed*<sp/><sp/>coords<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_SetStem3Func</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>record<sp/>three</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>counter-controlled<sp/>horizontal<sp/>or<sp/>vertical<sp/>stems<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>dimension<sp/>::</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>0<sp/>for<sp/>horizontal<sp/>stems,<sp/>1<sp/>for<sp/>vertical<sp/>ones.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>coords<sp/>::</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>An<sp/>array<sp/>of<sp/>6<sp/>values<sp/>in<sp/>16.16<sp/>format,<sp/>holding<sp/>3<sp/>(position,length)</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>pairs<sp/>for<sp/>the<sp/>counter-controlled<sp/>stems.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>vertical<sp/>coordinates<sp/>(y)<sp/>for<sp/>horizontal<sp/>stems<sp/>(dim=0).<sp/><sp/>Use</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>horizontal<sp/>coordinates<sp/>(x)<sp/>for<sp/>vertical<sp/>stems<sp/>(dim=1).</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>lengths<sp/>cannot<sp/>be<sp/>negative<sp/>(ghost<sp/>stems<sp/>are<sp/>never</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>counter-controlled).</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>(*T1_Hints_SetStem3Func)(<sp/>T1_Hints<sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>dimension,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed*<sp/><sp/>coords<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_ResetFunc</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>reset<sp/>the<sp/>stems<sp/>hints<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>end_point<sp/>::</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>last<sp/>point<sp/>in<sp/>the<sp/>input<sp/>glyph<sp/>in<sp/>which<sp/>the</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>previously<sp/>defined<sp/>hints<sp/>apply.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>(*T1_Hints_ResetFunc)(<sp/>T1_Hints<sp/><sp/>hints,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>end_point<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_CloseFunc</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>close<sp/>a<sp/>hint<sp/>recording</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>session.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>end_point<sp/>::</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>last<sp/>point<sp/>in<sp/>the<sp/>input<sp/>glyph.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0<sp/>means<sp/>success.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>error<sp/>code<sp/>is<sp/>set<sp/>to<sp/>indicate<sp/>that<sp/>an<sp/>error<sp/>occurred<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>(*T1_Hints_CloseFunc)(<sp/>T1_Hints<sp/><sp/>hints,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>end_point<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_ApplyFunc</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T1_Hints<sp/>class<sp/>used<sp/>to<sp/>apply<sp/>hints<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>corresponding<sp/>glyph<sp/>outline.<sp/><sp/>Must<sp/>be<sp/>called<sp/>once<sp/>all<sp/>hints<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>recorded.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>1<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>target<sp/>outline<sp/>descriptor.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>globals<sp/>::</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>hinter<sp/>globals<sp/>for<sp/>this<sp/>font.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hint_mode<sp/>::</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Hinting<sp/>information.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0<sp/>means<sp/>success.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>On<sp/>input,<sp/>all<sp/>points<sp/>within<sp/>the<sp/>outline<sp/>are<sp/>in<sp/>font<sp/>coordinates.<sp/>On</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>output,<sp/>they<sp/>are<sp/>in<sp/>1/64th<sp/>of<sp/>pixels.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>scaling<sp/>transformation<sp/>is<sp/>taken<sp/>from<sp/>the<sp/>`globals&apos;<sp/>object<sp/>which</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>must<sp/>correspond<sp/>to<sp/>the<sp/>same<sp/>font<sp/>as<sp/>the<sp/>glyph.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>(*T1_Hints_ApplyFunc)(<sp/>T1_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/><sp/><sp/>outline,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PSH_Globals<sp/><sp/><sp/><sp/><sp/>globals,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/>hint_mode<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@struct:</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T1_Hints_FuncsRec</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>structure<sp/>used<sp/>to<sp/>provide<sp/>the<sp/>API<sp/>to<sp/>@T1_Hints<sp/>objects.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@fields:</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>T1<sp/>Hints<sp/>recorder.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>open<sp/>::</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>open<sp/>a<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>close<sp/>::</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>close<sp/>a<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stem<sp/>::</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>set<sp/>a<sp/>simple<sp/>stem.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stem3<sp/>::</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>set<sp/>counter-controlled<sp/>stems.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>reset<sp/>::</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>reset<sp/>stem<sp/>hints.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>apply<sp/>::</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>apply<sp/>the<sp/>hints<sp/>to<sp/>the<sp/>corresponding<sp/>glyph<sp/>outline.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="struct_t1___hints___funcs_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_FuncsRec_</ref></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_OpenFunc<sp/><sp/><sp/><sp/><sp/><sp/>open;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_CloseFunc<sp/><sp/><sp/><sp/><sp/>close;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_SetStemFunc<sp/><sp/><sp/>stem;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_SetStem3Func<sp/><sp/>stem3;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_ResetFunc<sp/><sp/><sp/><sp/><sp/>reset;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_ApplyFunc<sp/><sp/><sp/><sp/><sp/>apply;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_t1___hints___funcs_rec__" kindref="compound">T1_Hints_FuncsRec</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUBLIC<sp/>TYPE<sp/>2<sp/>HINTS<sp/>RECORDER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@type:</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>handle<sp/>to<sp/>an<sp/>opaque<sp/>structure<sp/>used<sp/>to<sp/>record<sp/>glyph<sp/>hints</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>from<sp/>a<sp/>Type<sp/>2<sp/>character<sp/>glyph<sp/>character<sp/>string.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>methods<sp/>used<sp/>to<sp/>operate<sp/>on<sp/>this<sp/>object<sp/>are<sp/>defined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>@T2_Hints_FuncsRec<sp/>structure.<sp/><sp/>Recording<sp/>glyph<sp/>hints<sp/>is<sp/>normally</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>achieved<sp/>through<sp/>the<sp/>following<sp/>scheme:</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>Open<sp/>a<sp/>new<sp/>hint<sp/>recording<sp/>session<sp/>by<sp/>calling<sp/>the<sp/>`open&apos;<sp/>method.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>This<sp/>rewinds<sp/>the<sp/>recorder<sp/>and<sp/>prepare<sp/>it<sp/>for<sp/>new<sp/>input.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>For<sp/>each<sp/>hint<sp/>found<sp/>in<sp/>the<sp/>glyph<sp/>charstring,<sp/>call<sp/>the<sp/>corresponding</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>method<sp/>(`stems&apos;,<sp/>`hintmask&apos;,<sp/>`counters&apos;).<sp/><sp/>Note<sp/>that<sp/>these</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>functions<sp/>do<sp/>not<sp/>return<sp/>an<sp/>error<sp/>code.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>Close<sp/>the<sp/>recording<sp/>session<sp/>by<sp/>calling<sp/>the<sp/>`close&apos;<sp/>method.<sp/><sp/>It</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>returns<sp/>an<sp/>error<sp/>code<sp/>if<sp/>the<sp/>hints<sp/>were<sp/>invalid<sp/>or<sp/>something</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>strange<sp/>happened<sp/>(e.g.,<sp/>memory<sp/>shortage).</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>hints<sp/>accumulated<sp/>in<sp/>the<sp/>object<sp/>can<sp/>later<sp/>be<sp/>used<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Postscript<sp/>hinter.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">T2_HintsRec_*<sp/><sp/>T2_Hints;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@type:</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_Funcs</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>@T2_Hints_FuncsRec<sp/>structure<sp/>that<sp/>defines<sp/>the<sp/>API<sp/>of</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>a<sp/>given<sp/>@T2_Hints<sp/>object.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_FuncsRec_</ref>*<sp/><sp/><ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_Funcs</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_OpenFunc</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>prepare<sp/>it<sp/>for<sp/>a<sp/>new<sp/>Type<sp/>2</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>always<sp/>call<sp/>the<sp/>@T2_Hints_CloseFunc<sp/>method<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>close<sp/>an<sp/>opened<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>(*T2_Hints_OpenFunc)(<sp/>T2_Hints<sp/><sp/>hints<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_StemsFunc</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>set<sp/>the<sp/>table<sp/>of<sp/>stems<sp/>in</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>either<sp/>the<sp/>vertical<sp/>or<sp/>horizontal<sp/>dimension.<sp/><sp/>Equivalent<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`hstem&apos;,<sp/>`vstem&apos;,<sp/>`hstemhm&apos;,<sp/>and<sp/>`vstemhm&apos;<sp/>Type<sp/>2<sp/>operators.</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>dimension<sp/>::</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>0<sp/>for<sp/>horizontal<sp/>stems<sp/>(hstem),<sp/>1<sp/>for<sp/>vertical<sp/>ones<sp/>(vstem).</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>count<sp/>::</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>stems.</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>coords<sp/>::</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>An<sp/>array<sp/>of<sp/>`count&apos;<sp/>(position,length)<sp/>pairs<sp/>in<sp/>16.16<sp/>format.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>vertical<sp/>coordinates<sp/>(y)<sp/>for<sp/>horizontal<sp/>stems<sp/>(dim=0).<sp/><sp/>Use</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>horizontal<sp/>coordinates<sp/>(x)<sp/>for<sp/>vertical<sp/>stems<sp/>(dim=1).</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>There<sp/>are<sp/>`2*count&apos;<sp/>elements<sp/>in<sp/>the<sp/>`coords&apos;<sp/>array.<sp/><sp/>Each<sp/>even</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>element<sp/>is<sp/>an<sp/>absolute<sp/>position<sp/>in<sp/>font<sp/>units,<sp/>each<sp/>odd<sp/>element<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>length<sp/>in<sp/>font<sp/>units.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>length<sp/>can<sp/>be<sp/>negative,<sp/>in<sp/>which<sp/>case<sp/>it<sp/>must<sp/>be<sp/>either<sp/>-20<sp/>or</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-21.<sp/><sp/>It<sp/>is<sp/>interpreted<sp/>as<sp/>a<sp/>`ghost&apos;<sp/>stem,<sp/>according<sp/>to<sp/>the<sp/>Type<sp/>1</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>specification.</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>(*T2_Hints_StemsFunc)(<sp/>T2_Hints<sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/>dimension,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed*<sp/><sp/>coordinates<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_MaskFunc</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>set<sp/>a<sp/>given<sp/>hintmask<sp/>(this</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>corresponds<sp/>to<sp/>the<sp/>`hintmask&apos;<sp/>Type<sp/>2<sp/>operator).</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>end_point<sp/>::</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>glyph<sp/>index<sp/>of<sp/>the<sp/>last<sp/>point<sp/>to<sp/>which<sp/>the<sp/>previously<sp/>defined</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>or<sp/>activated<sp/>hints<sp/>apply.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>bit_count<sp/>::</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>hint<sp/>mask.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>bytes<sp/>::</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>An<sp/>array<sp/>of<sp/>bytes<sp/>modelling<sp/>the<sp/>hint<sp/>mask.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>the<sp/>hintmask<sp/>starts<sp/>the<sp/>charstring<sp/>(before<sp/>any<sp/>glyph<sp/>point</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>definition),<sp/>the<sp/>value<sp/>of<sp/>`end_point&apos;<sp/>should<sp/>be<sp/>0.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`bit_count&apos;<sp/>is<sp/>the<sp/>number<sp/>of<sp/>meaningful<sp/>bits<sp/>in<sp/>the<sp/>`bytes&apos;<sp/>array;<sp/>it</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>must<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>total<sp/>number<sp/>of<sp/>hints<sp/>defined<sp/>so<sp/>far<sp/>(i.e.,</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>horizontal+verticals).</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>`bytes&apos;<sp/>array<sp/>can<sp/>come<sp/>directly<sp/>from<sp/>the<sp/>Type<sp/>2<sp/>charstring<sp/>and</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>respects<sp/>the<sp/>same<sp/>format.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>(*T2_Hints_MaskFunc)(<sp/>T2_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_point,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_count,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FT_Byte*<sp/><sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_CounterFunc</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>set<sp/>a<sp/>given<sp/>counter<sp/>mask</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>(this<sp/>corresponds<sp/>to<sp/>the<sp/>`hintmask&apos;<sp/>Type<sp/>2<sp/>operator).</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>end_point<sp/>::</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>glyph<sp/>index<sp/>of<sp/>the<sp/>last<sp/>point<sp/>to<sp/>which<sp/>the<sp/>previously<sp/>defined<sp/>or</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>active<sp/>hints<sp/>apply.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>bit_count<sp/>::</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>hint<sp/>mask.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>bytes<sp/>::</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>An<sp/>array<sp/>of<sp/>bytes<sp/>modelling<sp/>the<sp/>hint<sp/>mask.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>the<sp/>hintmask<sp/>starts<sp/>the<sp/>charstring<sp/>(before<sp/>any<sp/>glyph<sp/>point</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>definition),<sp/>the<sp/>value<sp/>of<sp/>`end_point&apos;<sp/>should<sp/>be<sp/>0.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>`bit_count&apos;<sp/>is<sp/>the<sp/>number<sp/>of<sp/>meaningful<sp/>bits<sp/>in<sp/>the<sp/>`bytes&apos;<sp/>array;<sp/>it</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>must<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>total<sp/>number<sp/>of<sp/>hints<sp/>defined<sp/>so<sp/>far<sp/>(i.e.,</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>horizontal+verticals).</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>The<sp/>`bytes&apos;<sp/>array<sp/>can<sp/>come<sp/>directly<sp/>from<sp/>the<sp/>Type<sp/>2<sp/>charstring<sp/>and</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>respects<sp/>the<sp/>same<sp/>format.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>(*T2_Hints_CounterFunc)(<sp/>T2_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_count,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FT_Byte*<sp/><sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_CloseFunc</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>close<sp/>a<sp/>hint<sp/>recording</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>session.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>end_point<sp/>::</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>last<sp/>point<sp/>in<sp/>the<sp/>input<sp/>glyph.</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0<sp/>means<sp/>success.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>error<sp/>code<sp/>is<sp/>set<sp/>to<sp/>indicate<sp/>that<sp/>an<sp/>error<sp/>occurred<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>(*T2_Hints_CloseFunc)(<sp/>T2_Hints<sp/><sp/>hints,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>end_point<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@functype:</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_ApplyFunc</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>method<sp/>of<sp/>the<sp/>@T2_Hints<sp/>class<sp/>used<sp/>to<sp/>apply<sp/>hints<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>corresponding<sp/>glyph<sp/>outline.<sp/><sp/>Must<sp/>be<sp/>called<sp/>after<sp/>the<sp/>`close&apos;</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>method.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@input:</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>Type<sp/>2<sp/>hints<sp/>recorder.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>outline<sp/>::</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>target<sp/>outline<sp/>descriptor.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>globals<sp/>::</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>hinter<sp/>globals<sp/>for<sp/>this<sp/>font.</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hint_mode<sp/>::</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Hinting<sp/>information.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return:</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>FreeType<sp/>error<sp/>code.<sp/><sp/>0<sp/>means<sp/>success.</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note:</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>On<sp/>input,<sp/>all<sp/>points<sp/>within<sp/>the<sp/>outline<sp/>are<sp/>in<sp/>font<sp/>coordinates.<sp/>On</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>output,<sp/>they<sp/>are<sp/>in<sp/>1/64th<sp/>of<sp/>pixels.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>scaling<sp/>transformation<sp/>is<sp/>taken<sp/>from<sp/>the<sp/>`globals&apos;<sp/>object<sp/>which</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>must<sp/>correspond<sp/>to<sp/>the<sp/>same<sp/>font<sp/>than<sp/>the<sp/>glyph.</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>(*T2_Hints_ApplyFunc)(<sp/>T2_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/><sp/><sp/>outline,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PSH_Globals<sp/><sp/><sp/><sp/><sp/>globals,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/>hint_mode<sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@struct:</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>T2_Hints_FuncsRec</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@description:</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>structure<sp/>used<sp/>to<sp/>provide<sp/>the<sp/>API<sp/>to<sp/>@T2_Hints<sp/>objects.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@fields:</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hints<sp/>::</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>handle<sp/>to<sp/>the<sp/>T2<sp/>hints<sp/>recorder<sp/>object.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>open<sp/>::</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>open<sp/>a<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>close<sp/>::</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>close<sp/>a<sp/>recording<sp/>session.</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>stems<sp/>::</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>set<sp/>the<sp/>dimension&apos;s<sp/>stems<sp/>table.</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>hintmask<sp/>::</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>set<sp/>hint<sp/>masks.</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>counter<sp/>::</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>set<sp/>counter<sp/>masks.</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>apply<sp/>::</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>apply<sp/>the<sp/>hints<sp/>on<sp/>the<sp/>corresponding<sp/>glyph<sp/>outline.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="struct_t2___hints___funcs_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_FuncsRec_</ref></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_OpenFunc<sp/><sp/><sp/><sp/><sp/>open;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_CloseFunc<sp/><sp/><sp/><sp/>close;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_StemsFunc<sp/><sp/><sp/><sp/>stems;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_MaskFunc<sp/><sp/><sp/><sp/><sp/>hintmask;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_CounterFunc<sp/><sp/>counter;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_ApplyFunc<sp/><sp/><sp/><sp/>apply;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_t2___hints___funcs_rec__" kindref="compound">T2_Hints_FuncsRec</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="struct_p_s_hinter___interface__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface_</ref></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>PSH_Globals_Funcs<sp/><sp/>(*get_globals_funcs)(<sp/><ref refid="struct_f_t___module_rec__" kindref="compound">FT_Module</ref><sp/><sp/>module<sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>T1_Hints_Funcs<sp/><sp/><sp/><sp/><sp/>(*get_t1_funcs)<sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="struct_f_t___module_rec__" kindref="compound">FT_Module</ref><sp/><sp/>module<sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>T2_Hints_Funcs<sp/><sp/><sp/><sp/><sp/>(*get_t2_funcs)<sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="struct_f_t___module_rec__" kindref="compound">FT_Module</ref><sp/><sp/>module<sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Interface</ref>*<sp/><sp/><ref refid="struct_p_s_hinter___interface__" kindref="compound">PSHinter_Service</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FT_CONFIG_OPTION_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_DEFINE_PSHINTER_INTERFACE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_globals_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_t1_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_t2_funcs_<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>PSHinter_Interface<sp/><sp/>class_<sp/>=<sp/><sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>get_globals_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="693"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>get_t1_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>get_t2_funcs_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>FT_CONFIG_OPTION_PIC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_DEFINE_PSHINTER_INTERFACE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_globals_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_t1_funcs_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_t2_funcs_<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"><sp/><sp/>FT_Init_Class_<sp/>##<sp/>class_(<sp/>FT_Library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library,<sp/><sp/>\</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PSHinter_Interface*<sp/><sp/>clazz<sp/>)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="707"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FT_UNUSED(<sp/>library<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>clazz-&gt;get_globals_funcs<sp/>=<sp/>get_globals_funcs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="711"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>clazz-&gt;get_t1_funcs<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_t1_funcs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>clazz-&gt;get_t2_funcs<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_t2_funcs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_CONFIG_OPTION_PIC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__PSHINTS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/include/freetype/internal/pshints.h"/>
  </compounddef>
</doxygen>
