<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_font_info_8cc" kind="file" language="C++">
    <compoundname>FontInfo.cc</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="_global_params_8h" local="yes">GlobalParams.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_dict_8h" local="yes">Dict.h</includes>
    <includes refid="_gfx_font_8h" local="yes">GfxFont.h</includes>
    <includes refid="_annot_8h" local="yes">Annot.h</includes>
    <includes refid="_p_d_f_doc_8h" local="yes">PDFDoc.h</includes>
    <includes refid="_font_info_8h" local="yes">FontInfo.h</includes>
    <incdepgraph>
      <node id="86912">
        <label>stdarg.h</label>
      </node>
      <node id="86897">
        <label>thirdparty/poppler/poppler/FontInfo.cc</label>
        <link refid="_font_info_8cc"/>
        <childnode refid="86898" relation="include">
        </childnode>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86900" relation="include">
        </childnode>
        <childnode refid="86901" relation="include">
        </childnode>
        <childnode refid="86902" relation="include">
        </childnode>
        <childnode refid="86903" relation="include">
        </childnode>
        <childnode refid="86904" relation="include">
        </childnode>
        <childnode refid="86911" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86920" relation="include">
        </childnode>
        <childnode refid="86922" relation="include">
        </childnode>
        <childnode refid="86923" relation="include">
        </childnode>
        <childnode refid="86924" relation="include">
        </childnode>
        <childnode refid="86931" relation="include">
        </childnode>
      </node>
      <node id="86905">
        <label>assert.h</label>
      </node>
      <node id="86925">
        <label>XRef.h</label>
        <link refid="_x_ref_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86921" relation="include">
        </childnode>
        <childnode refid="86926" relation="include">
        </childnode>
      </node>
      <node id="86922">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86913" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86908" relation="include">
        </childnode>
      </node>
      <node id="86900">
        <label>stdlib.h</label>
      </node>
      <node id="86917">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86906" relation="include">
        </childnode>
      </node>
      <node id="86924">
        <label>PDFDoc.h</label>
        <link refid="_p_d_f_doc_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
        <childnode refid="86925" relation="include">
        </childnode>
        <childnode refid="86927" relation="include">
        </childnode>
        <childnode refid="86928" relation="include">
        </childnode>
        <childnode refid="86923" relation="include">
        </childnode>
        <childnode refid="86929" relation="include">
        </childnode>
        <childnode refid="86930" relation="include">
        </childnode>
        <childnode refid="86921" relation="include">
        </childnode>
      </node>
      <node id="86919">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
      </node>
      <node id="86927">
        <label>Catalog.h</label>
        <link refid="_catalog_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
        <childnode refid="86926" relation="include">
        </childnode>
      </node>
      <node id="86904">
        <label>GlobalParams.h</label>
        <link refid="_global_params_8h_source"/>
        <childnode refid="86905" relation="include">
        </childnode>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86908" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
      </node>
      <node id="86931">
        <label>FontInfo.h</label>
        <link refid="_font_info_8h_source"/>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86932" relation="include">
        </childnode>
      </node>
      <node id="86911">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="86912" relation="include">
        </childnode>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86913" relation="include">
        </childnode>
      </node>
      <node id="86932">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="86907" relation="include">
        </childnode>
      </node>
      <node id="86920">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
      </node>
      <node id="86923">
        <label>Annot.h</label>
        <link refid="_annot_8h_source"/>
        <childnode refid="86915" relation="include">
        </childnode>
      </node>
      <node id="86901">
        <label>stddef.h</label>
      </node>
      <node id="86928">
        <label>Page.h</label>
        <link refid="thirdparty_2poppler_2poppler_2page_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
      </node>
      <node id="86914">
        <label>limits.h</label>
      </node>
      <node id="86906">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="86899" relation="include">
        </childnode>
      </node>
      <node id="86918">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="86921">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86909" relation="include">
        </childnode>
      </node>
      <node id="86910">
        <label>pthread.h</label>
      </node>
      <node id="86902">
        <label>string.h</label>
      </node>
      <node id="86913">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="86914" relation="include">
        </childnode>
        <childnode refid="86912" relation="include">
        </childnode>
        <childnode refid="86900" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
      </node>
      <node id="86929">
        <label>Form.h</label>
        <link refid="_form_8h_source"/>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86923" relation="include">
        </childnode>
        <childnode refid="86916" relation="include">
        </childnode>
      </node>
      <node id="86915">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="86916" relation="include">
        </childnode>
        <childnode refid="86899" relation="include">
        </childnode>
        <childnode refid="86902" relation="include">
        </childnode>
        <childnode refid="86907" relation="include">
        </childnode>
        <childnode refid="86917" relation="include">
        </childnode>
        <childnode refid="86913" relation="include">
        </childnode>
        <childnode refid="86918" relation="include">
        </childnode>
        <childnode refid="86911" relation="include">
        </childnode>
        <childnode refid="86919" relation="include">
        </childnode>
        <childnode refid="86920" relation="include">
        </childnode>
        <childnode refid="86921" relation="include">
        </childnode>
      </node>
      <node id="86926">
        <label>vector</label>
      </node>
      <node id="86903">
        <label>math.h</label>
      </node>
      <node id="86909">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="86910" relation="include">
        </childnode>
      </node>
      <node id="86908">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="86907">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="86906" relation="include">
        </childnode>
      </node>
      <node id="86916">
        <label>set</label>
      </node>
      <node id="86898">
        <label>config.h</label>
      </node>
      <node id="86930">
        <label>OptionalContent.h</label>
        <link refid="_optional_content_8h_source"/>
        <childnode refid="86915" relation="include">
        </childnode>
        <childnode refid="86908" relation="include">
        </childnode>
      </node>
      <node id="86899">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FontInfo.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005,<sp/>2006<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005-2008,<sp/>2010<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Brad<sp/>Hards<sp/>&lt;bradh@frogmouth.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Kouhei<sp/>Sutou<sp/>&lt;kou@cozmixng.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Pino<sp/>Toscano<sp/>&lt;pino@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Hib<sp/>Eris<sp/>&lt;hib@hiberis.nl&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010,<sp/>2012<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010,<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>code<sp/>from<sp/>pdffonts.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2001-2007<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GlobalParams.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Dict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxFont.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Annot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PDFDoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FontInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">FontInfoScanner::FontInfoScanner(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstPage)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>doc<sp/>=<sp/>docA;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>currentPage<sp/>=<sp/>firstPage<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">FontInfoScanner::~FontInfoScanner()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*FontInfoScanner::scan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPages)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*result;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_page" kindref="compound">Page</ref><sp/>*page;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="class_annots" kindref="compound">Annots</ref><sp/>*annots;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastPage;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentPage<sp/>&gt;<sp/>doc-&gt;getNumPages())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goo_list" kindref="compound">GooList</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>lastPage<sp/>=<sp/>currentPage<sp/>+<sp/>nPages;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastPage<sp/>&gt;<sp/>doc-&gt;getNumPages()<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>lastPage<sp/>=<sp/>doc-&gt;getNumPages()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA<sp/>=<sp/>doc-&gt;getXRef()-&gt;copy();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pg<sp/>=<sp/>currentPage;<sp/>pg<sp/>&lt;<sp/>lastPage;<sp/>++pg)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>=<sp/>doc-&gt;getPage(pg);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!page)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resDict<sp/>=<sp/>page-&gt;getResourceDictCopy(xrefA)))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanFonts(xrefA,<sp/>resDict,<sp/>result);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>resDict;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>annots<sp/>=<sp/>page-&gt;getAnnots();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>annots-&gt;getNumAnnots();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annots-&gt;getAnnot(i)-&gt;getAppearanceResDict(&amp;obj1)-&gt;isDict())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanFonts(xrefA,<sp/>obj1.getDict(),<sp/>result);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>currentPage<sp/>=<sp/>lastPage;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xrefA;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FontInfoScanner::scanFonts(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*resDict,<sp/><ref refid="class_goo_list" kindref="compound">GooList</ref><sp/>*fontsList)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1,<sp/>obj2,<sp/>objDict,<sp/>resObj;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>r;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref><sp/>*gfxFontDict;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*<ref refid="structfont" kindref="compound">font</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>the<sp/>fonts<sp/>in<sp/>this<sp/>resource<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>gfxFontDict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>resDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Font&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isRef())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.fetch(xrefA,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isDict())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>obj1.getRef();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gfxFontDict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref>(xrefA,<sp/>&amp;r,<sp/>obj2.getDict());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isDict())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>gfxFontDict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref>(xrefA,<sp/>NULL,<sp/>obj1.getDict());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfxFontDict)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gfxFontDict-&gt;getNumFonts();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((font<sp/>=<sp/>gfxFontDict-&gt;getFont(i)))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>fontRef<sp/>=<sp/>*font-&gt;getID();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>font<sp/>to<sp/>the<sp/>list<sp/>if<sp/>not<sp/>already<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fonts.find(fontRef.num)<sp/>==<sp/>fonts.end())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontsList-&gt;append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_font_info" kindref="compound">FontInfo</ref>(font,<sp/>xrefA));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts.insert(fontRef.num);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gfxFontDict;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recursively<sp/>scan<sp/>any<sp/>resource<sp/>dictionaries<sp/>in<sp/>objects<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resource<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resTypes[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;XObject&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Pattern&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Guint<sp/>resType<sp/>=<sp/>0;<sp/>resType<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resTypes)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resTypes[0]);<sp/>++resType)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>resDict-&gt;lookup(resTypes[resType],<sp/>&amp;objDict);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objDict.isDict())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objDict.dictGetLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objDict.dictGetValNF(i,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isRef())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>an<sp/>already-seen<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>r<sp/>=<sp/>obj1.getRef();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visitedObjects.find(r.num)<sp/>!=<sp/>visitedObjects.end())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitedObjects.insert(r.num);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj1.fetch(xrefA,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isStream())<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj2.streamGetDict()-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">,<sp/>&amp;resObj);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resObj.isDict()<sp/>&amp;&amp;<sp/>resObj.getDict()<sp/>!=<sp/>resDict)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanFonts(xrefA,<sp/>resObj.getDict(),<sp/>fontsList);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resObj.free();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>objDict.free();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">FontInfo::FontInfo(<ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*font,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*origName;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>fontObj,<sp/>toUnicodeObj;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>fontRef<sp/>=<sp/>*font-&gt;getID();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>origName<sp/>=<sp/>font-&gt;getName();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(origName<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>font-&gt;getName()-&gt;copy();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>(FontInfo::Type)font-&gt;getType();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>an<sp/>embedded<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font-&gt;getType()<sp/>==<sp/>fontType3)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>emb<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>emb<sp/>=<sp/>font-&gt;getEmbeddedFontID(&amp;embRef);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>substituteName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!emb)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>SysFontType<sp/>dummy;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummy2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>substituteNameAux;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>globalParams-&gt;findSystemFontFile(font,<sp/>&amp;dummy,<sp/>&amp;dummy2,<sp/>&amp;substituteNameAux);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substituteNameAux.getLength()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>substituteName<sp/>=<sp/>substituteNameAux.copy();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>encoding<sp/>=<sp/>font-&gt;getEncodingName()-&gt;copy();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>a<sp/>ToUnicode<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>hasToUnicode<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xref-&gt;fetch(fontRef.num,<sp/>fontRef.gen,<sp/>&amp;fontObj)-&gt;isDict())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>hasToUnicode<sp/>=<sp/>fontObj.dictLookup(</highlight><highlight class="stringliteral">&quot;ToUnicode&quot;</highlight><highlight class="normal">,<sp/>&amp;toUnicodeObj)-&gt;isStream();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>toUnicodeObj.free();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>fontObj.free();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>font<sp/>subset<sp/>name:<sp/>capital<sp/>letters<sp/>followed<sp/>by<sp/>a<sp/>&apos;+&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>subset<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>name-&gt;getLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name-&gt;getChar(i)<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>||<sp/>name-&gt;getChar(i)<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>subset<sp/>=<sp/>i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>name-&gt;getLength()<sp/>&amp;&amp;<sp/>name-&gt;getChar(i)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">FontInfo::FontInfo(<ref refid="class_font_info" kindref="compound">FontInfo</ref>&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>name<sp/>=<sp/>f.name<sp/>?<sp/>f.name-&gt;copy()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>file<sp/>=<sp/>f.file<sp/>?<sp/>f.file-&gt;copy()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>encoding<sp/>=<sp/>f.encoding<sp/>?<sp/>f.encoding-&gt;copy()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>substituteName<sp/>=<sp/>f.substituteName<sp/>?<sp/>f.substituteName-&gt;copy()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>f.type;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>emb<sp/>=<sp/>f.emb;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>subset<sp/>=<sp/>f.subset;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>hasToUnicode<sp/>=<sp/>f.hasToUnicode;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>fontRef<sp/>=<sp/>f.fontRef;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>embRef<sp/>=<sp/>f.embRef;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">FontInfo::~FontInfo()<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>encoding;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substituteName)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>substituteName;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/FontInfo.cc"/>
  </compounddef>
</doxygen>
