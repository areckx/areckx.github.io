<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cf2ft_8c" kind="file" language="C++">
    <compoundname>cf2ft.c</compoundname>
    <includes refid="cf2ft_8h" local="yes">cf2ft.h</includes>
    <includes refid="cf2font_8h" local="yes">cf2font.h</includes>
    <includes refid="cf2error_8h" local="yes">cf2error.h</includes>
    <includedby refid="cff_8c" local="yes">thirdparty/freetype/src/cff/cff.c</includedby>
    <incdepgraph>
      <node id="79121">
        <label>cfftypes.h</label>
        <link refid="cfftypes_8h_source"/>
        <childnode refid="79113" relation="include">
        </childnode>
      </node>
      <node id="79120">
        <label>cffobjs.h</label>
        <link refid="cffobjs_8h_source"/>
        <childnode refid="79113" relation="include">
        </childnode>
        <childnode refid="79121" relation="include">
        </childnode>
      </node>
      <node id="79119">
        <label>cffgload.h</label>
        <link refid="cffgload_8h_source"/>
        <childnode refid="79113" relation="include">
        </childnode>
        <childnode refid="79120" relation="include">
        </childnode>
      </node>
      <node id="79112">
        <label>cf2types.h</label>
        <link refid="cf2types_8h_source"/>
        <childnode refid="79113" relation="include">
        </childnode>
      </node>
      <node id="79114">
        <label>cf2glue.h</label>
        <link refid="cf2glue_8h_source"/>
        <childnode refid="79115" relation="include">
        </childnode>
        <childnode refid="79116" relation="include">
        </childnode>
        <childnode refid="79117" relation="include">
        </childnode>
        <childnode refid="79118" relation="include">
        </childnode>
      </node>
      <node id="79110">
        <label>thirdparty/freetype/src/cff/cf2ft.c</label>
        <link refid="cf2ft_8c"/>
        <childnode refid="79111" relation="include">
        </childnode>
        <childnode refid="79122" relation="include">
        </childnode>
        <childnode refid="79115" relation="include">
        </childnode>
      </node>
      <node id="79111">
        <label>cf2ft.h</label>
        <link refid="cf2ft_8h_source"/>
        <childnode refid="79112" relation="include">
        </childnode>
        <childnode refid="79114" relation="include">
        </childnode>
        <childnode refid="79119" relation="include">
        </childnode>
      </node>
      <node id="79122">
        <label>cf2font.h</label>
        <link refid="cf2font_8h_source"/>
        <childnode refid="79111" relation="include">
        </childnode>
        <childnode refid="79123" relation="include">
        </childnode>
      </node>
      <node id="79118">
        <label>cf2read.h</label>
        <link refid="cf2read_8h_source"/>
      </node>
      <node id="79113">
        <label>ft2build.h</label>
      </node>
      <node id="79123">
        <label>cf2blues.h</label>
        <link refid="cf2blues_8h_source"/>
        <childnode refid="79114" relation="include">
        </childnode>
      </node>
      <node id="79116">
        <label>cf2fixed.h</label>
        <link refid="cf2fixed_8h_source"/>
      </node>
      <node id="79115">
        <label>cf2error.h</label>
        <link refid="cf2error_8h_source"/>
        <childnode refid="79111" relation="include">
        </childnode>
      </node>
      <node id="79117">
        <label>cf2arrst.h</label>
        <link refid="cf2arrst_8h_source"/>
        <childnode refid="79115" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="79124">
        <label>thirdparty/freetype/src/cff/cf2ft.c</label>
        <link refid="cf2ft_8c"/>
        <childnode refid="79125" relation="include">
        </childnode>
      </node>
      <node id="79125">
        <label>thirdparty/freetype/src/cff/cff.c</label>
        <link refid="cff_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cf2ft_8c_1a53458c9c1d7472c2e5f2c7541f44658e" prot="public" static="no">
        <name>CF2_MAX_SIZE</name>
        <initializer>cf2_intToFixed( 2000 )    /* max ppem */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="46" column="9" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cf2ft_8c_1ac6ec9dd78fcca49154844ce666ee18d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error cf2_checkTransform</definition>
        <argsstring>(const CF2_Matrix *transform, CF2_Int unitsPerEm)</argsstring>
        <name>cf2_checkTransform</name>
        <param>
          <type>const <ref refid="struct_c_f2___matrix__" kindref="compound">CF2_Matrix</ref> *</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>CF2_Int</type>
          <declname>unitsPerEm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="56" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="56" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a3b97192a2fa90cae94039fce92131703" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_setGlyphWidth</definition>
        <argsstring>(CF2_Outline outline, CF2_Fixed width)</argsstring>
        <name>cf2_setGlyphWidth</name>
        <param>
          <type><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref></type>
          <declname>outline</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="83" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="83" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a2284c4b6248de66361502ce552fa5d33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_free_instance</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>cf2_free_instance</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="97" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="97" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a0c291e19b2cd170a438280286a454f11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_builder_moveTo</definition>
        <argsstring>(CF2_OutlineCallbacks callbacks, const CF2_CallbackParams params)</argsstring>
        <name>cf2_builder_moveTo</name>
        <param>
          <type><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref></type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="120" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="120" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a98ec37b49685f694d9444a858cc8314a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_builder_lineTo</definition>
        <argsstring>(CF2_OutlineCallbacks callbacks, const CF2_CallbackParams params)</argsstring>
        <name>cf2_builder_lineTo</name>
        <param>
          <type><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref></type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="142" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="142" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a08e24e7c112e2585c8297912d16a4f53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_builder_cubeTo</definition>
        <argsstring>(CF2_OutlineCallbacks callbacks, const CF2_CallbackParams params)</argsstring>
        <name>cf2_builder_cubeTo</name>
        <param>
          <type><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref></type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="186" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="186" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a5af1db44076d313e1882ad23dba2dd2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_outline_init</definition>
        <argsstring>(CF2_Outline outline, FT_Memory memory, FT_Error *error)</argsstring>
        <name>cf2_outline_init</name>
        <param>
          <type><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref></type>
          <declname>outline</declname>
        </param>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="238" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="238" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1af839c8735650e5821976fa8f1f26581a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cf2_getScaleAndHintFlag</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_Fixed *x_scale, CF2_Fixed *y_scale, FT_Bool *hinted, FT_Bool *scaled)</argsstring>
        <name>cf2_getScaleAndHintFlag</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_Fixed *</type>
          <declname>x_scale</declname>
        </param>
        <param>
          <type>CF2_Fixed *</type>
          <declname>y_scale</declname>
        </param>
        <param>
          <type>FT_Bool *</type>
          <declname>hinted</declname>
        </param>
        <param>
          <type>FT_Bool *</type>
          <declname>scaled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="255" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="255" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a8e6e5855077980313ffe1bd9c85ccddf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_UShort</type>
        <definition>static FT_UShort cf2_getUnitsPerEm</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getUnitsPerEm</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="286" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1af098c348734b8007a0d75e4dee14cac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_decoder_parse_charstrings</definition>
        <argsstring>(CFF_Decoder *decoder, FT_Byte *charstring_base, FT_ULong charstring_len)</argsstring>
        <name>cf2_decoder_parse_charstrings</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>FT_Byte *</type>
          <declname>charstring_base</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>charstring_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="297" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="297" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a9aa2cf6681d7337638c189978ef5553c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getSubfont</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getSubfont</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="408" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="408" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a1b6c70e38fdb2078cd6c779422b04ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getPpemY</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getPpemY</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="418" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="418" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a781337183245c61b0887a2c6710b0e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getStdVW</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getStdVW</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="442" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="442" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1abfe6c3ef2c0fdb6d881a297f6d1bf573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getStdHW</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getStdHW</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="452" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="452" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1acb8ba4beb3ff69f6e03599f623df8d2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getBlueMetrics</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_Fixed *blueScale, CF2_Fixed *blueShift, CF2_Fixed *blueFuzz)</argsstring>
        <name>cf2_getBlueMetrics</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_Fixed *</type>
          <declname>blueScale</declname>
        </param>
        <param>
          <type>CF2_Fixed *</type>
          <declname>blueShift</declname>
        </param>
        <param>
          <type>CF2_Fixed *</type>
          <declname>blueFuzz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="463" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="463" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1ae2259cfdadda7b5d6c0ad5d3fb59111b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getBlueValues</definition>
        <argsstring>(CFF_Decoder *decoder, size_t *count, FT_Pos **data)</argsstring>
        <name>cf2_getBlueValues</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FT_Pos **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="483" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="483" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1ab692358fe65184285c1d2f3d50873ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getOtherBlues</definition>
        <argsstring>(CFF_Decoder *decoder, size_t *count, FT_Pos **data)</argsstring>
        <name>cf2_getOtherBlues</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FT_Pos **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="496" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="496" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1ad008a9dab5ad35d1d5638f75007b7192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getFamilyBlues</definition>
        <argsstring>(CFF_Decoder *decoder, size_t *count, FT_Pos **data)</argsstring>
        <name>cf2_getFamilyBlues</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FT_Pos **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="509" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="509" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1aaea8617c5c97e08a4703bb0e6e7825be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getFamilyOtherBlues</definition>
        <argsstring>(CFF_Decoder *decoder, size_t *count, FT_Pos **data)</argsstring>
        <name>cf2_getFamilyOtherBlues</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FT_Pos **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="522" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="522" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1ab85175a33d1fc2982df77a64bdba1a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getLanguageGroup</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getLanguageGroup</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="535" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="535" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a99ecca864e6b2bfdbbb582b60dc6dbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_initGlobalRegionBuffer</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_UInt idx, CF2_Buffer buf)</argsstring>
        <name>cf2_initGlobalRegionBuffer</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_UInt</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>CF2_Buffer</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="546" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="546" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a773659acc822bf4088d92104ed4485c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getSeacComponent</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_Int code, CF2_Buffer buf)</argsstring>
        <name>cf2_getSeacComponent</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_Int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>CF2_Buffer</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="571" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="571" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a4546d3903856311edc8fc9bd70301f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_freeSeacComponent</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_Buffer buf)</argsstring>
        <name>cf2_freeSeacComponent</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_Buffer</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="618" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="618" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a70c956e2678e99594c71e1bdb53d225a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_initLocalRegionBuffer</definition>
        <argsstring>(CFF_Decoder *decoder, CF2_UInt idx, CF2_Buffer buf)</argsstring>
        <name>cf2_initLocalRegionBuffer</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>CF2_UInt</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>CF2_Buffer</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="630" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="630" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1aedf3e0aae03a3d504fa13675acc93c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getDefaultWidthX</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getDefaultWidthX</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="653" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="653" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1ace079656325801313d9131995633650b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_getNominalWidthX</definition>
        <argsstring>(CFF_Decoder *decoder)</argsstring>
        <name>cf2_getNominalWidthX</name>
        <param>
          <type><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="663" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="663" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1a5dbb6293c3d48c3819da6da3277fd684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_outline_reset</definition>
        <argsstring>(CF2_Outline outline)</argsstring>
        <name>cf2_outline_reset</name>
        <param>
          <type><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref></type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="673" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="673" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="cf2ft_8c_1adca3b093eaf26f53eb3b2c6d704ac252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_outline_close</definition>
        <argsstring>(CF2_Outline outline)</argsstring>
        <name>cf2_outline_close</name>
        <param>
          <type><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref></type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2ft.c" line="687" column="1" bodyfile="thirdparty/freetype/src/cff/cf2ft.c" bodystart="687" bodyend="697"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>cf2ft.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FreeType<sp/>Glue<sp/>Component<sp/>to<sp/>Adobe&apos;s<sp/>Interpreter<sp/>(body).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2013-2014<sp/>Adobe<sp/>Systems<sp/>Incorporated.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>software,<sp/>and<sp/>all<sp/>works<sp/>of<sp/>authorship,<sp/>whether<sp/>in<sp/>source<sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>object<sp/>code<sp/>form<sp/>as<sp/>indicated<sp/>by<sp/>the<sp/>copyright<sp/>notice(s)<sp/>included<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>herein<sp/>(collectively,<sp/>the<sp/>&quot;Work&quot;)<sp/>is<sp/>made<sp/>available,<sp/>and<sp/>may<sp/>only<sp/>be<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>used,<sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>FreeType<sp/>Project<sp/>License,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>LICENSE.TXT.<sp/><sp/>Additionally,<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License,<sp/>each<sp/>contributor<sp/>to<sp/>the<sp/>Work<sp/>hereby<sp/>grants<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>to<sp/>any<sp/>individual<sp/>or<sp/>legal<sp/>entity<sp/>exercising<sp/>permissions<sp/>granted<sp/>by<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>FreeType<sp/>Project<sp/>License<sp/>and<sp/>this<sp/>section<sp/>(hereafter,<sp/>&quot;You&quot;<sp/>or<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>&quot;Your&quot;)<sp/>a<sp/>perpetual,<sp/>worldwide,<sp/>non-exclusive,<sp/>no-charge,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>royalty-free,<sp/>irrevocable<sp/>(except<sp/>as<sp/>stated<sp/>in<sp/>this<sp/>section)<sp/>patent<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license<sp/>to<sp/>make,<sp/>have<sp/>made,<sp/>use,<sp/>offer<sp/>to<sp/>sell,<sp/>sell,<sp/>import,<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>otherwise<sp/>transfer<sp/>the<sp/>Work,<sp/>where<sp/>such<sp/>license<sp/>applies<sp/>only<sp/>to<sp/>those<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>patent<sp/>claims<sp/>licensable<sp/>by<sp/>such<sp/>contributor<sp/>that<sp/>are<sp/>necessarily<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>infringed<sp/>by<sp/>their<sp/>contribution(s)<sp/>alone<sp/>or<sp/>by<sp/>combination<sp/>of<sp/>their<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>contribution(s)<sp/>with<sp/>the<sp/>Work<sp/>to<sp/>which<sp/>such<sp/>contribution(s)<sp/>was<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>submitted.<sp/><sp/>If<sp/>You<sp/>institute<sp/>patent<sp/>litigation<sp/>against<sp/>any<sp/>entity<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>(including<sp/>a<sp/>cross-claim<sp/>or<sp/>counterclaim<sp/>in<sp/>a<sp/>lawsuit)<sp/>alleging<sp/>that<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>Work<sp/>or<sp/>a<sp/>contribution<sp/>incorporated<sp/>within<sp/>the<sp/>Work<sp/>constitutes<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>direct<sp/>or<sp/>contributory<sp/>patent<sp/>infringement,<sp/>then<sp/>any<sp/>patent<sp/>licenses<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>granted<sp/>to<sp/>You<sp/>under<sp/>this<sp/>License<sp/>for<sp/>that<sp/>Work<sp/>shall<sp/>terminate<sp/>as<sp/>of<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>date<sp/>such<sp/>litigation<sp/>is<sp/>filed.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>By<sp/>using,<sp/>modifying,<sp/>or<sp/>distributing<sp/>the<sp/>Work<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>have<sp/>read<sp/>and<sp/>understood<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License<sp/>as<sp/>well<sp/>as<sp/>those<sp/>provided<sp/>in<sp/>this<sp/>section,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>and<sp/>you<sp/>accept<sp/>them<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2ft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2font.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CF2_MAX_SIZE<sp/><sp/>cf2_intToFixed(<sp/>2000<sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>max<sp/>ppem<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>check<sp/>should<sp/>avoid<sp/>most<sp/>internal<sp/>overflow<sp/>cases.<sp/><sp/>Clients<sp/>should</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/>generally<sp/>respond<sp/>to<sp/>`Glyph_Too_Big&apos;<sp/>by<sp/>getting<sp/>a<sp/>glyph<sp/>outline</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/>at<sp/>EM<sp/>size,<sp/>scaling<sp/>it<sp/>and<sp/>filling<sp/>it<sp/>as<sp/>a<sp/>graphics<sp/>operation.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>cf2_checkTransform(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___matrix__" kindref="compound">CF2_Matrix</ref>*<sp/><sp/>transform,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unitsPerEm<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>maxScale;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>unitsPerEm<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>transform-&gt;a<sp/>&lt;=<sp/>0<sp/>||<sp/>transform-&gt;d<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Invalid_Size_Handle<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>transform-&gt;b<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>transform-&gt;c<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>transform-&gt;tx<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>transform-&gt;ty<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>unitsPerEm<sp/>&gt;<sp/>0x7FFF<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Glyph_Too_Big<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>maxScale<sp/>=<sp/>FT_DivFix(<sp/>CF2_MAX_SIZE,<sp/>cf2_intToFixed(<sp/>unitsPerEm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>transform-&gt;a<sp/>&gt;<sp/>maxScale<sp/>||<sp/>transform-&gt;d<sp/>&gt;<sp/>maxScale<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Glyph_Too_Big<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>cf2_setGlyphWidth(<sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/>outline,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/><sp/><sp/>width<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>=<sp/>outline-&gt;decoder;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder-&gt;glyph_width<sp/>=<sp/>cf2_fixedToInt(<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clean<sp/>up<sp/>font<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>cf2_free_instance(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/>ptr<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><ref refid="structfont" kindref="compound">font</ref><sp/>=<sp/>(<ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref>)ptr;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>font<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/>memory<sp/>=<sp/>font-&gt;memory;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)memory;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>functions<sp/>for<sp/>handling<sp/>client<sp/>outline;<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeType<sp/>uses<sp/>coordinates<sp/>in<sp/>26.6<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>cf2_builder_moveTo(<sp/><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref><sp/><sp/><sp/><sp/><sp/><sp/>callbacks,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref><sp/><sp/>params<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>downcast<sp/>the<sp/>object<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/><sp/>outline<sp/>=<sp/>(<ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref>)callbacks;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___builder__" kindref="compound">CFF_Builder</ref>*<sp/><sp/>builder;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)params;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>used<sp/>in<sp/>debug<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>outline<sp/>&amp;&amp;<sp/>outline-&gt;decoder<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>params-&gt;op<sp/>==<sp/>CF2_PathOpMoveTo<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>builder<sp/>=<sp/>&amp;outline-&gt;decoder-&gt;builder;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>two<sp/>successive<sp/>moves<sp/>simply<sp/>close<sp/>the<sp/>contour<sp/>twice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_builder_close_contour(<sp/>builder<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;path_begun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>cf2_builder_lineTo(<sp/><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref><sp/><sp/><sp/><sp/><sp/><sp/>callbacks,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref><sp/><sp/>params<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>downcast<sp/>the<sp/>object<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/><sp/>outline<sp/>=<sp/>(<ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref>)callbacks;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___builder__" kindref="compound">CFF_Builder</ref>*<sp/><sp/>builder;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>outline<sp/>&amp;&amp;<sp/>outline-&gt;decoder<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>params-&gt;op<sp/>==<sp/>CF2_PathOpLineTo<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>builder<sp/>=<sp/>&amp;outline-&gt;decoder-&gt;builder;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!builder-&gt;path_begun<sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>record<sp/>the<sp/>move<sp/>before<sp/>the<sp/>line;<sp/>also<sp/>check<sp/>points<sp/>and<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>`path_begun&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cff_builder_start_point(<sp/>builder,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt0.x,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt0.y<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!*callbacks-&gt;error<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*callbacks-&gt;error<sp/>=<sp/><sp/>error;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>`cff_builder_add_point1&apos;<sp/>includes<sp/>a<sp/>check_points<sp/>call<sp/>for<sp/>one<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cff_builder_add_point1(<sp/>builder,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt1.x,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt1.y<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!*callbacks-&gt;error<sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*callbacks-&gt;error<sp/>=<sp/><sp/>error;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>cf2_builder_cubeTo(<sp/><ref refid="struct_c_f2___outline_callbacks_rec__" kindref="compound">CF2_OutlineCallbacks</ref><sp/><sp/><sp/><sp/><sp/><sp/>callbacks,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_c_f2___callback_params_rec__" kindref="compound">CF2_CallbackParams</ref><sp/><sp/>params<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>downcast<sp/>the<sp/>object<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/><sp/>outline<sp/>=<sp/>(<ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref>)callbacks;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___builder__" kindref="compound">CFF_Builder</ref>*<sp/><sp/>builder;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>outline<sp/>&amp;&amp;<sp/>outline-&gt;decoder<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>params-&gt;op<sp/>==<sp/>CF2_PathOpCubeTo<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>builder<sp/>=<sp/>&amp;outline-&gt;decoder-&gt;builder;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!builder-&gt;path_begun<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>record<sp/>the<sp/>move<sp/>before<sp/>the<sp/>line;<sp/>also<sp/>check<sp/>points<sp/>and<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>`path_begun&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cff_builder_start_point(<sp/>builder,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt0.x,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt0.y<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!*callbacks-&gt;error<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*callbacks-&gt;error<sp/>=<sp/><sp/>error;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>room<sp/>for<sp/>3<sp/>points:<sp/>2<sp/>off-curve,<sp/>1<sp/>on-curve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cff_check_points(<sp/>builder,<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!*callbacks-&gt;error<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*callbacks-&gt;error<sp/>=<sp/><sp/>error;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_builder_add_point(<sp/>builder,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt1.x,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt1.y,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_builder_add_point(<sp/>builder,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt2.x,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt2.y,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_builder_add_point(<sp/>builder,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt3.x,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params-&gt;pt3.y,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>cf2_outline_init(<sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/>outline,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/>memory,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/><sp/><sp/>error<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_MEM_ZERO(<sp/>outline,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_OutlineRec</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.memory<sp/>=<sp/>memory;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.error<sp/><sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.moveTo<sp/>=<sp/>cf2_builder_moveTo;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.lineTo<sp/>=<sp/>cf2_builder_lineTo;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.cubeTo<sp/>=<sp/>cf2_builder_cubeTo;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>scaling<sp/>and<sp/>hint<sp/>flag<sp/>from<sp/>GlyphSlot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>cf2_getScaleAndHintFlag(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed*<sp/><sp/><sp/><sp/>x_scale,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed*<sp/><sp/><sp/><sp/>y_scale,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool*<sp/><sp/><sp/><sp/><sp/><sp/>hinted,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool*<sp/><sp/><sp/><sp/><sp/><sp/>scaled<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;builder.glyph<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>FreeType<sp/>scale<sp/>includes<sp/>a<sp/>factor<sp/>of<sp/>64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>*hinted<sp/>=<sp/>decoder-&gt;builder.glyph-&gt;hint;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>*scaled<sp/>=<sp/>decoder-&gt;builder.glyph-&gt;scaled;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>*hinted<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x_scale<sp/>=<sp/>(<sp/>decoder-&gt;builder.glyph-&gt;x_scale<sp/>+<sp/>32<sp/>)<sp/>/<sp/>64;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y_scale<sp/>=<sp/>(<sp/>decoder-&gt;builder.glyph-&gt;y_scale<sp/>+<sp/>32<sp/>)<sp/>/<sp/>64;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>unhinted<sp/>outlines,<sp/>`cff_slot_load&apos;<sp/>does<sp/>the<sp/>scaling,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>thus<sp/>render<sp/>at<sp/>`unity&apos;<sp/>scale<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x_scale<sp/>=<sp/>0x0400;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1/64<sp/>as<sp/>16.16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y_scale<sp/>=<sp/>0x0400;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>units<sp/>per<sp/>em<sp/>from<sp/>`FT_Face&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>should<sp/>handle<sp/>font<sp/>matrix<sp/>concatenation?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_UShort</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>cf2_getUnitsPerEm(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;builder.face<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder-&gt;builder.face-&gt;root.units_per_EM<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decoder-&gt;builder.face-&gt;root.units_per_EM;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>entry<sp/>point:<sp/>Render<sp/>one<sp/>glyph.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>cf2_decoder_parse_charstrings(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/><sp/><sp/><sp/><sp/>charstring_base,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/><sp/>charstring_len<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/>memory;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/><sp/>error<sp/>=<sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref><sp/><sp/><sp/>font;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;cff<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>memory<sp/>=<sp/>decoder-&gt;builder.memory;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CF2<sp/>data<sp/>is<sp/>saved<sp/>here<sp/>across<sp/>glyphs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>font<sp/>=<sp/>(<ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref>)decoder-&gt;cff-&gt;cf2_instance.data;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>on<sp/>first<sp/>glyph,<sp/>allocate<sp/>instance<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>decoder-&gt;cff-&gt;cf2_instance.data<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;cff-&gt;cf2_instance.finalizer<sp/>=</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Generic_Finalizer)cf2_free_instance;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>FT_ALLOC(<sp/>decoder-&gt;cff-&gt;cf2_instance.data,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof<sp/>(<sp/><ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_FontRec</ref><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Out_Of_Memory<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/>(<ref refid="struct_c_f2___font_rec__" kindref="compound">CF2_Font</ref>)decoder-&gt;cff-&gt;cf2_instance.data;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;memory<sp/>=<sp/>memory;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>client<sp/>outline,<sp/>to<sp/>be<sp/>shared<sp/>by<sp/>each<sp/>glyph<sp/>rendered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cf2_outline_init(<sp/>&amp;font-&gt;outline,<sp/>font-&gt;memory,<sp/>&amp;font-&gt;error<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>decoder;<sp/>it<sp/>is<sp/>a<sp/>stack<sp/>variable<sp/>and<sp/>will<sp/>be<sp/>different<sp/>on<sp/>each<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>font-&gt;decoder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>decoder;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>font-&gt;outline.decoder<sp/>=<sp/>decoder;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>parameters<sp/>for<sp/>Adobe<sp/>engine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___builder__" kindref="compound">CFF_Builder</ref>*<sp/><sp/>builder<sp/>=<sp/>&amp;decoder-&gt;builder;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFF_Driver<sp/><sp/><sp/><sp/>driver<sp/><sp/>=<sp/>(CFF_Driver)FT_FACE_DRIVER(<sp/>builder-&gt;face<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>local<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/><sp/><sp/><sp/><sp/><sp/>error2<sp/>=<sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_BufferRec<sp/><sp/>buf;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___matrix__" kindref="compound">CF2_Matrix</ref><sp/><sp/><sp/><sp/><sp/>transform;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_F16Dot16<sp/><sp/><sp/>glyphWidth;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>hinted;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>scaled;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeType<sp/>has<sp/>already<sp/>looked<sp/>up<sp/>the<sp/>GID;<sp/>convert<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>`RegionBuffer&apos;,<sp/>assuming<sp/>that<sp/>the<sp/>input<sp/>has<sp/>been<sp/>validated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>charstring_base<sp/>+<sp/>charstring_len<sp/>&gt;=<sp/>charstring_base<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ZERO(<sp/>&amp;buf<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf.start<sp/>=</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf.ptr<sp/><sp/><sp/>=<sp/>charstring_base;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf.end<sp/><sp/><sp/>=<sp/>charstring_base<sp/>+<sp/>charstring_len;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ZERO(<sp/>&amp;transform<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cf2_getScaleAndHintFlag(<sp/>decoder,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;transform.a,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;transform.d,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;hinted,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;scaled<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;renderingFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hinted<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;renderingFlags<sp/>|=<sp/>CF2_FlagsHinted;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scaled<sp/>&amp;&amp;<sp/>!driver-&gt;no_stem_darkening<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;renderingFlags<sp/>|=<sp/>CF2_FlagsDarkened;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[0]<sp/>=<sp/>driver-&gt;darken_params[0];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[1]<sp/>=<sp/>driver-&gt;darken_params[1];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[2]<sp/>=<sp/>driver-&gt;darken_params[2];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[3]<sp/>=<sp/>driver-&gt;darken_params[3];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[4]<sp/>=<sp/>driver-&gt;darken_params[4];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[5]<sp/>=<sp/>driver-&gt;darken_params[5];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[6]<sp/>=<sp/>driver-&gt;darken_params[6];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;darkenParams[7]<sp/>=<sp/>driver-&gt;darken_params[7];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>get<sp/>an<sp/>outline<sp/>for<sp/>this<sp/>glyph;<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>also<sp/>get<sp/>units<sp/>per<sp/>em<sp/>to<sp/>validate<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;unitsPerEm<sp/>=<sp/>(CF2_Int)cf2_getUnitsPerEm(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scaled<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error2<sp/>=<sp/>cf2_checkTransform(<sp/>&amp;transform,<sp/>font-&gt;unitsPerEm<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error2<sp/>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error2<sp/>=<sp/>cf2_getGlyphOutline(<sp/>font,<sp/>&amp;buf,<sp/>&amp;transform,<sp/>&amp;glyphWidth<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error2<sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_ERR(<sp/>Invalid_File_Format<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cf2_setGlyphWidth(<sp/>&amp;font-&gt;outline,<sp/>glyphWidth<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>pointer<sp/>to<sp/>current<sp/>FreeType<sp/>subfont<sp/>(based<sp/>on<sp/>current<sp/>glyphID)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/><ref refid="struct_c_f_f___sub_font_rec__" kindref="compound">CFF_SubFont</ref><sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>cf2_getSubfont(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decoder-&gt;current_subfont;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>`y_ppem&apos;<sp/>from<sp/>`CFF_Size&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>cf2_getPpemY(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;builder.face<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;builder.face-&gt;root.size<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>`y_ppem&apos;<sp/>can<sp/>be<sp/>zero<sp/>if<sp/>there<sp/>wasn&apos;t<sp/>a<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>`FT_Set_Char_Size&apos;<sp/>or<sp/>something<sp/>similar.<sp/><sp/>However,<sp/>this<sp/>isn&apos;t<sp/>a</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>problem<sp/>since<sp/>we<sp/>come<sp/>to<sp/>this<sp/>place<sp/>in<sp/>the<sp/>code<sp/>only<sp/>if</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>FT_LOAD_NO_SCALE<sp/>is<sp/>set<sp/>(the<sp/>other<sp/>case<sp/>gets<sp/>caught<sp/>by</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>`cf2_checkTransform&apos;).<sp/><sp/>The<sp/>ppem<sp/>value<sp/>is<sp/>needed<sp/>to<sp/>compute<sp/>the<sp/>stem</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>darkening,<sp/>which<sp/>is<sp/>disabled<sp/>for<sp/>getting<sp/>the<sp/>unscaled<sp/>outline.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;builder.face-&gt;root.size-&gt;metrics.y_ppem<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>standard<sp/>stem<sp/>widths<sp/>for<sp/>the<sp/>current<sp/>subfont;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeType<sp/>stores<sp/>these<sp/>as<sp/>integer<sp/>font<sp/>units<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(note:<sp/>variable<sp/>names<sp/>seem<sp/>swapped)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>cf2_getStdVW(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.standard_height<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>cf2_getStdHW(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.standard_width<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>FreeType<sp/>stores<sp/>1000<sp/>times<sp/>the<sp/>actual<sp/>value<sp/>for<sp/>`BlueScale&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>cf2_getBlueMetrics(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed*<sp/><sp/><sp/><sp/>blueScale,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed*<sp/><sp/><sp/><sp/>blueShift,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed*<sp/><sp/><sp/><sp/>blueFuzz<sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>*blueScale<sp/>=<sp/>FT_DivFix(</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.blue_scale,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cf2_intToFixed(<sp/>1000<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>*blueShift<sp/>=<sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.blue_shift<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>*blueFuzz<sp/><sp/>=<sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.blue_fuzz<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>blue<sp/>values<sp/>counts<sp/>and<sp/>arrays;<sp/>the<sp/>FreeType<sp/>parser<sp/>has<sp/>validated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>counts<sp/>and<sp/>verified<sp/>that<sp/>each<sp/>is<sp/>an<sp/>even<sp/>number<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>cf2_getBlueValues(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos*<sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>decoder-&gt;current_subfont-&gt;private_dict.num_blue_values;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>*data<sp/><sp/>=<sp/>(FT_Pos*)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;decoder-&gt;current_subfont-&gt;private_dict.blue_values;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>cf2_getOtherBlues(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos*<sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>decoder-&gt;current_subfont-&gt;private_dict.num_other_blues;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>*data<sp/><sp/>=<sp/>(FT_Pos*)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;decoder-&gt;current_subfont-&gt;private_dict.other_blues;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>cf2_getFamilyBlues(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos*<sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>decoder-&gt;current_subfont-&gt;private_dict.num_family_blues;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>*data<sp/><sp/>=<sp/>(FT_Pos*)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;decoder-&gt;current_subfont-&gt;private_dict.family_blues;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>cf2_getFamilyOtherBlues(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos*<sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>decoder-&gt;current_subfont-&gt;private_dict.num_family_other_blues;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>*data<sp/><sp/>=<sp/>(FT_Pos*)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;decoder-&gt;current_subfont-&gt;private_dict.family_other_blues;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Int<sp/>)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>cf2_getLanguageGroup(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decoder-&gt;current_subfont-&gt;private_dict.language_group;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>unbiased<sp/>subroutine<sp/>index<sp/>to<sp/>`CF2_Buffer&apos;<sp/>and<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>0<sp/>on<sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Int<sp/>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>cf2_initGlobalRegionBuffer(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_UInt<sp/><sp/><sp/><sp/><sp/><sp/>idx,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Buffer<sp/><sp/><sp/><sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ZERO(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>+=<sp/>(CF2_UInt)decoder-&gt;globals_bias;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>idx<sp/>&gt;=<sp/>decoder-&gt;num_globals<sp/>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder-&gt;globals<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;start<sp/>=</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;ptr<sp/><sp/><sp/>=<sp/>decoder-&gt;globals[idx];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;end<sp/><sp/><sp/>=<sp/>decoder-&gt;globals[idx<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>AdobeStandardEncoding<sp/>code<sp/>to<sp/>CF2_Buffer;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>seac<sp/>component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>cf2_getSeacComponent(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/>code,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Buffer<sp/><sp/><sp/><sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>CF2_Int<sp/><sp/><sp/>gid;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/>charstring;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>len;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ZERO(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_CONFIG_OPTION_INCREMENTAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Incremental<sp/>fonts<sp/>don&apos;t<sp/>necessarily<sp/>have<sp/>valid<sp/>charsets.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>They<sp/>use<sp/>the<sp/>character<sp/>code,<sp/>not<sp/>the<sp/>glyph<sp/>index,<sp/>in<sp/>this<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>decoder-&gt;builder.face-&gt;root.internal-&gt;incremental_interface<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gid<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_CONFIG_OPTION_INCREMENTAL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gid<sp/>=<sp/>cff_lookup_glyph_by_stdcharcode(<sp/>decoder-&gt;cff,<sp/>code<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gid<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_THROW(<sp/>Invalid_Glyph_Format<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>cff_get_glyph_data(<sp/>decoder-&gt;builder.face,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CF2_UInt)gid,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;charstring,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;len<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>for<sp/>now,<sp/>just<sp/>pass<sp/>the<sp/>FreeType<sp/>error<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>input<sp/>has<sp/>been<sp/>validated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>charstring<sp/>+<sp/>len<sp/>&gt;=<sp/>charstring<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;start<sp/>=<sp/>charstring;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;end<sp/><sp/><sp/>=<sp/>charstring<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;ptr<sp/><sp/><sp/>=<sp/>buf-&gt;start;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>cf2_freeSeacComponent(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Buffer<sp/><sp/><sp/><sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_free_glyph_data(<sp/>decoder-&gt;builder.face,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte**)&amp;buf-&gt;start,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(<sp/>buf-&gt;end<sp/>-<sp/>buf-&gt;start<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Int<sp/>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>cf2_initLocalRegionBuffer(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_UInt<sp/><sp/><sp/><sp/><sp/><sp/>idx,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Buffer<sp/><sp/><sp/><sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ZERO(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>+=<sp/>(CF2_UInt)decoder-&gt;locals_bias;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>idx<sp/>&gt;=<sp/>decoder-&gt;num_locals<sp/>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder-&gt;locals<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;start<sp/>=</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;ptr<sp/><sp/><sp/>=<sp/>decoder-&gt;locals[idx];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;end<sp/><sp/><sp/>=<sp/>decoder-&gt;locals[idx<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>cf2_getDefaultWidthX(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.default_width<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>cf2_getNominalWidthX(<sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>&amp;&amp;<sp/>decoder-&gt;current_subfont<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;current_subfont-&gt;private_dict.nominal_width<sp/>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>cf2_outline_reset(<sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/>outline<sp/>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>=<sp/>outline-&gt;decoder;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;root.windingMomentum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_GlyphLoader_Rewind(<sp/>decoder-&gt;builder.loader<sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>cf2_outline_close(<sp/><ref refid="struct_c_f2___outline_rec__" kindref="compound">CF2_Outline</ref><sp/><sp/>outline<sp/>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_f___decoder__" kindref="compound">CFF_Decoder</ref>*<sp/><sp/>decoder<sp/>=<sp/>outline-&gt;decoder;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>decoder<sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>cff_builder_close_contour(<sp/>&amp;decoder-&gt;builder<sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_GlyphLoader_Add(<sp/>decoder-&gt;builder.loader<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/cff/cf2ft.c"/>
  </compounddef>
</doxygen>
