<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_gfx_font_8h" kind="file" language="C++">
    <compoundname>GfxFont.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_goo_string_8h" local="yes">goo/GooString.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_char_types_8h" local="yes">CharTypes.h</includes>
    <includedby refid="_annot_8cc" local="yes">thirdparty/poppler/poppler/Annot.cc</includedby>
    <includedby refid="_cairo_font_engine_8h" local="yes">thirdparty/poppler/poppler/CairoFontEngine.h</includedby>
    <includedby refid="_text_output_dev_8h" local="yes">thirdparty/poppler/poppler/TextOutputDev.h</includedby>
    <includedby refid="_cairo_output_dev_8cc" local="yes">thirdparty/poppler/poppler/CairoOutputDev.cc</includedby>
    <includedby refid="_marked_content_output_dev_8h" local="yes">thirdparty/poppler/poppler/MarkedContentOutputDev.h</includedby>
    <includedby refid="_font_info_8cc" local="yes">thirdparty/poppler/poppler/FontInfo.cc</includedby>
    <includedby refid="_gfx_8cc" local="yes">thirdparty/poppler/poppler/Gfx.cc</includedby>
    <includedby refid="_gfx_font_8cc" local="yes">thirdparty/poppler/poppler/GfxFont.cc</includedby>
    <includedby refid="_gfx_state_8cc" local="yes">thirdparty/poppler/poppler/GfxState.cc</includedby>
    <includedby refid="_global_params_8cc" local="yes">thirdparty/poppler/poppler/GlobalParams.cc</includedby>
    <includedby refid="_global_params_win_8cc" local="yes">thirdparty/poppler/poppler/GlobalParamsWin.cc</includedby>
    <includedby refid="_marked_content_output_dev_8cc" local="yes">thirdparty/poppler/poppler/MarkedContentOutputDev.cc</includedby>
    <includedby refid="_pre_scan_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PreScanOutputDev.cc</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <includedby refid="_splash_output_dev_8cc" local="yes">thirdparty/poppler/poppler/SplashOutputDev.cc</includedby>
    <includedby refid="_arthur_output_dev_8cc" local="yes">thirdparty/poppler/qt5/ArthurOutputDev.cc</includedby>
    <incdepgraph>
      <node id="87311">
        <label>stdarg.h</label>
      </node>
      <node id="87305">
        <label>thirdparty/poppler/poppler/GfxFont.h</label>
        <link refid="_gfx_font_8h"/>
        <childnode refid="87306" relation="include">
        </childnode>
        <childnode refid="87309" relation="include">
        </childnode>
        <childnode refid="87313" relation="include">
        </childnode>
        <childnode refid="87324" relation="include">
        </childnode>
      </node>
      <node id="87312">
        <label>stdlib.h</label>
      </node>
      <node id="87316">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87308" relation="include">
        </childnode>
        <childnode refid="87307" relation="include">
        </childnode>
      </node>
      <node id="87319">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87307" relation="include">
        </childnode>
        <childnode refid="87313" relation="include">
        </childnode>
        <childnode refid="87320" relation="include">
        </childnode>
      </node>
      <node id="87318">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87311" relation="include">
        </childnode>
        <childnode refid="87307" relation="include">
        </childnode>
        <childnode refid="87306" relation="include">
        </childnode>
        <childnode refid="87309" relation="include">
        </childnode>
      </node>
      <node id="87322">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87307" relation="include">
        </childnode>
        <childnode refid="87313" relation="include">
        </childnode>
        <childnode refid="87320" relation="include">
        </childnode>
      </node>
      <node id="87310">
        <label>limits.h</label>
      </node>
      <node id="87307">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87308" relation="include">
        </childnode>
      </node>
      <node id="87317">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87323">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87307" relation="include">
        </childnode>
        <childnode refid="87308" relation="include">
        </childnode>
        <childnode refid="87306" relation="include">
        </childnode>
        <childnode refid="87313" relation="include">
        </childnode>
        <childnode refid="87320" relation="include">
        </childnode>
      </node>
      <node id="87321">
        <label>pthread.h</label>
      </node>
      <node id="87315">
        <label>string.h</label>
      </node>
      <node id="87309">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87310" relation="include">
        </childnode>
        <childnode refid="87311" relation="include">
        </childnode>
        <childnode refid="87312" relation="include">
        </childnode>
        <childnode refid="87306" relation="include">
        </childnode>
      </node>
      <node id="87313">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87314" relation="include">
        </childnode>
        <childnode refid="87308" relation="include">
        </childnode>
        <childnode refid="87315" relation="include">
        </childnode>
        <childnode refid="87306" relation="include">
        </childnode>
        <childnode refid="87316" relation="include">
        </childnode>
        <childnode refid="87309" relation="include">
        </childnode>
        <childnode refid="87317" relation="include">
        </childnode>
        <childnode refid="87318" relation="include">
        </childnode>
        <childnode refid="87319" relation="include">
        </childnode>
        <childnode refid="87322" relation="include">
        </childnode>
        <childnode refid="87323" relation="include">
        </childnode>
      </node>
      <node id="87320">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87321" relation="include">
        </childnode>
      </node>
      <node id="87324">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="87306">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87307" relation="include">
        </childnode>
      </node>
      <node id="87314">
        <label>set</label>
      </node>
      <node id="87308">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="87330">
        <label>thirdparty/poppler/poppler/TextOutputDev.h</label>
        <link refid="_text_output_dev_8h_source"/>
        <childnode refid="87331" relation="include">
        </childnode>
        <childnode refid="87332" relation="include">
        </childnode>
        <childnode refid="87333" relation="include">
        </childnode>
        <childnode refid="87334" relation="include">
        </childnode>
      </node>
      <node id="87344">
        <label>thirdparty/poppler/poppler/GfxFont.cc</label>
        <link refid="_gfx_font_8cc_source"/>
      </node>
      <node id="87328">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="87333">
        <label>thirdparty/poppler/poppler/TextOutputDev.cc</label>
        <link refid="_text_output_dev_8cc_source"/>
      </node>
      <node id="87342">
        <label>thirdparty/poppler/poppler/FontInfo.cc</label>
        <link refid="_font_info_8cc_source"/>
      </node>
      <node id="87325">
        <label>thirdparty/poppler/poppler/GfxFont.h</label>
        <link refid="_gfx_font_8h"/>
        <childnode refid="87326" relation="include">
        </childnode>
        <childnode refid="87327" relation="include">
        </childnode>
        <childnode refid="87330" relation="include">
        </childnode>
        <childnode refid="87329" relation="include">
        </childnode>
        <childnode refid="87335" relation="include">
        </childnode>
        <childnode refid="87342" relation="include">
        </childnode>
        <childnode refid="87343" relation="include">
        </childnode>
        <childnode refid="87344" relation="include">
        </childnode>
        <childnode refid="87345" relation="include">
        </childnode>
        <childnode refid="87346" relation="include">
        </childnode>
        <childnode refid="87347" relation="include">
        </childnode>
        <childnode refid="87341" relation="include">
        </childnode>
        <childnode refid="87348" relation="include">
        </childnode>
        <childnode refid="87349" relation="include">
        </childnode>
        <childnode refid="87350" relation="include">
        </childnode>
        <childnode refid="87351" relation="include">
        </childnode>
      </node>
      <node id="87336">
        <label>thirdparty/poppler/poppler/StructElement.h</label>
        <link refid="_struct_element_8h_source"/>
        <childnode refid="87337" relation="include">
        </childnode>
        <childnode refid="87339" relation="include">
        </childnode>
        <childnode refid="87340" relation="include">
        </childnode>
      </node>
      <node id="87334">
        <label>thirdparty/poppler/qt5/poppler-page.cc</label>
        <link refid="poppler-page_8cc_source"/>
      </node>
      <node id="87335">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.h</label>
        <link refid="_marked_content_output_dev_8h_source"/>
        <childnode refid="87336" relation="include">
        </childnode>
        <childnode refid="87341" relation="include">
        </childnode>
      </node>
      <node id="87348">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.cc</label>
        <link refid="_pre_scan_output_dev_8cc_source"/>
      </node>
      <node id="87339">
        <label>thirdparty/poppler/poppler/StructElement.cc</label>
        <link refid="_struct_element_8cc_source"/>
      </node>
      <node id="87347">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc_source"/>
      </node>
      <node id="87329">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="87338">
        <label>thirdparty/poppler/poppler/Catalog.cc</label>
        <link refid="_catalog_8cc_source"/>
      </node>
      <node id="87350">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="87331">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h_source"/>
        <childnode refid="87328" relation="include">
        </childnode>
        <childnode refid="87329" relation="include">
        </childnode>
      </node>
      <node id="87349">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="87332">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
      <node id="87341">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.cc</label>
        <link refid="_marked_content_output_dev_8cc_source"/>
      </node>
      <node id="87326">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="87340">
        <label>thirdparty/poppler/poppler/StructTreeRoot.cc</label>
        <link refid="_struct_tree_root_8cc_source"/>
      </node>
      <node id="87346">
        <label>thirdparty/poppler/poppler/GlobalParams.cc</label>
        <link refid="_global_params_8cc_source"/>
      </node>
      <node id="87345">
        <label>thirdparty/poppler/poppler/GfxState.cc</label>
        <link refid="_gfx_state_8cc_source"/>
      </node>
      <node id="87343">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
      <node id="87337">
        <label>thirdparty/poppler/poppler/StructTreeRoot.h</label>
        <link refid="_struct_tree_root_8h_source"/>
        <childnode refid="87338" relation="include">
        </childnode>
        <childnode refid="87339" relation="include">
        </childnode>
        <childnode refid="87340" relation="include">
        </childnode>
      </node>
      <node id="87327">
        <label>thirdparty/poppler/poppler/CairoFontEngine.h</label>
        <link refid="_cairo_font_engine_8h_source"/>
        <childnode refid="87328" relation="include">
        </childnode>
        <childnode refid="87329" relation="include">
        </childnode>
      </node>
      <node id="87351">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.cc</label>
        <link refid="_arthur_output_dev_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_gfx_font_c_i_d_width_excep" prot="public">GfxFontCIDWidthExcep</innerclass>
    <innerclass refid="struct_gfx_font_c_i_d_width_excep_v" prot="public">GfxFontCIDWidthExcepV</innerclass>
    <innerclass refid="struct_gfx_font_c_i_d_widths" prot="public">GfxFontCIDWidths</innerclass>
    <innerclass refid="class_gfx_font_loc" prot="public">GfxFontLoc</innerclass>
    <innerclass refid="class_gfx_font" prot="public">GfxFont</innerclass>
    <innerclass refid="class_gfx8_bit_font" prot="public">Gfx8BitFont</innerclass>
    <innerclass refid="class_gfx_c_i_d_font" prot="public">GfxCIDFont</innerclass>
    <innerclass refid="class_gfx_font_dict" prot="public">GfxFontDict</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_gfx_font_8h_1a0a0e94dfe9d4019c079c84dcbc8075f2" prot="public" static="no">
        <name>fontFixedWidth</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="140" column="9" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_gfx_font_8h_1a2be39c62d742d16e27954583ccc315ee" prot="public" static="no">
        <name>fontSerif</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="141" column="9" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_gfx_font_8h_1a2cf5231a2c482d52e8d7100d63c0d1b0" prot="public" static="no">
        <name>fontSymbolic</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="142" column="9" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_gfx_font_8h_1a43beb373fb1c7a4dd42a33f317265869" prot="public" static="no">
        <name>fontItalic</name>
        <initializer>(1 &lt;&lt; 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="143" column="9" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_gfx_font_8h_1abbbb9b421df49b1505ac6d9c67dcc05d" prot="public" static="no">
        <name>fontBold</name>
        <initializer>(1 &lt;&lt; 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="144" column="9" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90" prot="public" static="no">
        <name>GfxFontType</name>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90aac705f1b800ccc2aae641211eb45805b" prot="public">
          <name>fontUnknownType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90ac463451a78896b3c19dd4c3174b0694d" prot="public">
          <name>fontType1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90ae362f946cf1f5743a0ff9e8c0e5c7a6d" prot="public">
          <name>fontType1C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90a1586815850f300b70a73bcb7d18dadd8" prot="public">
          <name>fontType1COT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90adba071fd4fbfb2f32d29f9d1f176979d" prot="public">
          <name>fontType3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90ace04d14691d040d1f5a7146f96c995e0" prot="public">
          <name>fontTrueType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90ae5ccf6e23ff5c2c57e07619038602e43" prot="public">
          <name>fontTrueTypeOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90af67313fa1269a30eb2db1bd9fa45d315" prot="public">
          <name>fontCIDType0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90a667a03b706d380000e992f02eaee91fc" prot="public">
          <name>fontCIDType0C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90af9a9f9a3e94ec6a1da7bd95dfa750a3a" prot="public">
          <name>fontCIDType0COT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90acdcea6c942d475c919a4f2abb7ac6ba3" prot="public">
          <name>fontCIDType2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a1548ff1c69ee86965de026bb49db6a90a7dd41092943abd344f266c39377f148d" prot="public">
          <name>fontCIDType2OT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="56" column="1" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="56" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="_gfx_font_8h_1a4575fb14c4fc4c87bb8c9a8726ac3e04" prot="public" static="no">
        <name>GfxFontLocType</name>
        <enumvalue id="_gfx_font_8h_1a4575fb14c4fc4c87bb8c9a8726ac3e04ac0b60d5b59ff0cb4adcb4a11a21dfd69" prot="public">
          <name>gfxFontLocEmbedded</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a4575fb14c4fc4c87bb8c9a8726ac3e04aff13bec9167605fc5da118793d773012" prot="public">
          <name>gfxFontLocExternal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_gfx_font_8h_1a4575fb14c4fc4c87bb8c9a8726ac3e04aa5657f3877e2573dfe3bef6bbf3a8645" prot="public">
          <name>gfxFontLocResident</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxFont.h" line="105" column="1" bodyfile="thirdparty/poppler/poppler/GfxFont.h" bodystart="105" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFont.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005,<sp/>2008,<sp/>2015<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Takashi<sp/>Iwai<sp/>&lt;tiwai@suse.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Julien<sp/>Rebetez<sp/>&lt;julienr@svn.gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Jeff<sp/>Muizelaar<sp/>&lt;jeff@infidigm.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Koji<sp/>Otani<sp/>&lt;sho@bbr.jp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Axel<sp/>Strübing<sp/>&lt;axel.struebing@freenet.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011,<sp/>2012,<sp/>2014<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Jason<sp/>Crain<sp/>&lt;jason@aquaticape.us&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GFXFONT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GFXFONT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CharTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_map" kindref="compound">CMap</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fo_fi_true_type" kindref="compound">FoFiTrueType</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_s_output_dev" kindref="compound">PSOutputDev</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_font_c_i_d_widths" kindref="compound">GfxFontCIDWidths</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_base14_font_map_entry" kindref="compound">Base14FontMapEntry</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFontType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GfxFontType<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>Gfx8BitFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>fontUnknownType,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>fontType1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>fontType1C,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>fontType1COT,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>fontType3,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>fontTrueType,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>fontTrueTypeOT,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>GfxCIDFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>fontCIDType0,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>fontCIDType0C,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>fontCIDType0COT,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>fontCIDType2,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>fontCIDType2OT</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFontCIDWidths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_gfx_font_c_i_d_width_excep" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_font_c_i_d_width_excep" kindref="compound">GfxFontCIDWidthExcep</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>CID<sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>record<sp/>applies<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>CID<sp/>last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>CIDs<sp/>&lt;first&gt;..&lt;last&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_gfx_font_c_i_d_width_excep_v" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_font_c_i_d_width_excep_v" kindref="compound">GfxFontCIDWidthExcepV</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>CID<sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>record<sp/>applies<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>CID<sp/>last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>CIDs<sp/>&lt;first&gt;..&lt;last&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx,<sp/>vy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>origin<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_gfx_font_c_i_d_widths" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_gfx_font_c_i_d_widths" kindref="compound">GfxFontCIDWidths</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>defWidth;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>char<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>defHeight;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>char<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>defVY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>origin<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_font_c_i_d_width_excep" kindref="compound">GfxFontCIDWidthExcep</ref><sp/>*exceps;<sp/></highlight><highlight class="comment">//<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nExceps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>valid<sp/>entries<sp/>in<sp/>exceps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_font_c_i_d_width_excep_v" kindref="compound">GfxFontCIDWidthExcepV</ref><sp/>*<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exceptions<sp/>for<sp/>vertical<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>excepsV;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nExcepsV;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>valid<sp/>entries<sp/>in<sp/>excepsV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFontLoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>GfxFontLocType<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>gfxFontLocEmbedded,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>embedded<sp/>in<sp/>PDF<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>gfxFontLocExternal,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>external<sp/>font<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>gfxFontLocResident<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>resident<sp/>in<sp/>PS<sp/>printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_gfx_font_loc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>GfxFontLocType<sp/>locType;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>GfxFontType<sp/>fontType;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>embFontID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>embedded<sp/>stream<sp/>obj<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocEmbedded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>file<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocExternal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PS<sp/>font<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocResident)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>TrueType<sp/>collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocExternal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*encoding;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PS<sp/>font<sp/>encoding,<sp/>only<sp/>for<sp/>16-bit<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocResident)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wMode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>mode,<sp/>only<sp/>for<sp/>16-bit<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocResident)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>substIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>font<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(if<sp/>locType<sp/>==<sp/>gfxFontLocExternal,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>and<sp/>a<sp/>Base-14<sp/>substitution<sp/>was<sp/>made)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fontFixedWidth<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fontSerif<sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fontSymbolic<sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fontItalic<sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fontBold<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_gfx_font" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Stretch<sp/>{<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>StretchNotDefined,<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>UltraCondensed,<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtraCondensed,<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Condensed,<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>SemiCondensed,<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Normal,<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>SemiExpanded,<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Expanded,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtraExpanded,<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>UltraExpanded<sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Weight<sp/>{<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>WeightNotDefined,<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>W100,<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>W200,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>W300,<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>W400,<sp/></highlight><highlight class="comment">//<sp/>Normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>W500,<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>W600,<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>W700,<sp/></highlight><highlight class="comment">//<sp/>Bold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>W800,<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>W900<sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>GfxFont<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*makeFont(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>idA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>idA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*nameA,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GfxFontType<sp/>typeA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>embFontIDA);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incRefCnt();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decRefCnt();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getTag()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>dictionary<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>*getID()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;id;<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>font<sp/>match<sp/>the<sp/>tag?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>GBool<sp/>matches(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagA)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!tag-&gt;cmp(tagA);<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>family<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getFamily()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>family;<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>stretch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>Stretch<sp/>getStretch()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stretch;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>Weight<sp/>getWeight()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weight;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>original<sp/>font<sp/>name<sp/>(ignornig<sp/>any<sp/>munging<sp/>that<sp/>might<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>done<sp/>to<sp/>map<sp/>to<sp/>a<sp/>canonical<sp/>Base-14<sp/>font<sp/>name).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>GfxFontType<sp/>getType()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type;<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isCIDFont()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>embedded<sp/>font<sp/>ID,<sp/>i.e.,<sp/>a<sp/>ref<sp/>for<sp/>the<sp/>font<sp/>file<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>there<sp/>is<sp/>no<sp/>embedded<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>GBool<sp/>getEmbeddedFontID(<ref refid="struct_ref" kindref="compound">Ref</ref><sp/>*embID)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*embID<sp/>=<sp/>embFontID;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>embFontID.num<sp/>&gt;=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalidate<sp/>an<sp/>embedded<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>there<sp/>is<sp/>no<sp/>embedded<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>GBool<sp/>invalidateEmbeddedFont()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(embFontID.num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>embFontID.num<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>PostScript<sp/>font<sp/>name<sp/>for<sp/>the<sp/>embedded<sp/>font.<sp/><sp/>Returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>if<sp/>there<sp/>is<sp/>no<sp/>embedded<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getEmbeddedFontName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>embFontName;<sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>font<sp/>descriptor<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getFlags()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags;<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>GBool<sp/>isFixedWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontFixedWidth;<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>GBool<sp/>isSerif()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontSerif;<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>GBool<sp/>isSymbolic()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontSymbolic;<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>GBool<sp/>isItalic()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontItalic;<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>GBool<sp/>isBold()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags<sp/>&amp;<sp/>fontBold;<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Unicode<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*getToUnicode()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>font<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getFontMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontMat;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>font<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*getFontBBox()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontBBox;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>ascent<sp/>and<sp/>descent<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getAscent()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ascent;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDescent()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descent;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>writing<sp/>mode<sp/>(0=horizontal,<sp/>1=vertical).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWMode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Locate<sp/>the<sp/>font<sp/>file<sp/>for<sp/>this<sp/>font.<sp/><sp/>If<sp/>&lt;ps&gt;<sp/>is<sp/>not<sp/>null,<sp/>includes<sp/>PS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>printer-resident<sp/>fonts.<sp/><sp/>Returns<sp/>NULL<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref><sp/>*locateFont(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/><ref refid="class_p_s_output_dev" kindref="compound">PSOutputDev</ref><sp/>*ps);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Locate<sp/>a<sp/>Base-14<sp/>font<sp/>file<sp/>for<sp/>a<sp/>specified<sp/>font<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref><sp/>*locateBase14Font(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*base14Name);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>an<sp/>external<sp/>or<sp/>embedded<sp/>font<sp/>file<sp/>into<sp/>a<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*readEmbFontFile(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>char<sp/>from<sp/>a<sp/>string<sp/>&lt;s&gt;<sp/>of<sp/>&lt;len&gt;<sp/>bytes,<sp/>returning<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>&lt;code&gt;,<sp/>its<sp/>Unicode<sp/>mapping<sp/>&lt;u&gt;,<sp/>its<sp/>displacement<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(&lt;dx&gt;,<sp/>&lt;dy&gt;),<sp/>and<sp/>its<sp/>origin<sp/>offset<sp/>vector<sp/>(&lt;ox&gt;,<sp/>&lt;oy&gt;).<sp/><sp/>&lt;uSize&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>available<sp/>in<sp/>&lt;u&gt;,<sp/>and<sp/>&lt;uLen&gt;<sp/>is<sp/>set<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>actually<sp/>used.<sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>char<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNextChar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>CharCode<sp/>*code,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unicode<sp/>**u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uLen,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ox,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*oy)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>font<sp/>have<sp/>a<sp/>toUnicode<sp/>map?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>GBool<sp/>hasToUnicodeCMap()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasToUnicode;<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>the<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getEncodingName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encodingName;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>AGLFN<sp/>names<sp/>of<sp/>ligatures<sp/>in<sp/>the<sp/>Standard<sp/>and<sp/>Expert<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>use<sp/>with<sp/>fonts<sp/>that<sp/>are<sp/>not<sp/>compatible<sp/>with<sp/>the<sp/>Standard<sp/>14<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>http://sourceforge.net/adobe/aglfn/wiki/AGL%20Specification/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getAlternateName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_font" kindref="compound">GfxFont</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GfxFontType<sp/>getFontType(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>*embID);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readFontDescriptor(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*readToUnicodeCMap(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*ctu);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font_loc" kindref="compound">GfxFontLoc</ref><sp/>*getExternalFont(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path,<sp/>GBool<sp/>cid);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*tag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PDF<sp/>font<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>(used<sp/>as<sp/>unique<sp/>ID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*family;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>family</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>Stretch<sp/>stretch;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>stretch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>Weight<sp/>weight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>GfxFontType<sp/>type;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>descriptor<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*embFontName;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>of<sp/>embedded<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>embFontID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ref<sp/>to<sp/>embedded<sp/>font<sp/>file<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontMat[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>matrix<sp/>(Type<sp/>3<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontBBox[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>bounding<sp/>box<sp/>(Type<sp/>3<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>missingWidth;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;default&quot;<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ascent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>height<sp/>above<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>descent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>depth<sp/>below<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refCnt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>GBool<sp/>hasToUnicode;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*encodingName;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gfx8BitFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_gfx8_bit_font" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx8_bit_font" kindref="compound">Gfx8BitFont</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="class_gfx8_bit_font" kindref="compound">Gfx8BitFont</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>idA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*nameA,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GfxFontType<sp/>typeA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>embFontIDA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNextChar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>CharCode<sp/>*code,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unicode<sp/>**u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uLen,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ox,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*oy);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>encoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**getEncoding()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enc;<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Unicode<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*getToUnicode();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>character<sp/>name<sp/>associated<sp/>with<sp/>&lt;code&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getCharName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enc[code];<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>PDF<sp/>font<sp/>specified<sp/>an<sp/>encoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>GBool<sp/>getHasEncoding()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasEncoding;<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>PDF<sp/>font<sp/>specified<sp/>MacRomanEncoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>GBool<sp/>getUsesMacRomanEnc()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usesMacRomanEnc;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>width<sp/>of<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWidth(Guchar<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>widths[c];<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>char<sp/>code-to-GID<sp/>mapping<sp/>for<sp/>the<sp/>provided<sp/>font<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>only<sp/>useful<sp/>for<sp/>TrueType<sp/>fonts.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*getCodeToGIDMap(<ref refid="class_fo_fi_true_type" kindref="compound">FoFiTrueType</ref><sp/>*ff);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Type<sp/>3<sp/>CharProc<sp/>dictionary,<sp/>or<sp/>NULL<sp/>if<sp/>none.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getCharProcs();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Type<sp/>3<sp/>CharProc<sp/>for<sp/>the<sp/>character<sp/>associated<sp/>with<sp/>&lt;code&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*getCharProc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*proc);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Type<sp/>3<sp/>Resources<sp/>dictionary,<sp/>or<sp/>NULL<sp/>if<sp/>none.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getResources();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx8_bit_font" kindref="compound">Gfx8BitFont</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_base14_font_map_entry" kindref="compound">Base14FontMapEntry</ref><sp/>*base14;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>Base-14<sp/>fonts<sp/>only;<sp/>NULL<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc[256];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>code<sp/>--&gt;<sp/>char<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>encFree[256];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boolean<sp/>for<sp/>each<sp/>char<sp/>name:<sp/>if<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>string<sp/>is<sp/>malloc&apos;ed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*ctu;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>code<sp/>--&gt;<sp/>Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>GBool<sp/>hasEncoding;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>GBool<sp/>usesMacRomanEnc;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>widths[256];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>charProcs;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>3<sp/>CharProcs<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>resources;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>3<sp/>Resources<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font" kindref="compound">GfxFont</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxCIDFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_gfx_c_i_d_font" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_c_i_d_font" kindref="compound">GfxCIDFont</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_c_i_d_font" kindref="compound">GfxCIDFont</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>idA,<sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*nameA,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GfxFontType<sp/>typeA,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>embFontIDA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isCIDFont()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNextChar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>CharCode<sp/>*code,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unicode<sp/>**u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uLen,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ox,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*oy);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>writing<sp/>mode<sp/>(0=horizontal,<sp/>1=vertical).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWMode();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>Unicode<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*getToUnicode();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>collection<sp/>name<sp/>(&lt;registry&gt;-&lt;ordering&gt;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getCollection();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>CID-to-GID<sp/>mapping<sp/>table.<sp/><sp/>These<sp/>should<sp/>only<sp/>be<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>type<sp/>is<sp/>fontCIDType2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*getCIDToGID()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cidToGID;<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCIDToGIDLen()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cidToGIDLen;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*getCodeToGIDMap(<ref refid="class_fo_fi_true_type" kindref="compound">FoFiTrueType</ref><sp/>*ff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWidth(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_gfx_c_i_d_font" kindref="compound">GfxCIDFont</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mapCodeToGID(<ref refid="class_fo_fi_true_type" kindref="compound">FoFiTrueType</ref><sp/>*ff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmapi,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Unicode<sp/>unicode,<sp/>GBool<sp/>wmode);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getWidth(CID<sp/>cid);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>width<sp/>of<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*collection;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collection<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="class_c_map" kindref="compound">CMap</ref><sp/>*cMap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>code<sp/>--&gt;<sp/>CID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="class_char_code_to_unicode" kindref="compound">CharCodeToUnicode</ref><sp/>*ctu;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CID<sp/>--&gt;<sp/>Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>GBool<sp/>ctuUsesCharCode;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true:<sp/>ctu<sp/>maps<sp/>char<sp/>code<sp/>to<sp/>Unicode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>false:<sp/>ctu<sp/>maps<sp/>CID<sp/>to<sp/>Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="struct_gfx_font_c_i_d_widths" kindref="compound">GfxFontCIDWidths</ref><sp/>widths;<sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cidToGID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CID<sp/>--&gt;<sp/>GID<sp/>mapping<sp/>(for<sp/>embedded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>TrueType<sp/>fonts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cidToGIDLen;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GfxFontDict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_gfx_font_dict" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>font<sp/>dictionary,<sp/>given<sp/>the<sp/>PDF<sp/>font<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref>(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xref,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>*fontDictRef,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*fontDict);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>~<ref refid="class_gfx_font_dict" kindref="compound">GfxFontDict</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>specified<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*lookup(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterative<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumFonts()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numFonts;<sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>*getFont(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fonts[i];<sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_font" kindref="compound">GfxFont</ref><sp/>**fonts;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFonts;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/GfxFont.h"/>
  </compounddef>
</doxygen>
