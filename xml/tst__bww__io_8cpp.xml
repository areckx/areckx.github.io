<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__bww__io_8cpp" kind="file" language="C++">
    <compoundname>tst_bww_io.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="staff_8h" local="yes">libmscore/staff.h</includes>
    <includes refid="keysig_8h" local="yes">libmscore/keysig.h</includes>
    <includes local="yes">tst__io.moc</includes>
    <incdepgraph>
      <node id="71744">
        <label>list</label>
      </node>
      <node id="71738">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="71729" relation="include">
        </childnode>
      </node>
      <node id="71757">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="71758" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
      </node>
      <node id="71740">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="71753">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
      </node>
      <node id="71767">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="71768" relation="include">
        </childnode>
      </node>
      <node id="71765">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71723" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
      </node>
      <node id="71726">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="71755">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
      </node>
      <node id="71745">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="71771">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="71768">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71726" relation="include">
        </childnode>
        <childnode refid="71729" relation="include">
        </childnode>
      </node>
      <node id="71774">
        <label>keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="71740" relation="include">
        </childnode>
      </node>
      <node id="71731">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="71735">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71736" relation="include">
        </childnode>
      </node>
      <node id="71764">
        <label>map</label>
      </node>
      <node id="71773">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71729" relation="include">
        </childnode>
      </node>
      <node id="71732">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="71723" relation="include">
        </childnode>
        <childnode refid="71733" relation="include">
        </childnode>
      </node>
      <node id="71756">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="71769">
        <label>libmscore/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71770" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71772" relation="include">
        </childnode>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71725" relation="include">
        </childnode>
      </node>
      <node id="71718">
        <label>mtest/bww/io/tst_bww_io.cpp</label>
        <link refid="tst__bww__io_8cpp"/>
        <childnode refid="71719" relation="include">
        </childnode>
        <childnode refid="71720" relation="include">
        </childnode>
        <childnode refid="71727" relation="include">
        </childnode>
        <childnode refid="71753" relation="include">
        </childnode>
        <childnode refid="71765" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71778" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
      </node>
      <node id="71746">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="71747" relation="include">
        </childnode>
      </node>
      <node id="71759">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="71723" relation="include">
        </childnode>
      </node>
      <node id="71758">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="71759" relation="include">
        </childnode>
        <childnode refid="71760" relation="include">
        </childnode>
      </node>
      <node id="71747">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="71748" relation="include">
        </childnode>
        <childnode refid="71749" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
      </node>
      <node id="71775">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="71776" relation="include">
        </childnode>
      </node>
      <node id="71766">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
      </node>
      <node id="71778">
        <label>libmscore/keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="71740" relation="include">
        </childnode>
        <childnode refid="71721" relation="include">
        </childnode>
      </node>
      <node id="71739">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="71734" relation="include">
        </childnode>
      </node>
      <node id="71720">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
      </node>
      <node id="71748">
        <label>vector</label>
      </node>
      <node id="71736">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="71722">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="71752">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="71723">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="71724" relation="include">
        </childnode>
      </node>
      <node id="71734">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="71735" relation="include">
        </childnode>
      </node>
      <node id="71730">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="71731" relation="include">
        </childnode>
      </node>
      <node id="71754">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="71761">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="71762" relation="include">
        </childnode>
        <childnode refid="71763" relation="include">
        </childnode>
      </node>
      <node id="71741">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71732" relation="include">
        </childnode>
      </node>
      <node id="71751">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
      </node>
      <node id="71721">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="71722" relation="include">
        </childnode>
        <childnode refid="71723" relation="include">
        </childnode>
        <childnode refid="71725" relation="include">
        </childnode>
        <childnode refid="71726" relation="include">
        </childnode>
      </node>
      <node id="71779">
        <label>tst__io.moc</label>
      </node>
      <node id="71743">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="71744" relation="include">
        </childnode>
      </node>
      <node id="71750">
        <label>iostream</label>
      </node>
      <node id="71770">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="71729">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="71724" relation="include">
        </childnode>
        <childnode refid="71730" relation="include">
        </childnode>
      </node>
      <node id="71777">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="71723" relation="include">
        </childnode>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71732" relation="include">
        </childnode>
        <childnode refid="71741" relation="include">
        </childnode>
      </node>
      <node id="71728">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71732" relation="include">
        </childnode>
        <childnode refid="71741" relation="include">
        </childnode>
      </node>
      <node id="71737">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="71776">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71722" relation="include">
        </childnode>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71732" relation="include">
        </childnode>
      </node>
      <node id="71760">
        <label>set</label>
      </node>
      <node id="71724">
        <label>config.h</label>
      </node>
      <node id="71749">
        <label>algorithm</label>
      </node>
      <node id="71727">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="71724" relation="include">
        </childnode>
        <childnode refid="71728" relation="include">
        </childnode>
        <childnode refid="71742" relation="include">
        </childnode>
        <childnode refid="71743" relation="include">
        </childnode>
        <childnode refid="71745" relation="include">
        </childnode>
        <childnode refid="71746" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
      </node>
      <node id="71763">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="71764" relation="include">
        </childnode>
      </node>
      <node id="71762">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="71723" relation="include">
        </childnode>
      </node>
      <node id="71725">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="71772">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71773" relation="include">
        </childnode>
      </node>
      <node id="71742">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="71738" relation="include">
        </childnode>
        <childnode refid="71729" relation="include">
        </childnode>
        <childnode refid="71732" relation="include">
        </childnode>
      </node>
      <node id="71733">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="71721" relation="include">
        </childnode>
        <childnode refid="71734" relation="include">
        </childnode>
        <childnode refid="71737" relation="include">
        </childnode>
        <childnode refid="71738" relation="include">
        </childnode>
        <childnode refid="71726" relation="include">
        </childnode>
        <childnode refid="71739" relation="include">
        </childnode>
        <childnode refid="71740" relation="include">
        </childnode>
      </node>
      <node id="71719">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_bww_i_o" prot="public">TestBwwIO</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__bww__io_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;bww/io/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/bww/io/tst_bww_io.cpp" line="30" column="9" bodyfile="mtest/bww/io/tst_bww_io.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tst__bww__io_8cpp_1a3601311e12f595f31b1f5d407a6020ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fixupScore</definition>
        <argsstring>(Score *score)</argsstring>
        <name>fixupScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/bww/io/tst_bww_io.cpp" line="87" column="1" bodyfile="mtest/bww/io/tst_bww_io.cpp" bodystart="87" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2014<sp/>Werner<sp/>Schweer<sp/>and<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>file<sp/>is<sp/>currently<sp/>unfinished.<sp/>It<sp/>does<sp/>not<sp/>yet<sp/>work<sp/>in<sp/>the<sp/>mtest<sp/>framework,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>serves<sp/>as<sp/>a<sp/>data<sp/>file<sp/>for<sp/>the<sp/>iotest<sp/>in<sp/>this<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>start<sp/>includes<sp/>required<sp/>for<sp/>fixupScore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staff_8h" kindref="compound">libmscore/staff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/keysig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>includes<sp/>required<sp/>for<sp/>fixupScore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_ms_1a772f048bd958bf708fd495e49c49aac8" kindref="member">saveMxl</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;bww/io/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestBwwIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_test_bww_i_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_bww_i_o" kindref="compound">TestBwwIO</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bwwIoTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bwwIoTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>BWW<sp/>regression<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>failing<sp/>tests<sp/>are<sp/>commented<sp/>out<sp/>and<sp/>annotated<sp/>with<sp/>the<sp/>failure<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>extract<sp/>the<sp/>list<sp/>in<sp/>a<sp/>shell<sp/>scipt<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cat<sp/>tst_bww_io.cpp<sp/>|<sp/>grep<sp/>&quot;{<sp/>&lt;test&gt;&quot;<sp/>|<sp/>awk<sp/>-F\&quot;<sp/>&apos;{print<sp/>$2}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>&lt;test&gt;<sp/>is<sp/>bwwIoTest<sp/>or<sp/>bwwIoTestRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>beams()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testBeams&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doublings()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testDoublings&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doublingsShort()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testDoublingsShort&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>duration()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testDuration&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>graces()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testGraces&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hello()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testHello&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midMeasureRepeat()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testMidMeasureRepeat&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noTimeSig1()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testNoTimeSig1&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noTimeSig2()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testNoTimeSig2&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notes()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testNotes&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>repeats()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testRepeats&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tempo120()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testTempo120&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tempo60()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testTempo60&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tieTriplets()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testTieTriplet&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triplets()<sp/>{<sp/>bwwIoTest(</highlight><highlight class="stringliteral">&quot;testTriplets&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBwwIO::initTestCase()</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>fixupScore<sp/>--<sp/>do<sp/>required<sp/>fixups<sp/>after<sp/>MusicXML<sp/>import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>see<sp/>mscore/file.cpp<sp/>MuseScore::readScore(Score*<sp/>score,<sp/>QString<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TODO:<sp/>remove<sp/>duplication<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixupScore(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;syntiState().append(SyntiParameter(&quot;soundfont&quot;,<sp/>MScore::soundFont));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;<ref refid="class_ms_1_1_score_1ae50d0b620dca99b269dea62ddcf71f5a" kindref="member">connectTies</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;rebuildMidiMapping();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setCreated(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setSaved(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref>*<sp/>st,<sp/>score-&gt;staves())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st-&gt;updateKeymap())</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;clearKeys();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track<sp/>=<sp/>staffIdx<sp/>*<sp/>VOICES;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>key1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;firstMeasure();<sp/>m;<sp/>m<sp/>=<sp/>m-&gt;nextMeasure())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m-&gt;first();<sp/>s;<sp/>s<sp/>=<sp/>s-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;element(track))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e<sp/>=<sp/>s-&gt;element(track);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;generated())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((s-&gt;subtype()<sp/>==<sp/>SegClef)<sp/>&amp;&amp;<sp/>st-&gt;updateClefList())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Clef*<sp/>clef<sp/>=<sp/>static_cast&lt;Clef*&gt;(e);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setClef(s-&gt;tick(),<sp/>clef-&gt;clefTypeList());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;segmentType()<sp/>==<sp/>Segment::Type::KeySig)<sp/>&amp;&amp;<sp/>st-&gt;updateKeymap())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*<sp/>ks<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_ms_1_1_key_sig" kindref="compound">KeySig</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>naturals<sp/>=<sp/>key1<sp/>?<sp/>key1-&gt;keySigEvent().accidentalType()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ks-&gt;setOldSig(naturals);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setKey(s-&gt;tick(),<sp/>ks-&gt;key());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1<sp/>=<sp/>ks;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sectionBreak())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st-&gt;setUpdateKeymap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++staffIdx;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;updateNotes();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IoTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>BWW<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>MusicXML<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBwwIO::IoTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IoTestRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>a<sp/>MusicXML<sp/>file,<sp/>write<sp/>to<sp/>a<sp/>new<sp/>file<sp/>and<sp/>verify<sp/>against<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestBwwIO::IoTestRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MScore::debugMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlExportBreaks<sp/>=<sp/>MusicxmlExportBreaks::MANUAL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preferences.musicxmlImportBreaks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixupScore(score);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;doLayout();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveMusicXml(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareMusicXmlScore(score,<sp/>QString(file)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">,<sp/>DIR<sp/>+<sp/>file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_ref.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_bww_i_o" kindref="compound">TestBwwIO</ref>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst__io.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="mtest/bww/io/tst_bww_io.cpp"/>
  </compounddef>
</doxygen>
