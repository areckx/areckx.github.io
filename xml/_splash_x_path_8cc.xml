<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_x_path_8cc" kind="file" language="C++">
    <compoundname>SplashXPath.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="_splash_math_8h" local="yes">SplashMath.h</includes>
    <includes refid="_splash_path_8h" local="yes">SplashPath.h</includes>
    <includes refid="_splash_x_path_8h" local="yes">SplashXPath.h</includes>
    <incdepgraph>
      <node id="92813">
        <label>thirdparty/poppler/splash/SplashXPath.cc</label>
        <link refid="_splash_x_path_8cc"/>
        <childnode refid="92814" relation="include">
        </childnode>
        <childnode refid="92815" relation="include">
        </childnode>
        <childnode refid="92816" relation="include">
        </childnode>
        <childnode refid="92817" relation="include">
        </childnode>
        <childnode refid="92818" relation="include">
        </childnode>
        <childnode refid="92821" relation="include">
        </childnode>
        <childnode refid="92825" relation="include">
        </childnode>
        <childnode refid="92826" relation="include">
        </childnode>
      </node>
      <node id="92825">
        <label>SplashPath.h</label>
        <link refid="_splash_path_8h_source"/>
        <childnode refid="92823" relation="include">
        </childnode>
      </node>
      <node id="92815">
        <label>stdlib.h</label>
      </node>
      <node id="92818">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="92819" relation="include">
        </childnode>
        <childnode refid="92820" relation="include">
        </childnode>
      </node>
      <node id="92820">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92819" relation="include">
        </childnode>
      </node>
      <node id="92816">
        <label>string.h</label>
      </node>
      <node id="92821">
        <label>SplashMath.h</label>
        <link refid="_splash_math_8h_source"/>
        <childnode refid="92820" relation="include">
        </childnode>
        <childnode refid="92822" relation="include">
        </childnode>
        <childnode refid="92823" relation="include">
        </childnode>
      </node>
      <node id="92822">
        <label>math.h</label>
      </node>
      <node id="92823">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92824" relation="include">
        </childnode>
      </node>
      <node id="92824">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92820" relation="include">
        </childnode>
      </node>
      <node id="92826">
        <label>SplashXPath.h</label>
        <link refid="_splash_x_path_8h_source"/>
        <childnode refid="92823" relation="include">
        </childnode>
      </node>
      <node id="92814">
        <label>config.h</label>
      </node>
      <node id="92817">
        <label>algorithm</label>
      </node>
      <node id="92819">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_splash_x_path_point" prot="public">SplashXPathPoint</innerclass>
    <innerclass refid="struct_splash_x_path_adjust" prot="public">SplashXPathAdjust</innerclass>
    <innerclass refid="structcmp_x_path_segs_functor" prot="public">cmpXPathSegsFunctor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashXPath.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Pawe≈Ç<sp/>Wiejacha<sp/>&lt;pawel.wiejacha@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010,<sp/>2011<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashMath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashPath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashXPath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_splash_x_path_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_x_path_point" kindref="compound">SplashXPathPoint</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_splash_x_path_adjust" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_x_path_adjust" kindref="compound">SplashXPathAdjust</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstPt,<sp/>lastPt;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>GBool<sp/>vert;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>or<sp/>horizontal<sp/>hint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x0a,<sp/>x0b,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hint<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xma,<sp/>xmb,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1a,<sp/>x1b;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x0,<sp/>x1,<sp/>xm;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjusted<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>a<sp/>point<sp/>from<sp/>user<sp/>space<sp/>to<sp/>device<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::transform(SplashCoord<sp/>*matrix,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>xi,<sp/>SplashCoord<sp/>yi,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*xo,<sp/>SplashCoord<sp/>*yo)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>m[0]<sp/>m[1]<sp/>0<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[xo<sp/>yo<sp/>1]<sp/>=<sp/>[xi<sp/>yi<sp/>1]<sp/>*<sp/><sp/>[<sp/>m[2]<sp/>m[3]<sp/>0<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>m[4]<sp/>m[5]<sp/>1<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>*xo<sp/>=<sp/>xi<sp/>*<sp/>matrix[0]<sp/>+<sp/>yi<sp/>*<sp/>matrix[2]<sp/>+<sp/>matrix[4];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>*yo<sp/>=<sp/>xi<sp/>*<sp/>matrix[1]<sp/>+<sp/>yi<sp/>*<sp/>matrix[3]<sp/>+<sp/>matrix[5];</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashXPath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">SplashXPath::SplashXPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>SplashCoord<sp/>*matrix,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>flatness,<sp/>GBool<sp/>closeSubpaths,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>adjustLines,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linePosI)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref><sp/>*hint;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_x_path_point" kindref="compound">SplashXPathPoint</ref><sp/>*pts;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_x_path_adjust" kindref="compound">SplashXPathAdjust</ref><sp/>*adjusts,<sp/>*adjust;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>x3,<sp/>y3,<sp/>xsp,<sp/>ysp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>adj0,<sp/>adj1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curSubpath,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>the<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>pts<sp/>=<sp/>(<ref refid="struct_splash_x_path_point" kindref="compound">SplashXPathPoint</ref><sp/>*)gmallocn(path-&gt;length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_x_path_point" kindref="compound">SplashXPathPoint</ref>));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>transform(matrix,<sp/>path-&gt;pts[i].x,<sp/>path-&gt;pts[i].y,<sp/>&amp;pts[i].x,<sp/>&amp;pts[i].y);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>stroke<sp/>adjustment<sp/>hints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;hints)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts<sp/>=<sp/>(<ref refid="struct_splash_x_path_adjust" kindref="compound">SplashXPathAdjust</ref><sp/>*)gmallocn(path-&gt;hintsLength,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_x_path_adjust" kindref="compound">SplashXPathAdjust</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;hintsLength;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hint<sp/>=<sp/>&amp;path-&gt;hints[i];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hint-&gt;ctrl0<sp/>+<sp/>1<sp/>&gt;=<sp/>path-&gt;length<sp/>||<sp/>hint-&gt;ctrl1<sp/>+<sp/>1<sp/>&gt;=<sp/>path-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(adjusts);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>pts[hint-&gt;ctrl0<sp/><sp/><sp/><sp/>].x;<sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pts[hint-&gt;ctrl0<sp/><sp/><sp/><sp/>].y;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pts[hint-&gt;ctrl0<sp/>+<sp/>1].x;<sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pts[hint-&gt;ctrl0<sp/>+<sp/>1].y;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>pts[hint-&gt;ctrl1<sp/><sp/><sp/><sp/>].x;<sp/><sp/><sp/><sp/>y2<sp/>=<sp/>pts[hint-&gt;ctrl1<sp/><sp/><sp/><sp/>].y;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x3<sp/>=<sp/>pts[hint-&gt;ctrl1<sp/>+<sp/>1].x;<sp/><sp/><sp/><sp/>y3<sp/>=<sp/>pts[hint-&gt;ctrl1<sp/>+<sp/>1].y;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1<sp/>&amp;&amp;<sp/>x2<sp/>==<sp/>x3)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts[i].vert<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>adj0<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>adj1<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1<sp/>&amp;&amp;<sp/>y2<sp/>==<sp/>y3)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts[i].vert<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>adj0<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>adj1<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(adjusts);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adj0<sp/>&gt;<sp/>adj1)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>adj0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>adj0<sp/>=<sp/>adj1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>adj1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x0a<sp/>=<sp/>adj0<sp/>-<sp/>0.01;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x0b<sp/>=<sp/>adj0<sp/>+<sp/>0.01;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].xma<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>(adj0<sp/>+<sp/>adj1)<sp/>-<sp/>0.01;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].xmb<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>(adj0<sp/>+<sp/>adj1)<sp/>+<sp/>0.01;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x1a<sp/>=<sp/>adj1<sp/>-<sp/>0.01;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x1b<sp/>=<sp/>adj1<sp/>+<sp/>0.01;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>both<sp/>edge<sp/>coordinates<sp/>can<sp/>result<sp/>in<sp/>lines<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>widths<sp/>(e.g.,<sp/>adj=10.1,<sp/>adj1=11.3<sp/>--&gt;<sp/>x0=10,<sp/>x1=11;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adj0=10.4,<sp/>adj1=11.6<sp/>--&gt;<sp/>x0=10,<sp/>x1=12),<sp/>but<sp/>it<sp/>has<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>benefit<sp/>of<sp/>making<sp/>adjacent<sp/>strokes/fills<sp/>line<sp/>up<sp/>without<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gaps<sp/>between<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>splashRound(adj0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>splashRound(adj1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>==<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjustLines)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adjustment<sp/>moves<sp/>thin<sp/>lines<sp/>(clip<sp/>rectangle<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>width<sp/>or<sp/>height)<sp/>out<sp/>of<sp/>clip<sp/>area,<sp/>here<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>special<sp/>adjustment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>linePosI;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x0<sp/>=<sp/>(SplashCoord)x0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].x1<sp/>=<sp/>(SplashCoord)x1<sp/>-<sp/>0.01;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].xm<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>(adjusts[i].x0<sp/>+<sp/>adjusts[i].x1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].firstPt<sp/>=<sp/>hint-&gt;firstPt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjusts[i].lastPt<sp/>=<sp/>hint-&gt;lastPt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusts<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>stroke<sp/>adjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjusts)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>adjust<sp/>=<sp/>adjusts;<sp/>i<sp/>&lt;<sp/>path-&gt;hintsLength;<sp/>++i,<sp/>++adjust)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>adjust-&gt;firstPt;<sp/>j<sp/>&lt;=<sp/>adjust-&gt;lastPt;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>strokeAdjust(adjust,<sp/>&amp;pts[j].x,<sp/>&amp;pts[j].y);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(adjusts);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>segs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>length<sp/>=<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>x0<sp/>=<sp/>y0<sp/>=<sp/>xsp<sp/>=<sp/>ysp<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>adj0<sp/>=<sp/>adj1<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>path-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>point<sp/>in<sp/>subpath<sp/>-<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathFirst)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>pts[i].x;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>pts[i].y;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsp<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curSubpath<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>curve<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathCurve)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pts[i].x;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pts[i].y;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>pts[i+1].x;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>pts[i+1].y;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>x3<sp/>=<sp/>pts[i+2].x;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>pts[i+2].y;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>addCurve(x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>x3,<sp/>y3,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flatness,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i-1]<sp/>&amp;<sp/>splashPathFirst),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i+2]<sp/>&amp;<sp/>splashPathLast),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!closeSubpaths<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i-1]<sp/>&amp;<sp/>splashPathFirst)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(path-&gt;flags[i-1]<sp/>&amp;<sp/>splashPathClosed),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!closeSubpaths<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i+2]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(path-&gt;flags[i+2]<sp/>&amp;<sp/>splashPathClosed));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x3;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>y3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>pts[i].x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>pts[i].y;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>addSegment(x0,<sp/>y0,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>a<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closeSubpaths<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i-1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(pts[i-1].x<sp/>!=<sp/>pts[curSubpath].x<sp/>||</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts[i-1].y<sp/>!=<sp/>pts[curSubpath].y))<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>addSegment(x0,<sp/>y0,<sp/>xsp,<sp/>ysp);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>gfree(pts);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>stroke<sp/>adjust<sp/>hints<sp/>to<sp/>point<sp/>&lt;pt&gt;:<sp/>(*&lt;xp&gt;,<sp/>*&lt;yp&gt;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::strokeAdjust(<ref refid="struct_splash_x_path_adjust" kindref="compound">SplashXPathAdjust</ref><sp/>*adjust,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*xp,<sp/>SplashCoord<sp/>*yp)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjust-&gt;vert)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>*xp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>adjust-&gt;x0a<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>adjust-&gt;x0b)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*xp<sp/>=<sp/>adjust-&gt;x0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>adjust-&gt;xma<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>adjust-&gt;xmb)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*xp<sp/>=<sp/>adjust-&gt;xm;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>adjust-&gt;x1a<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>adjust-&gt;x1b)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*xp<sp/>=<sp/>adjust-&gt;x1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>*yp;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>adjust-&gt;x0a<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>adjust-&gt;x0b)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*yp<sp/>=<sp/>adjust-&gt;x0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>adjust-&gt;xma<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>adjust-&gt;xmb)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*yp<sp/>=<sp/>adjust-&gt;xm;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>adjust-&gt;x1a<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>adjust-&gt;x1b)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*yp<sp/>=<sp/>adjust-&gt;x1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">SplashXPath::SplashXPath(<ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>length<sp/>=<sp/>xPath-&gt;length;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>xPath-&gt;size;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>segs<sp/>=<sp/>(<ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>*)gmallocn(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref>));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>memcpy(segs,<sp/>xPath-&gt;segs,<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref>));</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">SplashXPath::~SplashXPath()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>gfree(segs);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>space<sp/>for<sp/>&lt;nSegs&gt;<sp/>more<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::grow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSegs)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>+<sp/>nSegs<sp/>&gt;<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>length<sp/>+<sp/>nSegs)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>segs<sp/>=<sp/>(<ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>*)greallocn(segs,<sp/>size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref>));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::addCurve(SplashCoord<sp/>x0,<sp/>SplashCoord<sp/>y0,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x2,<sp/>SplashCoord<sp/>y2,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x3,<sp/>SplashCoord<sp/>y3,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>flatness,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>first,<sp/>GBool<sp/>last,<sp/>GBool<sp/>end0,<sp/>GBool<sp/>end1)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>*cx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SplashCoord[(splashMaxCurveSplits<sp/>+<sp/>1)<sp/>*<sp/>3];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>*cy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SplashCoord[(splashMaxCurveSplits<sp/>+<sp/>1)<sp/>*<sp/>3];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cNext<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[splashMaxCurveSplits<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xl0,<sp/>xl1,<sp/>xl2,<sp/>xr0,<sp/>xr1,<sp/>xr2,<sp/>xr3,<sp/>xx1,<sp/>xx2,<sp/>xh;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>yl0,<sp/>yl1,<sp/>yl2,<sp/>yr0,<sp/>yr1,<sp/>yr2,<sp/>yr3,<sp/>yy1,<sp/>yy2,<sp/>yh;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>dx,<sp/>dy,<sp/>mx,<sp/>my,<sp/>d1,<sp/>d2,<sp/>flatness2;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1,<sp/>p2,<sp/>p3;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>flatness2<sp/>=<sp/>flatness;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>flatness2<sp/>=<sp/>flatness<sp/>*<sp/>flatness;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>p1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>p2<sp/>=<sp/>splashMaxCurveSplits;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>*(cx<sp/>+<sp/>p2<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>x3;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>*(cy<sp/>+<sp/>p2<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>y3;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>*(cNext<sp/>+<sp/>p1)<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p1<sp/>&lt;<sp/>splashMaxCurveSplits)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>next<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>xl0<sp/>=<sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>xx1<sp/>=<sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>xx2<sp/>=<sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>yl0<sp/>=<sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>yy1<sp/>=<sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>yy2<sp/>=<sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>*(cNext<sp/>+<sp/>p1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>xr3<sp/>=<sp/>*(cx<sp/>+<sp/>p2<sp/>*<sp/>3<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>yr3<sp/>=<sp/>*(cy<sp/>+<sp/>p2<sp/>*<sp/>3<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>distances<sp/>from<sp/>the<sp/>control<sp/>points<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>midpoint<sp/>of<sp/>the<sp/>straight<sp/>line<sp/>(this<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>hack,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>much<sp/>faster<sp/>than<sp/>computing<sp/>the<sp/>actual<sp/>distances<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>mx<sp/>=<sp/>(xl0<sp/>+<sp/>xr3)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>my<sp/>=<sp/>(yl0<sp/>+<sp/>yr3)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>splashDist(xx1,<sp/>yy1,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>splashDist(xx2,<sp/>yy2,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>xx1<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>yy1<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>dx*dx<sp/>+<sp/>dy*dy;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>xx2<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>yy2<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>dx*dx<sp/>+<sp/>dy*dy;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>curve<sp/>is<sp/>flat<sp/>enough,<sp/>or<sp/>no<sp/>more<sp/>subdivisions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowed,<sp/>add<sp/>the<sp/>straight<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p2<sp/>-<sp/>p1<sp/>==<sp/>1<sp/>||<sp/>(d1<sp/>&lt;=<sp/>flatness2<sp/>&amp;&amp;<sp/>d2<sp/>&lt;=<sp/>flatness2))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addSegment(xl0,<sp/>yl0,<sp/>xr3,<sp/>yr3);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>subdivide<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl1<sp/>=<sp/>(xl0<sp/>+<sp/>xx1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yl1<sp/>=<sp/>(yl0<sp/>+<sp/>yy1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xh<sp/>=<sp/>(xx1<sp/>+<sp/>xx2)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yh<sp/>=<sp/>(yy1<sp/>+<sp/>yy2)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl2<sp/>=<sp/>(xl1<sp/>+<sp/>xh)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yl2<sp/>=<sp/>(yl1<sp/>+<sp/>yh)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr2<sp/>=<sp/>(xx2<sp/>+<sp/>xr3)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr2<sp/>=<sp/>(yy2<sp/>+<sp/>yr3)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr1<sp/>=<sp/>(xh<sp/>+<sp/>xr2)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr1<sp/>=<sp/>(yh<sp/>+<sp/>yr2)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr0<sp/>=<sp/>(xl2<sp/>+<sp/>xr1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr0<sp/>=<sp/>(yl2<sp/>+<sp/>yr1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>new<sp/>subdivision<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/>(p1<sp/>+<sp/>p2)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>xl1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cx<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>xl2;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>yl1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cy<sp/>+<sp/>p1<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>yl2;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cNext<sp/>+<sp/>p1)<sp/>=<sp/>p3;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cx<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>xr0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cx<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>xr1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cx<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>xr2;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cy<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>0)<sp/>=<sp/>yr0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cy<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>1)<sp/>=<sp/>yr1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cy<sp/>+<sp/>p3<sp/>*<sp/>3<sp/>+<sp/>2)<sp/>=<sp/>yr2;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(cNext<sp/>+<sp/>p3)<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>cx;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>cy;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>cNext;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::addSegment(SplashCoord<sp/>x0,<sp/>SplashCoord<sp/>y0,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>grow(1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>segs[length].x0<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>segs[length].y0<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>segs[length].x1<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>segs[length].y1<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>segs[length].flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>==<sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].dxdy<sp/>=<sp/>segs[length].dydx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathHoriz;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>==<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathVert;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>==<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].dxdy<sp/>=<sp/>segs[length].dydx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathVert;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FixedPoint::divCheck(x1<sp/>-<sp/>x0,<sp/>y1<sp/>-<sp/>y0,<sp/>&amp;segs[length].dxdy))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[length].dydx<sp/>=<sp/>(SplashCoord)1<sp/>/<sp/>segs[length].dxdy;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[length].dxdy<sp/>=<sp/>segs[length].dydx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(x1<sp/>-<sp/>x0)<sp/>&gt;<sp/>splashAbs(y1<sp/>-<sp/>y0))<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathHoriz;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathVert;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].dxdy<sp/>=<sp/>(x1<sp/>-<sp/>x0)<sp/>/<sp/>(y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].dydx<sp/>=<sp/>(SplashCoord)1<sp/>/<sp/>segs[length].dxdy;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>segs[length].flags<sp/>|=<sp/>splashXPathFlip;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="structcmp_x_path_segs_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcmp_x_path_segs_functor" kindref="compound">cmpXPathSegsFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>&amp;seg0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>&amp;seg1)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>SplashCoord<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg0.flags<sp/>&amp;<sp/>splashXPathFlip)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>seg0.x1;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>seg0.y1;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>seg0.x0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>seg0.y0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg1.flags<sp/>&amp;<sp/>splashXPathFlip)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>seg1.x1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>seg1.y1;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>seg1.x0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>seg1.y0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y0<sp/>!=<sp/>y1)<sp/>?<sp/>(y0<sp/>&lt;<sp/>y1)<sp/>:<sp/>(x0<sp/>&lt;<sp/>x1);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal">};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::aaScale()<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>seg<sp/>=<sp/>segs;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i,<sp/>++seg)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;x0<sp/>*=<sp/>splashAASize;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;y0<sp/>*=<sp/>splashAASize;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;x1<sp/>*=<sp/>splashAASize;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>seg-&gt;y1<sp/>*=<sp/>splashAASize;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashXPath::sort()<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>std::sort(segs,<sp/>segs<sp/>+<sp/>length,<sp/><ref refid="structcmp_x_path_segs_functor" kindref="compound">cmpXPathSegsFunctor</ref>());</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/SplashXPath.cc"/>
  </compounddef>
</doxygen>
