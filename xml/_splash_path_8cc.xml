<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_path_8cc" kind="file" language="C++">
    <compoundname>SplashPath.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="_splash_error_codes_8h" local="yes">SplashErrorCodes.h</includes>
    <includes refid="_splash_path_8h" local="yes">SplashPath.h</includes>
    <incdepgraph>
      <node id="92653">
        <label>SplashErrorCodes.h</label>
        <link refid="_splash_error_codes_8h_source"/>
      </node>
      <node id="92654">
        <label>SplashPath.h</label>
        <link refid="_splash_path_8h_source"/>
        <childnode refid="92655" relation="include">
        </childnode>
      </node>
      <node id="92650">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="92651" relation="include">
        </childnode>
        <childnode refid="92652" relation="include">
        </childnode>
      </node>
      <node id="92652">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92651" relation="include">
        </childnode>
      </node>
      <node id="92649">
        <label>string.h</label>
      </node>
      <node id="92647">
        <label>thirdparty/poppler/splash/SplashPath.cc</label>
        <link refid="_splash_path_8cc"/>
        <childnode refid="92648" relation="include">
        </childnode>
        <childnode refid="92649" relation="include">
        </childnode>
        <childnode refid="92650" relation="include">
        </childnode>
        <childnode refid="92653" relation="include">
        </childnode>
        <childnode refid="92654" relation="include">
        </childnode>
      </node>
      <node id="92655">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92656" relation="include">
        </childnode>
      </node>
      <node id="92656">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92652" relation="include">
        </childnode>
      </node>
      <node id="92648">
        <label>config.h</label>
      </node>
      <node id="92651">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashPath.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashErrorCodes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashPath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashPath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>path<sp/>can<sp/>be<sp/>in<sp/>three<sp/>possible<sp/>states:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>no<sp/>current<sp/>point<sp/>--<sp/>zero<sp/>or<sp/>more<sp/>finished<sp/>subpaths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>[curSubpath<sp/>==<sp/>length]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>one<sp/>point<sp/>in<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>[curSubpath<sp/>==<sp/>length<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>open<sp/>subpath<sp/>with<sp/>two<sp/>or<sp/>more<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>[curSubpath<sp/>&lt;<sp/>length<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">SplashPath::SplashPath()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>pts<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>flags<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>length<sp/>=<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>hints<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>hintsLength<sp/>=<sp/>hintsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">SplashPath::SplashPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>length<sp/>=<sp/>path-&gt;length;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>path-&gt;size;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>pts<sp/>=<sp/>(<ref refid="struct_splash_path_point" kindref="compound">SplashPathPoint</ref><sp/>*)gmallocn(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_point" kindref="compound">SplashPathPoint</ref>));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>flags<sp/>=<sp/>(Guchar<sp/>*)gmallocn(size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guchar));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>memcpy(pts,<sp/>path-&gt;pts,<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_point" kindref="compound">SplashPathPoint</ref>));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>memcpy(flags,<sp/>path-&gt;flags,<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guchar));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>path-&gt;curSubpath;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;hints)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>hintsLength<sp/>=<sp/>hintsSize<sp/>=<sp/>path-&gt;hintsLength;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>hints<sp/>=<sp/>(<ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref><sp/>*)gmallocn(hintsSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hints,<sp/>path-&gt;hints,<sp/>hintsLength<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref>));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>hints<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">SplashPath::~SplashPath()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>gfree(pts);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>gfree(flags);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>gfree(hints);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>space<sp/>for<sp/>&lt;nPts&gt;<sp/>more<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashPath::grow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPts)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>+<sp/>nPts<sp/>&gt;<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>length<sp/>+<sp/>nPts)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>pts<sp/>=<sp/>(<ref refid="struct_splash_path_point" kindref="compound">SplashPathPoint</ref><sp/>*)greallocn(pts,<sp/>size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_point" kindref="compound">SplashPathPoint</ref>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>(Guchar<sp/>*)greallocn(flags,<sp/>size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guchar));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashPath::append(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>length<sp/>+<sp/>path-&gt;curSubpath;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>grow(path-&gt;length);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pts[length]<sp/>=<sp/>path-&gt;pts[i];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>flags[length]<sp/>=<sp/>path-&gt;flags[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">SplashError<sp/>SplashPath::moveTo(SplashCoord<sp/>x,<sp/>SplashCoord<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onePointSubpath())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBogusPath;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>grow(1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>pts[length].x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>pts[length].y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>flags[length]<sp/>=<sp/>splashPathFirst<sp/>|<sp/>splashPathLast;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>length++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">SplashError<sp/>SplashPath::lineTo(SplashCoord<sp/>x,<sp/>SplashCoord<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noCurrentPoint())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrNoCurPt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>flags[length-1]<sp/>&amp;=<sp/>~splashPathLast;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>grow(1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>pts[length].x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pts[length].y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>flags[length]<sp/>=<sp/>splashPathLast;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">SplashError<sp/>SplashPath::curveTo(SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x2,<sp/>SplashCoord<sp/>y2,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x3,<sp/>SplashCoord<sp/>y3)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noCurrentPoint())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrNoCurPt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>flags[length-1]<sp/>&amp;=<sp/>~splashPathLast;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>grow(3);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>pts[length].x<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>pts[length].y<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>flags[length]<sp/>=<sp/>splashPathCurve;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>pts[length].x<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>pts[length].y<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>flags[length]<sp/>=<sp/>splashPathCurve;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>pts[length].x<sp/>=<sp/>x3;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>pts[length].y<sp/>=<sp/>y3;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>flags[length]<sp/>=<sp/>splashPathLast;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">SplashError<sp/>SplashPath::close(GBool<sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noCurrentPoint())<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrNoCurPt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(force<sp/>||</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curSubpath<sp/>==<sp/>length<sp/>-<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pts[length<sp/>-<sp/>1].x<sp/>!=<sp/>pts[curSubpath].x<sp/>||</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pts[length<sp/>-<sp/>1].y<sp/>!=<sp/>pts[curSubpath].y)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>lineTo(pts[curSubpath].x,<sp/>pts[curSubpath].y);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>flags[curSubpath]<sp/>|=<sp/>splashPathClosed;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>flags[length<sp/>-<sp/>1]<sp/>|=<sp/>splashPathClosed;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>curSubpath<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashPath::addStrokeAdjustHint(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctrl0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctrl1,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstPt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastPt)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hintsLength<sp/>==<sp/>hintsSize)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>hintsSize<sp/>=<sp/>hintsLength<sp/>?<sp/>2<sp/>*<sp/>hintsLength<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>hints<sp/>=<sp/>(<ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref><sp/>*)greallocn(hints,<sp/>hintsSize,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_splash_path_hint" kindref="compound">SplashPathHint</ref>));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>hints[hintsLength].ctrl0<sp/>=<sp/>ctrl0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>hints[hintsLength].ctrl1<sp/>=<sp/>ctrl1;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>hints[hintsLength].firstPt<sp/>=<sp/>firstPt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>hints[hintsLength].lastPt<sp/>=<sp/>lastPt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>++hintsLength;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashPath::offset(SplashCoord<sp/>dx,<sp/>SplashCoord<sp/>dy)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>pts[i].x<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>pts[i].y<sp/>+=<sp/>dy;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">GBool<sp/>SplashPath::getCurPt(SplashCoord<sp/>*x,<sp/>SplashCoord<sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noCurrentPoint())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>*x<sp/>=<sp/>pts[length<sp/>-<sp/>1].x;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>*y<sp/>=<sp/>pts[length<sp/>-<sp/>1].y;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/SplashPath.cc"/>
  </compounddef>
</doxygen>
