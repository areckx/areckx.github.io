<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file" kind="class" language="C++" prot="public">
    <compoundname>QtLP_Private::QtLP_Private::QtLockedFile</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QFile</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3" prot="public" static="no">
        <name>LockMode</name>
        <enumvalue id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a37c320f726e7d464ae4367d816e901f2" prot="public">
          <name>NoLock</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a113b8b56a37b4110fc0b1628e7ff2097" prot="public">
          <name>ReadLock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a1442e447bf3215875f30388377c28678" prot="public">
          <name>WriteLock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="71" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ad4e2937b977c2a43e6c574c662ba77e2" prot="private" static="no" mutable="no">
        <type>LockMode</type>
        <definition>LockMode QtLP_Private::QtLP_Private::QtLockedFile::m_lock_mode</definition>
        <argsstring></argsstring>
        <name>m_lock_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="95" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a69bf1d82b1ca46f97466634d8f9587aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtLockedFile::QtLockedFile</definition>
        <argsstring>()</argsstring>
        <name>QtLockedFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an unlocked <emphasis><ref refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file" kindref="compound">QtLockedFile</ref></emphasis> object. This constructor behaves in the same way as <emphasis>QFile::QFile()</emphasis>.</para><para><simplesect kind="see"><para>QFile::QFile() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="73" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="83" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a8b7a228ae02dca4bb99743219d0cdb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtLockedFile::QtLockedFile</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>QtLockedFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an unlocked <ref refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file" kindref="compound">QtLockedFile</ref> object with file <emphasis>name</emphasis>. This constructor behaves in the same way as <emphasis>QFile::QFile</emphasis>(const QString&amp;).</para><para><simplesect kind="see"><para>QFile::QFile() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="74" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a6faef932e3ddca3966fa6ca11ff27ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtLP_Private::QtLP_Private::QtLockedFile::~QtLockedFile</definition>
        <argsstring>()</argsstring>
        <name>~QtLockedFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a2e81bbaa7b1aaa83cf79284e66dbad79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtLockedFile::open</definition>
        <argsstring>(OpenMode mode)</argsstring>
        <name>open</name>
        <param>
          <type>OpenMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opens the file in OpenMode <emphasis>mode</emphasis>.</para><para>This is identical to QFile::open(), with the one exception that the Truncate mode flag is disallowed. Truncation would conflict with the advisory file locking, since the file would be modified before the write lock is obtained. If truncation is required, use resize(0) after obtaining the write lock.</para><para>Returns true if successful; otherwise false.</para><para><simplesect kind="see"><para>QFile::open(), QFile::resize() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="77" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a140f1491633ecc2b774062e81f636785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtLP_Private::QtLP_Private::QtLockedFile::lock</definition>
        <argsstring>(LockMode mode, bool block=true)</argsstring>
        <name>lock</name>
        <param>
          <type>LockMode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>block</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a42559844a9a94c702602748cd1280791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtLP_Private::QtLP_Private::QtLockedFile::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0800b8ae9f4d268fe6968b9075f64bb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtLockedFile::isLocked</definition>
        <argsstring>() const</argsstring>
        <name>isLocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <emphasis>true</emphasis> if this object has a in read or write lock; otherwise returns <emphasis>false</emphasis>.</para><para><simplesect kind="see"><para><ref refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0ae096d85cb722b1563521ad2b6dbde2" kindref="member">lockMode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="81" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0ae096d85cb722b1563521ad2b6dbde2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LockMode</type>
        <definition>QtLockedFile::LockMode QtLockedFile::lockMode</definition>
        <argsstring>() const</argsstring>
        <name>lockMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the type of lock currently held by this object, or <emphasis>QtLockedFile::NoLock</emphasis>.</para><para><simplesect kind="see"><para><ref refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0800b8ae9f4d268fe6968b9075f64bb3" kindref="member">isLocked()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtlockedfile.h" line="82" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14071">
        <label>QtLP_Private::QtLP_Private::QtLockedFile</label>
        <link refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file"/>
        <childnode refid="14072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14072">
        <label>QFile</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14073">
        <label>QtLP_Private::QtLP_Private::QtLockedFile</label>
        <link refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file"/>
        <childnode refid="14074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14074">
        <label>QFile</label>
      </node>
    </collaborationgraph>
    <location file="thirdparty/singleapp/src/qtlockedfile.h" line="69" column="1" bodyfile="thirdparty/singleapp/src/qtlocalpeer.cpp" bodystart="68" bodyend="96"/>
    <listofallmembers>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0800b8ae9f4d268fe6968b9075f64bb3" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>isLocked</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a140f1491633ecc2b774062e81f636785" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>lock</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>LockMode</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a0ae096d85cb722b1563521ad2b6dbde2" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>lockMode</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ad4e2937b977c2a43e6c574c662ba77e2" prot="private" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>m_lock_mode</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a37c320f726e7d464ae4367d816e901f2" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>NoLock</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a2e81bbaa7b1aaa83cf79284e66dbad79" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>open</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a69bf1d82b1ca46f97466634d8f9587aa" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>QtLockedFile</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a8b7a228ae02dca4bb99743219d0cdb7b" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>QtLockedFile</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a113b8b56a37b4110fc0b1628e7ff2097" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>ReadLock</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a42559844a9a94c702602748cd1280791" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>unlock</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1ac8e6aeffe078d740e4ece31e18ad31a3a1442e447bf3215875f30388377c28678" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>WriteLock</name></member>
      <member refid="class_qt_l_p___private_1_1_qt_l_p___private_1_1_qt_locked_file_1a6faef932e3ddca3966fa6ca11ff27ad6" prot="public" virt="non-virtual"><scope>QtLP_Private::QtLP_Private::QtLockedFile</scope><name>~QtLockedFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
