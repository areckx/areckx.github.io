<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_struct_element" kind="class" language="C++" prot="public">
    <compoundname>StructElement</compoundname>
    <innerclass refid="struct_struct_element_1_1_content_data" prot="private">StructElement::ContentData</innerclass>
    <innerclass refid="struct_struct_element_1_1_struct_data" prot="private">StructElement::StructData</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67afa555aa0f175868cf76085e3c59b6d68" prot="public">
          <name>Unknown</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a45df1a2ea3e9c7d17bccd68977a3a723" prot="public">
          <name>MCID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aef58ef3e555ff0706107cdfc59f4d93a" prot="public">
          <name>OBJR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa6f421fc55650b475fb2f593460d9125" prot="public">
          <name>Document</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8b6191b8bcc2ee343f8326e90e1084d3" prot="public">
          <name>Part</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a1126e89d79951ce4be6a58e7e3033c58" prot="public">
          <name>Art</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2c72bcc0fca2f7a7c3a600f19cc81f43" prot="public">
          <name>Sect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2242941ad63d7a82674e3159cb223530" prot="public">
          <name>Div</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ab4ee5227ac851470b7d134e531cc766d" prot="public">
          <name>Span</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a74563f7f9a5955d13b7ec4f1e5c93ddb" prot="public">
          <name>Quote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a4fe62988be50ca4ef45993233e495f85" prot="public">
          <name>Note</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8d030c92679c697ca90e23c6aaa9a4ff" prot="public">
          <name>Reference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8bb9a69aa3e708869f67e55398432555" prot="public">
          <name>BibEntry</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa68fbaf367885327af6a49dc41e5b2de" prot="public">
          <name>Code</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a0755afea1f9b5ea63be08d019f47c433" prot="public">
          <name>Link</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a7ff028f8facf455b373b4bcbfb6bf743" prot="public">
          <name>Annot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aafa5f3a126955d982d0dfe11d33782bd" prot="public">
          <name>BlockQuote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a3331c3d018ce553870095f3291727eff" prot="public">
          <name>Caption</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ad0c3256440edccf69b6bcff4ff305fb7" prot="public">
          <name>NonStruct</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a21bbd52eeefae8df072404a62507eb57" prot="public">
          <name>TOC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a3e0634b15d807aabfeed89cb136960f7" prot="public">
          <name>TOCI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67afedac8c28c806fc1f7da15d054083060" prot="public">
          <name>Index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa7dda0ffc60e1ecefbcd8e3b8b818422" prot="public">
          <name>Private</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a0919246ac07623a8d9938332f9b497f4" prot="public">
          <name>P</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a5715d27fb53df06bb87e6679a24620ce" prot="public">
          <name>H</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a7fe47cf55818bd5b125ba7e969f5dd4a" prot="public">
          <name>H1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ad8d056afdad0a70f102a142f65b4e23c" prot="public">
          <name>H2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a54fcd07a3346551a187d9e00d675b4b7" prot="public">
          <name>H3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8995dd0ef6ccebdff7415408cfc8c261" prot="public">
          <name>H4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a5544523a5d895803beaeb995eb3e8d90" prot="public">
          <name>H5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ab1cf5967e8b505b5fd9acf9eb0795b59" prot="public">
          <name>H6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af7d13f283dcac4c6428ec78c28087fc6" prot="public">
          <name>L</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aedb98bb3507f92229408b929b9029f8b" prot="public">
          <name>LI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a53f5e3c03b38722a1cec1194e4867fa4" prot="public">
          <name>Lbl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aead9f42b4d569d6c5d293d652640cf8b" prot="public">
          <name>LBody</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a754ab025d685fb1dcaa6349339301795" prot="public">
          <name>Table</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a9d35275e7760a81c4862e8b430db3142" prot="public">
          <name>TR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a14abfd151d36c2206dc583f2064947c0" prot="public">
          <name>TH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a47101c7403e0575241e9a5cb838ded04" prot="public">
          <name>TD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a121aec2cf7d55a0f84e66a904da07ef1" prot="public">
          <name>THead</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a1efdcfaad5750f9761b2160b8a4aee48" prot="public">
          <name>TFoot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ac78c2d33517c03f0c7a290de8f8e46fe" prot="public">
          <name>TBody</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a72040f55bcca2040baaa225e9c22a540" prot="public">
          <name>Ruby</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8b95b40d3da61b7cf054cacec35001cb" prot="public">
          <name>RB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af1b539868a7a17ad2af430889b72722f" prot="public">
          <name>RT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a478607f48be809294360a264992b4ef7" prot="public">
          <name>RP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aba9ff86e44824b8fc7e06180aa8903c6" prot="public">
          <name>Warichu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a60e7d63cd1a5676aeaf9b1d936ebc273" prot="public">
          <name>WT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af08d198661ad60ae00530dca5f130ff8" prot="public">
          <name>WP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a9224008233781f5e9dbc0550eec50863" prot="public">
          <name>Figure</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a649d068ddb7e5dff423bfce993fe08d8" prot="public">
          <name>Formula</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2a5ad953b3924ee283bafb43d69ff836" prot="public">
          <name>Form</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="128" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="128" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_struct_element_1a64c370e631ad6ef64f78f1ee283c301f" prot="private" static="no">
        <type>std::vector&lt; <ref refid="class_attribute" kindref="compound">Attribute</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Attribute*&gt; StructElement::AttrPtrArray</definition>
        <argsstring></argsstring>
        <name>AttrPtrArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="256" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_struct_element_1a1547b64877bb589b0aa51c0b3b2afad2" prot="private" static="no">
        <type>std::vector&lt; <ref refid="class_struct_element" kindref="compound">StructElement</ref> * &gt;</type>
        <definition>typedef std::vector&lt;StructElement*&gt; StructElement::ElemPtrArray</definition>
        <argsstring></argsstring>
        <name>ElemPtrArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="257" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_struct_element_1af4141d39c26e0640186c5540ab2f701a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_ref" kindref="compound">Ref</ref></type>
        <definition>const Ref StructElement::InvalidRef</definition>
        <argsstring></argsstring>
        <name>InvalidRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="152" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_struct_element_1a7ec7fffdc3f20dc0618871bf05f8d2f8" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type StructElement::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="287" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_struct_element_1acf8388898fa78cedc09f1ab43351d7fe" prot="private" static="no" mutable="no">
        <type><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref> *</type>
        <definition>StructTreeRoot* StructElement::treeRoot</definition>
        <argsstring></argsstring>
        <name>treeRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="288" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_struct_element_1a0fe5f296c692307188f55592c017f69d" prot="private" static="no" mutable="no">
        <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
        <definition>StructElement* StructElement::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="289" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_struct_element_1a9b32e9a392e38c4cebadf2c871c179f4" prot="private" static="no" mutable="yes">
        <type><ref refid="class_object" kindref="compound">Object</ref></type>
        <definition>Object StructElement::pageRef</definition>
        <argsstring></argsstring>
        <name>pageRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="290" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_struct_element_1ac06b1d060e72f797e14db426b9f5c201" prot="private" static="no" mutable="no">
        <type>union StructElement::@134</type>
        <definition>union StructElement::@134 StructElement::@135</definition>
        <argsstring></argsstring>
        <name>@135</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="295" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_struct_element_1a5392bab6df62f2be00c75024f22ab89d" prot="public" static="no" mutable="no">
        <type>StructData *</type>
        <definition>StructData* StructElement::s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="293" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_struct_element_1aa16060b81604f6a1af57a5c706478ea0" prot="public" static="no" mutable="no">
        <type>ContentData *</type>
        <definition>ContentData* StructElement::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="294" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_struct_element_1a112cde3e1246dc716205724dfa77c117" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class StructTreeRoot</definition>
        <argsstring></argsstring>
        <name>StructTreeRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="306" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_struct_element_1af3757e58eab4064ce0a7c17f3fd1d5d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * StructElement::getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="154" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="961" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a47554b1c91d5a407dde2b72c5e02e11d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type StructElement::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="155" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a47c8dde2cf24c762f24e8a0a44c207ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isOk</definition>
        <argsstring>() const</argsstring>
        <name>isOk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="156" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a86ddb8d787ab2bd8850945cebebe2227" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isBlock</definition>
        <argsstring>() const</argsstring>
        <name>isBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="157" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="925" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a6a6c8a5bd0321fdaa02b4212e5b131f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isInline</definition>
        <argsstring>() const</argsstring>
        <name>isInline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="158" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="931" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ac43103230177fbbe9c55463ec1f98218" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isGrouping</definition>
        <argsstring>() const</argsstring>
        <name>isGrouping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="159" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="937" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a9c4e8ad57ebcd71c64d4919b09f56fb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isContent</definition>
        <argsstring>() const</argsstring>
        <name>isContent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="161" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a9debc5e5796e9592d168f4c9d63f938a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::isObjectRef</definition>
        <argsstring>() const</argsstring>
        <name>isObjectRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="162" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a917548a320a3aa077a3ff326f661a3af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int StructElement::getMCID</definition>
        <argsstring>() const</argsstring>
        <name>getMCID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="164" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a49771bcb04f49cc5f9a076c4809c2fc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_ref" kindref="compound">Ref</ref></type>
        <definition>Ref StructElement::getObjectRef</definition>
        <argsstring>() const</argsstring>
        <name>getObjectRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="165" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a4895c1d6f94b68972a4711a9a8b5fca7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_ref" kindref="compound">Ref</ref></type>
        <definition>Ref StructElement::getParentRef</definition>
        <argsstring>()</argsstring>
        <name>getParentRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="166" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a996fb595d1cfcbb467f4e23b8277ec96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool StructElement::hasPageRef</definition>
        <argsstring>() const</argsstring>
        <name>hasPageRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="167" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="943" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a5ded9ca6e6030d9826e5a6671477a5cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>bool StructElement::getPageRef</definition>
        <argsstring>(Ref &amp;ref) const</argsstring>
        <name>getPageRef</name>
        <param>
          <type><ref refid="struct_ref" kindref="compound">Ref</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="168" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="948" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a4332521259e04478ba33b11ae3766d19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref> *</type>
        <definition>StructTreeRoot* StructElement::getStructTreeRoot</definition>
        <argsstring>()</argsstring>
        <name>getStructTreeRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="169" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1acc21108332bc3398470b5b3abcfce015" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="172" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a26f18e1d33f8e1ee0e838282a2b7e6b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getID</definition>
        <argsstring>()</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="173" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a34bef6337229b5a6b1b3d50493404d16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getLanguage</definition>
        <argsstring>()</argsstring>
        <name>getLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="176" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1aadf761c1ee9f3e526afff6a9a9953566" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getLanguage</definition>
        <argsstring>() const</argsstring>
        <name>getLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="180" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a6ec7f98688e113246fda85f8114af868" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Guint</type>
        <definition>Guint StructElement::getRevision</definition>
        <argsstring>() const</argsstring>
        <name>getRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="186" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1aced5f845ceaee30b50057b182fe9d8e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::setRevision</definition>
        <argsstring>(Guint revision)</argsstring>
        <name>setRevision</name>
        <param>
          <type>Guint</type>
          <declname>revision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="187" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a4bdb5156dc0f902eca5f75b1940707cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getTitle</definition>
        <argsstring>() const</argsstring>
        <name>getTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="190" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ae0ac8d1cd929a933bbde89122f941813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getTitle</definition>
        <argsstring>()</argsstring>
        <name>getTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="191" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ab31433f225bc18f842eafcfa505222a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getExpandedAbbr</definition>
        <argsstring>() const</argsstring>
        <name>getExpandedAbbr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="194" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a66b352883a8daafcef1b13e87fb0b8bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getExpandedAbbr</definition>
        <argsstring>()</argsstring>
        <name>getExpandedAbbr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="195" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a10adc57f1ac941999f80ad3ab44b5ff1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned StructElement::getNumChildren</definition>
        <argsstring>() const</argsstring>
        <name>getNumChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="197" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a95ec8b377906bf8f76b04c2e9feaa52c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
        <definition>const StructElement* StructElement::getChild</definition>
        <argsstring>(int i) const</argsstring>
        <name>getChild</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="198" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a24b62006829a97512b6de6c329942197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
        <definition>StructElement* StructElement::getChild</definition>
        <argsstring>(int i)</argsstring>
        <name>getChild</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="199" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a4929f9ae4d5c6e87cd7bae80246fdb88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::appendChild</definition>
        <argsstring>(StructElement *element)</argsstring>
        <name>appendChild</name>
        <param>
          <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="201" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a708d1991cc0716c2a86c9e8b4a91b2a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned StructElement::getNumAttributes</definition>
        <argsstring>() const</argsstring>
        <name>getNumAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="207" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a8ad9339e4232f97788240948aec9b507" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_attribute" kindref="compound">Attribute</ref> *</type>
        <definition>const Attribute* StructElement::getAttribute</definition>
        <argsstring>(int i) const</argsstring>
        <name>getAttribute</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="208" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a18a195231b263cca68acbfe7db4d3353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_attribute" kindref="compound">Attribute</ref> *</type>
        <definition>Attribute* StructElement::getAttribute</definition>
        <argsstring>(int i)</argsstring>
        <name>getAttribute</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="209" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a756a26ab8231d119bee3ba9bc0ed68d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::appendAttribute</definition>
        <argsstring>(Attribute *attribute)</argsstring>
        <name>appendAttribute</name>
        <param>
          <type><ref refid="class_attribute" kindref="compound">Attribute</ref> *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="211" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a6480fa33ef8f3cfb9c4b59c40266ff6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_attribute" kindref="compound">Attribute</ref> *</type>
        <definition>const Attribute * StructElement::findAttribute</definition>
        <argsstring>(Attribute::Type attributeType, GBool inherit=gFalse, Attribute::Owner owner=Attribute::UnknownOwner) const</argsstring>
        <name>findAttribute</name>
        <param>
          <type>Attribute::Type</type>
          <declname>attributeType</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>inherit</declname>
          <defval>gFalse</defval>
        </param>
        <param>
          <type>Attribute::Owner</type>
          <declname>owner</declname>
          <defval>Attribute::UnknownOwner</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="217" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="966" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a7cdf351fb918e192d5bcf90e5bf6e8e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getAltText</definition>
        <argsstring>() const</argsstring>
        <name>getAltText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="220" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ab1865d9d001ac4a001c5baf1178b7399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getAltText</definition>
        <argsstring>()</argsstring>
        <name>getAltText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="221" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a7d60f58d5f9116970f9cc235673fc7e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>const GooString* StructElement::getActualText</definition>
        <argsstring>() const</argsstring>
        <name>getActualText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="223" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a642c8c96592304b5874a086fafed2f76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getActualText</definition>
        <argsstring>()</argsstring>
        <name>getActualText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="224" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ac0452235ae3a34d4bcfa9b81e79f3c8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* StructElement::getText</definition>
        <argsstring>(GBool recursive=gTrue) const</argsstring>
        <name>getText</name>
        <param>
          <type>GBool</type>
          <declname>recursive</declname>
          <defval>gTrue</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="239" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a87b41a0fd2758c218c868f994d0f257d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const TextSpanArray</type>
        <definition>const TextSpanArray StructElement::getTextSpans</definition>
        <argsstring>() const</argsstring>
        <name>getTextSpans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="243" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="243" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1aabb9d9645ec4c2ec29ae54d9196fcc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StructElement::~StructElement</definition>
        <argsstring>()</argsstring>
        <name>~StructElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="250" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="916" bodyend="923"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_struct_element_1aba9112507e707be95afd7aaec08213fa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString * StructElement::appendSubTreeText</definition>
        <argsstring>(GooString *string, GBool recursive) const</argsstring>
        <name>appendSubTreeText</name>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>recursive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="253" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1013" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a9f66fecee294bd44afb43623be7ca069" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const TextSpanArray &amp;</type>
        <definition>const TextSpanArray &amp; StructElement::getTextSpansInternal</definition>
        <argsstring>(MarkedContentOutputDev &amp;mcdev) const</argsstring>
        <name>getTextSpansInternal</name>
        <param>
          <type><ref refid="class_marked_content_output_dev" kindref="compound">MarkedContentOutputDev</ref> &amp;</type>
          <declname>mcdev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="254" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1041" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a1ee516d3f8c610e56977b2f45376d1ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StructElement::StructElement</definition>
        <argsstring>(Dict *elementDict, StructTreeRoot *treeRootA, StructElement *parentA, std::set&lt; int &gt; &amp;seen)</argsstring>
        <name>StructElement</name>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>elementDict</declname>
        </param>
        <param>
          <type><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref> *</type>
          <declname>treeRootA</declname>
        </param>
        <param>
          <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
          <declname>parentA</declname>
        </param>
        <param>
          <type>std::set&lt; int &gt; &amp;</type>
          <declname>seen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="297" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="880" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1adcd0d4edcd6570482a3db3e1dadd761b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StructElement::StructElement</definition>
        <argsstring>(int mcid, StructTreeRoot *treeRootA, StructElement *parentA)</argsstring>
        <name>StructElement</name>
        <param>
          <type>int</type>
          <declname>mcid</declname>
        </param>
        <param>
          <type><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref> *</type>
          <declname>treeRootA</declname>
        </param>
        <param>
          <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
          <declname>parentA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="298" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="896" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a1e61484bee26f7fbbc105059fa1c82e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StructElement::StructElement</definition>
        <argsstring>(const Ref &amp;ref, StructTreeRoot *treeRootA, StructElement *parentA)</argsstring>
        <name>StructElement</name>
        <param>
          <type>const <ref refid="struct_ref" kindref="compound">Ref</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_struct_tree_root" kindref="compound">StructTreeRoot</ref> *</type>
          <declname>treeRootA</declname>
        </param>
        <param>
          <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
          <declname>parentA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="299" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="906" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1a50bcd940c4099ec26f56a4facede43f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::parse</definition>
        <argsstring>(Dict *elementDict)</argsstring>
        <name>parse</name>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>elementDict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="301" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1079" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ad6b8b67e9a76b4e6fa8138b0290eb819" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_struct_element" kindref="compound">StructElement</ref> *</type>
        <definition>StructElement * StructElement::parseChild</definition>
        <argsstring>(Object *ref, Object *childObj, std::set&lt; int &gt; &amp;seen)</argsstring>
        <name>parseChild</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>childObj</declname>
        </param>
        <param>
          <type>std::set&lt; int &gt; &amp;</type>
          <declname>seen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="302" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1230" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1ac7cfd61d13426a3bab24d934e6cf4142" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::parseChildren</definition>
        <argsstring>(Dict *element, std::set&lt; int &gt; &amp;seen)</argsstring>
        <name>parseChildren</name>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>std::set&lt; int &gt; &amp;</type>
          <declname>seen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="303" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1311" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="class_struct_element_1accb8906bf2e5fe6a9c7425f34a06bc8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StructElement::parseAttributes</definition>
        <argsstring>(Dict *element, GBool keepExisting=gFalse)</argsstring>
        <name>parseAttributes</name>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>keepExisting</declname>
          <defval>gFalse</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/StructElement.h" line="304" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.cc" bodystart="1331" bodyend="1409"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="16037">
        <label>StructElement::ContentData</label>
        <childnode refid="16035" relation="usage">
          <edgelabel>ref</edgelabel>
        </childnode>
      </node>
      <node id="16029">
        <label>StructElement</label>
        <link refid="class_struct_element"/>
        <childnode refid="16030" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="16037" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="16035" relation="usage">
          <edgelabel>InvalidRef</edgelabel>
        </childnode>
      </node>
      <node id="16034">
        <label>Array</label>
        <link refid="class_array"/>
      </node>
      <node id="16031">
        <label>GooString</label>
        <link refid="class_goo_string"/>
      </node>
      <node id="16033">
        <label>Dict</label>
        <link refid="class_dict"/>
      </node>
      <node id="16032">
        <label>Object</label>
        <link refid="class_object"/>
        <childnode refid="16031" relation="usage">
          <edgelabel>string</edgelabel>
        </childnode>
        <childnode refid="16033" relation="usage">
          <edgelabel>dict</edgelabel>
        </childnode>
        <childnode refid="16034" relation="usage">
          <edgelabel>array</edgelabel>
        </childnode>
        <childnode refid="16035" relation="usage">
          <edgelabel>ref</edgelabel>
        </childnode>
        <childnode refid="16036" relation="usage">
          <edgelabel>stream</edgelabel>
        </childnode>
      </node>
      <node id="16035">
        <label>Ref</label>
        <link refid="struct_ref"/>
      </node>
      <node id="16030">
        <label>StructElement::StructData</label>
        <childnode refid="16031" relation="usage">
          <edgelabel>expandedAbbr</edgelabel>
          <edgelabel>title</edgelabel>
          <edgelabel>actualText</edgelabel>
          <edgelabel>altText</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>language</edgelabel>
        </childnode>
        <childnode refid="16032" relation="usage">
          <edgelabel>parentRef</edgelabel>
        </childnode>
      </node>
      <node id="16036">
        <label>Stream</label>
        <link refid="class_stream"/>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/StructElement.h" line="126" column="1" bodyfile="thirdparty/poppler/poppler/StructElement.h" bodystart="126" bodyend="307"/>
    <listofallmembers>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a7ff028f8facf455b373b4bcbfb6bf743" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Annot</name></member>
      <member refid="class_struct_element_1a756a26ab8231d119bee3ba9bc0ed68d6" prot="public" virt="non-virtual"><scope>StructElement</scope><name>appendAttribute</name></member>
      <member refid="class_struct_element_1a4929f9ae4d5c6e87cd7bae80246fdb88" prot="public" virt="non-virtual"><scope>StructElement</scope><name>appendChild</name></member>
      <member refid="class_struct_element_1aba9112507e707be95afd7aaec08213fa" prot="private" virt="non-virtual"><scope>StructElement</scope><name>appendSubTreeText</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a1126e89d79951ce4be6a58e7e3033c58" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Art</name></member>
      <member refid="class_struct_element_1a64c370e631ad6ef64f78f1ee283c301f" prot="private" virt="non-virtual"><scope>StructElement</scope><name>AttrPtrArray</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8bb9a69aa3e708869f67e55398432555" prot="public" virt="non-virtual"><scope>StructElement</scope><name>BibEntry</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aafa5f3a126955d982d0dfe11d33782bd" prot="public" virt="non-virtual"><scope>StructElement</scope><name>BlockQuote</name></member>
      <member refid="class_struct_element_1aa16060b81604f6a1af57a5c706478ea0" prot="public" virt="non-virtual"><scope>StructElement</scope><name>c</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a3331c3d018ce553870095f3291727eff" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Caption</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa68fbaf367885327af6a49dc41e5b2de" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Code</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2242941ad63d7a82674e3159cb223530" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Div</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa6f421fc55650b475fb2f593460d9125" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Document</name></member>
      <member refid="class_struct_element_1a1547b64877bb589b0aa51c0b3b2afad2" prot="private" virt="non-virtual"><scope>StructElement</scope><name>ElemPtrArray</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a9224008233781f5e9dbc0550eec50863" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Figure</name></member>
      <member refid="class_struct_element_1a6480fa33ef8f3cfb9c4b59c40266ff6f" prot="public" virt="non-virtual"><scope>StructElement</scope><name>findAttribute</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2a5ad953b3924ee283bafb43d69ff836" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Form</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a649d068ddb7e5dff423bfce993fe08d8" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Formula</name></member>
      <member refid="class_struct_element_1a7d60f58d5f9116970f9cc235673fc7e5" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getActualText</name></member>
      <member refid="class_struct_element_1a642c8c96592304b5874a086fafed2f76" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getActualText</name></member>
      <member refid="class_struct_element_1a7cdf351fb918e192d5bcf90e5bf6e8e2" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getAltText</name></member>
      <member refid="class_struct_element_1ab1865d9d001ac4a001c5baf1178b7399" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getAltText</name></member>
      <member refid="class_struct_element_1a8ad9339e4232f97788240948aec9b507" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getAttribute</name></member>
      <member refid="class_struct_element_1a18a195231b263cca68acbfe7db4d3353" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getAttribute</name></member>
      <member refid="class_struct_element_1a95ec8b377906bf8f76b04c2e9feaa52c" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getChild</name></member>
      <member refid="class_struct_element_1a24b62006829a97512b6de6c329942197" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getChild</name></member>
      <member refid="class_struct_element_1ab31433f225bc18f842eafcfa505222a4" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getExpandedAbbr</name></member>
      <member refid="class_struct_element_1a66b352883a8daafcef1b13e87fb0b8bb" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getExpandedAbbr</name></member>
      <member refid="class_struct_element_1acc21108332bc3398470b5b3abcfce015" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getID</name></member>
      <member refid="class_struct_element_1a26f18e1d33f8e1ee0e838282a2b7e6b2" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getID</name></member>
      <member refid="class_struct_element_1a34bef6337229b5a6b1b3d50493404d16" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getLanguage</name></member>
      <member refid="class_struct_element_1aadf761c1ee9f3e526afff6a9a9953566" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getLanguage</name></member>
      <member refid="class_struct_element_1a917548a320a3aa077a3ff326f661a3af" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getMCID</name></member>
      <member refid="class_struct_element_1a708d1991cc0716c2a86c9e8b4a91b2a4" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getNumAttributes</name></member>
      <member refid="class_struct_element_1a10adc57f1ac941999f80ad3ab44b5ff1" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getNumChildren</name></member>
      <member refid="class_struct_element_1a49771bcb04f49cc5f9a076c4809c2fc0" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getObjectRef</name></member>
      <member refid="class_struct_element_1a5ded9ca6e6030d9826e5a6671477a5cf" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getPageRef</name></member>
      <member refid="class_struct_element_1a4895c1d6f94b68972a4711a9a8b5fca7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getParentRef</name></member>
      <member refid="class_struct_element_1a6ec7f98688e113246fda85f8114af868" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getRevision</name></member>
      <member refid="class_struct_element_1a4332521259e04478ba33b11ae3766d19" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getStructTreeRoot</name></member>
      <member refid="class_struct_element_1ac0452235ae3a34d4bcfa9b81e79f3c8b" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getText</name></member>
      <member refid="class_struct_element_1a87b41a0fd2758c218c868f994d0f257d" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getTextSpans</name></member>
      <member refid="class_struct_element_1a9f66fecee294bd44afb43623be7ca069" prot="private" virt="non-virtual"><scope>StructElement</scope><name>getTextSpansInternal</name></member>
      <member refid="class_struct_element_1a4bdb5156dc0f902eca5f75b1940707cb" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getTitle</name></member>
      <member refid="class_struct_element_1ae0ac8d1cd929a933bbde89122f941813" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getTitle</name></member>
      <member refid="class_struct_element_1a47554b1c91d5a407dde2b72c5e02e11d" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getType</name></member>
      <member refid="class_struct_element_1af3757e58eab4064ce0a7c17f3fd1d5d9" prot="public" virt="non-virtual"><scope>StructElement</scope><name>getTypeName</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a5715d27fb53df06bb87e6679a24620ce" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a7fe47cf55818bd5b125ba7e969f5dd4a" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H1</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ad8d056afdad0a70f102a142f65b4e23c" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H2</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a54fcd07a3346551a187d9e00d675b4b7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H3</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8995dd0ef6ccebdff7415408cfc8c261" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H4</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a5544523a5d895803beaeb995eb3e8d90" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H5</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ab1cf5967e8b505b5fd9acf9eb0795b59" prot="public" virt="non-virtual"><scope>StructElement</scope><name>H6</name></member>
      <member refid="class_struct_element_1a996fb595d1cfcbb467f4e23b8277ec96" prot="public" virt="non-virtual"><scope>StructElement</scope><name>hasPageRef</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67afedac8c28c806fc1f7da15d054083060" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Index</name></member>
      <member refid="class_struct_element_1af4141d39c26e0640186c5540ab2f701a" prot="public" virt="non-virtual"><scope>StructElement</scope><name>InvalidRef</name></member>
      <member refid="class_struct_element_1a86ddb8d787ab2bd8850945cebebe2227" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isBlock</name></member>
      <member refid="class_struct_element_1a9c4e8ad57ebcd71c64d4919b09f56fb7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isContent</name></member>
      <member refid="class_struct_element_1ac43103230177fbbe9c55463ec1f98218" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isGrouping</name></member>
      <member refid="class_struct_element_1a6a6c8a5bd0321fdaa02b4212e5b131f9" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isInline</name></member>
      <member refid="class_struct_element_1a9debc5e5796e9592d168f4c9d63f938a" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isObjectRef</name></member>
      <member refid="class_struct_element_1a47c8dde2cf24c762f24e8a0a44c207ed" prot="public" virt="non-virtual"><scope>StructElement</scope><name>isOk</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af7d13f283dcac4c6428ec78c28087fc6" prot="public" virt="non-virtual"><scope>StructElement</scope><name>L</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a53f5e3c03b38722a1cec1194e4867fa4" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Lbl</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aead9f42b4d569d6c5d293d652640cf8b" prot="public" virt="non-virtual"><scope>StructElement</scope><name>LBody</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aedb98bb3507f92229408b929b9029f8b" prot="public" virt="non-virtual"><scope>StructElement</scope><name>LI</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a0755afea1f9b5ea63be08d019f47c433" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Link</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a45df1a2ea3e9c7d17bccd68977a3a723" prot="public" virt="non-virtual"><scope>StructElement</scope><name>MCID</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ad0c3256440edccf69b6bcff4ff305fb7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>NonStruct</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a4fe62988be50ca4ef45993233e495f85" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Note</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aef58ef3e555ff0706107cdfc59f4d93a" prot="public" virt="non-virtual"><scope>StructElement</scope><name>OBJR</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a0919246ac07623a8d9938332f9b497f4" prot="public" virt="non-virtual"><scope>StructElement</scope><name>P</name></member>
      <member refid="class_struct_element_1a9b32e9a392e38c4cebadf2c871c179f4" prot="private" virt="non-virtual"><scope>StructElement</scope><name>pageRef</name></member>
      <member refid="class_struct_element_1a0fe5f296c692307188f55592c017f69d" prot="private" virt="non-virtual"><scope>StructElement</scope><name>parent</name></member>
      <member refid="class_struct_element_1a50bcd940c4099ec26f56a4facede43f1" prot="private" virt="non-virtual"><scope>StructElement</scope><name>parse</name></member>
      <member refid="class_struct_element_1accb8906bf2e5fe6a9c7425f34a06bc8b" prot="private" virt="non-virtual"><scope>StructElement</scope><name>parseAttributes</name></member>
      <member refid="class_struct_element_1ad6b8b67e9a76b4e6fa8138b0290eb819" prot="private" virt="non-virtual"><scope>StructElement</scope><name>parseChild</name></member>
      <member refid="class_struct_element_1ac7cfd61d13426a3bab24d934e6cf4142" prot="private" virt="non-virtual"><scope>StructElement</scope><name>parseChildren</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8b6191b8bcc2ee343f8326e90e1084d3" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Part</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aa7dda0ffc60e1ecefbcd8e3b8b818422" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Private</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a74563f7f9a5955d13b7ec4f1e5c93ddb" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Quote</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8b95b40d3da61b7cf054cacec35001cb" prot="public" virt="non-virtual"><scope>StructElement</scope><name>RB</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a8d030c92679c697ca90e23c6aaa9a4ff" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Reference</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a478607f48be809294360a264992b4ef7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>RP</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af1b539868a7a17ad2af430889b72722f" prot="public" virt="non-virtual"><scope>StructElement</scope><name>RT</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a72040f55bcca2040baaa225e9c22a540" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Ruby</name></member>
      <member refid="class_struct_element_1a5392bab6df62f2be00c75024f22ab89d" prot="public" virt="non-virtual"><scope>StructElement</scope><name>s</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a2c72bcc0fca2f7a7c3a600f19cc81f43" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Sect</name></member>
      <member refid="class_struct_element_1aced5f845ceaee30b50057b182fe9d8e7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>setRevision</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ab4ee5227ac851470b7d134e531cc766d" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Span</name></member>
      <member refid="class_struct_element_1a1ee516d3f8c610e56977b2f45376d1ed" prot="private" virt="non-virtual"><scope>StructElement</scope><name>StructElement</name></member>
      <member refid="class_struct_element_1adcd0d4edcd6570482a3db3e1dadd761b" prot="private" virt="non-virtual"><scope>StructElement</scope><name>StructElement</name></member>
      <member refid="class_struct_element_1a1e61484bee26f7fbbc105059fa1c82e0" prot="private" virt="non-virtual"><scope>StructElement</scope><name>StructElement</name></member>
      <member refid="class_struct_element_1a112cde3e1246dc716205724dfa77c117" prot="private" virt="non-virtual"><scope>StructElement</scope><name>StructTreeRoot</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a754ab025d685fb1dcaa6349339301795" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Table</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67ac78c2d33517c03f0c7a290de8f8e46fe" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TBody</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a47101c7403e0575241e9a5cb838ded04" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TD</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a1efdcfaad5750f9761b2160b8a4aee48" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TFoot</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a14abfd151d36c2206dc583f2064947c0" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TH</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a121aec2cf7d55a0f84e66a904da07ef1" prot="public" virt="non-virtual"><scope>StructElement</scope><name>THead</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a21bbd52eeefae8df072404a62507eb57" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TOC</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a3e0634b15d807aabfeed89cb136960f7" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TOCI</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a9d35275e7760a81c4862e8b430db3142" prot="public" virt="non-virtual"><scope>StructElement</scope><name>TR</name></member>
      <member refid="class_struct_element_1acf8388898fa78cedc09f1ab43351d7fe" prot="private" virt="non-virtual"><scope>StructElement</scope><name>treeRoot</name></member>
      <member refid="class_struct_element_1a7ec7fffdc3f20dc0618871bf05f8d2f8" prot="private" virt="non-virtual"><scope>StructElement</scope><name>type</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Type</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67afa555aa0f175868cf76085e3c59b6d68" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Unknown</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67aba9ff86e44824b8fc7e06180aa8903c6" prot="public" virt="non-virtual"><scope>StructElement</scope><name>Warichu</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67af08d198661ad60ae00530dca5f130ff8" prot="public" virt="non-virtual"><scope>StructElement</scope><name>WP</name></member>
      <member refid="class_struct_element_1a62e73ce3898ddce25ed770e6ac7acd67a60e7d63cd1a5676aeaf9b1d936ebc273" prot="public" virt="non-virtual"><scope>StructElement</scope><name>WT</name></member>
      <member refid="class_struct_element_1aabb9d9645ec4c2ec29ae54d9196fcc97" prot="public" virt="non-virtual"><scope>StructElement</scope><name>~StructElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
