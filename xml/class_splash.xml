<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_splash" kind="class" language="C++" prot="public">
    <compoundname>Splash</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_splash_1a806eec383e60d9a1b5623fb3c52178c4" prot="private" static="yes" mutable="no">
        <type>SplashPipeResultColorCtrl</type>
        <definition>SplashPipeResultColorCtrl Splash::pipeResultColorNoAlphaBlend</definition>
        <argsstring>[]</argsstring>
        <name>pipeResultColorNoAlphaBlend</name>
        <initializer>= {
  splashPipeResultColorNoAlphaBlendMono,
  splashPipeResultColorNoAlphaBlendMono,
  splashPipeResultColorNoAlphaBlendRGB,
  splashPipeResultColorNoAlphaBlendRGB,
  splashPipeResultColorNoAlphaBlendRGB





}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="409" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a9e904e374ac69e468c28051c4aa3df26" prot="private" static="yes" mutable="no">
        <type>SplashPipeResultColorCtrl</type>
        <definition>SplashPipeResultColorCtrl Splash::pipeResultColorAlphaNoBlend</definition>
        <argsstring>[]</argsstring>
        <name>pipeResultColorAlphaNoBlend</name>
        <initializer>= {
  splashPipeResultColorAlphaNoBlendMono,
  splashPipeResultColorAlphaNoBlendMono,
  splashPipeResultColorAlphaNoBlendRGB,
  splashPipeResultColorAlphaNoBlendRGB,
  splashPipeResultColorAlphaNoBlendRGB





}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="410" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1ab895ff1b324358d31d63e392dfc0fbcb" prot="private" static="yes" mutable="no">
        <type>SplashPipeResultColorCtrl</type>
        <definition>SplashPipeResultColorCtrl Splash::pipeResultColorAlphaBlend</definition>
        <argsstring>[]</argsstring>
        <name>pipeResultColorAlphaBlend</name>
        <initializer>= {
  splashPipeResultColorAlphaBlendMono,
  splashPipeResultColorAlphaBlendMono,
  splashPipeResultColorAlphaBlendRGB,
  splashPipeResultColorAlphaBlendRGB,
  splashPipeResultColorAlphaBlendRGB





}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="411" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a64542b6c425d9deca858edf73794b0ad" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int Splash::pipeNonIsoGroupCorrection[]</definition>
        <argsstring>[]</argsstring>
        <name>pipeNonIsoGroupCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="412" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_splash_1ae9d752c6c7a67a25830d98438587ee0d" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* Splash::bitmap</definition>
        <argsstring></argsstring>
        <name>bitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="414" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a56dbe7af19e36f38498a33494bd52e2a" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_state" kindref="compound">SplashState</ref> *</type>
        <definition>SplashState* Splash::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="415" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1aaa4f8c826cc71f38b4c572333010875f" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* Splash::aaBuf</definition>
        <argsstring></argsstring>
        <name>aaBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="416" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a942f7534b83cb0fc83730cf91fa1fbb6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::aaBufY</definition>
        <argsstring></argsstring>
        <name>aaBufY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="417" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a8f82460aeaa1866105ee5a0e5cd7c4a6" prot="private" static="no" mutable="no">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* Splash::alpha0Bitmap</definition>
        <argsstring></argsstring>
        <name>alpha0Bitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="418" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a7d077c0e59151b22122751f36ea282bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::alpha0X</definition>
        <argsstring></argsstring>
        <name>alpha0X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="420" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1ac44a6d7b5ec9ac71d59b683d872d497e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::alpha0Y</definition>
        <argsstring></argsstring>
        <name>alpha0Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="420" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a69cfd43661d99b792686dbf0223edd8b" prot="private" static="no" mutable="no">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::aaGamma[splashAASize *splashAASize+1]</definition>
        <argsstring>[splashAASize *splashAASize+1]</argsstring>
        <name>aaGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="421" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a69baba611825f7644d19f1e8c9a55887" prot="private" static="no" mutable="no">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::minLineWidth</definition>
        <argsstring></argsstring>
        <name>minLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="422" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a78304a3c95eba747639bb627d9b7d688" prot="private" static="no" mutable="no">
        <type>SplashThinLineMode</type>
        <definition>SplashThinLineMode Splash::thinLineMode</definition>
        <argsstring></argsstring>
        <name>thinLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="423" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1adad008198e66fe87ebae8edd69da5ae0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::modXMin</definition>
        <argsstring></argsstring>
        <name>modXMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="424" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a721ca5ea530e577004174a475bfacc9e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::modYMin</definition>
        <argsstring></argsstring>
        <name>modYMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="424" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1ae05e299fcb4db04be935346e2d4b8de1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::modXMax</definition>
        <argsstring></argsstring>
        <name>modXMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="424" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a84cf6f04c3882536136a13a0b633a1a2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Splash::modYMax</definition>
        <argsstring></argsstring>
        <name>modYMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="424" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1ab7cc1ae2536fbde47c9a192695378769" prot="private" static="no" mutable="no">
        <type>SplashClipResult</type>
        <definition>SplashClipResult Splash::opClipRes</definition>
        <argsstring></argsstring>
        <name>opClipRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="425" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a68efcf2585543143d57cc5a4cfacb965" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool Splash::vectorAntialias</definition>
        <argsstring></argsstring>
        <name>vectorAntialias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="426" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1a420756cdfe2e6d6a13e6dfbfddaf0873" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool Splash::inShading</definition>
        <argsstring></argsstring>
        <name>inShading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="427" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_splash_1af580fef0bde57a687111f0ea5df924f4" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool Splash::debugMode</definition>
        <argsstring></argsstring>
        <name>debugMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="428" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_splash_1a016d7f7cf7ccc86a8684095f2fee084e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splash::Splash</definition>
        <argsstring>(SplashBitmap *bitmapA, GBool vectorAntialiasA, SplashScreenParams *screenParams=NULL)</argsstring>
        <name>Splash</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>bitmapA</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>vectorAntialiasA</declname>
        </param>
        <param>
          <type><ref refid="struct_splash_screen_params" kindref="compound">SplashScreenParams</ref> *</type>
          <declname>screenParams</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="94" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1584" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a6a08ac060cf7e67551c35bf8ddec7f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splash::Splash</definition>
        <argsstring>(SplashBitmap *bitmapA, GBool vectorAntialiasA, SplashScreen *screenA)</argsstring>
        <name>Splash</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>bitmapA</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>vectorAntialiasA</declname>
        </param>
        <param>
          <type><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref> *</type>
          <declname>screenA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="96" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1612" bodyend="1638"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a79ad60c130603f25b888235cd5d2c6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Splash::~Splash</definition>
        <argsstring>()</argsstring>
        <name>~Splash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="99" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1640" bodyend="1648"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a5edcacaa3be8a8bbd7df62d5ee29395b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord *</type>
        <definition>SplashCoord * Splash::getMatrix</definition>
        <argsstring>()</argsstring>
        <name>getMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="103" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1654" bodyend="1656"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ace80e735dccaafe21f30cd01c08cbdbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
        <definition>SplashPattern * Splash::getStrokePattern</definition>
        <argsstring>()</argsstring>
        <name>getStrokePattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="104" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1658" bodyend="1660"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a2065172a4bacc02191244dc5827b2d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
        <definition>SplashPattern * Splash::getFillPattern</definition>
        <argsstring>()</argsstring>
        <name>getFillPattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="105" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1662" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ac09824d25263602384f9ac0c68914eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref> *</type>
        <definition>SplashScreen * Splash::getScreen</definition>
        <argsstring>()</argsstring>
        <name>getScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="106" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1666" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a44ef29bccff9f2b5476872304b5727a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashBlendFunc</type>
        <definition>SplashBlendFunc Splash::getBlendFunc</definition>
        <argsstring>()</argsstring>
        <name>getBlendFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="107" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1670" bodyend="1672"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adbd9347c0f2b325b2818b5bccd5937e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getStrokeAlpha</definition>
        <argsstring>()</argsstring>
        <name>getStrokeAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="108" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1674" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a224248393373eb06ff97f85b83949da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getFillAlpha</definition>
        <argsstring>()</argsstring>
        <name>getFillAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="109" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1678" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a23f5fdeee23654dc1fefea80edbd86f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getLineWidth</definition>
        <argsstring>()</argsstring>
        <name>getLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="110" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1682" bodyend="1684"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad434e409d6e9ee9c7c306edd7052913c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Splash::getLineCap</definition>
        <argsstring>()</argsstring>
        <name>getLineCap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="111" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1686" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adc8adb06fb85cf4a1511f6e5de2f3f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Splash::getLineJoin</definition>
        <argsstring>()</argsstring>
        <name>getLineJoin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="112" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1690" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4c321794087af503395f65a0f0900eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getMiterLimit</definition>
        <argsstring>()</argsstring>
        <name>getMiterLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="113" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1694" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a8bead7e8a151d5ab90f5606b974f0f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getFlatness</definition>
        <argsstring>()</argsstring>
        <name>getFlatness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="114" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1698" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adc1a50caa6f7022b1d5d8602b529e9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord *</type>
        <definition>SplashCoord * Splash::getLineDash</definition>
        <argsstring>()</argsstring>
        <name>getLineDash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="115" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1702" bodyend="1704"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a3b773a60b0c6f4ee6331d99fcfe0f2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Splash::getLineDashLength</definition>
        <argsstring>()</argsstring>
        <name>getLineDashLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="116" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1706" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a6030dee5c03f0249844baf36026aaba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashCoord</type>
        <definition>SplashCoord Splash::getLineDashPhase</definition>
        <argsstring>()</argsstring>
        <name>getLineDashPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="117" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1710" bodyend="1712"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aea87931b5cbb69eab3f0e795c904011b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Splash::getStrokeAdjust</definition>
        <argsstring>()</argsstring>
        <name>getStrokeAdjust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="118" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1714" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a46c3e4d348f995c3e03c643f60e3b25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_clip" kindref="compound">SplashClip</ref> *</type>
        <definition>SplashClip * Splash::getClip</definition>
        <argsstring>()</argsstring>
        <name>getClip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="119" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1718" bodyend="1720"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af0374f6742131f6ff674e1db4eec7f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap * Splash::getSoftMask</definition>
        <argsstring>()</argsstring>
        <name>getSoftMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="120" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1722" bodyend="1724"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a0562500bbb1490e36b4a101898de96ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Splash::getInNonIsolatedGroup</definition>
        <argsstring>()</argsstring>
        <name>getInNonIsolatedGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="121" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1726" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a9b45e5ca3d47f49446eed9cc236c0e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setMatrix</definition>
        <argsstring>(SplashCoord *matrix)</argsstring>
        <name>setMatrix</name>
        <param>
          <type>SplashCoord *</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="125" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1734" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4b3c915b8edd5de8e586933137d9183a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setStrokePattern</definition>
        <argsstring>(SplashPattern *strokeColor)</argsstring>
        <name>setStrokePattern</name>
        <param>
          <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
          <declname>strokeColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="126" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1738" bodyend="1740"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1b641cc126b71af72bf439eebffdfa5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setFillPattern</definition>
        <argsstring>(SplashPattern *fillColor)</argsstring>
        <name>setFillPattern</name>
        <param>
          <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
          <declname>fillColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="127" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1742" bodyend="1744"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ab164a85adeb5b5da2169d39aec2da108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setScreen</definition>
        <argsstring>(SplashScreen *screen)</argsstring>
        <name>setScreen</name>
        <param>
          <type><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref> *</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="128" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1746" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aebff93e49668f8e2445ffad23158c612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setBlendFunc</definition>
        <argsstring>(SplashBlendFunc func)</argsstring>
        <name>setBlendFunc</name>
        <param>
          <type>SplashBlendFunc</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="129" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1750" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a8fa6d6522f721721edeabbd2980945f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setStrokeAlpha</definition>
        <argsstring>(SplashCoord alpha)</argsstring>
        <name>setStrokeAlpha</name>
        <param>
          <type>SplashCoord</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="130" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1754" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad4424e0220eacc754c462bcb1c699f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setFillAlpha</definition>
        <argsstring>(SplashCoord alpha)</argsstring>
        <name>setFillAlpha</name>
        <param>
          <type>SplashCoord</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="131" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1758" bodyend="1760"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4ff332f9470954ae7ed2b4dafb410031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setPatternAlpha</definition>
        <argsstring>(SplashCoord strokeAlpha, SplashCoord fillAlpha)</argsstring>
        <name>setPatternAlpha</name>
        <param>
          <type>SplashCoord</type>
          <declname>strokeAlpha</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>fillAlpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="132" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1762" bodyend="1766"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad02ead9c42c23297402cf461fe434b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::clearPatternAlpha</definition>
        <argsstring>()</argsstring>
        <name>clearPatternAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="133" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1768" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1b7ed18dfe91be127dd19504d34bbc82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setFillOverprint</definition>
        <argsstring>(GBool fop)</argsstring>
        <name>setFillOverprint</name>
        <param>
          <type>GBool</type>
          <declname>fop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="134" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1774" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a051a358e45801533d46962d80f7b4c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setStrokeOverprint</definition>
        <argsstring>(GBool sop)</argsstring>
        <name>setStrokeOverprint</name>
        <param>
          <type>GBool</type>
          <declname>sop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="135" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1778" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a6ec523ed5975f25a9376c451bd92a9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setOverprintMode</definition>
        <argsstring>(int opm)</argsstring>
        <name>setOverprintMode</name>
        <param>
          <type>int</type>
          <declname>opm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="136" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1782" bodyend="1784"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a14dce2571b9945cd2eb8108089e446d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setLineWidth</definition>
        <argsstring>(SplashCoord lineWidth)</argsstring>
        <name>setLineWidth</name>
        <param>
          <type>SplashCoord</type>
          <declname>lineWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="137" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1786" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ac2b9231585cda50ea89f7fa338ff2556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setLineCap</definition>
        <argsstring>(int lineCap)</argsstring>
        <name>setLineCap</name>
        <param>
          <type>int</type>
          <declname>lineCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="138" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1790" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af71606158717cbb41ac9ec0e990b6507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setLineJoin</definition>
        <argsstring>(int lineJoin)</argsstring>
        <name>setLineJoin</name>
        <param>
          <type>int</type>
          <declname>lineJoin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="139" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1794" bodyend="1796"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adba96ffbb45a070d787331c6e4432533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setMiterLimit</definition>
        <argsstring>(SplashCoord miterLimit)</argsstring>
        <name>setMiterLimit</name>
        <param>
          <type>SplashCoord</type>
          <declname>miterLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="140" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1798" bodyend="1800"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a9c7b426262b889f9db34e5c73511ddb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setFlatness</definition>
        <argsstring>(SplashCoord flatness)</argsstring>
        <name>setFlatness</name>
        <param>
          <type>SplashCoord</type>
          <declname>flatness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="141" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1802" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ae4bd1142a83ef18770c49f3ed321e1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setLineDash</definition>
        <argsstring>(SplashCoord *lineDash, int lineDashLength, SplashCoord lineDashPhase)</argsstring>
        <name>setLineDash</name>
        <param>
          <type>SplashCoord *</type>
          <declname>lineDash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineDashLength</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>lineDashPhase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="143" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1810" bodyend="1813"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af3629d897fe921752448955f5029c3e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setStrokeAdjust</definition>
        <argsstring>(GBool strokeAdjust)</argsstring>
        <name>setStrokeAdjust</name>
        <param>
          <type>GBool</type>
          <declname>strokeAdjust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="145" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1815" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adecd5e37987bdfc3f2cbae88dba784b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::clipResetToRect</definition>
        <argsstring>(SplashCoord x0, SplashCoord y0, SplashCoord x1, SplashCoord y1)</argsstring>
        <name>clipResetToRect</name>
        <param>
          <type>SplashCoord</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="147" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1819" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a34d006228f52d28102fa94fa5ebaee4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::clipToRect</definition>
        <argsstring>(SplashCoord x0, SplashCoord y0, SplashCoord x1, SplashCoord y1)</argsstring>
        <name>clipToRect</name>
        <param>
          <type>SplashCoord</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="150" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1824" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aa35122d17c2480b34cd26cd4d3e24a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::clipToPath</definition>
        <argsstring>(SplashPath *path, GBool eo)</argsstring>
        <name>clipToPath</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>eo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="153" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1829" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4c6114ec5c97d841b54e113690d3ef61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setSoftMask</definition>
        <argsstring>(SplashBitmap *softMask)</argsstring>
        <name>setSoftMask</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>softMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="154" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1833" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad2a5f527a8bc7a40d004eb8e42cffc30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setInNonIsolatedGroup</definition>
        <argsstring>(SplashBitmap *alpha0BitmapA, int alpha0XA, int alpha0YA)</argsstring>
        <name>setInNonIsolatedGroup</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>alpha0BitmapA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alpha0XA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alpha0YA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="155" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1837" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af3e0690f908cb75f766dc1be75d99028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setTransfer</definition>
        <argsstring>(Guchar *red, Guchar *green, Guchar *blue, Guchar *gray)</argsstring>
        <name>setTransfer</name>
        <param>
          <type>Guchar *</type>
          <declname>red</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>green</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="157" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1845" bodyend="1848"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a3335514dfae78549700357e23e3f7aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setOverprintMask</definition>
        <argsstring>(Guint overprintMask, GBool additive)</argsstring>
        <name>setOverprintMask</name>
        <param>
          <type>Guint</type>
          <declname>overprintMask</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>additive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="158" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1850" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4447440ee2e01939927722c75bac1c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::saveState</definition>
        <argsstring>()</argsstring>
        <name>saveState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="162" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1859" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1abf142b5c7b365c697e9093d3a8a3a083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::restoreState</definition>
        <argsstring>()</argsstring>
        <name>restoreState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="163" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1867" bodyend="1877"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a2227ac959c62cf5440fbde97cd1c3afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::clear</definition>
        <argsstring>(SplashColorPtr color, Guchar alpha=0x00)</argsstring>
        <name>clear</name>
        <param>
          <type>SplashColorPtr</type>
          <declname>color</declname>
        </param>
        <param>
          <type>Guchar</type>
          <declname>alpha</declname>
          <defval>0x00</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="168" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1883" bodyend="2015"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aba090f8f57fd1710e6242fe7899cbbe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::stroke</definition>
        <argsstring>(SplashPath *path)</argsstring>
        <name>stroke</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="171" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2017" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a06d1d5df495306fa8fe93316514bba6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::fill</definition>
        <argsstring>(SplashPath *path, GBool eo)</argsstring>
        <name>fill</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>eo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="174" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2429" bodyend="2435"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a30431fcefd14e3859c20c000439bead8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::xorFill</definition>
        <argsstring>(SplashPath *path, GBool eo)</argsstring>
        <name>xorFill</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>eo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="177" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2676" bodyend="2731"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4b091ef40d4c853e701688957fb20178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::fillChar</definition>
        <argsstring>(SplashCoord x, SplashCoord y, int c, SplashFont *font)</argsstring>
        <name>fillChar</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="class_splash_font" kindref="compound">SplashFont</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="180" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2733" bodyend="2760"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a0dcf2e4d60a6cef5bc47b2bf6d1a06a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::fillGlyph</definition>
        <argsstring>(SplashCoord x, SplashCoord y, SplashGlyphBitmap *glyph)</argsstring>
        <name>fillGlyph</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref> *</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="184" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2762" bodyend="2778"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1acb530bbc336c4c4c8d4287b38f3ca700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::fillImageMask</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int w, int h, SplashCoord *mat, GBool glyphMode)</argsstring>
        <name>fillImageMask</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>glyphMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="200" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2911" bodyend="2996"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1142a76b1cc63d0b98c0c376607ced6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::drawImage</definition>
        <argsstring>(SplashImageSource src, SplashICCTransform tf, void *srcData, SplashColorMode srcMode, GBool srcAlpha, int w, int h, SplashCoord *mat, GBool interpolate, GBool tilingPattern=gFalse)</argsstring>
        <name>drawImage</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>SplashICCTransform</type>
          <declname>tf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>tilingPattern</declname>
          <defval>gFalse</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="219" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3676" bodyend="3823"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1acab7f46f2fbceaad04db0e1edfbba0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::composite</definition>
        <argsstring>(SplashBitmap *src, int xSrc, int ySrc, int xDest, int yDest, int w, int h, GBool noClip, GBool nonIsolated, GBool knockout=gFalse, SplashCoord knockoutOpacity=1.0)</argsstring>
        <name>composite</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ySrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>noClip</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>nonIsolated</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>knockout</declname>
          <defval>gFalse</defval>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>knockoutOpacity</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="226" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5227" bodyend="5323"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1adc56cfab29e8b0a0561483946a13836c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::compositeBackground</definition>
        <argsstring>(SplashColorPtr color)</argsstring>
        <name>compositeBackground</name>
        <param>
          <type>SplashColorPtr</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="233" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5325" bodyend="5487"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a42ed4fb1b6b8aca9b44c7d713c61d90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::blitTransparent</definition>
        <argsstring>(SplashBitmap *src, int xSrc, int ySrc, int xDest, int yDest, int w, int h)</argsstring>
        <name>blitTransparent</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ySrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="238" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5807" bodyend="5913"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a2a2ff01b34df5947d9c4844ca2fbdf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::blitImage</definition>
        <argsstring>(SplashBitmap *src, GBool srcAlpha, int xDest, int yDest)</argsstring>
        <name>blitImage</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="240" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5066" bodyend="5071"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aa24ad06d9e35f7125810c0602946eb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
        <definition>SplashPath * Splash::makeStrokePath</definition>
        <argsstring>(SplashPath *path, SplashCoord w, GBool flatten=gTrue)</argsstring>
        <name>makeStrokePath</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>w</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>flatten</declname>
          <defval>gTrue</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="248" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5915" bodyend="6319"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a8473a3bc5bcdddddf132522d04cc4f23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap* Splash::getBitmap</definition>
        <argsstring>()</argsstring>
        <name>getBitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="252" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ab7fea98f63dfb69dce75771c690ba695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setMinLineWidth</definition>
        <argsstring>(SplashCoord w)</argsstring>
        <name>setMinLineWidth</name>
        <param>
          <type>SplashCoord</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="255" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a93525d02e77aefdf2b7f2279cc702863" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setThinLineMode</definition>
        <argsstring>(SplashThinLineMode thinLineModeA)</argsstring>
        <name>setThinLineMode</name>
        <param>
          <type>SplashThinLineMode</type>
          <declname>thinLineModeA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="258" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1acdbd384da9c57b1f2e09cadaa0a9bfdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SplashThinLineMode</type>
        <definition>SplashThinLineMode Splash::getThinLineMode</definition>
        <argsstring>()</argsstring>
        <name>getThinLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="259" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a919d28d25ba20d436dde4b469650c1f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::getModRegion</definition>
        <argsstring>(int *xMin, int *yMin, int *xMax, int *yMax)</argsstring>
        <name>getModRegion</name>
        <param>
          <type>int *</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yMin</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xMax</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="263" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="263" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a3fbe0c8a19a0888372258428f218e277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::clearModRegion</definition>
        <argsstring>()</argsstring>
        <name>clearModRegion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="267" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad99c9dd98e82af01614d57971f45c2c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SplashClipResult</type>
        <definition>SplashClipResult Splash::getClipRes</definition>
        <argsstring>()</argsstring>
        <name>getClipRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="271" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a49b24530916151c116fafe8e72459075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setDebugMode</definition>
        <argsstring>(GBool debugModeA)</argsstring>
        <name>setDebugMode</name>
        <param>
          <type>GBool</type>
          <declname>debugModeA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="274" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1d563ce860bb1bf3f1eb298ab759d75d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setInShading</definition>
        <argsstring>(GBool sh)</argsstring>
        <name>setInShading</name>
        <param>
          <type>GBool</type>
          <declname>sh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="277" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aae06c8d3b37439105ddeeb7d350600e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Splash::getVectorAntialias</definition>
        <argsstring>()</argsstring>
        <name>getVectorAntialias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="278" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1baf1427f03fc80797125d324bb59be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::setVectorAntialias</definition>
        <argsstring>(GBool vaa)</argsstring>
        <name>setVectorAntialias</name>
        <param>
          <type>GBool</type>
          <declname>vaa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="279" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a67c9dbe2505660b09a4e963c209e0c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::shadedFill</definition>
        <argsstring>(SplashPath *path, GBool hasBBox, SplashPattern *pattern)</argsstring>
        <name>shadedFill</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>hasBBox</declname>
        </param>
        <param>
          <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="283" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="6347" bodyend="6477"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a3b8e212507726bfb19c870e411d6b0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Splash::gouraudTriangleShadedFill</definition>
        <argsstring>(SplashGouraudColor *shading)</argsstring>
        <name>gouraudTriangleShadedFill</name>
        <param>
          <type><ref refid="class_splash_gouraud_color" kindref="compound">SplashGouraudColor</ref> *</type>
          <declname>shading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="286" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5489" bodyend="5805"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_splash_1a80097b7ac052eb31a055715897ee40c5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeInit</definition>
        <argsstring>(SplashPipe *pipe, int x, int y, SplashPattern *pattern, SplashColorPtr cSrc, Guchar aInput, GBool usesShape, GBool nonIsolatedGroup, GBool knockout=gFalse, Guchar knockoutOpacity=255)</argsstring>
        <name>pipeInit</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>cSrc</declname>
        </param>
        <param>
          <type>Guchar</type>
          <declname>aInput</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>usesShape</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>nonIsolatedGroup</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>knockout</declname>
          <defval>gFalse</defval>
        </param>
        <param>
          <type>Guchar</type>
          <declname>knockoutOpacity</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="290" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="251" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a219f4da09b75f3fc9da18e1f0e63a1a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRun</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRun</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="295" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="346" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a3e9ed1b297b4c57542a3cc7cf8baa9e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunSimpleMono1</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunSimpleMono1</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="296" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="877" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a04175cf63d85baf0b6942936ad4c851a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunSimpleMono8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunSimpleMono8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="297" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="898" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a797b1bfe476e02c848c68df2275949db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunSimpleRGB8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunSimpleRGB8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="298" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="909" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1b8992b43bcd8fe15fe4da04bbb09f70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunSimpleXBGR8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunSimpleXBGR8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="299" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="922" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a2a71123bc89f1dc8ac583c97dac133c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunSimpleBGR8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunSimpleBGR8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="300" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="936" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a9074c41d7daa4ec04b39c5ddc6cddc9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunAAMono1</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunAAMono1</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="305" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1002" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a7f74e33b369733b85567c31486cae2c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunAAMono8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunAAMono8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="306" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1037" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a88768531b23ae02d0c7ac09afef7a929" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunAARGB8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunAARGB8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="307" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1073" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a421982c55167fa111077fdda997c5d60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunAAXBGR8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunAAXBGR8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="308" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1119" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1abb80724d2328438dfa5b2e0e09072356" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeRunAABGR8</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeRunAABGR8</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="309" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1166" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af6f167657f5c971ec5193f7ee716c422" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeSetXY</definition>
        <argsstring>(SplashPipe *pipe, int x, int y)</argsstring>
        <name>pipeSetXY</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="314" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1324" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a81d90e7cfef34ec3620920f9bd8113ed" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::pipeIncX</definition>
        <argsstring>(SplashPipe *pipe)</argsstring>
        <name>pipeIncX</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="315" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1369" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a939a74f0cd771619d646cd5d96ac3579" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::drawPixel</definition>
        <argsstring>(SplashPipe *pipe, int x, int y, GBool noClip)</argsstring>
        <name>drawPixel</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>noClip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="316" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1408" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a50f654626b5f999ddc98a0f936f16c65" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::drawAAPixelInit</definition>
        <argsstring>()</argsstring>
        <name>drawAAPixelInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="317" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1420" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a72160692b3a9d0ad287e83f932bae60b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::drawAAPixel</definition>
        <argsstring>(SplashPipe *pipe, int x, int y)</argsstring>
        <name>drawAAPixel</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="318" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1424" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ab9e09201336938eab405e2bd9bbd4a6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::drawSpan</definition>
        <argsstring>(SplashPipe *pipe, int x0, int x1, int y, GBool noClip)</argsstring>
        <name>drawSpan</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>noClip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="319" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1482" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad6843595f69ac3ddcea62423006d0488" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::drawAALine</definition>
        <argsstring>(SplashPipe *pipe, int x0, int x1, int y, GBool adjustLine=gFalse, Guchar lineOpacity=0)</argsstring>
        <name>drawAALine</name>
        <param>
          <type><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref> *</type>
          <declname>pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>adjustLine</declname>
          <defval>gFalse</defval>
        </param>
        <param>
          <type>Guchar</type>
          <declname>lineOpacity</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="320" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1514" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a12d8660c83bf1e6af49b256d2825419c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::transform</definition>
        <argsstring>(SplashCoord *matrix, SplashCoord xi, SplashCoord yi, SplashCoord *xo, SplashCoord *yo)</argsstring>
        <name>transform</name>
        <param>
          <type>SplashCoord *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>yi</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>xo</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>yo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="321" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="1570" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1aa087619c7a1a78bb8e1d0f031f829db0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::updateModX</definition>
        <argsstring>(int x)</argsstring>
        <name>updateModX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="323" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="229" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a5c6ef59e1f97de531f4b474d4a3e11bc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::updateModY</definition>
        <argsstring>(int y)</argsstring>
        <name>updateModY</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="324" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="238" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ab8c2617889388a493eecbf94244a4072" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::strokeNarrow</definition>
        <argsstring>(SplashPath *path)</argsstring>
        <name>strokeNarrow</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="325" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2077" bodyend="2173"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a4b39d46beda00043bba815e952a2356c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::strokeWide</definition>
        <argsstring>(SplashPath *path, SplashCoord w)</argsstring>
        <name>strokeWide</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="326" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2175" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1abe27b15b53ac0a0c89ba6cc2d7627cad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
        <definition>SplashPath * Splash::flattenPath</definition>
        <argsstring>(SplashPath *path, SplashCoord *matrix, SplashCoord flatness)</argsstring>
        <name>flattenPath</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>flatness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="327" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2183" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1abfc0be752f145921ecce8085bbe579a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::flattenCurve</definition>
        <argsstring>(SplashCoord x0, SplashCoord y0, SplashCoord x1, SplashCoord y1, SplashCoord x2, SplashCoord y2, SplashCoord x3, SplashCoord y3, SplashCoord *matrix, SplashCoord flatness2, SplashPath *fPath)</argsstring>
        <name>flattenCurve</name>
        <param>
          <type>SplashCoord</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>y3</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>flatness2</declname>
        </param>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>fPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="329" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2222" bodyend="2307"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a60c59a3d200d07e79e5bfebe90177eb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
        <definition>SplashPath * Splash::makeDashedPath</definition>
        <argsstring>(SplashPath *xPath)</argsstring>
        <name>makeDashedPath</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>xPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="335" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2309" bodyend="2427"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ac2601ca7ad064c1a974e7da4fb8486ca" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::getBBoxFP</definition>
        <argsstring>(SplashPath *path, SplashCoord *xMinA, SplashCoord *yMinA, SplashCoord *xMaxA, SplashCoord *yMaxA)</argsstring>
        <name>getBBoxFP</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>xMinA</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>yMinA</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>xMaxA</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>yMaxA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="336" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2437" bodyend="2460"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a820dd92194c8ab3ef2469550dd851118" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::fillWithPattern</definition>
        <argsstring>(SplashPath *path, GBool eo, SplashPattern *pattern, SplashCoord alpha)</argsstring>
        <name>fillWithPattern</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>eo</declname>
        </param>
        <param>
          <type><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>SplashCoord</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="337" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2462" bodyend="2607"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a72063677d0ff3de915a98d017f3f82d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Splash::pathAllOutside</definition>
        <argsstring>(SplashPath *path)</argsstring>
        <name>pathAllOutside</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="339" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2609" bodyend="2674"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a7861c744e51d2ab094f1327e2d1a8617" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::fillGlyph2</definition>
        <argsstring>(int x0, int y0, SplashGlyphBitmap *glyph, GBool noclip)</argsstring>
        <name>fillGlyph2</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref> *</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>noclip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="340" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2780" bodyend="2909"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad55213da057377ed3b6e7b11e8297407" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::arbitraryTransformMask</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, SplashCoord *mat, GBool glyphMode)</argsstring>
        <name>arbitraryTransformMask</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>glyphMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="341" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="2998" bodyend="3263"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a7bde056706cf380212727b6efb84b892" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap * Splash::scaleMask</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight)</argsstring>
        <name>scaleMask</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="344" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3266" bodyend="3291"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ac419e1744424f87db24b5291e61c2372" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleMaskYdXd</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleMaskYdXd</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="347" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3293" bodyend="3372"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a0c43e83dcc6a143e5ba002a716e111c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleMaskYdXu</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleMaskYdXu</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="351" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3374" bodyend="3453"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a10222adbb05d6f2d576dcb812d1b08ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleMaskYuXd</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleMaskYuXd</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="355" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3455" bodyend="3535"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a57328227a554cea2f5f59357cf559985" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleMaskYuXu</definition>
        <argsstring>(SplashImageMaskSource src, void *srcData, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleMaskYuXu</name>
        <param>
          <type>SplashImageMaskSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="359" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3537" bodyend="3612"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a43e36f193ca193b467e2ffcec905d8d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::blitMask</definition>
        <argsstring>(SplashBitmap *src, int xDest, int yDest, SplashClipResult clipRes)</argsstring>
        <name>blitMask</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <param>
          <type>SplashClipResult</type>
          <declname>clipRes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="363" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3614" bodyend="3674"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a2e9cdb188bae54d1a671f0af5fc479e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SplashError</type>
        <definition>SplashError Splash::arbitraryTransformImage</definition>
        <argsstring>(SplashImageSource src, SplashICCTransform tf, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, SplashCoord *mat, GBool interpolate, GBool tilingPattern=gFalse)</argsstring>
        <name>arbitraryTransformImage</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>SplashICCTransform</type>
          <declname>tf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>SplashCoord *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>tilingPattern</declname>
          <defval>gFalse</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="365" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="3825" bodyend="4132"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a7eee78ca72523b594f15132f5c67862b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
        <definition>SplashBitmap * Splash::scaleImage</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, GBool interpolate, GBool tilingPattern=gFalse)</argsstring>
        <name>scaleImage</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>tilingPattern</declname>
          <defval>gFalse</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="370" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4150" bodyend="4185"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1acb67528226f3d2d75c4f73a9a4caa4cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleImageYdXd</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleImageYdXd</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="374" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4187" bodyend="4421"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ae002d39ced809d663b1fd08d4a116609" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleImageYdXu</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleImageYdXu</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="379" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4423" bodyend="4571"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a5751725a241acf1e0f7be2b6fe99a21b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleImageYuXd</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleImageYuXd</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="384" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4573" bodyend="4731"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ac56d06bda45fe867bf48dc82a6c27682" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleImageYuXu</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleImageYuXu</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="389" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4733" bodyend="4887"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a841e6053c90c2a562cd57a2d810d1076" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::scaleImageYuXuBilinear</definition>
        <argsstring>(SplashImageSource src, void *srcData, SplashColorMode srcMode, int nComps, GBool srcAlpha, int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, SplashBitmap *dest)</argsstring>
        <name>scaleImageYuXuBilinear</name>
        <param>
          <type>SplashImageSource</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>srcData</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>srcMode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="394" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4914" bodyend="5032"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1a1f761e7f2347bcad76f8832172b407e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::vertFlipImage</definition>
        <argsstring>(SplashBitmap *img, int width, int height, int nComps)</argsstring>
        <name>vertFlipImage</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="399" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5034" bodyend="5064"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ab329a9448b9d92a100cf545c67a7e2ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::blitImage</definition>
        <argsstring>(SplashBitmap *src, GBool srcAlpha, int xDest, int yDest, SplashClipResult clipRes)</argsstring>
        <name>blitImage</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <param>
          <type>SplashClipResult</type>
          <declname>clipRes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="401" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5073" bodyend="5157"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1ad4fbce10e9c98a4e765a7682b61b6a10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::blitImageClipped</definition>
        <argsstring>(SplashBitmap *src, GBool srcAlpha, int xSrc, int ySrc, int xDest, int yDest, int w, int h)</argsstring>
        <name>blitImageClipped</name>
        <param>
          <type><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>srcAlpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xSrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ySrc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yDest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="403" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="5159" bodyend="5225"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1af2b136af88368387ddc87852ff72f07b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::dumpPath</definition>
        <argsstring>(SplashPath *path)</argsstring>
        <name>dumpPath</name>
        <param>
          <type><ref refid="class_splash_path" kindref="compound">SplashPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="406" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="6321" bodyend="6332"/>
      </memberdef>
      <memberdef kind="function" id="class_splash_1acc965369b27c6308e9097f7369742575" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Splash::dumpXPath</definition>
        <argsstring>(SplashXPath *path)</argsstring>
        <name>dumpXPath</name>
        <param>
          <type><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.h" line="407" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="6334" bodyend="6345"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="thirdparty/poppler/splash/Splash.h" line="90" column="1" bodyfile="thirdparty/poppler/splash/Splash.h" bodystart="90" bodyend="429"/>
    <listofallmembers>
      <member refid="class_splash_1aaa4f8c826cc71f38b4c572333010875f" prot="private" virt="non-virtual"><scope>Splash</scope><name>aaBuf</name></member>
      <member refid="class_splash_1a942f7534b83cb0fc83730cf91fa1fbb6" prot="private" virt="non-virtual"><scope>Splash</scope><name>aaBufY</name></member>
      <member refid="class_splash_1a69cfd43661d99b792686dbf0223edd8b" prot="private" virt="non-virtual"><scope>Splash</scope><name>aaGamma</name></member>
      <member refid="class_splash_1a8f82460aeaa1866105ee5a0e5cd7c4a6" prot="private" virt="non-virtual"><scope>Splash</scope><name>alpha0Bitmap</name></member>
      <member refid="class_splash_1a7d077c0e59151b22122751f36ea282bb" prot="private" virt="non-virtual"><scope>Splash</scope><name>alpha0X</name></member>
      <member refid="class_splash_1ac44a6d7b5ec9ac71d59b683d872d497e" prot="private" virt="non-virtual"><scope>Splash</scope><name>alpha0Y</name></member>
      <member refid="class_splash_1a2e9cdb188bae54d1a671f0af5fc479e3" prot="private" virt="non-virtual"><scope>Splash</scope><name>arbitraryTransformImage</name></member>
      <member refid="class_splash_1ad55213da057377ed3b6e7b11e8297407" prot="private" virt="non-virtual"><scope>Splash</scope><name>arbitraryTransformMask</name></member>
      <member refid="class_splash_1ae9d752c6c7a67a25830d98438587ee0d" prot="private" virt="non-virtual"><scope>Splash</scope><name>bitmap</name></member>
      <member refid="class_splash_1a2a2ff01b34df5947d9c4844ca2fbdf3d" prot="public" virt="non-virtual"><scope>Splash</scope><name>blitImage</name></member>
      <member refid="class_splash_1ab329a9448b9d92a100cf545c67a7e2ff" prot="private" virt="non-virtual"><scope>Splash</scope><name>blitImage</name></member>
      <member refid="class_splash_1ad4fbce10e9c98a4e765a7682b61b6a10" prot="private" virt="non-virtual"><scope>Splash</scope><name>blitImageClipped</name></member>
      <member refid="class_splash_1a43e36f193ca193b467e2ffcec905d8d6" prot="private" virt="non-virtual"><scope>Splash</scope><name>blitMask</name></member>
      <member refid="class_splash_1a42ed4fb1b6b8aca9b44c7d713c61d90f" prot="public" virt="non-virtual"><scope>Splash</scope><name>blitTransparent</name></member>
      <member refid="class_splash_1a2227ac959c62cf5440fbde97cd1c3afb" prot="public" virt="non-virtual"><scope>Splash</scope><name>clear</name></member>
      <member refid="class_splash_1a3fbe0c8a19a0888372258428f218e277" prot="public" virt="non-virtual"><scope>Splash</scope><name>clearModRegion</name></member>
      <member refid="class_splash_1ad02ead9c42c23297402cf461fe434b89" prot="public" virt="non-virtual"><scope>Splash</scope><name>clearPatternAlpha</name></member>
      <member refid="class_splash_1adecd5e37987bdfc3f2cbae88dba784b6" prot="public" virt="non-virtual"><scope>Splash</scope><name>clipResetToRect</name></member>
      <member refid="class_splash_1aa35122d17c2480b34cd26cd4d3e24a69" prot="public" virt="non-virtual"><scope>Splash</scope><name>clipToPath</name></member>
      <member refid="class_splash_1a34d006228f52d28102fa94fa5ebaee4b" prot="public" virt="non-virtual"><scope>Splash</scope><name>clipToRect</name></member>
      <member refid="class_splash_1acab7f46f2fbceaad04db0e1edfbba0a5" prot="public" virt="non-virtual"><scope>Splash</scope><name>composite</name></member>
      <member refid="class_splash_1adc56cfab29e8b0a0561483946a13836c" prot="public" virt="non-virtual"><scope>Splash</scope><name>compositeBackground</name></member>
      <member refid="class_splash_1af580fef0bde57a687111f0ea5df924f4" prot="private" virt="non-virtual"><scope>Splash</scope><name>debugMode</name></member>
      <member refid="class_splash_1ad6843595f69ac3ddcea62423006d0488" prot="private" virt="non-virtual"><scope>Splash</scope><name>drawAALine</name></member>
      <member refid="class_splash_1a72160692b3a9d0ad287e83f932bae60b" prot="private" virt="non-virtual"><scope>Splash</scope><name>drawAAPixel</name></member>
      <member refid="class_splash_1a50f654626b5f999ddc98a0f936f16c65" prot="private" virt="non-virtual"><scope>Splash</scope><name>drawAAPixelInit</name></member>
      <member refid="class_splash_1a1142a76b1cc63d0b98c0c376607ced6a" prot="public" virt="non-virtual"><scope>Splash</scope><name>drawImage</name></member>
      <member refid="class_splash_1a939a74f0cd771619d646cd5d96ac3579" prot="private" virt="non-virtual"><scope>Splash</scope><name>drawPixel</name></member>
      <member refid="class_splash_1ab9e09201336938eab405e2bd9bbd4a6c" prot="private" virt="non-virtual"><scope>Splash</scope><name>drawSpan</name></member>
      <member refid="class_splash_1af2b136af88368387ddc87852ff72f07b" prot="private" virt="non-virtual"><scope>Splash</scope><name>dumpPath</name></member>
      <member refid="class_splash_1acc965369b27c6308e9097f7369742575" prot="private" virt="non-virtual"><scope>Splash</scope><name>dumpXPath</name></member>
      <member refid="class_splash_1a06d1d5df495306fa8fe93316514bba6d" prot="public" virt="non-virtual"><scope>Splash</scope><name>fill</name></member>
      <member refid="class_splash_1a4b091ef40d4c853e701688957fb20178" prot="public" virt="non-virtual"><scope>Splash</scope><name>fillChar</name></member>
      <member refid="class_splash_1a0dcf2e4d60a6cef5bc47b2bf6d1a06a6" prot="public" virt="non-virtual"><scope>Splash</scope><name>fillGlyph</name></member>
      <member refid="class_splash_1a7861c744e51d2ab094f1327e2d1a8617" prot="private" virt="non-virtual"><scope>Splash</scope><name>fillGlyph2</name></member>
      <member refid="class_splash_1acb530bbc336c4c4c8d4287b38f3ca700" prot="public" virt="non-virtual"><scope>Splash</scope><name>fillImageMask</name></member>
      <member refid="class_splash_1a820dd92194c8ab3ef2469550dd851118" prot="private" virt="non-virtual"><scope>Splash</scope><name>fillWithPattern</name></member>
      <member refid="class_splash_1abfc0be752f145921ecce8085bbe579a9" prot="private" virt="non-virtual"><scope>Splash</scope><name>flattenCurve</name></member>
      <member refid="class_splash_1abe27b15b53ac0a0c89ba6cc2d7627cad" prot="private" virt="non-virtual"><scope>Splash</scope><name>flattenPath</name></member>
      <member refid="class_splash_1ac2601ca7ad064c1a974e7da4fb8486ca" prot="private" virt="non-virtual"><scope>Splash</scope><name>getBBoxFP</name></member>
      <member refid="class_splash_1a8473a3bc5bcdddddf132522d04cc4f23" prot="public" virt="non-virtual"><scope>Splash</scope><name>getBitmap</name></member>
      <member refid="class_splash_1a44ef29bccff9f2b5476872304b5727a6" prot="public" virt="non-virtual"><scope>Splash</scope><name>getBlendFunc</name></member>
      <member refid="class_splash_1a46c3e4d348f995c3e03c643f60e3b25c" prot="public" virt="non-virtual"><scope>Splash</scope><name>getClip</name></member>
      <member refid="class_splash_1ad99c9dd98e82af01614d57971f45c2c0" prot="public" virt="non-virtual"><scope>Splash</scope><name>getClipRes</name></member>
      <member refid="class_splash_1a224248393373eb06ff97f85b83949da0" prot="public" virt="non-virtual"><scope>Splash</scope><name>getFillAlpha</name></member>
      <member refid="class_splash_1a2065172a4bacc02191244dc5827b2d42" prot="public" virt="non-virtual"><scope>Splash</scope><name>getFillPattern</name></member>
      <member refid="class_splash_1a8bead7e8a151d5ab90f5606b974f0f05" prot="public" virt="non-virtual"><scope>Splash</scope><name>getFlatness</name></member>
      <member refid="class_splash_1a0562500bbb1490e36b4a101898de96ab" prot="public" virt="non-virtual"><scope>Splash</scope><name>getInNonIsolatedGroup</name></member>
      <member refid="class_splash_1ad434e409d6e9ee9c7c306edd7052913c" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineCap</name></member>
      <member refid="class_splash_1adc1a50caa6f7022b1d5d8602b529e9e6" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineDash</name></member>
      <member refid="class_splash_1a3b773a60b0c6f4ee6331d99fcfe0f2bc" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineDashLength</name></member>
      <member refid="class_splash_1a6030dee5c03f0249844baf36026aaba7" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineDashPhase</name></member>
      <member refid="class_splash_1adc8adb06fb85cf4a1511f6e5de2f3f27" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineJoin</name></member>
      <member refid="class_splash_1a23f5fdeee23654dc1fefea80edbd86f5" prot="public" virt="non-virtual"><scope>Splash</scope><name>getLineWidth</name></member>
      <member refid="class_splash_1a5edcacaa3be8a8bbd7df62d5ee29395b" prot="public" virt="non-virtual"><scope>Splash</scope><name>getMatrix</name></member>
      <member refid="class_splash_1a4c321794087af503395f65a0f0900eb0" prot="public" virt="non-virtual"><scope>Splash</scope><name>getMiterLimit</name></member>
      <member refid="class_splash_1a919d28d25ba20d436dde4b469650c1f3" prot="public" virt="non-virtual"><scope>Splash</scope><name>getModRegion</name></member>
      <member refid="class_splash_1ac09824d25263602384f9ac0c68914eac" prot="public" virt="non-virtual"><scope>Splash</scope><name>getScreen</name></member>
      <member refid="class_splash_1af0374f6742131f6ff674e1db4eec7f32" prot="public" virt="non-virtual"><scope>Splash</scope><name>getSoftMask</name></member>
      <member refid="class_splash_1aea87931b5cbb69eab3f0e795c904011b" prot="public" virt="non-virtual"><scope>Splash</scope><name>getStrokeAdjust</name></member>
      <member refid="class_splash_1adbd9347c0f2b325b2818b5bccd5937e0" prot="public" virt="non-virtual"><scope>Splash</scope><name>getStrokeAlpha</name></member>
      <member refid="class_splash_1ace80e735dccaafe21f30cd01c08cbdbc" prot="public" virt="non-virtual"><scope>Splash</scope><name>getStrokePattern</name></member>
      <member refid="class_splash_1acdbd384da9c57b1f2e09cadaa0a9bfdb" prot="public" virt="non-virtual"><scope>Splash</scope><name>getThinLineMode</name></member>
      <member refid="class_splash_1aae06c8d3b37439105ddeeb7d350600e2" prot="public" virt="non-virtual"><scope>Splash</scope><name>getVectorAntialias</name></member>
      <member refid="class_splash_1a3b8e212507726bfb19c870e411d6b0c6" prot="public" virt="non-virtual"><scope>Splash</scope><name>gouraudTriangleShadedFill</name></member>
      <member refid="class_splash_1a420756cdfe2e6d6a13e6dfbfddaf0873" prot="private" virt="non-virtual"><scope>Splash</scope><name>inShading</name></member>
      <member refid="class_splash_1a60c59a3d200d07e79e5bfebe90177eb9" prot="private" virt="non-virtual"><scope>Splash</scope><name>makeDashedPath</name></member>
      <member refid="class_splash_1aa24ad06d9e35f7125810c0602946eb25" prot="public" virt="non-virtual"><scope>Splash</scope><name>makeStrokePath</name></member>
      <member refid="class_splash_1a69baba611825f7644d19f1e8c9a55887" prot="private" virt="non-virtual"><scope>Splash</scope><name>minLineWidth</name></member>
      <member refid="class_splash_1ae05e299fcb4db04be935346e2d4b8de1" prot="private" virt="non-virtual"><scope>Splash</scope><name>modXMax</name></member>
      <member refid="class_splash_1adad008198e66fe87ebae8edd69da5ae0" prot="private" virt="non-virtual"><scope>Splash</scope><name>modXMin</name></member>
      <member refid="class_splash_1a84cf6f04c3882536136a13a0b633a1a2" prot="private" virt="non-virtual"><scope>Splash</scope><name>modYMax</name></member>
      <member refid="class_splash_1a721ca5ea530e577004174a475bfacc9e" prot="private" virt="non-virtual"><scope>Splash</scope><name>modYMin</name></member>
      <member refid="class_splash_1ab7cc1ae2536fbde47c9a192695378769" prot="private" virt="non-virtual"><scope>Splash</scope><name>opClipRes</name></member>
      <member refid="class_splash_1a72063677d0ff3de915a98d017f3f82d3" prot="private" virt="non-virtual"><scope>Splash</scope><name>pathAllOutside</name></member>
      <member refid="class_splash_1a81d90e7cfef34ec3620920f9bd8113ed" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeIncX</name></member>
      <member refid="class_splash_1a80097b7ac052eb31a055715897ee40c5" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeInit</name></member>
      <member refid="class_splash_1a64542b6c425d9deca858edf73794b0ad" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeNonIsoGroupCorrection</name></member>
      <member refid="class_splash_1ab895ff1b324358d31d63e392dfc0fbcb" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeResultColorAlphaBlend</name></member>
      <member refid="class_splash_1a9e904e374ac69e468c28051c4aa3df26" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeResultColorAlphaNoBlend</name></member>
      <member refid="class_splash_1a806eec383e60d9a1b5623fb3c52178c4" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeResultColorNoAlphaBlend</name></member>
      <member refid="class_splash_1a219f4da09b75f3fc9da18e1f0e63a1a0" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRun</name></member>
      <member refid="class_splash_1abb80724d2328438dfa5b2e0e09072356" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunAABGR8</name></member>
      <member refid="class_splash_1a9074c41d7daa4ec04b39c5ddc6cddc9f" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunAAMono1</name></member>
      <member refid="class_splash_1a7f74e33b369733b85567c31486cae2c2" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunAAMono8</name></member>
      <member refid="class_splash_1a88768531b23ae02d0c7ac09afef7a929" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunAARGB8</name></member>
      <member refid="class_splash_1a421982c55167fa111077fdda997c5d60" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunAAXBGR8</name></member>
      <member refid="class_splash_1a2a71123bc89f1dc8ac583c97dac133c3" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunSimpleBGR8</name></member>
      <member refid="class_splash_1a3e9ed1b297b4c57542a3cc7cf8baa9e5" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunSimpleMono1</name></member>
      <member refid="class_splash_1a04175cf63d85baf0b6942936ad4c851a" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunSimpleMono8</name></member>
      <member refid="class_splash_1a797b1bfe476e02c848c68df2275949db" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunSimpleRGB8</name></member>
      <member refid="class_splash_1a1b8992b43bcd8fe15fe4da04bbb09f70" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeRunSimpleXBGR8</name></member>
      <member refid="class_splash_1af6f167657f5c971ec5193f7ee716c422" prot="private" virt="non-virtual"><scope>Splash</scope><name>pipeSetXY</name></member>
      <member refid="class_splash_1abf142b5c7b365c697e9093d3a8a3a083" prot="public" virt="non-virtual"><scope>Splash</scope><name>restoreState</name></member>
      <member refid="class_splash_1a4447440ee2e01939927722c75bac1c5f" prot="public" virt="non-virtual"><scope>Splash</scope><name>saveState</name></member>
      <member refid="class_splash_1a7eee78ca72523b594f15132f5c67862b" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImage</name></member>
      <member refid="class_splash_1acb67528226f3d2d75c4f73a9a4caa4cd" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImageYdXd</name></member>
      <member refid="class_splash_1ae002d39ced809d663b1fd08d4a116609" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImageYdXu</name></member>
      <member refid="class_splash_1a5751725a241acf1e0f7be2b6fe99a21b" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImageYuXd</name></member>
      <member refid="class_splash_1ac56d06bda45fe867bf48dc82a6c27682" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImageYuXu</name></member>
      <member refid="class_splash_1a841e6053c90c2a562cd57a2d810d1076" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleImageYuXuBilinear</name></member>
      <member refid="class_splash_1a7bde056706cf380212727b6efb84b892" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleMask</name></member>
      <member refid="class_splash_1ac419e1744424f87db24b5291e61c2372" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleMaskYdXd</name></member>
      <member refid="class_splash_1a0c43e83dcc6a143e5ba002a716e111c3" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleMaskYdXu</name></member>
      <member refid="class_splash_1a10222adbb05d6f2d576dcb812d1b08ad" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleMaskYuXd</name></member>
      <member refid="class_splash_1a57328227a554cea2f5f59357cf559985" prot="private" virt="non-virtual"><scope>Splash</scope><name>scaleMaskYuXu</name></member>
      <member refid="class_splash_1aebff93e49668f8e2445ffad23158c612" prot="public" virt="non-virtual"><scope>Splash</scope><name>setBlendFunc</name></member>
      <member refid="class_splash_1a49b24530916151c116fafe8e72459075" prot="public" virt="non-virtual"><scope>Splash</scope><name>setDebugMode</name></member>
      <member refid="class_splash_1ad4424e0220eacc754c462bcb1c699f91" prot="public" virt="non-virtual"><scope>Splash</scope><name>setFillAlpha</name></member>
      <member refid="class_splash_1a1b7ed18dfe91be127dd19504d34bbc82" prot="public" virt="non-virtual"><scope>Splash</scope><name>setFillOverprint</name></member>
      <member refid="class_splash_1a1b641cc126b71af72bf439eebffdfa5a" prot="public" virt="non-virtual"><scope>Splash</scope><name>setFillPattern</name></member>
      <member refid="class_splash_1a9c7b426262b889f9db34e5c73511ddb8" prot="public" virt="non-virtual"><scope>Splash</scope><name>setFlatness</name></member>
      <member refid="class_splash_1ad2a5f527a8bc7a40d004eb8e42cffc30" prot="public" virt="non-virtual"><scope>Splash</scope><name>setInNonIsolatedGroup</name></member>
      <member refid="class_splash_1a1d563ce860bb1bf3f1eb298ab759d75d" prot="public" virt="non-virtual"><scope>Splash</scope><name>setInShading</name></member>
      <member refid="class_splash_1ac2b9231585cda50ea89f7fa338ff2556" prot="public" virt="non-virtual"><scope>Splash</scope><name>setLineCap</name></member>
      <member refid="class_splash_1ae4bd1142a83ef18770c49f3ed321e1d2" prot="public" virt="non-virtual"><scope>Splash</scope><name>setLineDash</name></member>
      <member refid="class_splash_1af71606158717cbb41ac9ec0e990b6507" prot="public" virt="non-virtual"><scope>Splash</scope><name>setLineJoin</name></member>
      <member refid="class_splash_1a14dce2571b9945cd2eb8108089e446d7" prot="public" virt="non-virtual"><scope>Splash</scope><name>setLineWidth</name></member>
      <member refid="class_splash_1a9b45e5ca3d47f49446eed9cc236c0e99" prot="public" virt="non-virtual"><scope>Splash</scope><name>setMatrix</name></member>
      <member refid="class_splash_1ab7fea98f63dfb69dce75771c690ba695" prot="public" virt="non-virtual"><scope>Splash</scope><name>setMinLineWidth</name></member>
      <member refid="class_splash_1adba96ffbb45a070d787331c6e4432533" prot="public" virt="non-virtual"><scope>Splash</scope><name>setMiterLimit</name></member>
      <member refid="class_splash_1a3335514dfae78549700357e23e3f7aa7" prot="public" virt="non-virtual"><scope>Splash</scope><name>setOverprintMask</name></member>
      <member refid="class_splash_1a6ec523ed5975f25a9376c451bd92a9dd" prot="public" virt="non-virtual"><scope>Splash</scope><name>setOverprintMode</name></member>
      <member refid="class_splash_1a4ff332f9470954ae7ed2b4dafb410031" prot="public" virt="non-virtual"><scope>Splash</scope><name>setPatternAlpha</name></member>
      <member refid="class_splash_1ab164a85adeb5b5da2169d39aec2da108" prot="public" virt="non-virtual"><scope>Splash</scope><name>setScreen</name></member>
      <member refid="class_splash_1a4c6114ec5c97d841b54e113690d3ef61" prot="public" virt="non-virtual"><scope>Splash</scope><name>setSoftMask</name></member>
      <member refid="class_splash_1af3629d897fe921752448955f5029c3e5" prot="public" virt="non-virtual"><scope>Splash</scope><name>setStrokeAdjust</name></member>
      <member refid="class_splash_1a8fa6d6522f721721edeabbd2980945f5" prot="public" virt="non-virtual"><scope>Splash</scope><name>setStrokeAlpha</name></member>
      <member refid="class_splash_1a051a358e45801533d46962d80f7b4c59" prot="public" virt="non-virtual"><scope>Splash</scope><name>setStrokeOverprint</name></member>
      <member refid="class_splash_1a4b3c915b8edd5de8e586933137d9183a" prot="public" virt="non-virtual"><scope>Splash</scope><name>setStrokePattern</name></member>
      <member refid="class_splash_1a93525d02e77aefdf2b7f2279cc702863" prot="public" virt="non-virtual"><scope>Splash</scope><name>setThinLineMode</name></member>
      <member refid="class_splash_1af3e0690f908cb75f766dc1be75d99028" prot="public" virt="non-virtual"><scope>Splash</scope><name>setTransfer</name></member>
      <member refid="class_splash_1a1baf1427f03fc80797125d324bb59be1" prot="public" virt="non-virtual"><scope>Splash</scope><name>setVectorAntialias</name></member>
      <member refid="class_splash_1a67c9dbe2505660b09a4e963c209e0c6b" prot="public" virt="non-virtual"><scope>Splash</scope><name>shadedFill</name></member>
      <member refid="class_splash_1a016d7f7cf7ccc86a8684095f2fee084e" prot="public" virt="non-virtual"><scope>Splash</scope><name>Splash</name></member>
      <member refid="class_splash_1a6a08ac060cf7e67551c35bf8ddec7f90" prot="public" virt="non-virtual"><scope>Splash</scope><name>Splash</name></member>
      <member refid="class_splash_1a56dbe7af19e36f38498a33494bd52e2a" prot="private" virt="non-virtual"><scope>Splash</scope><name>state</name></member>
      <member refid="class_splash_1aba090f8f57fd1710e6242fe7899cbbe1" prot="public" virt="non-virtual"><scope>Splash</scope><name>stroke</name></member>
      <member refid="class_splash_1ab8c2617889388a493eecbf94244a4072" prot="private" virt="non-virtual"><scope>Splash</scope><name>strokeNarrow</name></member>
      <member refid="class_splash_1a4b39d46beda00043bba815e952a2356c" prot="private" virt="non-virtual"><scope>Splash</scope><name>strokeWide</name></member>
      <member refid="class_splash_1a78304a3c95eba747639bb627d9b7d688" prot="private" virt="non-virtual"><scope>Splash</scope><name>thinLineMode</name></member>
      <member refid="class_splash_1a12d8660c83bf1e6af49b256d2825419c" prot="private" virt="non-virtual"><scope>Splash</scope><name>transform</name></member>
      <member refid="class_splash_1aa087619c7a1a78bb8e1d0f031f829db0" prot="private" virt="non-virtual"><scope>Splash</scope><name>updateModX</name></member>
      <member refid="class_splash_1a5c6ef59e1f97de531f4b474d4a3e11bc" prot="private" virt="non-virtual"><scope>Splash</scope><name>updateModY</name></member>
      <member refid="class_splash_1a68efcf2585543143d57cc5a4cfacb965" prot="private" virt="non-virtual"><scope>Splash</scope><name>vectorAntialias</name></member>
      <member refid="class_splash_1a1f761e7f2347bcad76f8832172b407e2" prot="private" virt="non-virtual"><scope>Splash</scope><name>vertFlipImage</name></member>
      <member refid="class_splash_1a30431fcefd14e3859c20c000439bead8" prot="public" virt="non-virtual"><scope>Splash</scope><name>xorFill</name></member>
      <member refid="class_splash_1a79ad60c130603f25b888235cd5d2c6c1" prot="public" virt="non-virtual"><scope>Splash</scope><name>~Splash</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
