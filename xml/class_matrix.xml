<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_matrix" kind="class" language="C++" prot="public">
    <compoundname>Matrix</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_matrix_1ab4ca0a18fcf43fcec277046ae12026ef" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Matrix::m[6]</definition>
        <argsstring>[6]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="61" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_matrix_1a07f82bad304bab7c24872acd5c9130b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix::init</definition>
        <argsstring>(double xx, double yx, double xy, double yy, double x0, double y0)</argsstring>
        <name>init</name>
        <param>
          <type>double</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="63" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a51b6940ea1a7cea62b26eb4b481b6fd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool Matrix::invertTo</definition>
        <argsstring>(Matrix *other) const</argsstring>
        <name>invertTo</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="66" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a3d27c6554d2f35540d849fd782aa80a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix::translate</definition>
        <argsstring>(double tx, double ty)</argsstring>
        <name>translate</name>
        <param>
          <type>double</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="67" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a475b48e157a374b27d25a393fd4aae86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix::scale</definition>
        <argsstring>(double sx, double sy)</argsstring>
        <name>scale</name>
        <param>
          <type>double</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="68" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="92" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ae38facbc1252c714d19905e1b40b3d04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix::transform</definition>
        <argsstring>(double x, double y, double *tx, double *ty) const</argsstring>
        <name>transform</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="69" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="100" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a0b959a2e367c53ebde140772ea9281b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Matrix::determinant</definition>
        <argsstring>() const</argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="70" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a55a5708512effe359ab294bfe61dfcfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Matrix::norm</definition>
        <argsstring>() const</argsstring>
        <name>norm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="71" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="112" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="thirdparty/poppler/poppler/GfxState.h" line="59" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="59" bodyend="72"/>
    <listofallmembers>
      <member refid="class_matrix_1a0b959a2e367c53ebde140772ea9281b5" prot="public" virt="non-virtual"><scope>Matrix</scope><name>determinant</name></member>
      <member refid="class_matrix_1a07f82bad304bab7c24872acd5c9130b8" prot="public" virt="non-virtual"><scope>Matrix</scope><name>init</name></member>
      <member refid="class_matrix_1a51b6940ea1a7cea62b26eb4b481b6fd5" prot="public" virt="non-virtual"><scope>Matrix</scope><name>invertTo</name></member>
      <member refid="class_matrix_1ab4ca0a18fcf43fcec277046ae12026ef" prot="public" virt="non-virtual"><scope>Matrix</scope><name>m</name></member>
      <member refid="class_matrix_1a55a5708512effe359ab294bfe61dfcfc" prot="public" virt="non-virtual"><scope>Matrix</scope><name>norm</name></member>
      <member refid="class_matrix_1a475b48e157a374b27d25a393fd4aae86" prot="public" virt="non-virtual"><scope>Matrix</scope><name>scale</name></member>
      <member refid="class_matrix_1ae38facbc1252c714d19905e1b40b3d04" prot="public" virt="non-virtual"><scope>Matrix</scope><name>transform</name></member>
      <member refid="class_matrix_1a3d27c6554d2f35540d849fd782aa80a1" prot="public" virt="non-virtual"><scope>Matrix</scope><name>translate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
