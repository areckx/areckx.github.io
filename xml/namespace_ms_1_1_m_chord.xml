<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_ms_1_1_m_chord" kind="namespace" language="C++">
    <compoundname>Ms::MChord</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="importmidi__chord_8cpp_1ad9fd16f218d8912a1ce2de42ee55c155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MChord::isGrandStaffProgram</definition>
        <argsstring>(int program)</argsstring>
        <name>isGrandStaffProgram</name>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="17" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="17" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1ace3cdac75c5aec863d4850d107ae0dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt;::iterator</type>
        <definition>std::multimap&lt; ReducedFraction, MidiChord &gt;::iterator Ms::MChord::findFirstChordInRange</definition>
        <argsstring>(std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords, const ReducedFraction &amp;startRangeTick, const ReducedFraction &amp;endRangeTick)</argsstring>
        <name>findFirstChordInRange</name>
        <param>
          <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>startRangeTick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>endRangeTick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="44" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a13d89e642958454db281acace1e741e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt;::const_iterator</type>
        <definition>std::multimap&lt; ReducedFraction, MidiChord &gt;::const_iterator Ms::MChord::findFirstChordInRange</definition>
        <argsstring>(const std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords, const ReducedFraction &amp;startRangeTick, const ReducedFraction &amp;endRangeTick)</argsstring>
        <name>findFirstChordInRange</name>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>startRangeTick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>endRangeTick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="55" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1aaba7f399f27e5c5202de93affd2e1736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
        <definition>const ReducedFraction &amp; Ms::MChord::minAllowedDuration</definition>
        <argsstring>()</argsstring>
        <name>minAllowedDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="65" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a12d3a45e408fcd3b54ebc53c120ef86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::minNoteOffTime</definition>
        <argsstring>(const QList&lt; MidiNote &gt; &amp;notes)</argsstring>
        <name>minNoteOffTime</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref> &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="71" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="71" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a381fed64646d63ca6e40694a2cf85377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::maxNoteOffTime</definition>
        <argsstring>(const QList&lt; MidiNote &gt; &amp;notes)</argsstring>
        <name>maxNoteOffTime</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref> &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="84" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="84" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a1a52a903970a14b39b3e9e08c50db604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::minNoteLen</definition>
        <argsstring>(const std::pair&lt; const ReducedFraction, MidiChord &gt; &amp;chord)</argsstring>
        <name>minNoteLen</name>
        <param>
          <type>const std::pair&lt; const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="94" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a2fbb94bcf540f5d434422fc45576d674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::maxNoteLen</definition>
        <argsstring>(const std::pair&lt; const ReducedFraction, MidiChord &gt; &amp;chord)</argsstring>
        <name>maxNoteLen</name>
        <param>
          <type>const std::pair&lt; const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="100" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a7d354c5805a8860fbb4e5252837ca872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::removeOverlappingNotes</definition>
        <argsstring>(QList&lt; MidiNote &gt; &amp;notes)</argsstring>
        <name>removeOverlappingNotes</name>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref> &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="106" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="106" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a99e7de72abf358c2486abe884fc8ebfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::removeOverlappingNotes</definition>
        <argsstring>(std::multimap&lt; int, MTrack &gt; &amp;tracks)</argsstring>
        <name>removeOverlappingNotes</name>
        <param>
          <type>std::multimap&lt; int, <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="132" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="132" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a1d0ccee8eddc0b4f66ec17770818cea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::setToNegative</definition>
        <argsstring>(ReducedFraction &amp;v1, ReducedFraction &amp;v2, ReducedFraction &amp;v3)</argsstring>
        <name>setToNegative</name>
        <param>
          <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="270" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="270" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a3b463b3558b90447ed032d674b2f0bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MChord::hasNotesWithEqualPitch</definition>
        <argsstring>(const MidiChord &amp;chord1, const MidiChord &amp;chord2)</argsstring>
        <name>hasNotesWithEqualPitch</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &amp;</type>
          <declname>chord1</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &amp;</type>
          <declname>chord2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="277" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="277" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1aa68a23d40a53895a79b1c6b8a7587ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::collectChords</definition>
        <argsstring>(std::multimap&lt; int, MTrack &gt; &amp;tracks, const ReducedFraction &amp;humanTolCoeff, const ReducedFraction &amp;nonHumanTolCoeff)</argsstring>
        <name>collectChords</name>
        <param>
          <type>std::multimap&lt; int, <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>humanTolCoeff</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>nonHumanTolCoeff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="289" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="289" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a1740b813e9312e5fd2702f392514bd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::collectChords</definition>
        <argsstring>(MTrack &amp;track, const ReducedFraction &amp;humanTolCoeff, const ReducedFraction &amp;nonHumanTolCoeff)</argsstring>
        <name>collectChords</name>
        <param>
          <type><ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>humanTolCoeff</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>nonHumanTolCoeff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="322" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="322" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1ae3f8f4959af73ff73b5b2e23620d43d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::sortNotesByPitch</definition>
        <argsstring>(std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords)</argsstring>
        <name>sortNotesByPitch</name>
        <param>
          <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="401" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="401" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a4bb3013a27f532315b421e80623fe25a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::sortNotesByLength</definition>
        <argsstring>(std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords)</argsstring>
        <name>sortNotesByLength</name>
        <param>
          <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="417" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="417" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1ada80953344f1d0aca6c1d5cbfdf4ff31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::splitUnequalChords</definition>
        <argsstring>(std::multimap&lt; int, MTrack &gt; &amp;tracks)</argsstring>
        <name>splitUnequalChords</name>
        <param>
          <type>std::multimap&lt; int, <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="437" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="437" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a24e70b7c2a733204e0a1c1d8b0585346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::findMinDuration</definition>
        <argsstring>(const ReducedFraction &amp;onTime, const QList&lt; MidiChord &gt; &amp;midiChords, const ReducedFraction &amp;length)</argsstring>
        <name>findMinDuration</name>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>onTime</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>midiChords</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="472" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="472" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1acea1745e42c3da81b1ef399bcec3a0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::mergeChordsWithEqualOnTimeAndVoice</definition>
        <argsstring>(std::multimap&lt; int, MTrack &gt; &amp;tracks)</argsstring>
        <name>mergeChordsWithEqualOnTimeAndVoice</name>
        <param>
          <type>std::multimap&lt; int, <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="487" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="487" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1ae3bcc82449b10e9602ed1242757aa023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MChord::chordAveragePitch</definition>
        <argsstring>(const QList&lt; MidiNote &gt; &amp;notes, int beg, int end)</argsstring>
        <name>chordAveragePitch</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref> &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="516" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="516" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1aec28fc542bccb92170a0d05607cf1608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MChord::chordAveragePitch</definition>
        <argsstring>(const QList&lt; MidiNote &gt; &amp;notes)</argsstring>
        <name>chordAveragePitch</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_midi_note" kindref="compound">MidiNote</ref> &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="528" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="528" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1aca6c444094ab09a4278f3a3801b7cdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref></type>
        <definition>ReducedFraction Ms::MChord::findMaxChordLength</definition>
        <argsstring>(const std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords)</argsstring>
        <name>findMaxChordLength</name>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="539" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="539" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1a875109b1ed6143de11b3da4667937314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt;::const_iterator &gt;</type>
        <definition>std::vector&lt; std::multimap&lt; ReducedFraction, MidiChord &gt;::const_iterator &gt; Ms::MChord::findChordsForTimeRange</definition>
        <argsstring>(int voice, const ReducedFraction &amp;onTime, const ReducedFraction &amp;offTime, const std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords, const ReducedFraction &amp;maxChordLength)</argsstring>
        <name>findChordsForTimeRange</name>
        <param>
          <type>int</type>
          <declname>voice</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>onTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>offTime</declname>
        </param>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>maxChordLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="552" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="552" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8cpp_1aec358fcb5bdb2b73bb7d78b896fe0560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MChord::setBarIndexes</definition>
        <argsstring>(std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords, const ReducedFraction &amp;basicQuant, const ReducedFraction &amp;lastTick, const TimeSigMap *sigmap)</argsstring>
        <name>setBarIndexes</name>
        <param>
          <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>basicQuant</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>lastTick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_time_sig_map" kindref="compound">TimeSigMap</ref> *</type>
          <declname>sigmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.cpp" line="586" column="1" bodyfile="mscore/importmidi/importmidi_chord.cpp" bodystart="586" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8h_1ac5157d90a46ab0956088949d85583675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
        </templateparamlist>
        <type>Iter</type>
        <definition>Iter Ms::MChord::findFirstChordInRange</definition>
        <argsstring>(const ReducedFraction &amp;startRangeTick, const ReducedFraction &amp;endRangeTick, const Iter &amp;startChordIt, const Iter &amp;endChordIt)</argsstring>
        <name>findFirstChordInRange</name>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>startRangeTick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>endRangeTick</declname>
        </param>
        <param>
          <type>const Iter &amp;</type>
          <declname>startChordIt</declname>
        </param>
        <param>
          <type>const Iter &amp;</type>
          <declname>endChordIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.h" line="66" column="1" bodyfile="mscore/importmidi/importmidi_chord.h" bodystart="66" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__chord_8h_1a253750e55841a235fc8cb0830e95e01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
        </templateparamlist>
        <type>Iter</type>
        <definition>Iter Ms::MChord::findEndChordInRange</definition>
        <argsstring>(const ReducedFraction &amp;endRangeTick, const Iter &amp;startChordIt, const Iter &amp;endChordIt)</argsstring>
        <name>findEndChordInRange</name>
        <param>
          <type>const <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &amp;</type>
          <declname>endRangeTick</declname>
        </param>
        <param>
          <type>const Iter &amp;</type>
          <declname>startChordIt</declname>
        </param>
        <param>
          <type>const Iter &amp;</type>
          <declname>endChordIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_chord.h" line="83" column="1" bodyfile="mscore/importmidi/importmidi_chord.h" bodystart="83" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/importmidi/importmidi_chord.cpp" line="15" column="1"/>
  </compounddef>
</doxygen>
