<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_stream_8h" kind="file" language="C++">
    <compoundname>Stream.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_goo_mutex_8h" local="yes">goo/GooMutex.h</includes>
    <includedby refid="_object_8h" local="yes">thirdparty/poppler/poppler/Object.h</includedby>
    <includedby refid="thirdparty_2poppler_2poppler_2lexer_8h" local="yes">thirdparty/poppler/poppler/Lexer.h</includedby>
    <includedby refid="_x_ref_8h" local="yes">thirdparty/poppler/poppler/XRef.h</includedby>
    <includedby refid="_p_d_f_doc_8h" local="yes">thirdparty/poppler/poppler/PDFDoc.h</includedby>
    <includedby refid="_cached_file_8h" local="yes">thirdparty/poppler/poppler/CachedFile.h</includedby>
    <includedby refid="_j_b_i_g2_stream_8h" local="yes">thirdparty/poppler/poppler/JBIG2Stream.h</includedby>
    <includedby refid="_decrypt_8h" local="yes">thirdparty/poppler/poppler/Decrypt.h</includedby>
    <includedby refid="_d_c_t_stream_8h" local="yes">thirdparty/poppler/poppler/DCTStream.h</includedby>
    <includedby refid="_flate_encoder_8h" local="yes">thirdparty/poppler/poppler/FlateEncoder.h</includedby>
    <includedby refid="_flate_stream_8h" local="yes">thirdparty/poppler/poppler/FlateStream.h</includedby>
    <includedby refid="_function_8cc" local="yes">thirdparty/poppler/poppler/Function.cc</includedby>
    <includedby refid="_gfx_8cc" local="yes">thirdparty/poppler/poppler/Gfx.cc</includedby>
    <includedby refid="_global_params_win_8cc" local="yes">thirdparty/poppler/poppler/GlobalParamsWin.cc</includedby>
    <includedby refid="_hints_8cc" local="yes">thirdparty/poppler/poppler/Hints.cc</includedby>
    <includedby refid="_j_arithmetic_decoder_8cc" local="yes">thirdparty/poppler/poppler/JArithmeticDecoder.cc</includedby>
    <includedby refid="_j_p_e_g2000_stream_8h" local="yes">thirdparty/poppler/poppler/JPEG2000Stream.h</includedby>
    <includedby refid="_j_p_x_stream_8h" local="yes">thirdparty/poppler/poppler/JPXStream.h</includedby>
    <includedby refid="_object_8cc" local="yes">thirdparty/poppler/poppler/Object.cc</includedby>
    <includedby refid="_output_dev_8cc" local="yes">thirdparty/poppler/poppler/OutputDev.cc</includedby>
    <includedby refid="_p_d_f_doc_8cc" local="yes">thirdparty/poppler/poppler/PDFDoc.cc</includedby>
    <includedby refid="_p_s_output_dev_8cc" local="yes">thirdparty/poppler/poppler/PSOutputDev.cc</includedby>
    <includedby refid="_sound_8cc" local="yes">thirdparty/poppler/poppler/Sound.cc</includedby>
    <includedby refid="_stream_8cc" local="yes">thirdparty/poppler/poppler/Stream.cc</includedby>
    <includedby refid="_x_ref_8cc" local="yes">thirdparty/poppler/poppler/XRef.cc</includedby>
    <includedby refid="poppler-document_8cc" local="no">thirdparty/poppler/qt5/poppler-document.cc</includedby>
    <includedby refid="poppler-embeddedfile_8cc" local="yes">thirdparty/poppler/qt5/poppler-embeddedfile.cc</includedby>
    <includedby refid="poppler-qiodeviceoutstream-private_8h" local="yes">thirdparty/poppler/qt5/poppler-qiodeviceoutstream-private.h</includedby>
    <includedby refid="poppler-sound_8cc" local="yes">thirdparty/poppler/qt5/poppler-sound.cc</includedby>
    <incdepgraph>
      <node id="90054">
        <label>stdarg.h</label>
      </node>
      <node id="90055">
        <label>stdlib.h</label>
      </node>
      <node id="90051">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="90046" relation="include">
        </childnode>
        <childnode refid="90045" relation="include">
        </childnode>
      </node>
      <node id="90058">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="90045" relation="include">
        </childnode>
        <childnode refid="90048" relation="include">
        </childnode>
        <childnode refid="90059" relation="include">
        </childnode>
      </node>
      <node id="90057">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="90054" relation="include">
        </childnode>
        <childnode refid="90045" relation="include">
        </childnode>
        <childnode refid="90047" relation="include">
        </childnode>
        <childnode refid="90052" relation="include">
        </childnode>
      </node>
      <node id="90061">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="90045" relation="include">
        </childnode>
        <childnode refid="90048" relation="include">
        </childnode>
        <childnode refid="90059" relation="include">
        </childnode>
      </node>
      <node id="90053">
        <label>limits.h</label>
      </node>
      <node id="90045">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="90046" relation="include">
        </childnode>
      </node>
      <node id="90056">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="90044">
        <label>thirdparty/poppler/poppler/Stream.h</label>
        <link refid="_stream_8h"/>
        <childnode refid="90045" relation="include">
        </childnode>
        <childnode refid="90046" relation="include">
        </childnode>
        <childnode refid="90047" relation="include">
        </childnode>
        <childnode refid="90048" relation="include">
        </childnode>
        <childnode refid="90059" relation="include">
        </childnode>
      </node>
      <node id="90060">
        <label>pthread.h</label>
      </node>
      <node id="90050">
        <label>string.h</label>
      </node>
      <node id="90052">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="90053" relation="include">
        </childnode>
        <childnode refid="90054" relation="include">
        </childnode>
        <childnode refid="90055" relation="include">
        </childnode>
        <childnode refid="90047" relation="include">
        </childnode>
      </node>
      <node id="90048">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="90049" relation="include">
        </childnode>
        <childnode refid="90046" relation="include">
        </childnode>
        <childnode refid="90050" relation="include">
        </childnode>
        <childnode refid="90047" relation="include">
        </childnode>
        <childnode refid="90051" relation="include">
        </childnode>
        <childnode refid="90052" relation="include">
        </childnode>
        <childnode refid="90056" relation="include">
        </childnode>
        <childnode refid="90057" relation="include">
        </childnode>
        <childnode refid="90058" relation="include">
        </childnode>
        <childnode refid="90061" relation="include">
        </childnode>
        <childnode refid="90044" relation="include">
        </childnode>
      </node>
      <node id="90059">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="90060" relation="include">
        </childnode>
      </node>
      <node id="90047">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="90045" relation="include">
        </childnode>
      </node>
      <node id="90049">
        <label>set</label>
      </node>
      <node id="90046">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="90099">
        <label>thirdparty/poppler/poppler/PDFDoc.cc</label>
        <link refid="_p_d_f_doc_8cc_source"/>
      </node>
      <node id="90095">
        <label>thirdparty/poppler/poppler/StdinPDFDocBuilder.h</label>
        <link refid="_stdin_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90094" relation="include">
        </childnode>
        <childnode refid="90096" relation="include">
        </childnode>
      </node>
      <node id="90121">
        <label>thirdparty/poppler/poppler/TextOutputDev.h</label>
        <link refid="_text_output_dev_8h_source"/>
        <childnode refid="90122" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90123" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90199">
        <label>thirdparty/poppler/poppler/PageTransition.cc</label>
        <link refid="_page_transition_8cc_source"/>
      </node>
      <node id="90079">
        <label>thirdparty/poppler/poppler/GfxFont.cc</label>
        <link refid="_gfx_font_8cc_source"/>
      </node>
      <node id="90173">
        <label>thirdparty/poppler/poppler/CurlCachedFile.cc</label>
        <link refid="_curl_cached_file_8cc_source"/>
      </node>
      <node id="90087">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="90176">
        <label>thirdparty/poppler/poppler/JBIG2Stream.h</label>
        <link refid="_j_b_i_g2_stream_8h_source"/>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90177" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
      </node>
      <node id="90191">
        <label>thirdparty/poppler/poppler/JArithmeticDecoder.cc</label>
        <link refid="_j_arithmetic_decoder_8cc_source"/>
      </node>
      <node id="90167">
        <label>thirdparty/poppler/poppler/Rendition.cc</label>
        <link refid="_rendition_8cc_source"/>
      </node>
      <node id="90166">
        <label>thirdparty/poppler/poppler/FileSpec.cc</label>
        <link refid="_file_spec_8cc_source"/>
      </node>
      <node id="90123">
        <label>thirdparty/poppler/poppler/TextOutputDev.cc</label>
        <link refid="_text_output_dev_8cc_source"/>
      </node>
      <node id="90082">
        <label>thirdparty/poppler/poppler/ViewerPreferences.cc</label>
        <link refid="_viewer_preferences_8cc_source"/>
      </node>
      <node id="90077">
        <label>thirdparty/poppler/poppler/FontInfo.cc</label>
        <link refid="_font_info_8cc_source"/>
      </node>
      <node id="90091">
        <label>thirdparty/poppler/poppler/CurlPDFDocBuilder.cc</label>
        <link refid="_curl_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90200">
        <label>thirdparty/poppler/qt5/poppler-page-transition.cc</label>
        <link refid="poppler-page-transition_8cc_source"/>
      </node>
      <node id="90185">
        <label>thirdparty/poppler/poppler/FlateEncoder.h</label>
        <link refid="_flate_encoder_8h_source"/>
        <childnode refid="90186" relation="include">
        </childnode>
      </node>
      <node id="90143">
        <label>thirdparty/poppler/poppler/Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="90119" relation="include">
        </childnode>
        <childnode refid="90078" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
      </node>
      <node id="90129">
        <label>thirdparty/poppler/poppler/GfxState_helpers.h</label>
        <link refid="_gfx_state__helpers_8h_source"/>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90130" relation="include">
        </childnode>
      </node>
      <node id="90186">
        <label>thirdparty/poppler/poppler/FlateEncoder.cc</label>
        <link refid="_flate_encoder_8cc_source"/>
      </node>
      <node id="90153">
        <label>thirdparty/poppler/poppler/XRef.h</label>
        <link refid="_x_ref_8h_source"/>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90087" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90076" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90152" relation="include">
        </childnode>
        <childnode refid="90072" relation="include">
        </childnode>
        <childnode refid="90154" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90147" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
      </node>
      <node id="90105">
        <label>thirdparty/poppler/qt5/poppler-annotation.cc</label>
        <link refid="poppler-annotation_8cc_source"/>
      </node>
      <node id="90119">
        <label>thirdparty/poppler/poppler/GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="90120" relation="include">
        </childnode>
        <childnode refid="90121" relation="include">
        </childnode>
        <childnode refid="90122" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90124" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90128" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90129" relation="include">
        </childnode>
        <childnode refid="90127" relation="include">
        </childnode>
        <childnode refid="90131" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90132" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90133" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
        <childnode refid="90135" relation="include">
        </childnode>
        <childnode refid="90136" relation="include">
        </childnode>
        <childnode refid="90104" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90137" relation="include">
        </childnode>
        <childnode refid="90138" relation="include">
        </childnode>
      </node>
      <node id="90201">
        <label>thirdparty/poppler/qt5/poppler-annotation-helper.h</label>
        <link refid="poppler-annotation-helper_8h_source"/>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90109" relation="include">
        </childnode>
      </node>
      <node id="90161">
        <label>thirdparty/poppler/poppler/GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90086" relation="include">
        </childnode>
        <childnode refid="90121" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90124" relation="include">
        </childnode>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90079" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90162" relation="include">
        </childnode>
        <childnode refid="90150" relation="include">
        </childnode>
        <childnode refid="90127" relation="include">
        </childnode>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90135" relation="include">
        </childnode>
      </node>
      <node id="90106">
        <label>thirdparty/poppler/qt5/poppler-document.cc</label>
        <link refid="poppler-document_8cc_source"/>
      </node>
      <node id="90072">
        <label>thirdparty/poppler/poppler/Object.cc</label>
        <link refid="_object_8cc_source"/>
      </node>
      <node id="90112">
        <label>thirdparty/poppler/qt5/poppler-optcontent.cc</label>
        <link refid="poppler-optcontent_8cc_source"/>
      </node>
      <node id="90111">
        <label>thirdparty/poppler/qt5/poppler-media.cc</label>
        <link refid="poppler-media_8cc_source"/>
      </node>
      <node id="90104">
        <label>thirdparty/poppler/qt5/poppler-private.h</label>
        <link refid="poppler-private_8h_source"/>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90107" relation="include">
        </childnode>
        <childnode refid="90108" relation="include">
        </childnode>
        <childnode refid="90109" relation="include">
        </childnode>
        <childnode refid="90110" relation="include">
        </childnode>
        <childnode refid="90111" relation="include">
        </childnode>
        <childnode refid="90112" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
        <childnode refid="90114" relation="include">
        </childnode>
        <childnode refid="90115" relation="include">
        </childnode>
        <childnode refid="90116" relation="include">
        </childnode>
        <childnode refid="90117" relation="include">
        </childnode>
      </node>
      <node id="90125">
        <label>thirdparty/poppler/poppler/StructElement.h</label>
        <link refid="_struct_element_8h_source"/>
        <childnode refid="90126" relation="include">
        </childnode>
        <childnode refid="90080" relation="include">
        </childnode>
        <childnode refid="90081" relation="include">
        </childnode>
      </node>
      <node id="90113">
        <label>thirdparty/poppler/qt5/poppler-page.cc</label>
        <link refid="poppler-page_8cc_source"/>
      </node>
      <node id="90170">
        <label>thirdparty/poppler/poppler/CachedFile.h</label>
        <link refid="_cached_file_8h_source"/>
        <childnode refid="90171" relation="include">
        </childnode>
        <childnode refid="90172" relation="include">
        </childnode>
        <childnode refid="90091" relation="include">
        </childnode>
        <childnode refid="90174" relation="include">
        </childnode>
        <childnode refid="90096" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
      </node>
      <node id="90172">
        <label>thirdparty/poppler/poppler/CurlCachedFile.h</label>
        <link refid="_curl_cached_file_8h_source"/>
        <childnode refid="90173" relation="include">
        </childnode>
        <childnode refid="90091" relation="include">
        </childnode>
      </node>
      <node id="90085">
        <label>thirdparty/poppler/poppler/PDFDoc.h</label>
        <link refid="_p_d_f_doc_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90086" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90089" relation="include">
        </childnode>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90097" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90100" relation="include">
        </childnode>
        <childnode refid="90094" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90102" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90080" relation="include">
        </childnode>
        <childnode refid="90081" relation="include">
        </childnode>
        <childnode refid="90104" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90074">
        <label>thirdparty/poppler/poppler/Parser.cc</label>
        <link refid="_parser_8cc_source"/>
      </node>
      <node id="90192">
        <label>thirdparty/poppler/poppler/JPEG2000Stream.h</label>
        <link refid="_j_p_e_g2000_stream_8h_source"/>
        <childnode refid="90193" relation="include">
        </childnode>
      </node>
      <node id="90100">
        <label>thirdparty/poppler/poppler/PDFDocFactory.h</label>
        <link refid="_p_d_f_doc_factory_8h_source"/>
        <childnode refid="90094" relation="include">
        </childnode>
      </node>
      <node id="90197">
        <label>thirdparty/poppler/poppler/Outline.h</label>
        <link refid="_outline_8h_source"/>
        <childnode refid="90154" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90115" relation="include">
        </childnode>
      </node>
      <node id="90066">
        <label>thirdparty/poppler/poppler/Array.cc</label>
        <link refid="_array_8cc_source"/>
      </node>
      <node id="90065">
        <label>thirdparty/poppler/poppler/Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="90063" relation="include">
        </childnode>
        <childnode refid="90066" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90072" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
      </node>
      <node id="90084">
        <label>thirdparty/poppler/poppler/Catalog.h</label>
        <link refid="_catalog_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90107" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90124">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.h</label>
        <link refid="_marked_content_output_dev_8h_source"/>
        <childnode refid="90125" relation="include">
        </childnode>
        <childnode refid="90127" relation="include">
        </childnode>
      </node>
      <node id="90116">
        <label>thirdparty/poppler/qt5/poppler-ps-converter.cc</label>
        <link refid="poppler-ps-converter_8cc_source"/>
      </node>
      <node id="90118">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.cc</label>
        <link refid="_pre_scan_output_dev_8cc_source"/>
      </node>
      <node id="90188">
        <label>thirdparty/poppler/poppler/FontInfo.h</label>
        <link refid="_font_info_8h_source"/>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90104" relation="include">
        </childnode>
      </node>
      <node id="90114">
        <label>thirdparty/poppler/qt5/poppler-pdf-converter.cc</label>
        <link refid="poppler-pdf-converter_8cc_source"/>
      </node>
      <node id="90098">
        <label>thirdparty/poppler/poppler/Hints.cc</label>
        <link refid="_hints_8cc_source"/>
      </node>
      <node id="90193">
        <label>thirdparty/poppler/poppler/JPEG2000Stream.cc</label>
        <link refid="_j_p_e_g2000_stream_8cc_source"/>
      </node>
      <node id="90137">
        <label>thirdparty/poppler/qt5/poppler-link-extractor.cc</label>
        <link refid="poppler-link-extractor_8cc_source"/>
      </node>
      <node id="90080">
        <label>thirdparty/poppler/poppler/StructElement.cc</label>
        <link refid="_struct_element_8cc_source"/>
      </node>
      <node id="90174">
        <label>thirdparty/poppler/poppler/StdinCachedFile.h</label>
        <link refid="_stdin_cached_file_8h_source"/>
        <childnode refid="90175" relation="include">
        </childnode>
        <childnode refid="90096" relation="include">
        </childnode>
      </node>
      <node id="90148">
        <label>thirdparty/poppler/poppler/Lexer.h</label>
        <link refid="thirdparty_2poppler_2poppler_2lexer_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90149" relation="include">
        </childnode>
        <childnode refid="90150" relation="include">
        </childnode>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90152" relation="include">
        </childnode>
        <childnode refid="90151" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
      </node>
      <node id="90110">
        <label>thirdparty/poppler/qt5/poppler-link.cc</label>
        <link refid="poppler-link_8cc_source"/>
      </node>
      <node id="90078">
        <label>thirdparty/poppler/poppler/Function.cc</label>
        <link refid="_function_8cc_source"/>
      </node>
      <node id="90150">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc_source"/>
      </node>
      <node id="90120">
        <label>thirdparty/poppler/poppler/Gfx.h</label>
        <link refid="_gfx_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90087" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90105" relation="include">
        </childnode>
      </node>
      <node id="90090">
        <label>thirdparty/poppler/poppler/CurlPDFDocBuilder.h</label>
        <link refid="_curl_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90091" relation="include">
        </childnode>
      </node>
      <node id="90071">
        <label>thirdparty/poppler/poppler/Link.cc</label>
        <link refid="_link_8cc_source"/>
      </node>
      <node id="90202">
        <label>thirdparty/poppler/qt5/poppler-annotation-private.h</label>
        <link refid="poppler-annotation-private_8h_source"/>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90110" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90183">
        <label>thirdparty/poppler/poppler/Decrypt.h</label>
        <link refid="_decrypt_8h_source"/>
        <childnode refid="90181" relation="include">
        </childnode>
        <childnode refid="90184" relation="include">
        </childnode>
        <childnode refid="90185" relation="include">
        </childnode>
        <childnode refid="90187" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90102" relation="include">
        </childnode>
      </node>
      <node id="90097">
        <label>thirdparty/poppler/poppler/Hints.h</label>
        <link refid="_hints_8h_source"/>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
      </node>
      <node id="90075">
        <label>thirdparty/poppler/poppler/Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="90063" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90076" relation="include">
        </childnode>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90078" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90079" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90072" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
        <childnode refid="90080" relation="include">
        </childnode>
        <childnode refid="90081" relation="include">
        </childnode>
        <childnode refid="90082" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
      </node>
      <node id="90156">
        <label>thirdparty/poppler/poppler/Annot.h</label>
        <link refid="_annot_8h_source"/>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90157" relation="include">
        </childnode>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90127" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90123" relation="include">
        </childnode>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90137" relation="include">
        </childnode>
        <childnode refid="90158" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90155">
        <label>thirdparty/poppler/poppler/Page.h</label>
        <link refid="thirdparty_2poppler_2poppler_2page_8h_source"/>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90087" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90123" relation="include">
        </childnode>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90137" relation="include">
        </childnode>
      </node>
      <node id="90165">
        <label>thirdparty/poppler/poppler/FileSpec.h</label>
        <link refid="_file_spec_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90166" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90164" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90167" relation="include">
        </childnode>
        <childnode refid="90168" relation="include">
        </childnode>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90107" relation="include">
        </childnode>
      </node>
      <node id="90094">
        <label>thirdparty/poppler/poppler/PDFDocFactory.cc</label>
        <link refid="_p_d_f_doc_factory_8cc_source"/>
      </node>
      <node id="90184">
        <label>thirdparty/poppler/poppler/Decrypt.cc</label>
        <link refid="_decrypt_8cc_source"/>
      </node>
      <node id="90139">
        <label>thirdparty/poppler/splash/Splash.cc</label>
        <link refid="_splash_8cc_source"/>
      </node>
      <node id="90149">
        <label>thirdparty/poppler/poppler/Parser.h</label>
        <link refid="thirdparty_2poppler_2poppler_2parser_8h_source"/>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90150" relation="include">
        </childnode>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90151" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
      </node>
      <node id="90115">
        <label>thirdparty/poppler/qt5/poppler-private.cc</label>
        <link refid="poppler-private_8cc_source"/>
      </node>
      <node id="90154">
        <label>thirdparty/poppler/poppler/Outline.cc</label>
        <link refid="_outline_8cc_source"/>
      </node>
      <node id="90175">
        <label>thirdparty/poppler/poppler/StdinCachedFile.cc</label>
        <link refid="_stdin_cached_file_8cc_source"/>
      </node>
      <node id="90108">
        <label>thirdparty/poppler/qt5/poppler-fontinfo.cc</label>
        <link refid="poppler-fontinfo_8cc_source"/>
      </node>
      <node id="90089">
        <label>thirdparty/poppler/poppler/PDFDocBuilder.h</label>
        <link refid="_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90090" relation="include">
        </childnode>
        <childnode refid="90092" relation="include">
        </childnode>
        <childnode refid="90095" relation="include">
        </childnode>
      </node>
      <node id="90088">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="90140">
        <label>thirdparty/poppler/splash/SplashClip.cc</label>
        <link refid="_splash_clip_8cc_source"/>
      </node>
      <node id="90062">
        <label>thirdparty/poppler/poppler/Stream.h</label>
        <link refid="_stream_8h"/>
        <childnode refid="90063" relation="include">
        </childnode>
        <childnode refid="90148" relation="include">
        </childnode>
        <childnode refid="90153" relation="include">
        </childnode>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90170" relation="include">
        </childnode>
        <childnode refid="90176" relation="include">
        </childnode>
        <childnode refid="90183" relation="include">
        </childnode>
        <childnode refid="90181" relation="include">
        </childnode>
        <childnode refid="90185" relation="include">
        </childnode>
        <childnode refid="90187" relation="include">
        </childnode>
        <childnode refid="90078" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90150" relation="include">
        </childnode>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90191" relation="include">
        </childnode>
        <childnode refid="90192" relation="include">
        </childnode>
        <childnode refid="90194" relation="include">
        </childnode>
        <childnode refid="90072" relation="include">
        </childnode>
        <childnode refid="90131" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90168" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
        <childnode refid="90106" relation="include">
        </childnode>
        <childnode refid="90107" relation="include">
        </childnode>
        <childnode refid="90203" relation="include">
        </childnode>
        <childnode refid="90205" relation="include">
        </childnode>
      </node>
      <node id="90195">
        <label>thirdparty/poppler/poppler/JPXStream.cc</label>
        <link refid="_j_p_x_stream_8cc_source"/>
      </node>
      <node id="90136">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.h</label>
        <link refid="_arthur_output_dev_8h_source"/>
        <childnode refid="90135" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90144">
        <label>thirdparty/poppler/poppler/PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="90120" relation="include">
        </childnode>
        <childnode refid="90145" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90147" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
      </node>
      <node id="90179">
        <label>thirdparty/poppler/poppler/PageLabelInfo.cc</label>
        <link refid="_page_label_info_8cc_source"/>
      </node>
      <node id="90083">
        <label>thirdparty/poppler/poppler/XRef.cc</label>
        <link refid="_x_ref_8cc_source"/>
      </node>
      <node id="90130">
        <label>thirdparty/poppler/splash/SplashBitmap.cc</label>
        <link refid="_splash_bitmap_8cc_source"/>
      </node>
      <node id="90133">
        <label>thirdparty/poppler/poppler/SplashOutputDev.h</label>
        <link refid="_splash_output_dev_8h_source"/>
        <childnode refid="90103" relation="include">
        </childnode>
      </node>
      <node id="90205">
        <label>thirdparty/poppler/qt5/poppler-sound.cc</label>
        <link refid="poppler-sound_8cc_source"/>
      </node>
      <node id="90204">
        <label>thirdparty/poppler/qt5/poppler-qiodeviceoutstream.cc</label>
        <link refid="poppler-qiodeviceoutstream_8cc_source"/>
      </node>
      <node id="90198">
        <label>thirdparty/poppler/poppler/PageTransition.h</label>
        <link refid="_page_transition_8h_source"/>
        <childnode refid="90199" relation="include">
        </childnode>
        <childnode refid="90200" relation="include">
        </childnode>
      </node>
      <node id="90171">
        <label>thirdparty/poppler/poppler/CachedFile.cc</label>
        <link refid="_cached_file_8cc_source"/>
      </node>
      <node id="90157">
        <label>thirdparty/poppler/poppler/Form.h</label>
        <link refid="_form_8h_source"/>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90164">
        <label>thirdparty/poppler/poppler/Movie.cc</label>
        <link refid="_movie_8cc_source"/>
      </node>
      <node id="90134">
        <label>thirdparty/poppler/poppler/Stream.cc</label>
        <link refid="_stream_8cc_source"/>
      </node>
      <node id="90181">
        <label>thirdparty/poppler/poppler/DCTStream.h</label>
        <link refid="_d_c_t_stream_8h_source"/>
        <childnode refid="90182" relation="include">
        </childnode>
      </node>
      <node id="90169">
        <label>thirdparty/poppler/poppler/Link.h</label>
        <link refid="_link_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90154" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90123" relation="include">
        </childnode>
        <childnode refid="90135" relation="include">
        </childnode>
        <childnode refid="90105" relation="include">
        </childnode>
        <childnode refid="90109" relation="include">
        </childnode>
        <childnode refid="90137" relation="include">
        </childnode>
        <childnode refid="90110" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
        <childnode refid="90115" relation="include">
        </childnode>
      </node>
      <node id="90063">
        <label>thirdparty/poppler/poppler/Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90065" relation="include">
        </childnode>
        <childnode refid="90075" relation="include">
        </childnode>
        <childnode refid="90062" relation="include">
        </childnode>
        <childnode refid="90084" relation="include">
        </childnode>
        <childnode refid="90119" relation="include">
        </childnode>
        <childnode refid="90143" relation="include">
        </childnode>
        <childnode refid="90120" relation="include">
        </childnode>
        <childnode refid="90144" relation="include">
        </childnode>
        <childnode refid="90148" relation="include">
        </childnode>
        <childnode refid="90153" relation="include">
        </childnode>
        <childnode refid="90155" relation="include">
        </childnode>
        <childnode refid="90156" relation="include">
        </childnode>
        <childnode refid="90157" relation="include">
        </childnode>
        <childnode refid="90159" relation="include">
        </childnode>
        <childnode refid="90161" relation="include">
        </childnode>
        <childnode refid="90163" relation="include">
        </childnode>
        <childnode refid="90165" relation="include">
        </childnode>
        <childnode refid="90169" relation="include">
        </childnode>
        <childnode refid="90066" relation="include">
        </childnode>
        <childnode refid="90170" relation="include">
        </childnode>
        <childnode refid="90145" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90176" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90178" relation="include">
        </childnode>
        <childnode refid="90126" relation="include">
        </childnode>
        <childnode refid="90125" relation="include">
        </childnode>
        <childnode refid="90180" relation="include">
        </childnode>
        <childnode refid="90181" relation="include">
        </childnode>
        <childnode refid="90183" relation="include">
        </childnode>
        <childnode refid="90076" relation="include">
        </childnode>
        <childnode refid="90185" relation="include">
        </childnode>
        <childnode refid="90187" relation="include">
        </childnode>
        <childnode refid="90077" relation="include">
        </childnode>
        <childnode refid="90188" relation="include">
        </childnode>
        <childnode refid="90068" relation="include">
        </childnode>
        <childnode refid="90078" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90079" relation="include">
        </childnode>
        <childnode refid="90128" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90150" relation="include">
        </childnode>
        <childnode refid="90189" relation="include">
        </childnode>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90190" relation="include">
        </childnode>
        <childnode refid="90191" relation="include">
        </childnode>
        <childnode refid="90192" relation="include">
        </childnode>
        <childnode refid="90194" relation="include">
        </childnode>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90196" relation="include">
        </childnode>
        <childnode refid="90072" relation="include">
        </childnode>
        <childnode refid="90197" relation="include">
        </childnode>
        <childnode refid="90131" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90198" relation="include">
        </childnode>
        <childnode refid="90074" relation="include">
        </childnode>
        <childnode refid="90132" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90168" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
        <childnode refid="90081" relation="include">
        </childnode>
        <childnode refid="90082" relation="include">
        </childnode>
        <childnode refid="90083" relation="include">
        </childnode>
        <childnode refid="90135" relation="include">
        </childnode>
        <childnode refid="90201" relation="include">
        </childnode>
        <childnode refid="90202" relation="include">
        </childnode>
        <childnode refid="90107" relation="include">
        </childnode>
        <childnode refid="90109" relation="include">
        </childnode>
        <childnode refid="90146" relation="include">
        </childnode>
        <childnode refid="90137" relation="include">
        </childnode>
        <childnode refid="90158" relation="include">
        </childnode>
        <childnode refid="90203" relation="include">
        </childnode>
        <childnode refid="90205" relation="include">
        </childnode>
      </node>
      <node id="90067">
        <label>thirdparty/poppler/poppler/Catalog.cc</label>
        <link refid="_catalog_8cc_source"/>
      </node>
      <node id="90103">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="90152">
        <label>thirdparty/poppler/poppler/Lexer.cc</label>
        <link refid="_lexer_8cc_source"/>
      </node>
      <node id="90096">
        <label>thirdparty/poppler/poppler/StdinPDFDocBuilder.cc</label>
        <link refid="_stdin_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90122">
        <label>thirdparty/poppler/poppler/CairoOutputDev.h</label>
        <link refid="_cairo_output_dev_8h_source"/>
        <childnode refid="90087" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
      </node>
      <node id="90138">
        <label>thirdparty/poppler/splash/SplashBitmap.h</label>
        <link refid="_splash_bitmap_8h_source"/>
        <childnode refid="90088" relation="include">
        </childnode>
        <childnode refid="90103" relation="include">
        </childnode>
        <childnode refid="90139" relation="include">
        </childnode>
        <childnode refid="90130" relation="include">
        </childnode>
        <childnode refid="90140" relation="include">
        </childnode>
        <childnode refid="90141" relation="include">
        </childnode>
        <childnode refid="90142" relation="include">
        </childnode>
      </node>
      <node id="90117">
        <label>thirdparty/poppler/qt5/poppler-textbox.cc</label>
        <link refid="poppler-textbox_8cc_source"/>
      </node>
      <node id="90177">
        <label>thirdparty/poppler/poppler/JBIG2Stream.cc</label>
        <link refid="_j_b_i_g2_stream_8cc_source"/>
      </node>
      <node id="90109">
        <label>thirdparty/poppler/qt5/poppler-form.cc</label>
        <link refid="poppler-form_8cc_source"/>
      </node>
      <node id="90128">
        <label>thirdparty/poppler/poppler/PSOutputDev.h</label>
        <link refid="_p_s_output_dev_8h_source"/>
        <childnode refid="90079" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
        <childnode refid="90116" relation="include">
        </childnode>
      </node>
      <node id="90145">
        <label>thirdparty/poppler/poppler/OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="90122" relation="include">
        </childnode>
        <childnode refid="90121" relation="include">
        </childnode>
        <childnode refid="90124" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90128" relation="include">
        </childnode>
        <childnode refid="90070" relation="include">
        </childnode>
        <childnode refid="90131" relation="include">
        </childnode>
        <childnode refid="90073" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90132" relation="include">
        </childnode>
        <childnode refid="90133" relation="include">
        </childnode>
        <childnode refid="90136" relation="include">
        </childnode>
        <childnode refid="90104" relation="include">
        </childnode>
        <childnode refid="90146" relation="include">
        </childnode>
      </node>
      <node id="90190">
        <label>thirdparty/poppler/poppler/SecurityHandler.h</label>
        <link refid="_security_handler_8h_source"/>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
        <childnode refid="90102" relation="include">
        </childnode>
      </node>
      <node id="90101">
        <label>thirdparty/poppler/poppler/PSOutputDev.cc</label>
        <link refid="_p_s_output_dev_8cc_source"/>
      </node>
      <node id="90187">
        <label>thirdparty/poppler/poppler/FlateStream.h</label>
        <link refid="_flate_stream_8h_source"/>
      </node>
      <node id="90073">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc_source"/>
      </node>
      <node id="90093">
        <label>thirdparty/poppler/poppler/LocalPDFDocBuilder.cc</label>
        <link refid="_local_p_d_f_doc_builder_8cc_source"/>
      </node>
      <node id="90178">
        <label>thirdparty/poppler/poppler/PageLabelInfo.h</label>
        <link refid="_page_label_info_8h_source"/>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90179" relation="include">
        </childnode>
      </node>
      <node id="90151">
        <label>thirdparty/poppler/poppler/Linearization.cc</label>
        <link refid="_linearization_8cc_source"/>
      </node>
      <node id="90127">
        <label>thirdparty/poppler/poppler/MarkedContentOutputDev.cc</label>
        <link refid="_marked_content_output_dev_8cc_source"/>
      </node>
      <node id="90189">
        <label>thirdparty/poppler/poppler/Linearization.h</label>
        <link refid="_linearization_8h_source"/>
        <childnode refid="90098" relation="include">
        </childnode>
        <childnode refid="90151" relation="include">
        </childnode>
        <childnode refid="90099" relation="include">
        </childnode>
      </node>
      <node id="90076">
        <label>thirdparty/poppler/poppler/Dict.cc</label>
        <link refid="_dict_8cc_source"/>
      </node>
      <node id="90196">
        <label>thirdparty/poppler/poppler/Rendition.h</label>
        <link refid="_rendition_8h_source"/>
        <childnode refid="90071" relation="include">
        </childnode>
        <childnode refid="90167" relation="include">
        </childnode>
        <childnode refid="90110" relation="include">
        </childnode>
        <childnode refid="90111" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90180">
        <label>thirdparty/poppler/poppler/CMap.cc</label>
        <link refid="_c_map_8cc_source"/>
      </node>
      <node id="90160">
        <label>thirdparty/poppler/poppler/OptionalContent.cc</label>
        <link refid="_optional_content_8cc_source"/>
      </node>
      <node id="90131">
        <label>thirdparty/poppler/poppler/OutputDev.cc</label>
        <link refid="_output_dev_8cc_source"/>
      </node>
      <node id="90064">
        <label>thirdparty/poppler/poppler/Annot.cc</label>
        <link refid="_annot_8cc_source"/>
      </node>
      <node id="90132">
        <label>thirdparty/poppler/poppler/PreScanOutputDev.h</label>
        <link refid="_pre_scan_output_dev_8h_source"/>
        <childnode refid="90118" relation="include">
        </childnode>
        <childnode refid="90101" relation="include">
        </childnode>
      </node>
      <node id="90163">
        <label>thirdparty/poppler/poppler/Movie.h</label>
        <link refid="_movie_8h_source"/>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90164" relation="include">
        </childnode>
        <childnode refid="90158" relation="include">
        </childnode>
      </node>
      <node id="90081">
        <label>thirdparty/poppler/poppler/StructTreeRoot.cc</label>
        <link refid="_struct_tree_root_8cc_source"/>
      </node>
      <node id="90162">
        <label>thirdparty/poppler/poppler/GlobalParams.cc</label>
        <link refid="_global_params_8cc_source"/>
      </node>
      <node id="90142">
        <label>thirdparty/poppler/splash/SplashXPathScanner.cc</label>
        <link refid="_splash_x_path_scanner_8cc_source"/>
      </node>
      <node id="90070">
        <label>thirdparty/poppler/poppler/GfxState.cc</label>
        <link refid="_gfx_state_8cc_source"/>
      </node>
      <node id="90092">
        <label>thirdparty/poppler/poppler/LocalPDFDocBuilder.h</label>
        <link refid="_local_p_d_f_doc_builder_8h_source"/>
        <childnode refid="90093" relation="include">
        </childnode>
        <childnode refid="90094" relation="include">
        </childnode>
      </node>
      <node id="90069">
        <label>thirdparty/poppler/poppler/Gfx.cc</label>
        <link refid="_gfx_8cc_source"/>
      </node>
      <node id="90147">
        <label>thirdparty/poppler/poppler/PopplerCache.cc</label>
        <link refid="_poppler_cache_8cc_source"/>
      </node>
      <node id="90146">
        <label>thirdparty/poppler/qt5/poppler-link-extractor-private.h</label>
        <link refid="poppler-link-extractor-private_8h_source"/>
        <childnode refid="90137" relation="include">
        </childnode>
        <childnode refid="90113" relation="include">
        </childnode>
      </node>
      <node id="90107">
        <label>thirdparty/poppler/qt5/poppler-embeddedfile.cc</label>
        <link refid="poppler-embeddedfile_8cc_source"/>
      </node>
      <node id="90126">
        <label>thirdparty/poppler/poppler/StructTreeRoot.h</label>
        <link refid="_struct_tree_root_8h_source"/>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90080" relation="include">
        </childnode>
        <childnode refid="90081" relation="include">
        </childnode>
      </node>
      <node id="90159">
        <label>thirdparty/poppler/poppler/OptionalContent.h</label>
        <link refid="_optional_content_8h_source"/>
        <childnode refid="90085" relation="include">
        </childnode>
        <childnode refid="90064" relation="include">
        </childnode>
        <childnode refid="90067" relation="include">
        </childnode>
        <childnode refid="90069" relation="include">
        </childnode>
        <childnode refid="90160" relation="include">
        </childnode>
        <childnode refid="90112" relation="include">
        </childnode>
      </node>
      <node id="90158">
        <label>thirdparty/poppler/qt5/poppler-movie.cc</label>
        <link refid="poppler-movie_8cc_source"/>
      </node>
      <node id="90102">
        <label>thirdparty/poppler/poppler/SecurityHandler.cc</label>
        <link refid="_security_handler_8cc_source"/>
      </node>
      <node id="90141">
        <label>thirdparty/poppler/splash/SplashState.cc</label>
        <link refid="_splash_state_8cc_source"/>
      </node>
      <node id="90203">
        <label>thirdparty/poppler/qt5/poppler-qiodeviceoutstream-private.h</label>
        <link refid="poppler-qiodeviceoutstream-private_8h_source"/>
        <childnode refid="90114" relation="include">
        </childnode>
        <childnode refid="90204" relation="include">
        </childnode>
      </node>
      <node id="90194">
        <label>thirdparty/poppler/poppler/JPXStream.h</label>
        <link refid="_j_p_x_stream_8h_source"/>
        <childnode refid="90195" relation="include">
        </childnode>
        <childnode refid="90134" relation="include">
        </childnode>
      </node>
      <node id="90086">
        <label>thirdparty/poppler/poppler/CairoFontEngine.h</label>
        <link refid="_cairo_font_engine_8h_source"/>
        <childnode refid="90087" relation="include">
        </childnode>
        <childnode refid="90088" relation="include">
        </childnode>
      </node>
      <node id="90068">
        <label>thirdparty/poppler/poppler/Form.cc</label>
        <link refid="_form_8cc_source"/>
      </node>
      <node id="90135">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.cc</label>
        <link refid="_arthur_output_dev_8cc_source"/>
      </node>
      <node id="90182">
        <label>thirdparty/poppler/poppler/DCTStream.cc</label>
        <link refid="_d_c_t_stream_8cc_source"/>
      </node>
      <node id="90168">
        <label>thirdparty/poppler/poppler/Sound.cc</label>
        <link refid="_sound_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct___byte_range" prot="public">_ByteRange</innerclass>
    <innerclass refid="class_stream" prot="public">Stream</innerclass>
    <innerclass refid="class_out_stream" prot="public">OutStream</innerclass>
    <innerclass refid="class_file_out_stream" prot="public">FileOutStream</innerclass>
    <innerclass refid="class_base_stream" prot="public">BaseStream</innerclass>
    <innerclass refid="class_filter_stream" prot="public">FilterStream</innerclass>
    <innerclass refid="class_image_stream" prot="public">ImageStream</innerclass>
    <innerclass refid="class_stream_predictor" prot="public">StreamPredictor</innerclass>
    <innerclass refid="class_file_stream" prot="public">FileStream</innerclass>
    <innerclass refid="class_cached_file_stream" prot="public">CachedFileStream</innerclass>
    <innerclass refid="class_mem_stream" prot="public">MemStream</innerclass>
    <innerclass refid="class_embed_stream" prot="public">EmbedStream</innerclass>
    <innerclass refid="class_a_s_c_i_i_hex_stream" prot="public">ASCIIHexStream</innerclass>
    <innerclass refid="class_a_s_c_i_i85_stream" prot="public">ASCII85Stream</innerclass>
    <innerclass refid="class_l_z_w_stream" prot="public">LZWStream</innerclass>
    <innerclass refid="class_run_length_stream" prot="public">RunLengthStream</innerclass>
    <innerclass refid="class_c_c_i_t_t_fax_stream" prot="public">CCITTFaxStream</innerclass>
    <innerclass refid="struct_d_c_t_comp_info" prot="public">DCTCompInfo</innerclass>
    <innerclass refid="struct_d_c_t_scan_info" prot="public">DCTScanInfo</innerclass>
    <innerclass refid="struct_d_c_t_huff_table" prot="public">DCTHuffTable</innerclass>
    <innerclass refid="class_d_c_t_stream" prot="public">DCTStream</innerclass>
    <innerclass refid="struct_flate_code" prot="public">FlateCode</innerclass>
    <innerclass refid="struct_flate_huffman_tab" prot="public">FlateHuffmanTab</innerclass>
    <innerclass refid="struct_flate_decode" prot="public">FlateDecode</innerclass>
    <innerclass refid="class_flate_stream" prot="public">FlateStream</innerclass>
    <innerclass refid="class_e_o_f_stream" prot="public">EOFStream</innerclass>
    <innerclass refid="class_buf_stream" prot="public">BufStream</innerclass>
    <innerclass refid="class_fixed_length_encoder" prot="public">FixedLengthEncoder</innerclass>
    <innerclass refid="class_a_s_c_i_i_hex_encoder" prot="public">ASCIIHexEncoder</innerclass>
    <innerclass refid="class_a_s_c_i_i85_encoder" prot="public">ASCII85Encoder</innerclass>
    <innerclass refid="class_run_length_encoder" prot="public">RunLengthEncoder</innerclass>
    <innerclass refid="struct_l_z_w_encoder_node" prot="public">LZWEncoderNode</innerclass>
    <innerclass refid="class_l_z_w_encoder" prot="public">LZWEncoder</innerclass>
    <innerclass refid="class_c_m_y_k_gray_encoder" prot="public">CMYKGrayEncoder</innerclass>
    <innerclass refid="class_r_g_b_gray_encoder" prot="public">RGBGrayEncoder</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_stream_8h_1a947c1c79124540f89b44b5d04506371e" prot="public" static="no">
        <name>fileStreamBufSize</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="443" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1aa6613598684eed364d6e415d516a1f21" prot="public" static="no">
        <name>cachedStreamBufSize</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="513" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1a798288bb09674315e3963d0d3d3d35f6" prot="public" static="no">
        <name>flateWindow</name>
        <initializer>32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="950" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1a8b58ef5048eee5de1bb6a78e8cc3f2cc" prot="public" static="no">
        <name>flateMask</name>
        <initializer>(flateWindow-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="951" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1a678a833c7321fbea45c69a7693bf3755" prot="public" static="no">
        <name>flateMaxHuffman</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="952" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1afbd2865f7520ba1703fc8f92c75126a4" prot="public" static="no">
        <name>flateMaxCodeLenCodes</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="953" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1a98229bbccac335e61f06b7455db719f1" prot="public" static="no">
        <name>flateMaxLitCodes</name>
        <initializer>288</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="954" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_stream_8h_1a1ab7fa0e0ba74dd75b98bf1def27c9d1" prot="public" static="no">
        <name>flateMaxDistCodes</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="955" column="9" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="955" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3" prot="public" static="no">
        <name>StreamKind</name>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3aabdd3cce70ff7cd962ff6e5c11ca3aad" prot="public">
          <name>strFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a02b1ec0ab2b047aa641cf5ef36301636" prot="public">
          <name>strCachedFile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a48ec85bbda160628a59c7335511b3721" prot="public">
          <name>strASCIIHex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a513fefbc4dc99fa953d128ed4c96e85b" prot="public">
          <name>strASCII85</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a435965ceafa73c5e11a405f7f1207de8" prot="public">
          <name>strLZW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a7f9a943d6e7ab7c2c58335579db4190b" prot="public">
          <name>strRunLength</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a1e57291a6e9b645f49b7d289ea95aa55" prot="public">
          <name>strCCITTFax</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a878d3020db2a23350ee7296515004218" prot="public">
          <name>strDCT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a1325682c3e7e0447f2c6bd1d04da42a4" prot="public">
          <name>strFlate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3a0481ba2d3f6fc12b7c7de3d3bcc7d463" prot="public">
          <name>strJBIG2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3ae0997f2ad71b9d4ec4e93ee6b009e034" prot="public">
          <name>strJPX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3aca8794220763580aee9df0c00fea35eb" prot="public">
          <name>strWeird</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1aa22006806c4c7885734f493676ac9bb3af2e429b58a526a266f61eecd2c1b5c93" prot="public">
          <name>strCrypt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="54" column="1" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="54" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="_stream_8h_1a8925db6c938a137e72088c9e492b57d1" prot="public" static="no">
        <name>StreamColorSpaceMode</name>
        <enumvalue id="_stream_8h_1a8925db6c938a137e72088c9e492b57d1a845b20e375c44eeb01b52d62250d5e84" prot="public">
          <name>streamCSNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1a8925db6c938a137e72088c9e492b57d1a570ae1c057a59e3799ecf9da077661dd" prot="public">
          <name>streamCSDeviceGray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1a8925db6c938a137e72088c9e492b57d1a1456b264a55e81c88a9b0cab4ea47908" prot="public">
          <name>streamCSDeviceRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1a8925db6c938a137e72088c9e492b57d1a9684dc1685a1473c1aa7daa3b292a5c5" prot="public">
          <name>streamCSDeviceCMYK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="70" column="1" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="_stream_8h_1a8dd77f2b4e9139bd438efe7d9d7d1da3" prot="public" static="no">
        <name>CryptAlgorithm</name>
        <enumvalue id="_stream_8h_1a8dd77f2b4e9139bd438efe7d9d7d1da3a86fdaa4cb0028b0b8f90e5af3a0d7e40" prot="public">
          <name>cryptRC4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1a8dd77f2b4e9139bd438efe7d9d7d1da3aa1b7c1de78152c17d10cc68a21d78cd1" prot="public">
          <name>cryptAES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_stream_8h_1a8dd77f2b4e9139bd438efe7d9d7d1da3aad2711188652957da234a7a888121aa2" prot="public">
          <name>cryptAES256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="81" column="1" bodyfile="thirdparty/poppler/poppler/Stream.h" bodystart="81" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_stream_8h_1ae59303bab2883a761209b149e6080314" prot="public" static="no">
        <type>struct <ref refid="struct___byte_range" kindref="compound">_ByteRange</ref></type>
        <definition>typedef struct _ByteRange  ByteRange</definition>
        <argsstring></argsstring>
        <name>ByteRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Stream.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stream.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Jeff<sp/>Muizelaar<sp/>&lt;jeff@infidigm.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Julien<sp/>Rebetez<sp/>&lt;julien@fhtagn.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008,<sp/>2010,<sp/>2011<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Stefan<sp/>Thomas<sp/>&lt;thomas@eload24.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Hib<sp/>Eris<sp/>&lt;hib@hiberis.nl&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011,<sp/>2012,<sp/>2016<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Peter<sp/>Breitenlohner<sp/>&lt;peb@mppmu.mpg.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adam<sp/>Reichold<sp/>&lt;adamreichold@myopera.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Pino<sp/>Toscano<sp/>&lt;pino@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooMutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_file" kindref="compound">GooFile</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_stream" kindref="compound">BaseStream</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cached_file" kindref="compound">CachedFile</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StreamKind<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>strFile,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>strCachedFile,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>strASCIIHex,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>strASCII85,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>strLZW,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>strRunLength,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>strCCITTFax,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>strDCT,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>strFlate,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>strJBIG2,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>strJPX,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>strWeird,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internal-use<sp/>stream<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>strCrypt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internal-use<sp/>to<sp/>detect<sp/>decode<sp/>streams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StreamColorSpaceMode<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>streamCSNone,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>streamCSDeviceGray,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>streamCSDeviceRGB,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>streamCSDeviceCMYK</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>in<sp/>Stream.h<sp/>instead<sp/>of<sp/>Decrypt.h<sp/>to<sp/>avoid<sp/>really<sp/>annoying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>file<sp/>dependency<sp/>loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CryptAlgorithm<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>cryptRC4,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>cryptAES,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>cryptAES256</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct___byte_range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___byte_range" kindref="compound">_ByteRange</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>Guint<sp/>offset;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>Guint<sp/>length;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><ref refid="struct___byte_range" kindref="compound">ByteRange</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stream<sp/>(base<sp/>class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream" kindref="compound">Stream</ref><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_stream" kindref="compound">Stream</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incRef();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decRef();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>kind<sp/>of<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>stream<sp/>to<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>down<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doGetChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasGetChars())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getChars(nChars,<sp/>buffer);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nChars;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>getChar();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(c<sp/>!=<sp/>EOF))<sp/>buffer[i]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nChars;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillGooString(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*s)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Guchar<sp/>readBuf[4096];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readChars;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((readChars<sp/>=<sp/>doGetChars(4096,<sp/>readBuf))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;append((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)readBuf,<sp/>readChars);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guchar<sp/>*toUnsignedChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialSize<sp/>=<sp/>4096,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeIncrement<sp/>=<sp/>4096)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readChars;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Guchar<sp/>*buf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(initialSize);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>initialSize;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsToRead<sp/>=<sp/>initialSize;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>continueReading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(continueReading<sp/>&amp;&amp;<sp/>(readChars<sp/>=<sp/>doGetChars(charsToRead,<sp/>&amp;buf[*length]))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*length<sp/>+=<sp/>readChars;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readChars<sp/>==<sp/>charsToRead)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lookChar()<sp/>!=<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>sizeIncrement;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charsToRead<sp/>=<sp/>sizeIncrement;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(Guchar<sp/>*)grealloc(buf,<sp/>size);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continueReading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continueReading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>char<sp/>from<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Peek<sp/>at<sp/>next<sp/>char<sp/>in<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>char<sp/>from<sp/>stream<sp/>without<sp/>using<sp/>the<sp/>predictor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>used<sp/>by<sp/>StreamPredictor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRawChar();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRawChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>char<sp/>directly<sp/>from<sp/>stream<sp/>source,<sp/>without<sp/>filtering<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resets<sp/>the<sp/>stream<sp/>without<sp/>reading<sp/>anything<sp/>(even<sp/>not<sp/>the<sp/>headers)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>Reading<sp/>the<sp/>stream<sp/>with<sp/>something<sp/>else<sp/>than<sp/>getUnfilteredChar<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>lead<sp/>to<sp/>unexcepted<sp/>behaviour<sp/>until<sp/>you<sp/>call<sp/>reset<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>line<sp/>from<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getLine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>position<sp/>in<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>to<sp/>a<sp/>position<sp/>in<sp/>the<sp/>stream.<sp/><sp/>If<sp/>&lt;dir&gt;<sp/>is<sp/>negative,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>is<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file;<sp/>otherwise<sp/>the<sp/>position<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>PostScript<sp/>command<sp/>for<sp/>the<sp/>filter(s).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>stream<sp/>type<sp/>potentially<sp/>contain<sp/>non-printable<sp/>chars?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>BaseStream<sp/>of<sp/>this<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*getBaseStream()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>stream<sp/>after<sp/>the<sp/>last<sp/>decoder<sp/>(this<sp/>may<sp/>be<sp/>a<sp/>BaseStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>a<sp/>DecryptStream).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getUndecodedStream()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>dictionary<sp/>associated<sp/>with<sp/>this<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getDict()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>an<sp/>encoding<sp/>filter?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>image<sp/>parameters<sp/>which<sp/>are<sp/>defined<sp/>by<sp/>the<sp/>stream<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getImageParams(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*bitsPerComponent*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamColorSpaceMode<sp/>*<sp/></highlight><highlight class="comment">/*csMode*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>next<sp/>stream<sp/>in<sp/>the<sp/>&quot;stack&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getNextStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>filters<sp/>to<sp/>this<sp/>stream<sp/>according<sp/>to<sp/>the<sp/>parameters<sp/>in<sp/>&lt;dict&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>new<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*addFilters(<ref refid="class_object" kindref="compound">Object</ref><sp/>*dict,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeFilter(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*params,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion<sp/>=<sp/>0,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dict<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>GooMutex<sp/>mutex;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OutStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>all<sp/>streams<sp/>that<sp/>output<sp/>to<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_out_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_out_stream" kindref="compound">OutStream</ref><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="class_out_stream" kindref="compound">OutStream</ref><sp/>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Desctructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_out_stream" kindref="compound">OutStream</ref><sp/>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incRef()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++ref;<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decRef()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>--ref;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>position<sp/>in<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>a<sp/>char<sp/>in<sp/>the<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printf<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)<sp/>GCC_PRINTF_FORMAT(2,3)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref;<sp/></highlight><highlight class="comment">//<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FileOutStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="class_file_out_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_file_out_stream" kindref="compound">FileOutStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_out_stream" kindref="compound">OutStream</ref><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="class_file_out_stream" kindref="compound">FileOutStream</ref><sp/>(FILE*<sp/>fa,<sp/>Goffset<sp/>startA);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_file_out_stream" kindref="compound">FileOutStream</ref><sp/>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printf<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>Goffset<sp/>start;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BaseStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>all<sp/>streams<sp/>that<sp/>read<sp/>directly<sp/>from<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_base_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_stream" kindref="compound">BaseStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA,<sp/>Goffset<sp/>lengthA);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_base_stream" kindref="compound">BaseStream</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*copy()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeSubStream(Goffset<sp/>start,<sp/>GBool<sp/>limited,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>length,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dict)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last;<sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*getBaseStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getUndecodedStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getDict()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict.getDict();<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getFileName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getLength()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;<sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get/set<sp/>position<sp/>of<sp/>first<sp/>byte<sp/>of<sp/>stream<sp/>within<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getStart()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveStart(Goffset<sp/>delta)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>Goffset<sp/>length;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>dict;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FilterStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>all<sp/>streams<sp/>that<sp/>filter<sp/>another<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_filter_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_filter_stream" kindref="compound">FilterStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_filter_stream" kindref="compound">FilterStream</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getPos();<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*getBaseStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getBaseStream();<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getUndecodedStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getUndecodedStream();<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*getDict()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getDict();<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*getNextStream()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getUnfilteredChar();<sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>{<sp/>str-&gt;unfilteredReset();<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImageStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_image_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_image_stream" kindref="compound">ImageStream</ref><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>image<sp/>stream<sp/>object<sp/>for<sp/>an<sp/>image<sp/>with<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters.<sp/><sp/>Note<sp/>that<sp/>these<sp/>are<sp/>the<sp/>actual<sp/>image<sp/>parameters,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>may<sp/>be<sp/>different<sp/>from<sp/>the<sp/>predictor<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="class_image_stream" kindref="compound">ImageStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widthA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBitsA);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>~<ref refid="class_image_stream" kindref="compound">ImageStream</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>stream<sp/>previously<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>next<sp/>pixel<sp/>from<sp/>the<sp/>stream.<sp/><sp/>&lt;pix&gt;<sp/>should<sp/>be<sp/>able<sp/>to<sp/>hold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>nComps<sp/>elements.<sp/><sp/>Returns<sp/>false<sp/>at<sp/>end<sp/>of<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>GBool<sp/>getPixel(Guchar<sp/>*pix);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>next<sp/>line<sp/>of<sp/>pixels.<sp/><sp/>Returns<sp/>NULL<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>Guchar<sp/>*getLine();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>an<sp/>entire<sp/>line<sp/>from<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>skipLine();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>components<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bits<sp/>per<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>components<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputLineSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>line<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>Guchar<sp/>*inputLine;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>line<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>Guchar<sp/>*imgLine;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>index<sp/>in<sp/>imgLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StreamPredictor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="class_stream_predictor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream_predictor" kindref="compound">StreamPredictor</ref><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>predictor<sp/>object.<sp/><sp/>Note<sp/>that<sp/>the<sp/>parameters<sp/>are<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>predictor,<sp/>and<sp/>may<sp/>not<sp/>match<sp/>the<sp/>actual<sp/>image<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="class_stream_predictor" kindref="compound">StreamPredictor</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predictorA,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widthA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCompsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBitsA);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>~<ref refid="class_stream_predictor" kindref="compound">StreamPredictor</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>GBool<sp/>isOk()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;<sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>GBool<sp/>getNextLine();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predictor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>predictor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>components<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bits<sp/>per<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>components<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixBytes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowBytes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>Guchar<sp/>*predLine;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>index<sp/>in<sp/>predLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FileStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fileStreamBufSize<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_file_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_file_stream" kindref="compound">FileStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="class_file_stream" kindref="compound">FileStream</ref>(<ref refid="class_goo_file" kindref="compound">GooFile</ref>*<sp/>fileA,<sp/>Goffset<sp/>startA,<sp/>GBool<sp/>limitedA,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_file_stream" kindref="compound">FileStream</ref>();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeSubStream(Goffset<sp/>startA,<sp/>GBool<sp/>limitedA,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strFile;<sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bufPos<sp/>+<sp/>(bufPtr<sp/>-<sp/>buf);<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getStart()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start;<sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveStart(Goffset<sp/>delta);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getChar();<sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>{<sp/>reset();<sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>m;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nChars)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fillBuf())<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(int)(bufEnd<sp/>-<sp/>bufPtr);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>nChars<sp/>-<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>nChars<sp/>-<sp/>n;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buffer<sp/>+<sp/>n,<sp/>bufPtr,<sp/>m);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufPtr<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref>*<sp/>file;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>Goffset<sp/>offset;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>Goffset<sp/>start;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>GBool<sp/>limited;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[fileStreamBufSize];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>Goffset<sp/>bufPos;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>Goffset<sp/>savePos;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>GBool<sp/>saved;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CachedFileStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cachedStreamBufSize<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="class_cached_file_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cached_file_stream" kindref="compound">CachedFileStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="class_cached_file_stream" kindref="compound">CachedFileStream</ref>(<ref refid="class_cached_file" kindref="compound">CachedFile</ref><sp/>*ccA,<sp/>Goffset<sp/>startA,<sp/>GBool<sp/>limitedA,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_cached_file_stream" kindref="compound">CachedFileStream</ref>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeSubStream(Goffset<sp/>startA,<sp/>GBool<sp/>limitedA,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strCachedFile;<sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bufPos<sp/>+<sp/>(bufPtr<sp/>-<sp/>buf);<sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getStart()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start;<sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveStart(Goffset<sp/>delta);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getChar();<sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>{<sp/>reset();<sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><ref refid="class_cached_file" kindref="compound">CachedFile</ref><sp/>*cc;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>Goffset<sp/>start;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>GBool<sp/>limited;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[cachedStreamBufSize];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>Guint<sp/>bufPos;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>savePos;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>GBool<sp/>saved;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MemStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="class_mem_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_mem_stream" kindref="compound">MemStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="class_mem_stream" kindref="compound">MemStream</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufA,<sp/>Goffset<sp/>startA,<sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_mem_stream" kindref="compound">MemStream</ref>();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeSubStream(Goffset<sp/>start,<sp/>GBool<sp/>limited,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&lt;<sp/>bufEnd)<sp/>?<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff)<sp/>:<sp/>EOF;<sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&lt;<sp/>bufEnd)<sp/>?<sp/>(*bufPtr<sp/>&amp;<sp/>0xff)<sp/>:<sp/>EOF;<sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(bufPtr<sp/>-<sp/>buf);<sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getStart()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start;<sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveStart(Goffset<sp/>delta);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>needFree<sp/>=<sp/>true,<sp/>the<sp/>stream<sp/>will<sp/>delete<sp/>buf<sp/>when<sp/>it<sp/>is<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//otherwise<sp/>it<sp/>will<sp/>not<sp/>touch<sp/>it.<sp/>Default<sp/>value<sp/>is<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNeedFree<sp/>(GBool<sp/>val)<sp/>{<sp/>needFree<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getChar();<sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>{<sp/>reset<sp/>();<sp/>}<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>Goffset<sp/>start;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>GBool<sp/>needFree;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">};</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EmbedStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>special<sp/>stream<sp/>type<sp/>used<sp/>for<sp/>embedded<sp/>streams<sp/>(inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>images).<sp/><sp/>It<sp/>reads<sp/>directly<sp/>from<sp/>the<sp/>base<sp/>stream<sp/>--<sp/>after<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EmbedStream<sp/>is<sp/>deleted,<sp/>reads<sp/>from<sp/>the<sp/>base<sp/>stream<sp/>will<sp/>proceed<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>BaseStream<sp/>left<sp/>off.<sp/><sp/>Note<sp/>that<sp/>this<sp/>is<sp/>very<sp/>different<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>creating<sp/>a<sp/>new<sp/>FileStream<sp/>(using<sp/>makeSubStream).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="class_embed_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_embed_stream" kindref="compound">EmbedStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="class_embed_stream" kindref="compound">EmbedStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA,<sp/>GBool<sp/>limitedA,<sp/>Goffset<sp/>lengthA);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_embed_stream" kindref="compound">EmbedStream</ref>();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_stream" kindref="compound">BaseStream</ref><sp/>*copy();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*makeSubStream(Goffset<sp/>start,<sp/>GBool<sp/>limitedA,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Goffset<sp/>lengthA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dictA);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getKind();<sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getPos()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getPos();<sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPos(Goffset<sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Goffset<sp/>getStart();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveStart(Goffset<sp/>delta);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUnfilteredChar<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str-&gt;getUnfilteredChar();<sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>()<sp/>{<sp/>str-&gt;unfilteredReset();<sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>GBool<sp/>limited;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">};</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASCIIHexStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="class_a_s_c_i_i_hex_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_a_s_c_i_i_hex_stream" kindref="compound">ASCIIHexStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="class_a_s_c_i_i_hex_stream" kindref="compound">ASCIIHexStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_a_s_c_i_i_hex_stream" kindref="compound">ASCIIHexStream</ref>();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strASCIIHex;<sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>lookChar();<sp/>buf<sp/>=<sp/>EOF;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;<sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">};</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASCII85Stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_a_s_c_i_i85_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_a_s_c_i_i85_stream" kindref="compound">ASCII85Stream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="class_a_s_c_i_i85_stream" kindref="compound">ASCII85Stream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_a_s_c_i_i85_stream" kindref="compound">ASCII85Stream</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strASCII85;<sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>lookChar();<sp/>++index;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch;<sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c[5];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b[4];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>n;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">};</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LZWStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="class_l_z_w_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_l_z_w_stream" kindref="compound">LZWStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><ref refid="class_l_z_w_stream" kindref="compound">LZWStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predictor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colors,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>earlyA);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_l_z_w_stream" kindref="compound">LZWStream</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strLZW;<sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRawChar();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRawChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doGetRawChar()<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eof)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seqIndex<sp/>&gt;=<sp/>seqLength)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!processNextCode())<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seqBuf[seqIndex++];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="class_stream_predictor" kindref="compound">StreamPredictor</ref><sp/>*pred;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>predictor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>early;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>early<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>at<sp/>eof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputBuf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decoding<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>Guchar<sp/>tail;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="classtable" kindref="compound">table</ref>[4097];</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextCode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>code<sp/>to<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>next<sp/>code<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevCode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>code<sp/>used<sp/>in<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newChar;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>char<sp/>to<sp/>be<sp/>added<sp/>to<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>Guchar<sp/>seqBuf[4097];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>current<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seqLength;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>current<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seqIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>into<sp/>current<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>GBool<sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>code<sp/>after<sp/>a<sp/>table<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>GBool<sp/>processNextCode();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearTable();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCode();</highlight></codeline>
<codeline lineno="744"><highlight class="normal">};</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RunLengthStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_run_length_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_run_length_stream" kindref="compound">RunLengthStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><ref refid="class_run_length_stream" kindref="compound">RunLengthStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_run_length_stream" kindref="compound">RunLengthStream</ref>();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strRunLength;<sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[128];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>char<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="775"><highlight class="normal">};</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CCITTFaxStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CCITTCodeTable;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="class_c_c_i_t_t_fax_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_c_i_t_t_fax_stream" kindref="compound">CCITTFaxStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><ref refid="class_c_c_i_t_t_fax_stream" kindref="compound">CCITTFaxStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encodingA,<sp/>GBool<sp/>endOfLineA,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>byteAlignA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnsA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowsA,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>endOfBlockA,<sp/>GBool<sp/>blackA);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_c_c_i_t_t_fax_stream" kindref="compound">CCITTFaxStream</ref>();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strCCITTFax;<sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>lookChar();<sp/>buf<sp/>=<sp/>EOF;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;<sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getEncoding()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoding;<sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>GBool<sp/>getEndOfLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>endOfLine;<sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getColumns()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns;<sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>GBool<sp/>getBlackIs1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>black;<sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ccittReset(GBool<sp/>unfiltered);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;K&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>GBool<sp/>endOfLine;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;EndOfLine&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>GBool<sp/>byteAlign;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;EncodedByteAlign&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;Columns&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;Rows&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>GBool<sp/>endOfBlock;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;EndOfBlock&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>GBool<sp/>black;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;BlackIs1&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>at<sp/>eof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>GBool<sp/>nextLine2D;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>next<sp/>line<sp/>uses<sp/>2D<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>Guint<sp/>inputBuf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*codingLine;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coding<sp/>line<sp/>changing<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*refLine;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>line<sp/>changing<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a0i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>into<sp/>codingLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>GBool<sp/>err;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>on<sp/>current<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>ouput<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addPixels(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blackPixels);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addPixelsNeg(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blackPixels);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>getTwoDimCode();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>getWhiteCode();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>getBlackCode();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>lookBits(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eatBits(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((inputBits<sp/>-=<sp/>n)<sp/>&lt;<sp/>0)<sp/>inputBits<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ENABLE_LIBJPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DCTStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DCT<sp/>component<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="struct_d_c_t_comp_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_c_t_comp_info" kindref="compound">DCTCompInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>component<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hSample,<sp/>vSample;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horiz/vert<sp/>sampling<sp/>resolutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantTable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quantization<sp/>table<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevDC;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DC<sp/>coefficient<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal">};</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="struct_d_c_t_scan_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_c_t_scan_info" kindref="compound">DCTScanInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>GBool<sp/>comp[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comp[i]<sp/>is<sp/>set<sp/>if<sp/>component<sp/>i<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>included<sp/>in<sp/>this<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components<sp/>in<sp/>the<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcHuffTable[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DC<sp/>Huffman<sp/>table<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acHuffTable[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AC<sp/>Huffman<sp/>table<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstCoeff,<sp/>lastCoeff;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>and<sp/>last<sp/>DCT<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ah,<sp/>al;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successive<sp/>approximation<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">};</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DCT<sp/>Huffman<sp/>decoding<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="struct_d_c_t_huff_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>Guchar<sp/>firstSym[17];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>symbol<sp/>for<sp/>this<sp/>bit<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>Gushort<sp/>firstCode[17];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>code<sp/>for<sp/>this<sp/>bit<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>Gushort<sp/>numCodes[17];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>codes<sp/>of<sp/>this<sp/>bit<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>Guchar<sp/>sym[256];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal">};</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_c_t_stream" kindref="compound">DCTStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><ref refid="class_d_c_t_stream" kindref="compound">DCTStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorXformA,<sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>*dict,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursion);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_d_c_t_stream" kindref="compound">DCTStream</ref>();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strDCT;<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset();</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dctReset(GBool<sp/>unfiltered);<sp/><sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>GBool<sp/>progressive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>in<sp/>progressive<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>GBool<sp/>interleaved;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>in<sp/>interleaved<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mcuWidth,<sp/>mcuHeight;<sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>min<sp/>coding<sp/>unit,<sp/>in<sp/>data<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufWidth,<sp/>bufHeight;<sp/><sp/></highlight><highlight class="comment">//<sp/>frameBuf<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><ref refid="struct_d_c_t_comp_info" kindref="compound">DCTCompInfo</ref><sp/>compInfo[4];<sp/><sp/></highlight><highlight class="comment">//<sp/>info<sp/>for<sp/>each<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><ref refid="struct_d_c_t_scan_info" kindref="compound">DCTScanInfo</ref><sp/>scanInfo;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>info<sp/>for<sp/>the<sp/>current<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numComps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components<sp/>in<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorXform;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>transform:<sp/>-1<sp/>=<sp/>unspecified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>=<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>=<sp/>YUV/YUVK<sp/>-&gt;<sp/>RGB/CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>GBool<sp/>gotJFIFMarker;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>APP0<sp/>JFIF<sp/>marker<sp/>was<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>GBool<sp/>gotAdobeMarker;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>APP14<sp/>Adobe<sp/>marker<sp/>was<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restartInterval;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>interval,<sp/>in<sp/>MCUs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>Gushort<sp/>quantTables[4][64];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quantization<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numQuantTables;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>quantization<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>dcHuffTables[4];<sp/></highlight><highlight class="comment">//<sp/>DC<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>acHuffTables[4];<sp/></highlight><highlight class="comment">//<sp/>AC<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDCHuffTables;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>DC<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numACHuffTables;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>AC<sp/>Huffman<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>Guchar<sp/>*rowBuf[4][32];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>one<sp/>MCU<sp/>(non-progressive<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*frameBuf[4];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>frame<sp/>(progressive<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/>x,<sp/>y,<sp/>dy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>position<sp/>within<sp/>image/MCU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restartCtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MCUs<sp/>left<sp/>until<sp/>restart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restartMarker;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>restart<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eobRun;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>EOBs<sp/>left<sp/>in<sp/>the<sp/>current<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputBuf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>buffer<sp/>for<sp/>variable<sp/>length<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>valid<sp/>bits<sp/>in<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restart();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>GBool<sp/>readMCURow();</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readScan();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>GBool<sp/>readDataUnit(<ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>*dcHuffTable,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>*acHuffTable,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*prevDC,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data[64]);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>GBool<sp/>readProgressiveDataUnit(<ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>*dcHuffTable,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>*acHuffTable,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*prevDC,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data[64]);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decodeImage();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transformDataUnit(Gushort<sp/>*quantTable,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIn[64],<sp/>Guchar<sp/>dataOut[64]);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readHuffSym(<ref refid="struct_d_c_t_huff_table" kindref="compound">DCTHuffTable</ref><sp/>*<ref refid="classtable" kindref="compound">table</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readAmp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readBit();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>GBool<sp/>readHeader();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>GBool<sp/>readBaselineSOF();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>GBool<sp/>readProgressiveSOF();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>GBool<sp/>readScanInfo();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>GBool<sp/>readQuantTables();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>GBool<sp/>readHuffmanTables();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>GBool<sp/>readRestartInterval();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>GBool<sp/>readJFIFMarker();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>GBool<sp/>readAdobeMarker();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>GBool<sp/>readTrailer();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readMarker();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read16();</highlight></codeline>
<codeline lineno="941"><highlight class="normal">};</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ENABLE_ZLIB_UNCOMPRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FlateStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateWindow<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768<sp/><sp/><sp/><sp/>//<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flateWindow-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateMaxHuffman<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15<sp/><sp/><sp/><sp/>//<sp/>max<sp/>Huffman<sp/>code<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateMaxCodeLenCodes<sp/><sp/><sp/><sp/>19<sp/><sp/><sp/><sp/>//<sp/>max<sp/>#<sp/>code<sp/>length<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateMaxLitCodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>288<sp/><sp/><sp/><sp/>//<sp/>max<sp/>#<sp/>literal<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flateMaxDistCodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>30<sp/><sp/><sp/><sp/>//<sp/>max<sp/>#<sp/>distance<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Huffman<sp/>code<sp/>table<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="struct_flate_code" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_flate_code" kindref="compound">FlateCode</ref><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>Gushort<sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>length,<sp/>in<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>Gushort<sp/>val;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>represented<sp/>by<sp/>this<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal">};</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963" refid="struct_flate_huffman_tab" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="struct_flate_code" kindref="compound">FlateCode</ref><sp/>*codes;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLen;</highlight></codeline>
<codeline lineno="966"><highlight class="normal">};</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Decoding<sp/>info<sp/>for<sp/>length<sp/>and<sp/>distance<sp/>code<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="struct_flate_decode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_flate_decode" kindref="compound">FlateDecode</ref><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>extra<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>length/distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal">};</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_flate_stream" kindref="compound">FlateStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><ref refid="class_flate_stream" kindref="compound">FlateStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predictor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colors,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_flate_stream" kindref="compound">FlateStream</ref>();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strFlate;<sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getRawChar();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getRawChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unfilteredReset<sp/>();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flateReset(GBool<sp/>unfiltered);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doGetRawChar()<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remain<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endOfBlock<sp/>&amp;&amp;<sp/>eof)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readSome();</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>buf[index];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>&amp;<sp/>flateMask;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>--remain;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>hasGetChars()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChars(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChars,<sp/>Guchar<sp/>*buffer);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><ref refid="class_stream_predictor" kindref="compound">StreamPredictor</ref><sp/>*pred;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>predictor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>Guchar<sp/>buf[flateWindow];<sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>data<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>index<sp/>into<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remain;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>valid<sp/>bytes<sp/>in<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codeBuf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codeSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>literal<sp/>and<sp/>distance<sp/>code<sp/>lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>codeLengths[flateMaxLitCodes<sp/>+<sp/>flateMaxDistCodes];</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/>litCodeTab;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>literal<sp/>code<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/>distCodeTab;<sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>code<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>GBool<sp/>compressedBlock;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>reading<sp/>a<sp/>compressed<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockLen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>length<sp/>of<sp/>uncompressed<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>GBool<sp/>endOfBlock;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>when<sp/>end<sp/>of<sp/>block<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>when<sp/>end<sp/>of<sp/>stream<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>length<sp/>code<sp/>reordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>codeLenCodeMap[flateMaxCodeLenCodes];</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_flate_decode" kindref="compound">FlateDecode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>decoding<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>lengthDecode[flateMaxLitCodes-257];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_flate_decode" kindref="compound">FlateDecode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>decoding<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>distDecode[flateMaxDistCodes];</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>literal<sp/>code<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>fixedLitCodeTab;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>distance<sp/>code<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>fixedDistCodeTab;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readSome();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>GBool<sp/>startBlock();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadFixedCodes();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>GBool<sp/>readDynamicCodes();</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compHuffmanCodes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lengths,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/>*tab);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getHuffmanCodeWord(<ref refid="struct_flate_huffman_tab" kindref="compound">FlateHuffmanTab</ref><sp/>*tab);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCodeWord(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EOFStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="class_e_o_f_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_e_o_f_stream" kindref="compound">EOFStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><ref refid="class_e_o_f_stream" kindref="compound">EOFStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_e_o_f_stream" kindref="compound">EOFStream</ref>();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;<sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;<sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BufStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="class_buf_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_buf_stream" kindref="compound">BufStream</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><ref refid="class_buf_stream" kindref="compound">BufStream</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSizeA);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_buf_stream" kindref="compound">BufStream</ref>();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FixedLengthEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091" refid="class_fixed_length_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fixed_length_encoder" kindref="compound">FixedLengthEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><ref refid="class_fixed_length_encoder" kindref="compound">FixedLengthEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lengthA);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>~<ref refid="class_fixed_length_encoder" kindref="compound">FixedLengthEncoder</ref>();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASCIIHexEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114" refid="class_a_s_c_i_i_hex_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_a_s_c_i_i_hex_encoder" kindref="compound">ASCIIHexEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><ref refid="class_a_s_c_i_i_hex_encoder" kindref="compound">ASCIIHexEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_a_s_c_i_i_hex_encoder" kindref="compound">ASCIIHexEncoder</ref>();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[4];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineLen;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASCII85Encoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="class_a_s_c_i_i85_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_a_s_c_i_i85_encoder" kindref="compound">ASCII85Encoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><ref refid="class_a_s_c_i_i85_encoder" kindref="compound">ASCII85Encoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_a_s_c_i_i85_encoder" kindref="compound">ASCII85Encoder</ref>();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[8];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineLen;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RunLengthEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174" refid="class_run_length_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_run_length_encoder" kindref="compound">RunLengthEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><ref refid="class_run_length_encoder" kindref="compound">RunLengthEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_run_length_encoder" kindref="compound">RunLengthEncoder</ref>();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[131];</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nextEnd;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LZWEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204" refid="struct_l_z_w_encoder_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_z_w_encoder_node" kindref="compound">LZWEncoderNode</ref><sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="struct_l_z_w_encoder_node" kindref="compound">LZWEncoderNode</ref><sp/>*next;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>sibling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><ref refid="struct_l_z_w_encoder_node" kindref="compound">LZWEncoderNode</ref><sp/>*children;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210" refid="class_l_z_w_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_l_z_w_encoder" kindref="compound">LZWEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><ref refid="class_l_z_w_encoder" kindref="compound">LZWEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_l_z_w_encoder" kindref="compound">LZWEncoder</ref>();</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psLevel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*indent)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/>last<sp/>=<sp/>gTrue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><ref refid="struct_l_z_w_encoder_node" kindref="compound">LZWEncoderNode</ref><sp/><ref refid="classtable" kindref="compound">table</ref>[4096];</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextSeq;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codeLen;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>Guchar<sp/>inBuf[4096];</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inBufLen;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outBuf;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outBufLen;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>GBool<sp/>needEOD;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillBuf();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CMYKGrayEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="class_c_m_y_k_gray_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_m_y_k_gray_encoder" kindref="compound">CMYKGrayEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><ref refid="class_c_m_y_k_gray_encoder" kindref="compound">CMYKGrayEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_c_m_y_k_gray_encoder" kindref="compound">CMYKGrayEncoder</ref>();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[2];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RGBGrayEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="class_r_g_b_gray_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_r_g_b_gray_encoder" kindref="compound">RGBGrayEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><ref refid="class_r_g_b_gray_encoder" kindref="compound">RGBGrayEncoder</ref>(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_r_g_b_gray_encoder" kindref="compound">RGBGrayEncoder</ref>();</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StreamKind<sp/>getKind()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strWeird;<sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getChar()</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr++<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookChar()</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bufPtr<sp/>&gt;=<sp/>bufEnd<sp/>&amp;&amp;<sp/>!fillBuf())<sp/>?<sp/>EOF<sp/>:<sp/>(*bufPtr<sp/>&amp;<sp/>0xff);<sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getPSFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*psLevel*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*indent*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isBinary(GBool<sp/></highlight><highlight class="comment">/*last<sp/>=<sp/>gTrue*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>isEncoder()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;<sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[2];</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufPtr;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bufEnd;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>GBool<sp/>eof;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>GBool<sp/>fillBuf();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/Stream.h"/>
  </compounddef>
</doxygen>
