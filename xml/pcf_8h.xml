<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcf_8h" kind="file" language="C++">
    <compoundname>pcf.h</compoundname>
    <includes local="no">ft2build.h</includes>
    <includedby refid="pcfread_8c" local="yes">thirdparty/freetype/src/pcf/pcfread.c</includedby>
    <includedby refid="pcfdrivr_8c" local="yes">thirdparty/freetype/src/pcf/pcfdrivr.c</includedby>
    <incdepgraph>
      <node id="80306">
        <label>ft2build.h</label>
      </node>
      <node id="80305">
        <label>thirdparty/freetype/src/pcf/pcf.h</label>
        <link refid="pcf_8h"/>
        <childnode refid="80306" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="80310">
        <label>thirdparty/freetype/src/pcf/pcfdrivr.c</label>
        <link refid="pcfdrivr_8c_source"/>
        <childnode refid="80309" relation="include">
        </childnode>
      </node>
      <node id="80308">
        <label>thirdparty/freetype/src/pcf/pcfread.c</label>
        <link refid="pcfread_8c_source"/>
        <childnode refid="80309" relation="include">
        </childnode>
      </node>
      <node id="80309">
        <label>thirdparty/freetype/src/pcf/pcf.c</label>
        <link refid="pcf_8c_source"/>
      </node>
      <node id="80307">
        <label>thirdparty/freetype/src/pcf/pcf.h</label>
        <link refid="pcf_8h"/>
        <childnode refid="80308" relation="include">
        </childnode>
        <childnode refid="80310" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_p_c_f___table_rec__" prot="public">PCF_TableRec_</innerclass>
    <innerclass refid="struct_p_c_f___toc_rec__" prot="public">PCF_TocRec_</innerclass>
    <innerclass refid="struct_p_c_f___parse_property_rec__" prot="public">PCF_ParsePropertyRec_</innerclass>
    <innerclass refid="struct_p_c_f___property_rec__" prot="public">PCF_PropertyRec_</innerclass>
    <innerclass refid="struct_p_c_f___compressed___metric_rec__" prot="public">PCF_Compressed_MetricRec_</innerclass>
    <innerclass refid="struct_p_c_f___metric_rec__" prot="public">PCF_MetricRec_</innerclass>
    <innerclass refid="struct_p_c_f___accel_rec__" prot="public">PCF_AccelRec_</innerclass>
    <innerclass refid="struct_p_c_f___encoding_rec__" prot="public">PCF_EncodingRec_</innerclass>
    <innerclass refid="struct_p_c_f___face_rec__" prot="public">PCF_FaceRec_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pcf_8h_1ae0628372cc68c1c79b78f99b824cc8e7" prot="public" static="no">
        <name>LSBFirst</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="168" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1abfc8e001ca4b64b725443cf25f202eb2" prot="public" static="no">
        <name>MSBFirst</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="169" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a47c8bfae0bd745bb5c88bd8cf87a5e9f" prot="public" static="no">
        <name>PCF_FILE_VERSION</name>
        <initializer>( ( &apos;p&apos; &lt;&lt; 24 ) | \
                                  ( &apos;c&apos; &lt;&lt; 16 ) | \
                                  ( &apos;f&apos; &lt;&lt;  8 ) | 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="171" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a7613fdad32ce15cc5a00450ad1300e91" prot="public" static="no">
        <name>PCF_FORMAT_MASK</name>
        <initializer>0xFFFFFF00UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="174" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a6251400ea57924813b07460b32b1a1a7" prot="public" static="no">
        <name>PCF_DEFAULT_FORMAT</name>
        <initializer>0x00000000UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="176" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a9cdadebaa623acbc82a6c88dba5f2c89" prot="public" static="no">
        <name>PCF_INKBOUNDS</name>
        <initializer>0x00000200UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="177" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a0100090b8f2e7a685aef3ee5bff21e9d" prot="public" static="no">
        <name>PCF_ACCEL_W_INKBOUNDS</name>
        <initializer>0x00000100UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="178" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a7003b22370f30d46729a30da8ccb9ce1" prot="public" static="no">
        <name>PCF_COMPRESSED_METRICS</name>
        <initializer>0x00000100UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="179" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a2fc2de6ecba5c553847f3786e014c6a4" prot="public" static="no">
        <name>PCF_FORMAT_MATCH</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>( ( (a) &amp; PCF_FORMAT_MASK ) == ( (b) &amp; PCF_FORMAT_MASK ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="181" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a3216b3a46cae32bd60c42600f0e3b53d" prot="public" static="no">
        <name>PCF_GLYPH_PAD_MASK</name>
        <initializer>( 3 &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="184" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1ae8bab4e31faa59753b0951cec4ce05e3" prot="public" static="no">
        <name>PCF_BYTE_MASK</name>
        <initializer>( 1 &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="185" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a8834c82ecaa01b252450febc247caef7" prot="public" static="no">
        <name>PCF_BIT_MASK</name>
        <initializer>( 1 &lt;&lt; 3 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="186" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1acb48ec64a94afda64160fb2b01a20935" prot="public" static="no">
        <name>PCF_SCAN_UNIT_MASK</name>
        <initializer>( 3 &lt;&lt; 4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="187" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a67bab32b18b0f1f998de5d8d21731127" prot="public" static="no">
        <name>PCF_BYTE_ORDER</name>
        <param><defname>f</defname></param>
        <initializer>( ( (f) &amp; PCF_BYTE_MASK ) ? MSBFirst : LSBFirst )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="189" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1afad2eb4c5593effb0957a3b4293676fe" prot="public" static="no">
        <name>PCF_BIT_ORDER</name>
        <param><defname>f</defname></param>
        <initializer>( ( (f) &amp; PCF_BIT_MASK ) ? MSBFirst : LSBFirst )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="191" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a3342d8c0d48b85f901265e3b35969f28" prot="public" static="no">
        <name>PCF_GLYPH_PAD_INDEX</name>
        <param><defname>f</defname></param>
        <initializer>( (f) &amp; PCF_GLYPH_PAD_MASK )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="193" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1afdac1315a38b83767cf098f65d653b82" prot="public" static="no">
        <name>PCF_GLYPH_PAD</name>
        <param><defname>f</defname></param>
        <initializer>( 1 &lt;&lt; PCF_GLYPH_PAD_INDEX( f ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="195" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a800eeaff4c7cf093cac6382875ce9cb0" prot="public" static="no">
        <name>PCF_SCAN_UNIT_INDEX</name>
        <param><defname>f</defname></param>
        <initializer>( ( (f) &amp; PCF_SCAN_UNIT_MASK ) &gt;&gt; 4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="197" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1aa4bc177cb6917f086fb1693248bac6d8" prot="public" static="no">
        <name>PCF_SCAN_UNIT</name>
        <param><defname>f</defname></param>
        <initializer>( 1 &lt;&lt; PCF_SCAN_UNIT_INDEX( f ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="199" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1ad72190d438957b85075719f9f6b46641" prot="public" static="no">
        <name>PCF_FORMAT_BITS</name>
        <param><defname>f</defname></param>
        <initializer>( (f) &amp; ( PCF_GLYPH_PAD_MASK | \
                    PCF_BYTE_MASK      | \
                    PCF_BIT_MASK       | \
                    PCF_SCAN_UNIT_MASK ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="201" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1abcd7a131574278a45dc3bc472dd2e849" prot="public" static="no">
        <name>PCF_SIZE_TO_INDEX</name>
        <param><defname>s</defname></param>
        <initializer>( (s) == 4 ? 2 : (s) == 2 ? 1 : 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="207" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a42f0bd31f022b85bcff98b0d97d6174e" prot="public" static="no">
        <name>PCF_INDEX_TO_SIZE</name>
        <param><defname>b</defname></param>
        <initializer>( 1 &lt;&lt; b )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="208" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1aab1763ec9a710605c496aa7bcccb6cad" prot="public" static="no">
        <name>PCF_FORMAT</name>
        <param><defname>bit</defname></param>
        <param><defname>byte</defname></param>
        <param><defname>glyph</defname></param>
        <param><defname>scan</defname></param>
        <initializer>( ( PCF_SIZE_TO_INDEX( scan )      &lt;&lt; 4 ) | \
            ( ( (bit)  == MSBFirst ? 1 : 0 ) &lt;&lt; 3 ) | \
            ( ( (byte) == MSBFirst ? 1 : 0 ) &lt;&lt; 2 ) | \
            ( PCF_SIZE_TO_INDEX( glyph )     &lt;&lt; 0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="210" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a32f61cf7ad79613a7d3e6d33015a2aa0" prot="public" static="no">
        <name>PCF_PROPERTIES</name>
        <initializer>( 1 &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="216" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a51e8c026389be38137590cb0ace8b7ee" prot="public" static="no">
        <name>PCF_ACCELERATORS</name>
        <initializer>( 1 &lt;&lt; 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="217" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1ab2c439c7c5d66771f1bccfee2c8e361e" prot="public" static="no">
        <name>PCF_METRICS</name>
        <initializer>( 1 &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="218" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a28e3bf4f9090d342bc480c7d2d1f6e2c" prot="public" static="no">
        <name>PCF_BITMAPS</name>
        <initializer>( 1 &lt;&lt; 3 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="219" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a918f9d06019ef8b0df42431061f09932" prot="public" static="no">
        <name>PCF_INK_METRICS</name>
        <initializer>( 1 &lt;&lt; 4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="220" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1aa47971a5ffca406dd1459fc73c2a7b2c" prot="public" static="no">
        <name>PCF_BDF_ENCODINGS</name>
        <initializer>( 1 &lt;&lt; 5 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="221" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1aaf036573dbea7b419b73301e5a1a9f68" prot="public" static="no">
        <name>PCF_SWIDTHS</name>
        <initializer>( 1 &lt;&lt; 6 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="222" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a310cc814d8af79549a6bdea821ed7e4c" prot="public" static="no">
        <name>PCF_GLYPH_NAMES</name>
        <initializer>( 1 &lt;&lt; 7 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="223" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a7b62f800246a3d6900712b5ca39c0e59" prot="public" static="no">
        <name>PCF_BDF_ACCELERATORS</name>
        <initializer>( 1 &lt;&lt; 8 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="224" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcf_8h_1a19b8bec3e0b839a60ecb69a6e915bf4c" prot="public" static="no">
        <name>GLYPHPADOPTIONS</name>
        <initializer>4 /* I&apos;m not sure about this */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="226" column="9" bodyfile="thirdparty/freetype/src/pcf/pcf.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pcf_8h_1abc8572eedcf587dc1a8c8cfb12b60d4f" prot="public" static="no">
        <type>FT_BEGIN_HEADER struct <ref refid="struct_p_c_f___table_rec__" kindref="compound">PCF_TableRec_</ref></type>
        <definition>typedef FT_BEGIN_HEADER struct PCF_TableRec_  PCF_TableRec</definition>
        <argsstring></argsstring>
        <name>PCF_TableRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a325ccd25773b3e42d2ab171ad438c7f4" prot="public" static="no">
        <type>FT_BEGIN_HEADER struct <ref refid="struct_p_c_f___table_rec__" kindref="compound">PCF_TableRec_</ref> *</type>
        <definition>typedef FT_BEGIN_HEADER struct PCF_TableRec_ * PCF_Table</definition>
        <argsstring></argsstring>
        <name>PCF_Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a6028cbd01d19b7fc53824d81f212b9ce" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_TocRec_</ref></type>
        <definition>typedef struct PCF_TocRec_  PCF_TocRec</definition>
        <argsstring></argsstring>
        <name>PCF_TocRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a7fe44763db61a1cc4ec467c38d84ac12" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_TocRec_</ref> *</type>
        <definition>typedef struct PCF_TocRec_ * PCF_Toc</definition>
        <argsstring></argsstring>
        <name>PCF_Toc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1aa3e698540fc23c599b99b0b253ef71cf" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___parse_property_rec__" kindref="compound">PCF_ParsePropertyRec_</ref></type>
        <definition>typedef struct PCF_ParsePropertyRec_  PCF_ParsePropertyRec</definition>
        <argsstring></argsstring>
        <name>PCF_ParsePropertyRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1adf4d3674b398e99bf6448ef08c0ccd6e" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___parse_property_rec__" kindref="compound">PCF_ParsePropertyRec_</ref> *</type>
        <definition>typedef struct PCF_ParsePropertyRec_ * PCF_ParseProperty</definition>
        <argsstring></argsstring>
        <name>PCF_ParseProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a82794d7ccf3ed4f816bdb7ed4293eae9" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___property_rec__" kindref="compound">PCF_PropertyRec_</ref></type>
        <definition>typedef struct PCF_PropertyRec_  PCF_PropertyRec</definition>
        <argsstring></argsstring>
        <name>PCF_PropertyRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a7280c8dd8cee7665de3d64862170a1cd" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___property_rec__" kindref="compound">PCF_PropertyRec_</ref> *</type>
        <definition>typedef struct PCF_PropertyRec_ * PCF_Property</definition>
        <argsstring></argsstring>
        <name>PCF_Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a733af5e9ecbfd7249a2e9f881831391d" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___compressed___metric_rec__" kindref="compound">PCF_Compressed_MetricRec_</ref></type>
        <definition>typedef struct PCF_Compressed_MetricRec_  PCF_Compressed_MetricRec</definition>
        <argsstring></argsstring>
        <name>PCF_Compressed_MetricRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1ac76b42eab798d4156f86bfa9e2a90bef" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___compressed___metric_rec__" kindref="compound">PCF_Compressed_MetricRec_</ref> *</type>
        <definition>typedef struct PCF_Compressed_MetricRec_ * PCF_Compressed_Metric</definition>
        <argsstring></argsstring>
        <name>PCF_Compressed_Metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1aab27b3a1bd1801c0f2e9f6c239ee0a77" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec_</ref></type>
        <definition>typedef struct PCF_MetricRec_  PCF_MetricRec</definition>
        <argsstring></argsstring>
        <name>PCF_MetricRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a499b8fa15b0498c0549e0e8b8df09ef6" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec_</ref> *</type>
        <definition>typedef struct PCF_MetricRec_ * PCF_Metric</definition>
        <argsstring></argsstring>
        <name>PCF_Metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1aa162c5b7bee564e59300f525dbd04e00" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_AccelRec_</ref></type>
        <definition>typedef struct PCF_AccelRec_  PCF_AccelRec</definition>
        <argsstring></argsstring>
        <name>PCF_AccelRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a0cd14cd840933cc06a05b3863556465f" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_AccelRec_</ref> *</type>
        <definition>typedef struct PCF_AccelRec_ * PCF_Accel</definition>
        <argsstring></argsstring>
        <name>PCF_Accel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a20f037e13eb4ea9c5453357ed57fa9a1" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___encoding_rec__" kindref="compound">PCF_EncodingRec_</ref></type>
        <definition>typedef struct PCF_EncodingRec_  PCF_EncodingRec</definition>
        <argsstring></argsstring>
        <name>PCF_EncodingRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a8d86202761be0b23c786fb295a7022e8" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___encoding_rec__" kindref="compound">PCF_EncodingRec_</ref> *</type>
        <definition>typedef struct PCF_EncodingRec_ * PCF_Encoding</definition>
        <argsstring></argsstring>
        <name>PCF_Encoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a3d3f68b95540ba03d61caa0695a07d8f" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_FaceRec_</ref></type>
        <definition>typedef struct PCF_FaceRec_  PCF_FaceRec</definition>
        <argsstring></argsstring>
        <name>PCF_FaceRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pcf_8h_1a9bf968282f5eca2a82f5f880c26e7fe4" prot="public" static="no">
        <type>struct <ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_FaceRec_</ref> *</type>
        <definition>typedef struct PCF_FaceRec_ * PCF_Face</definition>
        <argsstring></argsstring>
        <name>PCF_Face</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcf_8h_1a64b22edf99ad64376a0c877ec9453c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pcf_load_font</definition>
        <argsstring>(FT_Stream, PCF_Face)</argsstring>
        <name>pcf_load_font</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
        </param>
        <param>
          <type><ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_Face</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/pcf/pcf.h" line="229" column="1" bodyfile="thirdparty/freetype/src/pcf/pcfread.c" bodystart="1175" bodyend="1386"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>pcf.h</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>FreeType<sp/>font<sp/>driver<sp/>for<sp/>pcf<sp/>fonts</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003,<sp/>2006,<sp/>2010<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Francesco<sp/>Zappa<sp/>Nardelli</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="9"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="10"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="11"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="12"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="13"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="16"><highlight class="comment">all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="19"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="22"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="23"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment">THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__PCF_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PCF_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_DRIVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_STREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_p_c_f___table_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___table_rec__" kindref="compound">PCF_TableRec_</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>type;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>format;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>size;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>offset;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}<sp/>PCF_TableRec,<sp/>*PCF_Table;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="struct_p_c_f___toc_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_TocRec_</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>version;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>PCF_Table<sp/><sp/>tables;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_TocRec</ref>,<sp/>*<ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_Toc</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_p_c_f___parse_property_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___parse_property_rec__" kindref="compound">PCF_ParsePropertyRec_</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/>name;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>isString;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/>value;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___parse_property_rec__" kindref="compound">PCF_ParsePropertyRec</ref>,<sp/>*<ref refid="struct_p_c_f___parse_property_rec__" kindref="compound">PCF_ParseProperty</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_p_c_f___property_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___property_rec__" kindref="compound">PCF_PropertyRec_</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_String*<sp/><sp/>name;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/>isString;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_String*<sp/><sp/>atom;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/>ul;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___property_rec__" kindref="compound">PCF_PropertyRec</ref>,<sp/>*<ref refid="struct_p_c_f___property_rec__" kindref="compound">PCF_Property</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_p_c_f___compressed___metric_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___compressed___metric_rec__" kindref="compound">PCF_Compressed_MetricRec_</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>leftSideBearing;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>rightSideBearing;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>characterWidth;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>ascent;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/>descent;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___compressed___metric_rec__" kindref="compound">PCF_Compressed_MetricRec</ref>,<sp/>*<ref refid="struct_p_c_f___compressed___metric_rec__" kindref="compound">PCF_Compressed_Metric</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_p_c_f___metric_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec_</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>leftSideBearing;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>rightSideBearing;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>characterWidth;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>ascent;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>descent;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/>attributes;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/>bits;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec</ref>,<sp/>*<ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_Metric</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="struct_p_c_f___accel_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_AccelRec_</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noOverlap;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constantMetrics;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminalFont;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constantWidth;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inkInside;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inkMetrics;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawDirection;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontAscent;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontDescent;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxOverlap;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec</ref><sp/><sp/>minbounds;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec</ref><sp/><sp/>maxbounds;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec</ref><sp/><sp/>ink_minbounds;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___metric_rec__" kindref="compound">PCF_MetricRec</ref><sp/><sp/>ink_maxbounds;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_AccelRec</ref>,<sp/>*<ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_Accel</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="struct_p_c_f___encoding_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___encoding_rec__" kindref="compound">PCF_EncodingRec_</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/>enc;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UShort<sp/><sp/>glyph;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___encoding_rec__" kindref="compound">PCF_EncodingRec</ref>,<sp/>*<ref refid="struct_p_c_f___encoding_rec__" kindref="compound">PCF_Encoding</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="struct_p_c_f___face_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_FaceRec_</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___face_rec__" kindref="compound">FT_FaceRec</ref><sp/><sp/><sp/><sp/><sp/>root;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_StreamRec</ref><sp/><sp/><sp/>comp_stream;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/><sp/><sp/><sp/><sp/>comp_source;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charset_encoding;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charset_registry;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___toc_rec__" kindref="compound">PCF_TocRec</ref><sp/><sp/><sp/><sp/><sp/>toc;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_c_f___accel_rec__" kindref="compound">PCF_AccelRec</ref><sp/><sp/><sp/>accel;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nprops;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>PCF_Property<sp/><sp/><sp/>properties;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmetrics;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>PCF_Metric<sp/><sp/><sp/><sp/><sp/>metrics;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nencodings;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>PCF_Encoding<sp/><sp/><sp/>encodings;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultChar;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapsFormat;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___char_map_rec__" kindref="compound">FT_CharMap</ref><sp/><sp/><sp/><sp/><sp/>charmap_handle;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___char_map_rec__" kindref="compound">FT_CharMapRec</ref><sp/><sp/>charmap;<sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>single<sp/>charmap<sp/>per<sp/>face<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_FaceRec</ref>,<sp/>*<ref refid="struct_p_c_f___face_rec__" kindref="compound">PCF_Face</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>macros<sp/>for<sp/>pcf<sp/>font<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSBFirst<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSBFirst<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_FILE_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>&apos;p&apos;<sp/>&lt;&lt;<sp/>24<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>&apos;c&apos;<sp/>&lt;&lt;<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>&apos;f&apos;<sp/>&lt;&lt;<sp/><sp/>8<sp/>)<sp/>|<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_FORMAT_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFF00UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_DEFAULT_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/>0x00000000UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_INKBOUNDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000200UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_ACCEL_W_INKBOUNDS<sp/><sp/><sp/>0x00000100UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_COMPRESSED_METRICS<sp/><sp/>0x00000100UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_FORMAT_MATCH(<sp/>a,<sp/>b<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(a)<sp/>&amp;<sp/>PCF_FORMAT_MASK<sp/>)<sp/>==<sp/>(<sp/>(b)<sp/>&amp;<sp/>PCF_FORMAT_MASK<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_GLYPH_PAD_MASK<sp/><sp/>(<sp/>3<sp/>&lt;&lt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BYTE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>2<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BIT_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>3<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_SCAN_UNIT_MASK<sp/><sp/>(<sp/>3<sp/>&lt;&lt;<sp/>4<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BYTE_ORDER(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(f)<sp/>&amp;<sp/>PCF_BYTE_MASK<sp/>)<sp/>?<sp/>MSBFirst<sp/>:<sp/>LSBFirst<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BIT_ORDER(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(f)<sp/>&amp;<sp/>PCF_BIT_MASK<sp/>)<sp/>?<sp/>MSBFirst<sp/>:<sp/>LSBFirst<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_GLYPH_PAD_INDEX(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(f)<sp/>&amp;<sp/>PCF_GLYPH_PAD_MASK<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_GLYPH_PAD(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>PCF_GLYPH_PAD_INDEX(<sp/>f<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_SCAN_UNIT_INDEX(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(f)<sp/>&amp;<sp/>PCF_SCAN_UNIT_MASK<sp/>)<sp/>&gt;&gt;<sp/>4<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_SCAN_UNIT(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>PCF_SCAN_UNIT_INDEX(<sp/>f<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_FORMAT_BITS(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(f)<sp/>&amp;<sp/>(<sp/>PCF_GLYPH_PAD_MASK<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCF_BYTE_MASK<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCF_BIT_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCF_SCAN_UNIT_MASK<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_SIZE_TO_INDEX(<sp/>s<sp/>)<sp/><sp/>(<sp/>(s)<sp/>==<sp/>4<sp/>?<sp/>2<sp/>:<sp/>(s)<sp/>==<sp/>2<sp/>?<sp/>1<sp/>:<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_INDEX_TO_SIZE(<sp/>b<sp/>)<sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>b<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_FORMAT(<sp/>bit,<sp/>byte,<sp/>glyph,<sp/>scan<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>PCF_SIZE_TO_INDEX(<sp/>scan<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>4<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(bit)<sp/><sp/>==<sp/>MSBFirst<sp/>?<sp/>1<sp/>:<sp/>0<sp/>)<sp/>&lt;&lt;<sp/>3<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>(byte)<sp/>==<sp/>MSBFirst<sp/>?<sp/>1<sp/>:<sp/>0<sp/>)<sp/>&lt;&lt;<sp/>2<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>PCF_SIZE_TO_INDEX(<sp/>glyph<sp/>)<sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_PROPERTIES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_ACCELERATORS<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_METRICS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>2<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BITMAPS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>3<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_INK_METRICS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>4<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BDF_ENCODINGS<sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>5<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_SWIDTHS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>6<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_GLYPH_NAMES<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>7<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCF_BDF_ACCELERATORS<sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>8<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLYPHPADOPTIONS<sp/><sp/>4<sp/></highlight><highlight class="comment">/*<sp/>I&apos;m<sp/>not<sp/>sure<sp/>about<sp/>this<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>pcf_load_font(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref>,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCF_Face<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__PCF_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/pcf/pcf.h"/>
  </compounddef>
</doxygen>
