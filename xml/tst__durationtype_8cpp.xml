<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__durationtype_8cpp" kind="file" language="C++">
    <compoundname>tst_durationtype.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="mscore_8h" local="yes">libmscore/mscore.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="note_8h" local="yes">libmscore/note.h</includes>
    <includes refid="accidental_8h" local="yes">libmscore/accidental.h</includes>
    <includes refid="chord_8h" local="yes">libmscore/chord.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="tremolo_8h" local="yes">libmscore/tremolo.h</includes>
    <includes refid="articulation_8h" local="yes">libmscore/articulation.h</includes>
    <includes refid="sym_8h" local="yes">libmscore/sym.h</includes>
    <includes refid="key_8h" local="yes">libmscore/key.h</includes>
    <includes refid="pitchspelling_8h" local="yes">libmscore/pitchspelling.h</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes local="yes">tst_durationtype.moc</includes>
    <incdepgraph>
      <node id="72634">
        <label>list</label>
      </node>
      <node id="72628">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="72611" relation="include">
        </childnode>
      </node>
      <node id="72630">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="72645">
        <label>functional</label>
      </node>
      <node id="72647">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="72612" relation="include">
        </childnode>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72617" relation="include">
        </childnode>
      </node>
      <node id="72650">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="72651" relation="include">
        </childnode>
      </node>
      <node id="72648">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="72649" relation="include">
        </childnode>
        <childnode refid="72618" relation="include">
        </childnode>
        <childnode refid="72650" relation="include">
        </childnode>
      </node>
      <node id="72623">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="72609">
        <label>mtest/libmscore/durationtype/tst_durationtype.cpp</label>
        <link refid="tst__durationtype_8cpp"/>
        <childnode refid="72610" relation="include">
        </childnode>
        <childnode refid="72611" relation="include">
        </childnode>
        <childnode refid="72615" relation="include">
        </childnode>
        <childnode refid="72619" relation="include">
        </childnode>
        <childnode refid="72643" relation="include">
        </childnode>
        <childnode refid="72644" relation="include">
        </childnode>
        <childnode refid="72648" relation="include">
        </childnode>
        <childnode refid="72651" relation="include">
        </childnode>
        <childnode refid="72629" relation="include">
        </childnode>
        <childnode refid="72652" relation="include">
        </childnode>
        <childnode refid="72653" relation="include">
        </childnode>
        <childnode refid="72630" relation="include">
        </childnode>
        <childnode refid="72628" relation="include">
        </childnode>
        <childnode refid="72655" relation="include">
        </childnode>
        <childnode refid="72656" relation="include">
        </childnode>
      </node>
      <node id="72635">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="72651">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72623" relation="include">
        </childnode>
        <childnode refid="72611" relation="include">
        </childnode>
      </node>
      <node id="72614">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="72625">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72626" relation="include">
        </childnode>
      </node>
      <node id="72656">
        <label>tst_durationtype.moc</label>
      </node>
      <node id="72617">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="72618" relation="include">
        </childnode>
        <childnode refid="72619" relation="include">
        </childnode>
      </node>
      <node id="72636">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="72637" relation="include">
        </childnode>
      </node>
      <node id="72653">
        <label>libmscore/sym.h</label>
        <link refid="sym_8h_source"/>
        <childnode refid="72612" relation="include">
        </childnode>
        <childnode refid="72654" relation="include">
        </childnode>
      </node>
      <node id="72637">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="72638" relation="include">
        </childnode>
        <childnode refid="72639" relation="include">
        </childnode>
        <childnode refid="72640" relation="include">
        </childnode>
      </node>
      <node id="72644">
        <label>libmscore/chord.h</label>
        <link refid="chord_8h"/>
        <childnode refid="72645" relation="include">
        </childnode>
        <childnode refid="72646" relation="include">
        </childnode>
      </node>
      <node id="72649">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72641" relation="include">
        </childnode>
      </node>
      <node id="72629">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="72624" relation="include">
        </childnode>
      </node>
      <node id="72655">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
      </node>
      <node id="72638">
        <label>vector</label>
      </node>
      <node id="72626">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="72621">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="72642">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="72618">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="72612" relation="include">
        </childnode>
      </node>
      <node id="72624">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="72625" relation="include">
        </childnode>
      </node>
      <node id="72613">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="72614" relation="include">
        </childnode>
      </node>
      <node id="72654">
        <label>ft2build.h</label>
      </node>
      <node id="72631">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72617" relation="include">
        </childnode>
      </node>
      <node id="72641">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
      </node>
      <node id="72620">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="72621" relation="include">
        </childnode>
        <childnode refid="72618" relation="include">
        </childnode>
        <childnode refid="72622" relation="include">
        </childnode>
        <childnode refid="72623" relation="include">
        </childnode>
      </node>
      <node id="72633">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="72634" relation="include">
        </childnode>
      </node>
      <node id="72640">
        <label>iostream</label>
      </node>
      <node id="72611">
        <label>libmscore/mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="72612" relation="include">
        </childnode>
        <childnode refid="72613" relation="include">
        </childnode>
      </node>
      <node id="72616">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="72611" relation="include">
        </childnode>
        <childnode refid="72617" relation="include">
        </childnode>
        <childnode refid="72631" relation="include">
        </childnode>
      </node>
      <node id="72643">
        <label>libmscore/accidental.h</label>
        <link refid="accidental_8h"/>
        <childnode refid="72612" relation="include">
        </childnode>
        <childnode refid="72620" relation="include">
        </childnode>
      </node>
      <node id="72627">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="72646">
        <label>chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="72645" relation="include">
        </childnode>
        <childnode refid="72624" relation="include">
        </childnode>
        <childnode refid="72647" relation="include">
        </childnode>
        <childnode refid="72631" relation="include">
        </childnode>
        <childnode refid="72623" relation="include">
        </childnode>
      </node>
      <node id="72612">
        <label>config.h</label>
      </node>
      <node id="72639">
        <label>algorithm</label>
      </node>
      <node id="72652">
        <label>libmscore/articulation.h</label>
        <link refid="articulation_8h_source"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72611" relation="include">
        </childnode>
      </node>
      <node id="72615">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="72612" relation="include">
        </childnode>
        <childnode refid="72616" relation="include">
        </childnode>
        <childnode refid="72632" relation="include">
        </childnode>
        <childnode refid="72633" relation="include">
        </childnode>
        <childnode refid="72635" relation="include">
        </childnode>
        <childnode refid="72636" relation="include">
        </childnode>
        <childnode refid="72641" relation="include">
        </childnode>
        <childnode refid="72642" relation="include">
        </childnode>
      </node>
      <node id="72622">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="72632">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="72628" relation="include">
        </childnode>
        <childnode refid="72611" relation="include">
        </childnode>
        <childnode refid="72617" relation="include">
        </childnode>
      </node>
      <node id="72619">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="72620" relation="include">
        </childnode>
        <childnode refid="72624" relation="include">
        </childnode>
        <childnode refid="72627" relation="include">
        </childnode>
        <childnode refid="72628" relation="include">
        </childnode>
        <childnode refid="72623" relation="include">
        </childnode>
        <childnode refid="72629" relation="include">
        </childnode>
        <childnode refid="72630" relation="include">
        </childnode>
      </node>
      <node id="72610">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_duration_type" prot="public">TestDurationType</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__durationtype_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/durationtype/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/durationtype/tst_durationtype.cpp" line="30" column="9" bodyfile="mtest/libmscore/durationtype/tst_durationtype.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/mscore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="note_8h" kindref="compound">libmscore/note.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="accidental_8h" kindref="compound">libmscore/accidental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chord_8h" kindref="compound">libmscore/chord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/tremolo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/articulation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/sym.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/key.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/pitchspelling.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/durationtype/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestDurationType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_test_duration_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_duration_type" kindref="compound">TestDurationType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>halfDuration();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doubleDuration();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decDurationDotted();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incDurationDotted();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDurationType::initTestCase()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>halfDuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Simple<sp/>tests<sp/>for<sp/>command<sp/>&quot;half-duration&quot;<sp/>(default<sp/>shortcut<sp/>&quot;Q&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>starts<sp/>with<sp/>Whole<sp/>note<sp/>and<sp/>repeatedly<sp/>applies<sp/>cmdHalfDuration()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDurationType::halfDuration()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;empty.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setTrack(0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setSegment(score-&gt;tick2segment(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SegmentType::ChordRest));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setDuration(TDuration::DurationType::V_WHOLE);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setNoteEntryMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdAddPitch(42,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(1,<sp/>1));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeatedly<sp/>half-duration<sp/>from<sp/>V_WHOLE<sp/>to<sp/>V_128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>128;<sp/>i<sp/>&gt;<sp/>1;<sp/>i<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdHalfDuration();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(i<sp/>/<sp/>2,<sp/>128));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>halfDuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Simple<sp/>tests<sp/>for<sp/>command<sp/>&quot;double-duration&quot;<sp/>(default<sp/>shortcut<sp/>&quot;W&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Starts<sp/>with<sp/>128th<sp/>note<sp/>and<sp/>repeatedly<sp/>applies<sp/>cmdDoubleDuration()<sp/>up<sp/>to<sp/>Whole<sp/>note.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDurationType::doubleDuration()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;empty.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setTrack(0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setSegment(score-&gt;tick2segment(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SegmentType::ChordRest));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setDuration(TDuration::DurationType::V_128TH);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setNoteEntryMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdAddPitch(42,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(1,<sp/>128));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeatedly<sp/>double-duration<sp/>from<sp/>V_128<sp/>to<sp/>V_WHOLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>128;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdDoubleDuration();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(2<sp/>*<sp/>i,<sp/>128));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>decDurationDotted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Simple<sp/>tests<sp/>for<sp/>command<sp/>&quot;dec-duration-dotted&quot;<sp/>(default<sp/>shortcut<sp/>&quot;Shift+Q&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Starts<sp/>with<sp/>Whole<sp/>note<sp/>and<sp/>repeatedly<sp/>applies<sp/>cmdDecDurationDotted()<sp/>down<sp/>to<sp/>128th<sp/>note.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDurationType::decDurationDotted()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;empty.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setTrack(0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setSegment(score-&gt;tick2segment(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SegmentType::ChordRest));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setDuration(TDuration::DurationType::V_WHOLE);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setNoteEntryMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdAddPitch(42,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(1,<sp/>1));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeatedly<sp/>dec-duration-dotted<sp/>from<sp/>V_WHOLE<sp/>to<sp/>V_128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>128;<sp/>i<sp/>&gt;<sp/>1;<sp/>i<sp/>/=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdDecDurationDotted();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(i<sp/>+<sp/>i/2,<sp/>256));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdDecDurationDotted();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(i/2,<sp/>128));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>incDurationDotted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Simple<sp/>tests<sp/>for<sp/>command<sp/>&quot;inc-duration-dotted&quot;<sp/>(default<sp/>shortcut<sp/>&quot;Shift+W&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Starts<sp/>with<sp/>128th<sp/>note<sp/>and<sp/>repeatedly<sp/>applies<sp/>cmdIncDurationDotted()<sp/>up<sp/>to<sp/>Whole<sp/>note.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDurationType::incDurationDotted()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;empty.mscx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setTrack(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setSegment(score-&gt;tick2segment(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SegmentType::ChordRest));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setDuration(TDuration::DurationType::V_128TH);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;inputState().setNoteEntryMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdAddPitch(42,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(1,<sp/>128));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeatedly<sp/>inc-duration-dotted<sp/>from<sp/>V_128<sp/>to<sp/>V_WHOLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>128;<sp/>i<sp/>*=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdIncDurationDotted();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(3<sp/>*<sp/>i,<sp/>256));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdIncDurationDotted();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score-&gt;firstMeasure()-&gt;<ref refid="class_ms_1_1_measure_1ab54f551bcbc4bd989d5d04ce69036d2a" kindref="member">findChord</ref>(0,<sp/>0)-&gt;duration()<sp/>==<sp/><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref>(i,<sp/>64));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_duration_type" kindref="compound">TestDurationType</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_durationtype.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/durationtype/tst_durationtype.cpp"/>
  </compounddef>
</doxygen>
