<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_audio_file" kind="class" language="C++" prot="public">
    <compoundname>AudioFile</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_audio_file_1a047e784a184acd70dd661c3f3782e700" prot="private" static="no" mutable="no">
        <type>SF_INFO</type>
        <definition>SF_INFO AudioFile::info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="23" column="1" bodyfile="audiofile/audiofile.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_audio_file_1aadbeff10b84e32622ad9911e93ac69ea" prot="private" static="no" mutable="no">
        <type>SNDFILE *</type>
        <definition>SNDFILE* AudioFile::sf</definition>
        <argsstring></argsstring>
        <name>sf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="24" column="1" bodyfile="audiofile/audiofile.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_audio_file_1acae27c1fa1fe0aaeba33096ea7e4de93" prot="private" static="no" mutable="no">
        <type>SF_INSTRUMENT</type>
        <definition>SF_INSTRUMENT AudioFile::inst</definition>
        <argsstring></argsstring>
        <name>inst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="25" column="1" bodyfile="audiofile/audiofile.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_audio_file_1a8be6105ee6ad0988158097b8780131d1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AudioFile::hasInstrument</definition>
        <argsstring></argsstring>
        <name>hasInstrument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="26" column="1" bodyfile="audiofile/audiofile.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_audio_file_1a7280726c6d63bf6e5e221a15fe0f45ce" prot="private" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray AudioFile::buf</definition>
        <argsstring></argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="27" column="1" bodyfile="audiofile/audiofile.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_audio_file_1aa6a834364cf7411a10a59a1da47f184c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int AudioFile::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="28" column="1" bodyfile="audiofile/audiofile.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_audio_file_1a3e31e753035e560800d3888e4476f3d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AudioFile::AudioFile</definition>
        <argsstring>()</argsstring>
        <name>AudioFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="31" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a1e71a046e4a5b1cdc5c80b66d9228063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AudioFile::~AudioFile</definition>
        <argsstring>()</argsstring>
        <name>~AudioFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="32" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a1c644f9b1535d4475f97d44df530b040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AudioFile::open</definition>
        <argsstring>(const QByteArray &amp;)</argsstring>
        <name>open</name>
        <param>
          <type>const QByteArray &amp;</type>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="34" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a214df689deb56b7409e2c6bca6edc61a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* AudioFile::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="35" column="1" bodyfile="audiofile/audiofile.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a27141ca73321a337133f51ba60a6ab00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AudioFile::read</definition>
        <argsstring>(short *, int)</argsstring>
        <name>read</name>
        <param>
          <type>short *</type>
          <defname>data</defname>
        </param>
        <param>
          <type>int</type>
          <defname>frames</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="36" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a73b406b2dbdf17df49a30db3d824acec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int AudioFile::channels</definition>
        <argsstring>() const</argsstring>
        <name>channels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="38" column="1" bodyfile="audiofile/audiofile.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a06c33cd5fd78b3e5914d9fbef245e4ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int AudioFile::frames</definition>
        <argsstring>() const</argsstring>
        <name>frames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="39" column="1" bodyfile="audiofile/audiofile.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a883770abedde8a2b9fd0127e01e39887" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int AudioFile::samplerate</definition>
        <argsstring>() const</argsstring>
        <name>samplerate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="40" column="1" bodyfile="audiofile/audiofile.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1abce009f45f8f17287ec602bb40860620" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>sf_count_t</type>
        <definition>sf_count_t AudioFile::getFileLen</definition>
        <argsstring>() const</argsstring>
        <name>getFileLen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="42" column="1" bodyfile="audiofile/audiofile.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1adda60ace95edd3533dc7dad67506e59b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>sf_count_t</type>
        <definition>sf_count_t AudioFile::tell</definition>
        <argsstring>() const</argsstring>
        <name>tell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="43" column="1" bodyfile="audiofile/audiofile.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a9a758b2d575ab1886096a9a6c08b58da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf_count_t</type>
        <definition>sf_count_t AudioFile::read</definition>
        <argsstring>(void *ptr, sf_count_t count)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>sf_count_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="44" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a7573f624cb01f5e3b91e0f14600c5827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf_count_t</type>
        <definition>sf_count_t AudioFile::write</definition>
        <argsstring>(const void *ptr, sf_count_t count)</argsstring>
        <name>write</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>sf_count_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="45" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a332bcca7c4f078e3115785432b58e014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf_count_t</type>
        <definition>sf_count_t AudioFile::seek</definition>
        <argsstring>(sf_count_t offset, int whence)</argsstring>
        <name>seek</name>
        <param>
          <type>sf_count_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="46" column="1" bodyfile="audiofile/audiofile.cpp" bodystart="83" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1ad3ba7cd0cc5f7c16735fafb20e5e2d81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int AudioFile::loopStart</definition>
        <argsstring>(int v=0)</argsstring>
        <name>loopStart</name>
        <param>
          <type>int</type>
          <declname>v</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="47" column="1" bodyfile="audiofile/audiofile.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1ad1fee8e92daa2114b4f05a71d2bc9e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int AudioFile::loopEnd</definition>
        <argsstring>(int v=0)</argsstring>
        <name>loopEnd</name>
        <param>
          <type>int</type>
          <declname>v</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="48" column="1" bodyfile="audiofile/audiofile.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_file_1a9bb62166be09491a5b53e92b8f5e7aeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int AudioFile::loopMode</definition>
        <argsstring>(int v=0)</argsstring>
        <name>loopMode</name>
        <param>
          <type>int</type>
          <declname>v</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="audiofile/audiofile.h" line="49" column="1" bodyfile="audiofile/audiofile.h" bodystart="49" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="audiofile/audiofile.h" line="22" column="1" bodyfile="audiofile/audiofile.h" bodystart="22" bodyend="50"/>
    <listofallmembers>
      <member refid="class_audio_file_1a3e31e753035e560800d3888e4476f3d3" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>AudioFile</name></member>
      <member refid="class_audio_file_1a7280726c6d63bf6e5e221a15fe0f45ce" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>buf</name></member>
      <member refid="class_audio_file_1a73b406b2dbdf17df49a30db3d824acec" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>channels</name></member>
      <member refid="class_audio_file_1a214df689deb56b7409e2c6bca6edc61a" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>error</name></member>
      <member refid="class_audio_file_1a06c33cd5fd78b3e5914d9fbef245e4ec" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>frames</name></member>
      <member refid="class_audio_file_1abce009f45f8f17287ec602bb40860620" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>getFileLen</name></member>
      <member refid="class_audio_file_1a8be6105ee6ad0988158097b8780131d1" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>hasInstrument</name></member>
      <member refid="class_audio_file_1aa6a834364cf7411a10a59a1da47f184c" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>idx</name></member>
      <member refid="class_audio_file_1a047e784a184acd70dd661c3f3782e700" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>info</name></member>
      <member refid="class_audio_file_1acae27c1fa1fe0aaeba33096ea7e4de93" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>inst</name></member>
      <member refid="class_audio_file_1ad1fee8e92daa2114b4f05a71d2bc9e7f" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>loopEnd</name></member>
      <member refid="class_audio_file_1a9bb62166be09491a5b53e92b8f5e7aeb" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>loopMode</name></member>
      <member refid="class_audio_file_1ad3ba7cd0cc5f7c16735fafb20e5e2d81" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>loopStart</name></member>
      <member refid="class_audio_file_1a1c644f9b1535d4475f97d44df530b040" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>open</name></member>
      <member refid="class_audio_file_1a27141ca73321a337133f51ba60a6ab00" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>read</name></member>
      <member refid="class_audio_file_1a9a758b2d575ab1886096a9a6c08b58da" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>read</name></member>
      <member refid="class_audio_file_1a883770abedde8a2b9fd0127e01e39887" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>samplerate</name></member>
      <member refid="class_audio_file_1a332bcca7c4f078e3115785432b58e014" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>seek</name></member>
      <member refid="class_audio_file_1aadbeff10b84e32622ad9911e93ac69ea" prot="private" virt="non-virtual"><scope>AudioFile</scope><name>sf</name></member>
      <member refid="class_audio_file_1adda60ace95edd3533dc7dad67506e59b" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>tell</name></member>
      <member refid="class_audio_file_1a7573f624cb01f5e3b91e0f14600c5827" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>write</name></member>
      <member refid="class_audio_file_1a1e71a046e4a5b1cdc5c80b66d9228063" prot="public" virt="non-virtual"><scope>AudioFile</scope><name>~AudioFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
