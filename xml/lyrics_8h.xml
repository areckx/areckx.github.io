<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lyrics_8h" kind="file" language="C++">
    <compoundname>lyrics.h</compoundname>
    <includes refid="line_8h" local="yes">line.h</includes>
    <includes refid="text_8h" local="yes">text.h</includes>
    <includedby refid="moc__lyrics_8cpp" local="yes">build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_lyrics.cpp</includedby>
    <includedby refid="chord_8cpp" local="yes">libmscore/chord.cpp</includedby>
    <includedby refid="chordrest_8cpp" local="yes">libmscore/chordrest.cpp</includedby>
    <includedby refid="cmd_8cpp" local="yes">libmscore/cmd.cpp</includedby>
    <includedby refid="edit_8cpp" local="yes">libmscore/edit.cpp</includedby>
    <includedby refid="element_8cpp" local="yes">libmscore/element.cpp</includedby>
    <includedby refid="excerpt_8cpp" local="yes">libmscore/excerpt.cpp</includedby>
    <includedby refid="layout_8cpp" local="yes">libmscore/layout.cpp</includedby>
    <includedby refid="line_8cpp" local="yes">libmscore/line.cpp</includedby>
    <includedby refid="lyrics_8cpp" local="yes">libmscore/lyrics.cpp</includedby>
    <includedby refid="mscore_8cpp" local="yes">libmscore/mscore.cpp</includedby>
    <includedby refid="paste_8cpp" local="yes">libmscore/paste.cpp</includedby>
    <includedby refid="score_8cpp" local="yes">libmscore/score.cpp</includedby>
    <includedby refid="select_8cpp" local="yes">libmscore/select.cpp</includedby>
    <includedby refid="capella_8cpp" local="yes">mscore/capella.cpp</includedby>
    <includedby refid="debugger_8cpp" local="yes">mscore/debugger/debugger.cpp</includedby>
    <includedby refid="editlyrics_8cpp" local="yes">mscore/editlyrics.cpp</includedby>
    <includedby refid="exportly_8cpp" local="yes">mscore/exportly.cpp</includedby>
    <includedby refid="exportxml_8cpp" local="yes">mscore/exportxml.cpp</includedby>
    <includedby refid="file_8cpp" local="yes">mscore/file.cpp</includedby>
    <includedby refid="importgtp-gp4_8cpp" local="yes">mscore/importgtp-gp4.cpp</includedby>
    <includedby refid="importgtp-gp5_8cpp" local="yes">mscore/importgtp-gp5.cpp</includedby>
    <includedby refid="importgtp-gp6_8cpp" local="yes">mscore/importgtp-gp6.cpp</includedby>
    <includedby refid="importgtp_8cpp" local="yes">mscore/importgtp.cpp</includedby>
    <includedby refid="importmidi_8cpp" local="yes">mscore/importmidi/importmidi.cpp</includedby>
    <includedby refid="importmxmlpass2_8cpp" local="yes">mscore/importmxmlpass2.cpp</includedby>
    <includedby refid="importove_8cpp" local="yes">mscore/importove.cpp</includedby>
    <includedby refid="inspector_8cpp" local="yes">mscore/inspector/inspector.cpp</includedby>
    <includedby refid="mscore_plugins_8cpp" local="yes">mscore/mscorePlugins.cpp</includedby>
    <includedby refid="musedata_8cpp" local="yes">mscore/musedata.cpp</includedby>
    <includedby refid="scoreview_8cpp" local="yes">mscore/scoreview.cpp</includedby>
    <includedby refid="tst__spanners_8cpp" local="yes">mtest/libmscore/spanners/tst_spanners.cpp</includedby>
    <incdepgraph>
      <node id="28086">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="28089">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="28079">
        <label>line.h</label>
        <link refid="line_8h_source"/>
        <childnode refid="28080" relation="include">
        </childnode>
        <childnode refid="28087" relation="include">
        </childnode>
      </node>
      <node id="28080">
        <label>spanner.h</label>
        <link refid="spanner_8h_source"/>
        <childnode refid="28081" relation="include">
        </childnode>
      </node>
      <node id="28091">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="28082">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="28092">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="28083">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="28084" relation="include">
        </childnode>
      </node>
      <node id="28088">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="28089" relation="include">
        </childnode>
      </node>
      <node id="28090">
        <label>text.h</label>
        <link refid="text_8h_source"/>
        <childnode refid="28081" relation="include">
        </childnode>
        <childnode refid="28091" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
      </node>
      <node id="28081">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="28082" relation="include">
        </childnode>
        <childnode refid="28083" relation="include">
        </childnode>
        <childnode refid="28085" relation="include">
        </childnode>
        <childnode refid="28086" relation="include">
        </childnode>
      </node>
      <node id="28087">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="28084" relation="include">
        </childnode>
        <childnode refid="28088" relation="include">
        </childnode>
      </node>
      <node id="28078">
        <label>libmscore/lyrics.h</label>
        <link refid="lyrics_8h"/>
        <childnode refid="28079" relation="include">
        </childnode>
        <childnode refid="28090" relation="include">
        </childnode>
      </node>
      <node id="28084">
        <label>config.h</label>
      </node>
      <node id="28085">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28108">
        <label>libmscore/select.cpp</label>
        <link refid="select_8cpp"/>
      </node>
      <node id="28116">
        <label>mscore/importgtp-gp5.cpp</label>
        <link refid="importgtp-gp5_8cpp_source"/>
      </node>
      <node id="28099">
        <label>libmscore/edit.cpp</label>
        <link refid="edit_8cpp_source"/>
      </node>
      <node id="28119">
        <label>mscore/importmidi/importmidi.cpp</label>
        <link refid="importmidi_8cpp_source"/>
      </node>
      <node id="28113">
        <label>mscore/exportxml.cpp</label>
        <link refid="exportxml_8cpp_source"/>
      </node>
      <node id="28097">
        <label>libmscore/chordrest.cpp</label>
        <link refid="chordrest_8cpp_source"/>
      </node>
      <node id="28120">
        <label>mscore/importmxmlpass2.cpp</label>
        <link refid="importmxmlpass2_8cpp_source"/>
      </node>
      <node id="28118">
        <label>mscore/importgtp.cpp</label>
        <link refid="importgtp_8cpp_source"/>
      </node>
      <node id="28095">
        <label>build.release/libmscore/libmscore_autogen/moc_compilation.cpp</label>
        <link refid="libmscore_2libmscore__autogen_2moc__compilation_8cpp_source"/>
      </node>
      <node id="28103">
        <label>libmscore/line.cpp</label>
        <link refid="line_8cpp_source"/>
      </node>
      <node id="28107">
        <label>libmscore/score.cpp</label>
        <link refid="score_8cpp"/>
      </node>
      <node id="28117">
        <label>mscore/importgtp-gp6.cpp</label>
        <link refid="importgtp-gp6_8cpp_source"/>
      </node>
      <node id="28096">
        <label>libmscore/chord.cpp</label>
        <link refid="chord_8cpp"/>
      </node>
      <node id="28124">
        <label>mscore/musedata.cpp</label>
        <link refid="musedata_8cpp_source"/>
      </node>
      <node id="28101">
        <label>libmscore/excerpt.cpp</label>
        <link refid="excerpt_8cpp_source"/>
      </node>
      <node id="28126">
        <label>mtest/libmscore/spanners/tst_spanners.cpp</label>
        <link refid="tst__spanners_8cpp_source"/>
      </node>
      <node id="28125">
        <label>mscore/scoreview.cpp</label>
        <link refid="scoreview_8cpp_source"/>
      </node>
      <node id="28094">
        <label>build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_lyrics.cpp</label>
        <link refid="moc__lyrics_8cpp_source"/>
        <childnode refid="28095" relation="include">
        </childnode>
      </node>
      <node id="28106">
        <label>libmscore/paste.cpp</label>
        <link refid="paste_8cpp_source"/>
      </node>
      <node id="28111">
        <label>mscore/editlyrics.cpp</label>
        <link refid="editlyrics_8cpp_source"/>
      </node>
      <node id="28122">
        <label>mscore/inspector/inspector.cpp</label>
        <link refid="inspector_8cpp_source"/>
      </node>
      <node id="28098">
        <label>libmscore/cmd.cpp</label>
        <link refid="cmd_8cpp"/>
      </node>
      <node id="28114">
        <label>mscore/file.cpp</label>
        <link refid="file_8cpp_source"/>
      </node>
      <node id="28121">
        <label>mscore/importove.cpp</label>
        <link refid="importove_8cpp_source"/>
      </node>
      <node id="28112">
        <label>mscore/exportly.cpp</label>
        <link refid="exportly_8cpp_source"/>
      </node>
      <node id="28109">
        <label>mscore/capella.cpp</label>
        <link refid="capella_8cpp_source"/>
      </node>
      <node id="28102">
        <label>libmscore/layout.cpp</label>
        <link refid="layout_8cpp_source"/>
      </node>
      <node id="28093">
        <label>libmscore/lyrics.h</label>
        <link refid="lyrics_8h"/>
        <childnode refid="28094" relation="include">
        </childnode>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
        <childnode refid="28101" relation="include">
        </childnode>
        <childnode refid="28102" relation="include">
        </childnode>
        <childnode refid="28103" relation="include">
        </childnode>
        <childnode refid="28104" relation="include">
        </childnode>
        <childnode refid="28105" relation="include">
        </childnode>
        <childnode refid="28106" relation="include">
        </childnode>
        <childnode refid="28107" relation="include">
        </childnode>
        <childnode refid="28108" relation="include">
        </childnode>
        <childnode refid="28109" relation="include">
        </childnode>
        <childnode refid="28110" relation="include">
        </childnode>
        <childnode refid="28111" relation="include">
        </childnode>
        <childnode refid="28112" relation="include">
        </childnode>
        <childnode refid="28113" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28115" relation="include">
        </childnode>
        <childnode refid="28116" relation="include">
        </childnode>
        <childnode refid="28117" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
        <childnode refid="28119" relation="include">
        </childnode>
        <childnode refid="28120" relation="include">
        </childnode>
        <childnode refid="28121" relation="include">
        </childnode>
        <childnode refid="28122" relation="include">
        </childnode>
        <childnode refid="28123" relation="include">
        </childnode>
        <childnode refid="28124" relation="include">
        </childnode>
        <childnode refid="28125" relation="include">
        </childnode>
        <childnode refid="28126" relation="include">
        </childnode>
      </node>
      <node id="28105">
        <label>libmscore/mscore.cpp</label>
        <link refid="mscore_8cpp_source"/>
      </node>
      <node id="28110">
        <label>mscore/debugger/debugger.cpp</label>
        <link refid="debugger_8cpp_source"/>
      </node>
      <node id="28104">
        <label>libmscore/lyrics.cpp</label>
        <link refid="lyrics_8cpp_source"/>
      </node>
      <node id="28123">
        <label>mscore/mscorePlugins.cpp</label>
        <link refid="mscore_plugins_8cpp_source"/>
      </node>
      <node id="28100">
        <label>libmscore/element.cpp</label>
        <link refid="element_8cpp"/>
      </node>
      <node id="28115">
        <label>mscore/importgtp-gp4.cpp</label>
        <link refid="importgtp-gp4_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ms_1_1_lyrics" prot="public">Ms::Lyrics</innerclass>
    <innerclass refid="class_ms_1_1_lyrics_line" prot="public">Ms::LyricsLine</innerclass>
    <innerclass refid="class_ms_1_1_lyrics_line_segment" prot="public">Ms::LyricsLineSegment</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="lyrics_8h_1a26feec6a9cdb1da906a0dbb68930bebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_METATYPE</definition>
        <argsstring>(Ms::Lyrics::Syllabic)</argsstring>
        <name>Q_DECLARE_METATYPE</name>
        <param>
          <type>Ms::Lyrics::Syllabic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/lyrics.h" line="191" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LYRICS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__LYRICS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;line.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;text.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uncomment<sp/>the<sp/>following<sp/>line<sp/>to<sp/>use<sp/>the<sp/>actual<sp/>metrics<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>font<sp/>used<sp/>by<sp/>each<sp/>lyrics<sp/>rather<sp/>than<sp/>conventional<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>CURRENTLY<sp/>DOES<sp/>NOT<sp/>WORK<sp/>(Font::tightBoundingBox()<sp/>returns<sp/>unusable<sp/>values<sp/>for<sp/>glyphs<sp/>not<sp/>on<sp/>base<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USE_FONT_DASH_METRIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FONT_DASH_METRIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>line<sp/>is<sp/>used<sp/>to<sp/>turn<sp/>the<sp/>single<sp/>font<sp/>dash<sp/>thickness<sp/>value<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>other<sp/>font<sp/>dash<sp/>parameters<sp/>are<sp/>on;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>rationale<sp/>is<sp/>that<sp/>the<sp/>dash<sp/>thickness<sp/>is<sp/>the<sp/>most<sp/>unreliable<sp/>of<sp/>the<sp/>dash<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>retrievable<sp/>from<sp/>font<sp/>metrics<sp/>and<sp/>it<sp/>may<sp/>make<sp/>sense<sp/>to<sp/>use<sp/>the<sp/>other<sp/>values<sp/>but<sp/>ignore<sp/>this<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>USE_FONT_DASH_TICKNESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@<sp/>Lyrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@P<sp/>syllabic<sp/><sp/>enum<sp/>(Lyrics.SINGLE,<sp/>Lyrics.BEGIN,<sp/>Lyrics.END,<sp/>Lyrics.MIDDLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LyricsLine;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_ms_1_1_lyrics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_text" kindref="compound">Text</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_PROPERTY(Ms::Lyrics::Syllabic<sp/>syllabic<sp/>READ<sp/>syllabic<sp/>WRITE<sp/>setSyllabic)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_ENUMS(Syllabic)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>Syllabic<sp/>:<sp/>char<sp/>{<sp/>SINGLE,<sp/>BEGIN,<sp/>END,<sp/>MIDDLE<sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MELISMA<sp/>FIRST<sp/>UNDERSCORE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>as_ticks<sp/>value<sp/>to<sp/>mark<sp/>a<sp/>melisma<sp/>for<sp/>which<sp/>only<sp/>the<sp/>first<sp/>chord<sp/>has<sp/>been<sp/>spanned<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>to<sp/>give<sp/>the<sp/>user<sp/>a<sp/>visible<sp/>feedback<sp/>that<sp/>the<sp/>undercore<sp/>has<sp/>been<sp/>actually<sp/>entered;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>be<sp/>cleared<sp/>to<sp/>0<sp/>at<sp/>some<sp/>point,<sp/>so<sp/>that<sp/>it<sp/>will<sp/>not<sp/>be<sp/>carried<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>melisma<sp/>is<sp/>not<sp/>extended<sp/>beyond<sp/>a<sp/>single<sp/>chord,<sp/>but<sp/>no<sp/>suitable<sp/>place<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>been<sp/>identified<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>TEMP_MELISMA_TICKS<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>metrics<sp/>for<sp/>dashes<sp/>and<sp/>melisma;<sp/>all<sp/>in<sp/>sp.<sp/>units:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>qreal<sp/><sp/>MELISMA_DEFAULT_PAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.10;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>empty<sp/>space<sp/>before<sp/>a<sp/>melisma<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>qreal<sp/><sp/>LYRICS_DASH_DEFAULT_PAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.05;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>min.<sp/>empty<sp/>space<sp/>before<sp/>and<sp/>after<sp/>a<sp/>dash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WORD_MIN_DISTANCE<sp/>has<sp/>never<sp/>been<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>qreal<sp/><sp/>LYRICS_WORD_MIN_DISTANCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.33;<sp/><sp/><sp/><sp/><sp/>//<sp/>min.<sp/>distance<sp/>between<sp/>lyrics<sp/>from<sp/>different<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>used<sp/>when<sp/>USE_FONT_DASH_METRIC<sp/>is<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(USE_FONT_DASH_METRIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>qreal<sp/><sp/>LYRICS_DASH_DEFAULT_LINE_THICKNESS<sp/><sp/>=<sp/>0.15;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>sp.<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>qreal<sp/><sp/>LYRICS_DASH_Y_POS_RATIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.67;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>fraction<sp/>of<sp/>lyrics<sp/>font<sp/>x-height<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raise<sp/>the<sp/>dashes<sp/>above<sp/>text<sp/>base<sp/>line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ticks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Syllabic<sp/>_syllabic;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>*<sp/>_separator;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PropertyFlags<sp/>placementStyle;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="class_ms_1_1_lyrics_1abdf4d1af972f2ed7f6a7588f879e23a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_1abdf4d1af972f2ed7f6a7588f879e23a5" kindref="member">_no</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FONT_DASH_METRIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>_dashY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dash<sp/>dimensions<sp/>for<sp/>lyrics<sp/>line<sp/>dashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>_dashLength;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined<sp/>(USE_FONT_DASH_TICKNESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>_dashThickness;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>&amp;);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::LYRICS;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scanElements(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_1ac43270be909641564ad6ded9af47cafa" kindref="member">acceptDrop</ref>(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/><ref refid="class_ms_1_1_lyrics_1acbb976663d84ab3abf82d0609574b26f" kindref="member">drop</ref>(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>segment()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*)parent()-&gt;parent();<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>measure()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*)parent()-&gt;parent()-&gt;parent();<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*<sp/>chordRest()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*)parent();<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout1()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(<ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref>&amp;<sp/>xml)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read(<ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_1abdf4d1af972f2ed7f6a7588f879e23a5" kindref="member">_no</ref>;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>subtypeName()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QObject::tr(</highlight><highlight class="stringliteral">&quot;Verse<sp/>%1&quot;</highlight><highlight class="normal">).arg(_no<sp/>+<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_1abdf4d1af972f2ed7f6a7588f879e23a5" kindref="member">_no</ref>;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSyllabic(Syllabic<sp/>s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_syllabic<sp/>=<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Syllabic<sp/>syllabic()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_syllabic;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(<ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endEdit(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ticks()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ticks;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTicks(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>_ticks<sp/>=<sp/>tick;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endTick()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMelisma()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeFromScore();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FONT_DASH_METRIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>dashLength()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dashLength;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>dashY()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dashY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined<sp/>(USE_FONT_DASH_TICKNESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>dashThickness()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dashThickness;<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Text::paste;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paste(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>getProperty(P_ID<sp/>propertyId)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>propertyDefault(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>PropertyFlags<sp/>propertyFlags(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StyleIdx<sp/>getPropertyStyle(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>styleChanged()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetProperty(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LyricsLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="class_ms_1_1_lyrics_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_s_line" kindref="compound">SLine</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>*<sp/>_nextLyrics;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>&amp;);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::LYRICSLINE;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_line_segment" kindref="compound">LineSegment</ref>*<sp/>createLineSegment()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeUnmanaged()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>*<sp/>lyrics()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>*)parent();<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref>*<sp/>nextLyrics()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_nextLyrics;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;<sp/>v)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LyricsLineSegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_ms_1_1_lyrics_line_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_lyrics_line_segment" kindref="compound">LyricsLineSegment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_line_segment" kindref="compound">LineSegment</ref><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>_numOfDashes;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>_dashLength;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics_line_segment" kindref="compound">LyricsLineSegment</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_line_segment" kindref="compound">LyricsLineSegment</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_lyrics_line_segment" kindref="compound">LyricsLineSegment</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::LYRICSLINE_SEGMENT;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(QPainter*)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>*<sp/>lyricsLine()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_lyrics_line" kindref="compound">LyricsLine</ref>*)spanner();<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">Q_DECLARE_METATYPE(Ms::Lyrics::Syllabic);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libmscore/lyrics.h"/>
  </compounddef>
</doxygen>
