<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="engine_8h" kind="file" language="C++">
    <compoundname>engine.h</compoundname>
    <includes refid="opensslconf_8h" local="no">openssl/opensslconf.h</includes>
    <includes refid="bn_8h" local="no">openssl/bn.h</includes>
    <includes refid="rsa_8h" local="no">openssl/rsa.h</includes>
    <includes refid="dsa_8h" local="no">openssl/dsa.h</includes>
    <includes refid="dh_8h" local="no">openssl/dh.h</includes>
    <includes refid="ecdh_8h" local="no">openssl/ecdh.h</includes>
    <includes refid="ecdsa_8h" local="no">openssl/ecdsa.h</includes>
    <includes refid="rand_8h" local="no">openssl/rand.h</includes>
    <includes refid="ui_8h" local="no">openssl/ui.h</includes>
    <includes refid="err_8h" local="no">openssl/err.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includes refid="symhacks_8h" local="no">openssl/symhacks.h</includes>
    <includes refid="x509_8h" local="no">openssl/x509.h</includes>
    <incdepgraph>
      <node id="82785">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
        <childnode refid="82797" relation="include">
        </childnode>
        <childnode refid="82803" relation="include">
        </childnode>
        <childnode refid="82804" relation="include">
        </childnode>
        <childnode refid="82805" relation="include">
        </childnode>
        <childnode refid="82807" relation="include">
        </childnode>
        <childnode refid="82808" relation="include">
        </childnode>
        <childnode refid="82809" relation="include">
        </childnode>
        <childnode refid="82810" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82813" relation="include">
        </childnode>
      </node>
      <node id="82808">
        <label>openssl/rand.h</label>
        <link refid="rand_8h_source"/>
        <childnode refid="82792" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82788" relation="include">
        </childnode>
      </node>
      <node id="82801">
        <label>stdarg.h</label>
      </node>
      <node id="82795">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82802">
        <label>stdint.h</label>
      </node>
      <node id="82806">
        <label>openssl/ec.h</label>
        <link refid="ec_8h_source"/>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82798" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
      <node id="82792">
        <label>stdlib.h</label>
      </node>
      <node id="82800">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82789" relation="include">
        </childnode>
        <childnode refid="82801" relation="include">
        </childnode>
        <childnode refid="82791" relation="include">
        </childnode>
        <childnode refid="82802" relation="include">
        </childnode>
      </node>
      <node id="82797">
        <label>openssl/rsa.h</label>
        <link refid="rsa_8h_source"/>
        <childnode refid="82798" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82791" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
      <node id="82814">
        <label>openssl/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82815" relation="include">
        </childnode>
        <childnode refid="82816" relation="include">
        </childnode>
      </node>
      <node id="82812">
        <label>errno.h</label>
      </node>
      <node id="82793">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82822">
        <label>openssl/pkcs7.h</label>
        <link refid="pkcs7_8h_source"/>
        <childnode refid="82798" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
      </node>
      <node id="82815">
        <label>stddef.h</label>
      </node>
      <node id="82820">
        <label>openssl/sha.h</label>
        <link refid="sha_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82815" relation="include">
        </childnode>
      </node>
      <node id="82787">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82789" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82791" relation="include">
        </childnode>
      </node>
      <node id="82813">
        <label>openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82814" relation="include">
        </childnode>
        <childnode refid="82817" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82793" relation="include">
        </childnode>
        <childnode refid="82798" relation="include">
        </childnode>
        <childnode refid="82794" relation="include">
        </childnode>
        <childnode refid="82806" relation="include">
        </childnode>
        <childnode refid="82807" relation="include">
        </childnode>
        <childnode refid="82805" relation="include">
        </childnode>
        <childnode refid="82797" relation="include">
        </childnode>
        <childnode refid="82803" relation="include">
        </childnode>
        <childnode refid="82804" relation="include">
        </childnode>
        <childnode refid="82820" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82821" relation="include">
        </childnode>
        <childnode refid="82822" relation="include">
        </childnode>
      </node>
      <node id="82803">
        <label>openssl/dsa.h</label>
        <link refid="dsa_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82791" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
        <childnode refid="82804" relation="include">
        </childnode>
      </node>
      <node id="82819">
        <label>openssl/obj_mac.h</label>
        <link refid="obj__mac_8h_source"/>
      </node>
      <node id="82821">
        <label>openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="82813" relation="include">
        </childnode>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82811" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82791" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
      </node>
      <node id="82816">
        <label>sys/types.h</label>
      </node>
      <node id="82809">
        <label>openssl/ui.h</label>
        <link refid="ui_8h_source"/>
        <childnode refid="82791" relation="include">
        </childnode>
        <childnode refid="82794" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
      </node>
      <node id="82796">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
      </node>
      <node id="82798">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="82799" relation="include">
        </childnode>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82793" relation="include">
        </childnode>
        <childnode refid="82794" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
      <node id="82794">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82793" relation="include">
        </childnode>
      </node>
      <node id="82817">
        <label>openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82818" relation="include">
        </childnode>
      </node>
      <node id="82799">
        <label>time.h</label>
      </node>
      <node id="82807">
        <label>openssl/ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82806" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
      <node id="82811">
        <label>openssl/lhash.h</label>
        <link refid="lhash_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82789" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
      </node>
      <node id="82818">
        <label>openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="82819" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82798" relation="include">
        </childnode>
      </node>
      <node id="82786">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82788">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82786" relation="include">
        </childnode>
      </node>
      <node id="82789">
        <label>stdio.h</label>
      </node>
      <node id="82810">
        <label>openssl/err.h</label>
        <link refid="err_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82789" relation="include">
        </childnode>
        <childnode refid="82792" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82811" relation="include">
        </childnode>
        <childnode refid="82812" relation="include">
        </childnode>
      </node>
      <node id="82805">
        <label>openssl/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="82786" relation="include">
        </childnode>
        <childnode refid="82806" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
      <node id="82790">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
      </node>
      <node id="82791">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82792" relation="include">
        </childnode>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82789" relation="include">
        </childnode>
        <childnode refid="82793" relation="include">
        </childnode>
        <childnode refid="82794" relation="include">
        </childnode>
        <childnode refid="82795" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82796" relation="include">
        </childnode>
      </node>
      <node id="82804">
        <label>openssl/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="82788" relation="include">
        </childnode>
        <childnode refid="82800" relation="include">
        </childnode>
        <childnode refid="82790" relation="include">
        </childnode>
        <childnode refid="82787" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" prot="public">ENGINE_CMD_DEFN_st</innerclass>
    <innerclass refid="structst__dynamic___m_e_m__fns" prot="public">st_dynamic_MEM_fns</innerclass>
    <innerclass refid="structst__dynamic___l_o_c_k__fns" prot="public">st_dynamic_LOCK_fns</innerclass>
    <innerclass refid="structst__dynamic__fns" prot="public">st_dynamic_fns</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="engine_8h_1a73cd96f853e47b8ffa1c7fc9004412b5" prot="public" static="no">
        <name>ENGINE_METHOD_RSA</name>
        <initializer>(unsigned int)0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="106" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad85c3c953fee9bc2cbcaf8ac749ad362" prot="public" static="no">
        <name>ENGINE_METHOD_DSA</name>
        <initializer>(unsigned int)0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="107" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a80d1cc865154536f74d459e12f306ee2" prot="public" static="no">
        <name>ENGINE_METHOD_DH</name>
        <initializer>(unsigned int)0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="108" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a25b25fbb22d4a16cd3d7544503011614" prot="public" static="no">
        <name>ENGINE_METHOD_RAND</name>
        <initializer>(unsigned int)0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="109" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a898bbcbd20b9d0baf997f3aaf9a5a521" prot="public" static="no">
        <name>ENGINE_METHOD_ECDH</name>
        <initializer>(unsigned int)0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="110" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aed98060c1143562ab878aed5abb4bfbd" prot="public" static="no">
        <name>ENGINE_METHOD_ECDSA</name>
        <initializer>(unsigned int)0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="111" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1adb401c07891ac6fb083a73ef8ea2cd4c" prot="public" static="no">
        <name>ENGINE_METHOD_CIPHERS</name>
        <initializer>(unsigned int)0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="112" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a065e0d459c974e3618a48e53c1249dbc" prot="public" static="no">
        <name>ENGINE_METHOD_DIGESTS</name>
        <initializer>(unsigned int)0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="113" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8786bd1fbb58afac097d77b3a3264a0b" prot="public" static="no">
        <name>ENGINE_METHOD_STORE</name>
        <initializer>(unsigned int)0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad0fa89f0016e59c496b4fc2da5596dc2" prot="public" static="no">
        <name>ENGINE_METHOD_PKEY_METHS</name>
        <initializer>(unsigned int)0x0200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="115" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a92df4a21e6907f2273f92f52a996d466" prot="public" static="no">
        <name>ENGINE_METHOD_PKEY_ASN1_METHS</name>
        <initializer>(unsigned int)0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="116" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a4aba473b266346366abe7e95eef30afd" prot="public" static="no">
        <name>ENGINE_METHOD_ALL</name>
        <initializer>(unsigned int)0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="118" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a5b1edfbfaa19fcdcbe55ce4f8e375ccb" prot="public" static="no">
        <name>ENGINE_METHOD_NONE</name>
        <initializer>(unsigned int)0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="119" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a455bc43ce0737cf5ae04844307a67f6a" prot="public" static="no">
        <name>ENGINE_TABLE_FLAG_NOINIT</name>
        <initializer>(unsigned int)0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="125" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a604fbcee33b2778261e22c926b6f2026" prot="public" static="no">
        <name>ENGINE_FLAGS_MANUAL_CMD_CTRL</name>
        <initializer>(int)0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="133" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a10b15a4224e2af73e13612e4b5a31356" prot="public" static="no">
        <name>ENGINE_FLAGS_BY_ID_COPY</name>
        <initializer>(int)0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="142" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a415460b9028b7841282b400c46bdb477" prot="public" static="no">
        <name>ENGINE_FLAGS_NO_REGISTER_ALL</name>
        <initializer>(int)0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="149" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3588d1889cc1af0c71e4a20179197f14" prot="public" static="no">
        <name>ENGINE_CMD_FLAG_NUMERIC</name>
        <initializer>(unsigned int)0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="162" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a6338ca6aa5ec0c9269b57164bf353a63" prot="public" static="no">
        <name>ENGINE_CMD_FLAG_STRING</name>
        <initializer>(unsigned int)0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="165" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8d533a99511d6e61384e7850e9ceaefc" prot="public" static="no">
        <name>ENGINE_CMD_FLAG_NO_INPUT</name>
        <initializer>(unsigned int)0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="168" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a9f4f1d29a455ea887ce008ee71354a6e" prot="public" static="no">
        <name>ENGINE_CMD_FLAG_INTERNAL</name>
        <initializer>(unsigned int)0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="172" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a558dd79ef2857dfcd0361da0fa2edf7f" prot="public" static="no">
        <name>ENGINE_CTRL_SET_LOGSTREAM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="187" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ab5e5e41d32cf412da16311e8990efb01" prot="public" static="no">
        <name>ENGINE_CTRL_SET_PASSWORD_CALLBACK</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="188" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ae9da3ae331703a1ec233dd47948c9095" prot="public" static="no">
        <name>ENGINE_CTRL_HUP</name>
        <initializer>3 /* Close and reinitialise any
						     handles/connections etc. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="190" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a2fe73a85870089c124958e6f8161c67c" prot="public" static="no">
        <name>ENGINE_CTRL_SET_USER_INTERFACE</name>
        <initializer>4 /* Alternative to callback */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="191" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a11e373707b0ee94b54fc11eae8c53c5d" prot="public" static="no">
        <name>ENGINE_CTRL_SET_CALLBACK_DATA</name>
        <initializer>5 /* User-specific data, used
						     when calling the password
						     callback and the user
						     interface */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="195" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a4fa91007211abccef745794b53222c61" prot="public" static="no">
        <name>ENGINE_CTRL_LOAD_CONFIGURATION</name>
        <initializer>6 /* Load a configuration, given
						     a string that represents a
						     file name or so */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="198" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1af65026d942cb124578ce81266d1d0335" prot="public" static="no">
        <name>ENGINE_CTRL_LOAD_SECTION</name>
        <initializer>7 /* Load data from a given
						     section in the already loaded
						     configuration */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="201" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a6bb8a28df38dd002944c533e8dcd92fb" prot="public" static="no">
        <name>ENGINE_CTRL_HAS_CTRL_FUNCTION</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="220" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3f0e695949e0e3f651ad39538f72d74c" prot="public" static="no">
        <name>ENGINE_CTRL_GET_FIRST_CMD_TYPE</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="223" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8079764ae27c65a1cd24b0dee02aa04e" prot="public" static="no">
        <name>ENGINE_CTRL_GET_NEXT_CMD_TYPE</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="226" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ac0a934ba6b3a2f56ec327c87d8ec1350" prot="public" static="no">
        <name>ENGINE_CTRL_GET_CMD_FROM_NAME</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="229" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a5f481c4ba8d43b6c8fbccd247c97c31a" prot="public" static="no">
        <name>ENGINE_CTRL_GET_NAME_LEN_FROM_CMD</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="236" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a10012b1bc6157acb4355c10d94e43122" prot="public" static="no">
        <name>ENGINE_CTRL_GET_NAME_FROM_CMD</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="237" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a26207e6fa78f5f1cacaf0ba59549b563" prot="public" static="no">
        <name>ENGINE_CTRL_GET_DESC_LEN_FROM_CMD</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="239" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad7f9010fcedec14aaffd2a31358da106" prot="public" static="no">
        <name>ENGINE_CTRL_GET_DESC_FROM_CMD</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="240" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a165f6e96b35b293d9fd71e9f888ab5f2" prot="public" static="no">
        <name>ENGINE_CTRL_GET_CMD_FLAGS</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="244" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a94ecf190ccf5c0255fb59ff0bd17e3a4" prot="public" static="no">
        <name>ENGINE_CMD_BASE</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="248" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a17ff38b345cfb3b677521ca8eae3ebd8" prot="public" static="no">
        <name>ENGINE_CTRL_CHIL_SET_FORKCHECK</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="257" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ac4f88869d6ddc7318fe0c4abbe047252" prot="public" static="no">
        <name>ENGINE_CTRL_CHIL_NO_LOCKING</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="262" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1afa5da0743d6c2af98dd0df8841b8a97e" prot="public" static="no">
        <name>OSSL_DYNAMIC_VERSION</name>
        <initializer>(unsigned long)0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="630" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ae5cdc719f6bf8a202f2a3712f14000e3" prot="public" static="no">
        <name>OSSL_DYNAMIC_OLDEST</name>
        <initializer>(unsigned long)0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="633" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a20e138230389bf6f563aa94fd6f72e97" prot="public" static="no">
        <name>IMPLEMENT_DYNAMIC_CHECK_FN</name>
        <param></param>
        <initializer>OPENSSL_EXPORT unsigned long v_check(unsigned long v); \
	OPENSSL_EXPORT unsigned long v_check(unsigned long v) { \
		if(v &gt;= OSSL_DYNAMIC_OLDEST) return OSSL_DYNAMIC_VERSION; \
		return 0; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="688" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a5badc6bff022462846996d3fc209db5d" prot="public" static="no">
        <name>IMPLEMENT_DYNAMIC_BIND_FN</name>
        <param><defname>fn</defname></param>
        <initializer>OPENSSL_EXPORT \
	int bind_engine(ENGINE *e, const char *id, const <ref refid="structst__dynamic__fns" kindref="compound">dynamic_fns</ref> *fns); \
	OPENSSL_EXPORT \
	int bind_engine(ENGINE *e, const char *id, const <ref refid="structst__dynamic__fns" kindref="compound">dynamic_fns</ref> *fns) { \
		if(ENGINE_get_static_state() == fns-&gt;static_state) goto skip_cbs; \
		if(!CRYPTO_set_mem_functions(fns-&gt;mem_fns.malloc_cb, \
			fns-&gt;mem_fns.realloc_cb, fns-&gt;mem_fns.free_cb)) \
			return 0; \
		CRYPTO_set_locking_callback(fns-&gt;lock_fns.lock_locking_cb); \
		CRYPTO_set_add_lock_callback(fns-&gt;lock_fns.lock_add_lock_cb); \
		CRYPTO_set_dynlock_create_callback(fns-&gt;lock_fns.dynlock_create_cb); \
		CRYPTO_set_dynlock_lock_callback(fns-&gt;lock_fns.dynlock_lock_cb); \
		CRYPTO_set_dynlock_destroy_callback(fns-&gt;lock_fns.dynlock_destroy_cb); \
		if(!CRYPTO_set_ex_data_implementation(fns-&gt;ex_data_fns)) \
			return 0; \
		if(!ERR_set_implementation(fns-&gt;err_fns)) return 0; \
	skip_cbs: \
		if(!fn(e,id)) return 0; \
		return 1; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="711" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a80a0f49716ef61f6511a9ba18f81b530" prot="public" static="no">
        <name>ENGINE_F_DYNAMIC_CTRL</name>
        <initializer>180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="756" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad5b0d34bbc458ad8419f7fd230972cd9" prot="public" static="no">
        <name>ENGINE_F_DYNAMIC_GET_DATA_CTX</name>
        <initializer>181</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="757" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8897724e566b6134e572c23afe0c1626" prot="public" static="no">
        <name>ENGINE_F_DYNAMIC_LOAD</name>
        <initializer>182</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="758" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a94a6e776c74178981008f148e3538fbc" prot="public" static="no">
        <name>ENGINE_F_DYNAMIC_SET_DATA_CTX</name>
        <initializer>183</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="759" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1af3f9699b2ccd370aebc67b008e498b07" prot="public" static="no">
        <name>ENGINE_F_ENGINE_ADD</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="760" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a6793860f84389a11dda0ef43ff00b4ea" prot="public" static="no">
        <name>ENGINE_F_ENGINE_BY_ID</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="761" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ab82a28d9c6fe0fa1058eceac9f7acdd9" prot="public" static="no">
        <name>ENGINE_F_ENGINE_CMD_IS_EXECUTABLE</name>
        <initializer>170</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="762" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a5ddd9cdacc88ea8d9acb0def364e8117" prot="public" static="no">
        <name>ENGINE_F_ENGINE_CTRL</name>
        <initializer>142</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="763" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a65b771e1be97a85b1e484f0862f84a4c" prot="public" static="no">
        <name>ENGINE_F_ENGINE_CTRL_CMD</name>
        <initializer>178</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="764" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a2dbec0c9bd49a60b57189811d9292ef4" prot="public" static="no">
        <name>ENGINE_F_ENGINE_CTRL_CMD_STRING</name>
        <initializer>171</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="765" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1af9e37669ae8736ce2d66889b86f2ee8b" prot="public" static="no">
        <name>ENGINE_F_ENGINE_FINISH</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="766" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a244a1797ab9d37ac12a3baa7e3ed72cb" prot="public" static="no">
        <name>ENGINE_F_ENGINE_FREE_UTIL</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="767" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3a5fdd47b5fdc2f052cc988ff68f9fe4" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_CIPHER</name>
        <initializer>185</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="768" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a7431afd9a21fdda89cf2a0aed254c831" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_DEFAULT_TYPE</name>
        <initializer>177</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="769" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a41ff8e1e5979f3faac241853aad41723" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_DIGEST</name>
        <initializer>186</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="770" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a914501d06621eece45479b4c10ade307" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_NEXT</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="771" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad8b74cde29dc855329fb0d13b91ce05f" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_PKEY_ASN1_METH</name>
        <initializer>193</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="772" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1acc7fcdb59a767b2e3984770d1d79c836" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_PKEY_METH</name>
        <initializer>192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="773" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a852fe930abf5e644d598f338286f3ffa" prot="public" static="no">
        <name>ENGINE_F_ENGINE_GET_PREV</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="774" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a80af9b687a295830692a65a1b689912e" prot="public" static="no">
        <name>ENGINE_F_ENGINE_INIT</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="775" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8248a6a342e4bc1d514913f2b080de52" prot="public" static="no">
        <name>ENGINE_F_ENGINE_LIST_ADD</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="776" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a31200b3d2004391d0303f9cce4a9f047" prot="public" static="no">
        <name>ENGINE_F_ENGINE_LIST_REMOVE</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="777" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aed9c3990f9505e70b7eecf8d5bd5bd18" prot="public" static="no">
        <name>ENGINE_F_ENGINE_LOAD_PRIVATE_KEY</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="778" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1acb6938503f2d0e521d0888fc954d0091" prot="public" static="no">
        <name>ENGINE_F_ENGINE_LOAD_PUBLIC_KEY</name>
        <initializer>151</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="779" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a66b7a20ab87c986fd56b0d57181a0d25" prot="public" static="no">
        <name>ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT</name>
        <initializer>194</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="780" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a4d025f4e3139f7a326bbf3347c753bca" prot="public" static="no">
        <name>ENGINE_F_ENGINE_NEW</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="781" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3a0a2d6ae865064ddcc324a621164f38" prot="public" static="no">
        <name>ENGINE_F_ENGINE_REMOVE</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="782" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a119fa9e5c85d080e5fc1e8558d8993df" prot="public" static="no">
        <name>ENGINE_F_ENGINE_SET_DEFAULT_STRING</name>
        <initializer>189</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="783" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a2b4712e847fd5e8c0f21b3022bb1889f" prot="public" static="no">
        <name>ENGINE_F_ENGINE_SET_DEFAULT_TYPE</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="784" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8a629ca9312ec0b2169ce0d469b2e645" prot="public" static="no">
        <name>ENGINE_F_ENGINE_SET_ID</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="785" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8a3b623a6073d2a03fa45d56a253a2ba" prot="public" static="no">
        <name>ENGINE_F_ENGINE_SET_NAME</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="786" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a4b76b14c3d7d3bbe7bf436624489b8e4" prot="public" static="no">
        <name>ENGINE_F_ENGINE_TABLE_REGISTER</name>
        <initializer>184</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="787" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8b3faebbcc03aa685ee549504af70546" prot="public" static="no">
        <name>ENGINE_F_ENGINE_UNLOAD_KEY</name>
        <initializer>152</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="788" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1abc36bd8eef5ad83c2bf584de1b5d2429" prot="public" static="no">
        <name>ENGINE_F_ENGINE_UNLOCKED_FINISH</name>
        <initializer>191</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="789" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ac9a4b20b9d541fc2776e804ce5a89318" prot="public" static="no">
        <name>ENGINE_F_ENGINE_UP_REF</name>
        <initializer>190</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="790" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aaf98d5d7fb328c2824669fed9177c130" prot="public" static="no">
        <name>ENGINE_F_INT_CTRL_HELPER</name>
        <initializer>172</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="791" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a5ba7c675bcc80833c7123a06b4e61cca" prot="public" static="no">
        <name>ENGINE_F_INT_ENGINE_CONFIGURE</name>
        <initializer>188</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="792" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a2be4b9c615dc9a54d3934d00e4ab1612" prot="public" static="no">
        <name>ENGINE_F_INT_ENGINE_MODULE_INIT</name>
        <initializer>187</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="793" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a02611f9795ad92001a7817f10d438e6d" prot="public" static="no">
        <name>ENGINE_F_LOG_MESSAGE</name>
        <initializer>141</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="794" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a143585ebc7b20cc0155912d0bfc9e6bf" prot="public" static="no">
        <name>ENGINE_R_ALREADY_LOADED</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="797" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3ed2555ca0606a23499a2b0baf6973b8" prot="public" static="no">
        <name>ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER</name>
        <initializer>133</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="798" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1af0f732ca59a914ef6efdf737bbf6d8fe" prot="public" static="no">
        <name>ENGINE_R_CMD_NOT_EXECUTABLE</name>
        <initializer>134</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="799" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a8b2d42b3b335563f9dfd690eed98a9c8" prot="public" static="no">
        <name>ENGINE_R_COMMAND_TAKES_INPUT</name>
        <initializer>135</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="800" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a932b028f90891b1510ae3452c38c0722" prot="public" static="no">
        <name>ENGINE_R_COMMAND_TAKES_NO_INPUT</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="801" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a530058a15f24176d24ca5a1bdaffa219" prot="public" static="no">
        <name>ENGINE_R_CONFLICTING_ENGINE_ID</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="802" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a71b954d9ef252ec64855cdb4aa5736a4" prot="public" static="no">
        <name>ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="803" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ab23ed0754f5d9966cad118edc0b3bc8f" prot="public" static="no">
        <name>ENGINE_R_DH_NOT_IMPLEMENTED</name>
        <initializer>139</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="804" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3ea26270b0fbb868f62aa0a949a13de8" prot="public" static="no">
        <name>ENGINE_R_DSA_NOT_IMPLEMENTED</name>
        <initializer>140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="805" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aa609c17c2f3a78e183e3bb517d138736" prot="public" static="no">
        <name>ENGINE_R_DSO_FAILURE</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="806" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1afcc5477725f54f4a9f4ded1762f47533" prot="public" static="no">
        <name>ENGINE_R_DSO_NOT_FOUND</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="807" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a6a82658ad1af84b4453586e167307ac5" prot="public" static="no">
        <name>ENGINE_R_ENGINES_SECTION_ERROR</name>
        <initializer>148</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="808" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a0ec8de7436ee6201298d3074e904dbde" prot="public" static="no">
        <name>ENGINE_R_ENGINE_CONFIGURATION_ERROR</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="809" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ae00e89fd03fe21c893b4ca6f2afb6225" prot="public" static="no">
        <name>ENGINE_R_ENGINE_IS_NOT_IN_LIST</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="810" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a9a37e2e446ce69972ce24f6bd2e49931" prot="public" static="no">
        <name>ENGINE_R_ENGINE_SECTION_ERROR</name>
        <initializer>149</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="811" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ad1f95bbbedae6e365310a663059b3e94" prot="public" static="no">
        <name>ENGINE_R_FAILED_LOADING_PRIVATE_KEY</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="812" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a6bb2d4d821175317c485ce6e458f86d7" prot="public" static="no">
        <name>ENGINE_R_FAILED_LOADING_PUBLIC_KEY</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="813" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a3858ed826f611aa521537a5425033ddf" prot="public" static="no">
        <name>ENGINE_R_FINISH_FAILED</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="814" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="814" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1acd3028cc0a8cddef316afa9e9dad2d2a" prot="public" static="no">
        <name>ENGINE_R_GET_HANDLE_FAILED</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="815" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a37c6934d1e6a0d38efd434a55de3055d" prot="public" static="no">
        <name>ENGINE_R_ID_OR_NAME_MISSING</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="816" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ac7566836e620d1b76b6eff237d3e35f8" prot="public" static="no">
        <name>ENGINE_R_INIT_FAILED</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="817" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1add357c7f1b2cdb955ca68d26494e4cce" prot="public" static="no">
        <name>ENGINE_R_INTERNAL_LIST_ERROR</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="818" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a904e8967d416b75497219c8b7006faa3" prot="public" static="no">
        <name>ENGINE_R_INVALID_ARGUMENT</name>
        <initializer>143</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="819" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a9b12156456096d22dea55b8e6f968205" prot="public" static="no">
        <name>ENGINE_R_INVALID_CMD_NAME</name>
        <initializer>137</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="820" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a924029e8089c237ed033e45b8f05a646" prot="public" static="no">
        <name>ENGINE_R_INVALID_CMD_NUMBER</name>
        <initializer>138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="821" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ae9ba0a06281b35aaeeec46914fc75376" prot="public" static="no">
        <name>ENGINE_R_INVALID_INIT_VALUE</name>
        <initializer>151</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="822" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1abb89eb12ee6e790fbadf1354aa208d60" prot="public" static="no">
        <name>ENGINE_R_INVALID_STRING</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="823" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1af7c72d312ac4bac04b5ea1d8aa826faf" prot="public" static="no">
        <name>ENGINE_R_NOT_INITIALISED</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="824" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a7523cdb21e058aa921e48d103b111c10" prot="public" static="no">
        <name>ENGINE_R_NOT_LOADED</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="825" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a1504ea26f95054d52f4e1c996b9ed420" prot="public" static="no">
        <name>ENGINE_R_NO_CONTROL_FUNCTION</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="826" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a2e5b01e57f55c88338453a73beefceb5" prot="public" static="no">
        <name>ENGINE_R_NO_INDEX</name>
        <initializer>144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="827" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a071ffb8de317143a3973601288d4653d" prot="public" static="no">
        <name>ENGINE_R_NO_LOAD_FUNCTION</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="828" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ae853d8fb84399d9a18692fc19f356ec9" prot="public" static="no">
        <name>ENGINE_R_NO_REFERENCE</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="829" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aa02f48ed181a7172c10f421b6c205d40" prot="public" static="no">
        <name>ENGINE_R_NO_SUCH_ENGINE</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="830" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1ac2b198642da471ac97c68c0483a24385" prot="public" static="no">
        <name>ENGINE_R_NO_UNLOAD_FUNCTION</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="831" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a1b88e97318170c9665bc4d4088eaa1d0" prot="public" static="no">
        <name>ENGINE_R_PROVIDE_PARAMETERS</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="832" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aa08357673a31b89f3d35d9445811a9ff" prot="public" static="no">
        <name>ENGINE_R_RSA_NOT_IMPLEMENTED</name>
        <initializer>141</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="833" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1abcf2ad766c13a2630a63f623ae83ac72" prot="public" static="no">
        <name>ENGINE_R_UNIMPLEMENTED_CIPHER</name>
        <initializer>146</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="834" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1aaf85c9f91505dc74cd601cde90e11980" prot="public" static="no">
        <name>ENGINE_R_UNIMPLEMENTED_DIGEST</name>
        <initializer>147</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="835" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a49f84fbd925048f1972eb516fc4a482a" prot="public" static="no">
        <name>ENGINE_R_UNIMPLEMENTED_PUBLIC_KEY_METHOD</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="836" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="836" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="engine_8h_1a751952024e1f7e7dc941a2cc19ce59aa" prot="public" static="no">
        <name>ENGINE_R_VERSION_INCOMPATIBILITY</name>
        <initializer>145</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="837" column="9" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="837" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="engine_8h_1aa118b1a0ff2bdb434f2fa700c6db6b74" prot="public" static="no">
        <type>struct <ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN_st</ref></type>
        <definition>typedef struct ENGINE_CMD_DEFN_st  ENGINE_CMD_DEFN</definition>
        <argsstring></argsstring>
        <name>ENGINE_CMD_DEFN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1ac3e05727a0feaa0d80b3261e5a87adc3" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_GEN_FUNC_PTR) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>ENGINE_GEN_FUNC_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="283" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a84d9db7bf0679f420b08bb84818b3a5d" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_GEN_INT_FUNC_PTR) (ENGINE *)</definition>
        <argsstring>)(ENGINE *)</argsstring>
        <name>ENGINE_GEN_INT_FUNC_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="285" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1ab655503d1fce24d89928d205bbe91466" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_CTRL_FUNC_PTR) (ENGINE *, int, long, void *, void(*f)(void))</definition>
        <argsstring>)(ENGINE *, int, long, void *, void(*f)(void))</argsstring>
        <name>ENGINE_CTRL_FUNC_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="287" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1aff932899f73a37498864cfd69f99cfd8" prot="public" static="no">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *(*</type>
        <definition>typedef EVP_PKEY*(* ENGINE_LOAD_KEY_PTR) (ENGINE *, const char *, UI_METHOD *ui_method, void *callback_data)</definition>
        <argsstring>)(ENGINE *, const char *, UI_METHOD *ui_method, void *callback_data)</argsstring>
        <name>ENGINE_LOAD_KEY_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="289" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a4cea0912948e3d4c47f6507f4f3a719a" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_SSL_CLIENT_CERT_PTR) (ENGINE *, SSL *ssl, STACK_OF(X509_NAME) *ca_dn, X509 **pcert, EVP_PKEY **pkey, STACK_OF(X509) **pother, UI_METHOD *ui_method, void *callback_data)</definition>
        <argsstring>)(ENGINE *, SSL *ssl, STACK_OF(X509_NAME) *ca_dn, X509 **pcert, EVP_PKEY **pkey, STACK_OF(X509) **pother, UI_METHOD *ui_method, void *callback_data)</argsstring>
        <name>ENGINE_SSL_CLIENT_CERT_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="291" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a5743df78c2a3842e727cfdfd3e7b9d12" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_CIPHERS_PTR) (ENGINE *, const EVP_CIPHER **, const int **, int)</definition>
        <argsstring>)(ENGINE *, const EVP_CIPHER **, const int **, int)</argsstring>
        <name>ENGINE_CIPHERS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="306" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a8f57e3470395208f60669f77d35df03b" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_DIGESTS_PTR) (ENGINE *, const EVP_MD **, const int **, int)</definition>
        <argsstring>)(ENGINE *, const EVP_MD **, const int **, int)</argsstring>
        <name>ENGINE_DIGESTS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="307" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1aa7fedffacd774d280cea8718e6286b4a" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_PKEY_METHS_PTR) (ENGINE *, EVP_PKEY_METHOD **, const int **, int)</definition>
        <argsstring>)(ENGINE *, EVP_PKEY_METHOD **, const int **, int)</argsstring>
        <name>ENGINE_PKEY_METHS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="308" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1aadeacf22cd4ddbb866e93116ef43ddd1" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ENGINE_PKEY_ASN1_METHS_PTR) (ENGINE *, EVP_PKEY_ASN1_METHOD **, const int **, int)</definition>
        <argsstring>)(ENGINE *, EVP_PKEY_ASN1_METHOD **, const int **, int)</argsstring>
        <name>ENGINE_PKEY_ASN1_METHS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="309" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a0f1772d9a558bc0a3f57e387bd675b10" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* dyn_MEM_malloc_cb) (size_t)</definition>
        <argsstring>)(size_t)</argsstring>
        <name>dyn_MEM_malloc_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="644" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1ab77176c11b1114735db82e9c6cb5c4dd" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* dyn_MEM_realloc_cb) (void *, size_t)</definition>
        <argsstring>)(void *, size_t)</argsstring>
        <name>dyn_MEM_realloc_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="645" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1abb66ea71ef8cabf36213c7abc3bef623" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dyn_MEM_free_cb) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>dyn_MEM_free_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="646" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a2b06e488f6d34900633783c7ff4b12b5" prot="public" static="no">
        <type>struct <ref refid="structst__dynamic___m_e_m__fns" kindref="compound">st_dynamic_MEM_fns</ref></type>
        <definition>typedef struct st_dynamic_MEM_fns  dynamic_MEM_fns</definition>
        <argsstring></argsstring>
        <name>dynamic_MEM_fns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a13c38e44eaca5d817a3e7cf0ddfafc88" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dyn_lock_locking_cb) (int, int, const char *, int)</definition>
        <argsstring>)(int, int, const char *, int)</argsstring>
        <name>dyn_lock_locking_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="654" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a61e818120dba69e5c9b701526ab89910" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* dyn_lock_add_lock_cb) (int *, int, int, const char *, int)</definition>
        <argsstring>)(int *, int, int, const char *, int)</argsstring>
        <name>dyn_lock_add_lock_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="655" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a15257fbbeb396254a896ba607f6d0814" prot="public" static="no">
        <type>struct CRYPTO_dynlock_value *(*</type>
        <definition>typedef struct CRYPTO_dynlock_value*(* dyn_dynlock_create_cb) (const char *, int)</definition>
        <argsstring>)(const char *, int)</argsstring>
        <name>dyn_dynlock_create_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="655" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a4f3cec5ef8f9661671c3ff8c6da63610" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dyn_dynlock_lock_cb) (int, struct CRYPTO_dynlock_value *, const char *, int)</definition>
        <argsstring>)(int, struct CRYPTO_dynlock_value *, const char *, int)</argsstring>
        <name>dyn_dynlock_lock_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="658" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1aca2ea629691acfe8e5d248a1604f65b1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dyn_dynlock_destroy_cb) (struct CRYPTO_dynlock_value *, const char *, int)</definition>
        <argsstring>)(struct CRYPTO_dynlock_value *, const char *, int)</argsstring>
        <name>dyn_dynlock_destroy_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="660" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a565954d93bcb51b49d06cad8ddf874cd" prot="public" static="no">
        <type>struct <ref refid="structst__dynamic___l_o_c_k__fns" kindref="compound">st_dynamic_LOCK_fns</ref></type>
        <definition>typedef struct st_dynamic_LOCK_fns  dynamic_LOCK_fns</definition>
        <argsstring></argsstring>
        <name>dynamic_LOCK_fns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="668" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a85d73556fd43d14178b76aa21f17a272" prot="public" static="no">
        <type>struct <ref refid="structst__dynamic__fns" kindref="compound">st_dynamic_fns</ref></type>
        <definition>typedef struct st_dynamic_fns  dynamic_fns</definition>
        <argsstring></argsstring>
        <name>dynamic_fns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="676" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1a2f83768286d4924593c3c016474b60e3" prot="public" static="no">
        <type>unsigned long(*</type>
        <definition>typedef unsigned long(* dynamic_v_check_fn) (unsigned long ossl_version)</definition>
        <argsstring>)(unsigned long ossl_version)</argsstring>
        <name>dynamic_v_check_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="687" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="engine_8h_1aa9392eed80f03f46e7e418a4b50f166f" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* dynamic_bind_engine) (ENGINE *e, const char *id, const dynamic_fns *fns)</definition>
        <argsstring>)(ENGINE *e, const char *id, const dynamic_fns *fns)</argsstring>
        <name>dynamic_bind_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="709" column="1" bodyfile="thirdparty/openssl/include/openssl/engine.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="engine_8h_1a8bd75c3c423e6f1392c8f787f3662f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_first</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_first</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a1d35c7580c18501e86d145129e43ebcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_last</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_last</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac5ac1c587b62c9b2fe871a1a19859732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_next</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_get_next</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad1d62d338babf0b3e89f563cca47dd8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_prev</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_get_prev</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae8e458c34f720ac959bf95f576181797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_add</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_add</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad776f3da0d046efaa548123c6652f74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_remove</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_remove</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a3477259861a506347c6dcfe3e83daaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_by_id</definition>
        <argsstring>(const char *id)</argsstring>
        <name>ENGINE_by_id</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6890b0d4d577cd04d53131e1b942fbf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_openssl</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_openssl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a21cf0e7a625ac69425079d9944f6ce21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_dynamic</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_dynamic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab36b35d20e3bb6b28e855b0e671fbdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_4758cca</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_4758cca</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa21ce9df8f72d142aa0dd1d2c3189e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_aep</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_aep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a4644236a19c85c3aabb907a2d3efc274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_atalla</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_atalla</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae40cbf37bcf35167effcf3d553caafec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_chil</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_chil</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa640099ce389cc99a236887fedeb5127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_cswift</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_cswift</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a8023dc1c97c40c6ab60bc77515b3bca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_nuron</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_nuron</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a47629a98035494783bf127e6b7480fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_sureware</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_sureware</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a3b5073322d3b66868249abeb11a30c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_ubsec</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_ubsec</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a50caeee02b28a173e15bddcaeb6a9bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_padlock</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_padlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5a22f9dd4f7c3a177d305a029877cb35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_capi</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_capi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a3fd3876dc5dace39021fa2ea62963ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_gmp</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_gmp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6ed0d515beef1cd362d5ee5a317875d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_gost</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_gost</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a134d32c27fa30efcaf9d19625581e206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_cryptodev</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_cryptodev</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a25a05a3cf759b2fb9543732dcb8374b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_rsax</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_rsax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aaa7724b0299cfbd833d2ec31801af03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_rdrand</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_rdrand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab374d79c2b45416c9eba1b9e62e0148f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_load_builtin_engines</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_load_builtin_engines</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab0ed1722cfc7e85b3f3e2e5a7a2d1d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ENGINE_get_table_flags</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_table_flags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab108b8aa6c153b3164e090e6c088da97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_set_table_flags</definition>
        <argsstring>(unsigned int flags)</argsstring>
        <name>ENGINE_set_table_flags</name>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5af445da5cf7e3491405e2de85be9ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_RSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_RSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6f7e16b0eb336b32556dd9f2a3d8b574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_RSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_RSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a27bdf991a62a4b4f5d7b4e514c7b0538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_RSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_RSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a92d9294d6fd6508f76858f79aeda452f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_DSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_DSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a92042d06a8df7424b057681eb024b52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_DSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_DSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac5eb276a478c5afb93fe8f5dfe5348ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_DSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_DSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a605bab5fd7dc70eeec66f43734713627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_ECDH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_ECDH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad1aebf93517a5b8b337d529388d6b52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_ECDH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_ECDH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a4385096e55396ba9c13fe7dda0f8ebd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_ECDH</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_ECDH</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a521d2a04e180c81679a220bca8be7e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_ECDSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_ECDSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac30807d85ec5428aef08b662435c97cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_ECDSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_ECDSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1afe0707e47aaf04962e3622a40f24af17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_ECDSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_ECDSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aabadb5c69b3ea2aa1bccf01400572bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_DH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_DH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a73b17d8e4258e6b2bd1ad61defbe8666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_DH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_DH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab10b759649a4f77b058018de09a77a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_DH</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_DH</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a18c86fc264882ccd6db21a89668cdf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_RAND</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_RAND</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a4c0c5b20e76e1ca2f2f30827adafb4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_RAND</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_RAND</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac6bd0dfed42c7d28dfdf6f45dbeefd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_RAND</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_RAND</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac53d188c81f2ee18d368acd76101877a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_STORE</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_STORE</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a381aa363e3c7049f8e2c9ce456fe88c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_STORE</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_STORE</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5d5006a2614ff441dca3cacfe3b6d328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_STORE</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_STORE</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af6b65688193ab87ee1687f8f229b19c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_ciphers</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_ciphers</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aecae08b49a15b70db777c5b6a4d0ce37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_ciphers</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_ciphers</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a7f4cd48ca0a5b80d5edb0ca8b32a7d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_ciphers</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_ciphers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a03a4a87001d2896426021cb4023ee6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_digests</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_digests</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a852b57ca6feb93f42a2fb8b55d05bca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_digests</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_digests</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a1dec5e95d434ac139f3ceb3d21aeb0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_digests</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_digests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a202d17ec9117229662251d3aeec78f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_pkey_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_pkey_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a1eebda76c488d68e68e95254f8e441f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_pkey_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_pkey_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a02ae2362747212664b931e496672eded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_pkey_meths</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_pkey_meths</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a65f8bf671ca4bbe1fbdb1b4f0b68e511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_pkey_asn1_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_pkey_asn1_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a214d38f131268a632ae60858a29a4f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_unregister_pkey_asn1_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_unregister_pkey_asn1_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a1c6a116aa651287f0aaa9838fb9be036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_register_all_pkey_asn1_meths</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_pkey_asn1_meths</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a9af8dcd3279e40bed7b06b91d7c5b104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_complete</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_register_complete</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa2e64fcc0395acafe591be38a38a0070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_register_all_complete</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_register_all_complete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad8f1673866e89bea93c7a8587e608754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_ctrl</definition>
        <argsstring>(ENGINE *e, int cmd, long i, void *p, void(*f)(void))</argsstring>
        <name>ENGINE_ctrl</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af429521d97dff42321edaa22e5f0a65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_cmd_is_executable</definition>
        <argsstring>(ENGINE *e, int cmd)</argsstring>
        <name>ENGINE_cmd_is_executable</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af27c9dd9811aaf69eca8d9faaffa8fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_ctrl_cmd</definition>
        <argsstring>(ENGINE *e, const char *cmd_name, long i, void *p, void(*f)(void), int cmd_optional)</argsstring>
        <name>ENGINE_ctrl_cmd</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd_optional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1abfc5cb24496ef072c185aa84128cee2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_ctrl_cmd_string</definition>
        <argsstring>(ENGINE *e, const char *cmd_name, const char *arg, int cmd_optional)</argsstring>
        <name>ENGINE_ctrl_cmd_string</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd_optional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aab1082b9f35a8a4ad67076250afee1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_new</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af1ed15ac480cec888dbc05e8f779c6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_free</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_free</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af04d52f12a3fede2c181dcf51ce09faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_up_ref</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_up_ref</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a7794d1463610ee98b09352320d810fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_id</definition>
        <argsstring>(ENGINE *e, const char *id)</argsstring>
        <name>ENGINE_set_id</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1adc177f858ed0f15223fb517cd8ebdaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_name</definition>
        <argsstring>(ENGINE *e, const char *name)</argsstring>
        <name>ENGINE_set_name</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ade8e246783dbbb695c1e21368923a08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_RSA</definition>
        <argsstring>(ENGINE *e, const RSA_METHOD *rsa_meth)</argsstring>
        <name>ENGINE_set_RSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structrsa__meth__st" kindref="compound">RSA_METHOD</ref> *</type>
          <declname>rsa_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aedcac6a3410d5aecc83e5261a30fe5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_DSA</definition>
        <argsstring>(ENGINE *e, const DSA_METHOD *dsa_meth)</argsstring>
        <name>ENGINE_set_DSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
          <declname>dsa_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1afb475b352c6369e97be805cc19b624dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_ECDH</definition>
        <argsstring>(ENGINE *e, const ECDH_METHOD *ecdh_meth)</argsstring>
        <name>ENGINE_set_ECDH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const ECDH_METHOD *</type>
          <declname>ecdh_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a4e739a8d3d3455f860477dbbd80401bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_ECDSA</definition>
        <argsstring>(ENGINE *e, const ECDSA_METHOD *ecdsa_meth)</argsstring>
        <name>ENGINE_set_ECDSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const ECDSA_METHOD *</type>
          <declname>ecdsa_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a30bddf3d4c27c470589050c19bc7bac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_DH</definition>
        <argsstring>(ENGINE *e, const DH_METHOD *dh_meth)</argsstring>
        <name>ENGINE_set_DH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structdh__method" kindref="compound">DH_METHOD</ref> *</type>
          <declname>dh_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a38d2b948c16bd179824554df829ae113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_RAND</definition>
        <argsstring>(ENGINE *e, const RAND_METHOD *rand_meth)</argsstring>
        <name>ENGINE_set_RAND</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structrand__meth__st" kindref="compound">RAND_METHOD</ref> *</type>
          <declname>rand_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1acccca3b544935e106c6cc891c016ea44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_STORE</definition>
        <argsstring>(ENGINE *e, const STORE_METHOD *store_meth)</argsstring>
        <name>ENGINE_set_STORE</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const STORE_METHOD *</type>
          <declname>store_meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae4524a22e275ec06241a2dfd45b6670c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_destroy_function</definition>
        <argsstring>(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR destroy_f)</argsstring>
        <name>ENGINE_set_destroy_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_GEN_INT_FUNC_PTR</type>
          <declname>destroy_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae3fab0d50bef05837f0dc2947b16ff5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_init_function</definition>
        <argsstring>(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR init_f)</argsstring>
        <name>ENGINE_set_init_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_GEN_INT_FUNC_PTR</type>
          <declname>init_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a704992f035d87a814be90c1e10f552ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_finish_function</definition>
        <argsstring>(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR finish_f)</argsstring>
        <name>ENGINE_set_finish_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_GEN_INT_FUNC_PTR</type>
          <declname>finish_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad839bc399c34487010ec2ca9051ea60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_ctrl_function</definition>
        <argsstring>(ENGINE *e, ENGINE_CTRL_FUNC_PTR ctrl_f)</argsstring>
        <name>ENGINE_set_ctrl_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_CTRL_FUNC_PTR</type>
          <declname>ctrl_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a27810a6fb2b92c9c629cda7e3d9dbd4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_load_privkey_function</definition>
        <argsstring>(ENGINE *e, ENGINE_LOAD_KEY_PTR loadpriv_f)</argsstring>
        <name>ENGINE_set_load_privkey_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_LOAD_KEY_PTR</type>
          <declname>loadpriv_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a277169e1c98188b558555da2d5430045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_load_pubkey_function</definition>
        <argsstring>(ENGINE *e, ENGINE_LOAD_KEY_PTR loadpub_f)</argsstring>
        <name>ENGINE_set_load_pubkey_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_LOAD_KEY_PTR</type>
          <declname>loadpub_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a9b1e5fcbf0f888b83e54f0cafb41b3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_load_ssl_client_cert_function</definition>
        <argsstring>(ENGINE *e, ENGINE_SSL_CLIENT_CERT_PTR loadssl_f)</argsstring>
        <name>ENGINE_set_load_ssl_client_cert_function</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_SSL_CLIENT_CERT_PTR</type>
          <declname>loadssl_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae423bc024eb437571b2a71c96cc98068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_ciphers</definition>
        <argsstring>(ENGINE *e, ENGINE_CIPHERS_PTR f)</argsstring>
        <name>ENGINE_set_ciphers</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_CIPHERS_PTR</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac7815253ad87b1f08c71b97a1b297475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_digests</definition>
        <argsstring>(ENGINE *e, ENGINE_DIGESTS_PTR f)</argsstring>
        <name>ENGINE_set_digests</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_DIGESTS_PTR</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a838e42e9abc3ace84ddcd801dfa08832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_pkey_meths</definition>
        <argsstring>(ENGINE *e, ENGINE_PKEY_METHS_PTR f)</argsstring>
        <name>ENGINE_set_pkey_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_PKEY_METHS_PTR</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6e7c6cc84c31ed94b838c2cb116b2c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_pkey_asn1_meths</definition>
        <argsstring>(ENGINE *e, ENGINE_PKEY_ASN1_METHS_PTR f)</argsstring>
        <name>ENGINE_set_pkey_asn1_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ENGINE_PKEY_ASN1_METHS_PTR</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a644312cc9941fe9d8405042e6d51e26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_flags</definition>
        <argsstring>(ENGINE *e, int flags)</argsstring>
        <name>ENGINE_set_flags</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a3183a4dd13a11daf159e39bc581143a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_cmd_defns</definition>
        <argsstring>(ENGINE *e, const ENGINE_CMD_DEFN *defns)</argsstring>
        <name>ENGINE_set_cmd_defns</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN</ref> *</type>
          <declname>defns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a51d69fad6edcc94348292d66df3f2de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_get_ex_new_index</definition>
        <argsstring>(long argl, void *argp, CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func)</argsstring>
        <name>ENGINE_get_ex_new_index</name>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <param>
          <type>CRYPTO_EX_new *</type>
          <declname>new_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_dup *</type>
          <declname>dup_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_free *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a3dd088cb72af58006d7290cf17b199e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_ex_data</definition>
        <argsstring>(ENGINE *e, int idx, void *arg)</argsstring>
        <name>ENGINE_set_ex_data</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a0fc41f11ed56171f2d57d1a80735403a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ENGINE_get_ex_data</definition>
        <argsstring>(const ENGINE *e, int idx)</argsstring>
        <name>ENGINE_get_ex_data</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a64c9922aae58dde145cb4aee95d5edf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a122c7ab4b65622967979411894354ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ENGINE_get_id</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_id</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a202d7b30f5c6a2976c350cd245ceec60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ENGINE_get_name</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_name</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa8893173e64f6444daa0b3ca465e6290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structrsa__meth__st" kindref="compound">RSA_METHOD</ref> *</type>
        <definition>const RSA_METHOD* ENGINE_get_RSA</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_RSA</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa87617688141525cf20ef2cc5320208f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
        <definition>const DSA_METHOD* ENGINE_get_DSA</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_DSA</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ad38377b6b5eaad46dcd5be9026a25d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const ECDH_METHOD *</type>
        <definition>const ECDH_METHOD* ENGINE_get_ECDH</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_ECDH</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aaea767de634a3701fc71b271165e9006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const ECDSA_METHOD *</type>
        <definition>const ECDSA_METHOD* ENGINE_get_ECDSA</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_ECDSA</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5117bb63e0d67b67b4c89fda0c763cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdh__method" kindref="compound">DH_METHOD</ref> *</type>
        <definition>const DH_METHOD* ENGINE_get_DH</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_DH</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a9626eb3053a19f7f24562319bf8d5bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structrand__meth__st" kindref="compound">RAND_METHOD</ref> *</type>
        <definition>const RAND_METHOD* ENGINE_get_RAND</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_RAND</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a7fc98a5bc12a905fc063deb67bbcc7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const STORE_METHOD *</type>
        <definition>const STORE_METHOD* ENGINE_get_STORE</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_STORE</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a96ccddc1e260c7ce04766dd8e1057323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_GEN_INT_FUNC_PTR</type>
        <definition>ENGINE_GEN_INT_FUNC_PTR ENGINE_get_destroy_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_destroy_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a626a9f0c4baf4dc6764a22c27cb925c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_GEN_INT_FUNC_PTR</type>
        <definition>ENGINE_GEN_INT_FUNC_PTR ENGINE_get_init_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_init_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1abae4b4bb5a4f8ca5616539d69c18944b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_GEN_INT_FUNC_PTR</type>
        <definition>ENGINE_GEN_INT_FUNC_PTR ENGINE_get_finish_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_finish_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac6c69aed8065112fcad9a6ffe857dd09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_CTRL_FUNC_PTR</type>
        <definition>ENGINE_CTRL_FUNC_PTR ENGINE_get_ctrl_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_ctrl_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a36ed6f2b715ff929332f7edc6bcb6249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_LOAD_KEY_PTR</type>
        <definition>ENGINE_LOAD_KEY_PTR ENGINE_get_load_privkey_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_load_privkey_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="527" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a377c520fb3f6d3a5ef18702b3399f67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_LOAD_KEY_PTR</type>
        <definition>ENGINE_LOAD_KEY_PTR ENGINE_get_load_pubkey_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_load_pubkey_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a03065566799be9b6434f3191b283cc0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_SSL_CLIENT_CERT_PTR</type>
        <definition>ENGINE_SSL_CLIENT_CERT_PTR ENGINE_get_ssl_client_cert_function</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_ssl_client_cert_function</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ac45b3b4277a70263a4b03d13124c3265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_CIPHERS_PTR</type>
        <definition>ENGINE_CIPHERS_PTR ENGINE_get_ciphers</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_ciphers</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a2fa2cba7724c824cd75dbed2ae74785e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_DIGESTS_PTR</type>
        <definition>ENGINE_DIGESTS_PTR ENGINE_get_digests</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_digests</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aafffdf67394b8d954b0e1ac209903b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_PKEY_METHS_PTR</type>
        <definition>ENGINE_PKEY_METHS_PTR ENGINE_get_pkey_meths</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_pkey_meths</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a83420e0c4c786a91843af952e650f905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE_PKEY_ASN1_METHS_PTR</type>
        <definition>ENGINE_PKEY_ASN1_METHS_PTR ENGINE_get_pkey_asn1_meths</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_pkey_asn1_meths</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a2245d230660e45a719c69cf9a66a939e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
        <definition>const EVP_CIPHER* ENGINE_get_cipher</definition>
        <argsstring>(ENGINE *e, int nid)</argsstring>
        <name>ENGINE_get_cipher</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5104fb3aba5cc91b77dc0c6aa6aa5fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
        <definition>const EVP_MD* ENGINE_get_digest</definition>
        <argsstring>(ENGINE *e, int nid)</argsstring>
        <name>ENGINE_get_digest</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a5cb12d6465138cfb78fc0d977f752f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const EVP_PKEY_METHOD *</type>
        <definition>const EVP_PKEY_METHOD* ENGINE_get_pkey_meth</definition>
        <argsstring>(ENGINE *e, int nid)</argsstring>
        <name>ENGINE_get_pkey_meth</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae09304300f9746af4f4709e42474b763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const EVP_PKEY_ASN1_METHOD *</type>
        <definition>const EVP_PKEY_ASN1_METHOD* ENGINE_get_pkey_asn1_meth</definition>
        <argsstring>(ENGINE *e, int nid)</argsstring>
        <name>ENGINE_get_pkey_asn1_meth</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a75eb1672ea2460987607c93f252b0daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const EVP_PKEY_ASN1_METHOD *</type>
        <definition>const EVP_PKEY_ASN1_METHOD* ENGINE_get_pkey_asn1_meth_str</definition>
        <argsstring>(ENGINE *e, const char *str, int len)</argsstring>
        <name>ENGINE_get_pkey_asn1_meth_str</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a401dce18f4a3fc077a7e736c49c397db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const EVP_PKEY_ASN1_METHOD *</type>
        <definition>const EVP_PKEY_ASN1_METHOD* ENGINE_pkey_asn1_find_str</definition>
        <argsstring>(ENGINE **pe, const char *str, int len)</argsstring>
        <name>ENGINE_pkey_asn1_find_str</name>
        <param>
          <type>ENGINE **</type>
          <declname>pe</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aae3ea432ed04e38a5d38b909288e3c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN</ref> *</type>
        <definition>const ENGINE_CMD_DEFN* ENGINE_get_cmd_defns</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_cmd_defns</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a06006e3e65c47d7dda2144219bec3f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_get_flags</definition>
        <argsstring>(const ENGINE *e)</argsstring>
        <name>ENGINE_get_flags</name>
        <param>
          <type>const ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6979fffdbb8d8e53c5e24f5c2d56765b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_init</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_init</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a114d037174896d3be0c3ca86f44ae724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_finish</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_finish</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a8cd637c0c46b8268ba633947117736fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* ENGINE_load_private_key</definition>
        <argsstring>(ENGINE *e, const char *key_id, UI_METHOD *ui_method, void *callback_data)</argsstring>
        <name>ENGINE_load_private_key</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key_id</declname>
        </param>
        <param>
          <type>UI_METHOD *</type>
          <declname>ui_method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a4c62c92cae92bd9708f35e29750dd4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* ENGINE_load_public_key</definition>
        <argsstring>(ENGINE *e, const char *key_id, UI_METHOD *ui_method, void *callback_data)</argsstring>
        <name>ENGINE_load_public_key</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key_id</declname>
        </param>
        <param>
          <type>UI_METHOD *</type>
          <declname>ui_method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a481cf2ef2ead47923e62abb6df16250f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_load_ssl_client_cert</definition>
        <argsstring>(ENGINE *e, SSL *s, STACK_OF(X509_NAME) *ca_dn, X509 **pcert, EVP_PKEY **ppkey, STACK_OF(X509) **pother, UI_METHOD *ui_method, void *callback_data)</argsstring>
        <name>ENGINE_load_ssl_client_cert</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structssl__st" kindref="compound">SSL</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref>) *</type>
          <declname>ca_dn</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> **</type>
          <declname>pcert</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>ppkey</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) **</type>
          <declname>pother</declname>
        </param>
        <param>
          <type>UI_METHOD *</type>
          <declname>ui_method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aa8f8ab3deb61a1477015b5ed8fa424f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_RSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_RSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="582" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ab40ceb2397f5afd8d873fee48b156bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_DSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_DSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a765addb76849714409df97415b590fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_ECDH</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_ECDH</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a990b104fa065e1a42f444508cef60a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_ECDSA</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_ECDSA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="586" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aab80abf36bb6ffd6544ca95f8e186d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_DH</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_DH</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aef195f5203c0a6214ea9523d79c5d3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_default_RAND</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_default_RAND</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="588" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aef531d2ac2c4b800f5d3976518e46a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_cipher_engine</definition>
        <argsstring>(int nid)</argsstring>
        <name>ENGINE_get_cipher_engine</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a9e264ce1604341aaef64887fd544dece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_digest_engine</definition>
        <argsstring>(int nid)</argsstring>
        <name>ENGINE_get_digest_engine</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1ae82134374c6536f337574d17f13d6e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_pkey_meth_engine</definition>
        <argsstring>(int nid)</argsstring>
        <name>ENGINE_get_pkey_meth_engine</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a0f25140616a60745b2584f7209c890f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ENGINE *</type>
        <definition>ENGINE* ENGINE_get_pkey_asn1_meth_engine</definition>
        <argsstring>(int nid)</argsstring>
        <name>ENGINE_get_pkey_asn1_meth_engine</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a29ddca9171b724adc9449c8bdc5cda90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_RSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_RSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6a664f68cd23fd6dc3dc518857569dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_string</definition>
        <argsstring>(ENGINE *e, const char *def_list)</argsstring>
        <name>ENGINE_set_default_string</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>def_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="601" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a8c983333d3d10a3e5fc86034fda813de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_DSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_DSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a8eef4915b1507b4ec7f219f620ae1440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_ECDH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_ECDH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a20c6eae72d80045a4c115a0f96ff0c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_ECDSA</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_ECDSA</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a7779241aebc911e8618bea4a844a12f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_DH</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_DH</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1aff986867c525f7f1011a291968099320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_RAND</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_RAND</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a739a58407e2b89c5895f38e49ae1a750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_ciphers</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_ciphers</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a80a52cabd773f6b1794069bfd6814db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_digests</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_digests</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a6b0012cd76bed36523ad2bd5a102668e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_pkey_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_pkey_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1af46ad17fb770b7cc34aa5cb18dda1943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default_pkey_asn1_meths</definition>
        <argsstring>(ENGINE *e)</argsstring>
        <name>ENGINE_set_default_pkey_asn1_meths</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1adcf4dd4486469bed026516ebdeb2bbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ENGINE_set_default</definition>
        <argsstring>(ENGINE *e, unsigned int flags)</argsstring>
        <name>ENGINE_set_default</name>
        <param>
          <type>ENGINE *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a9cea4db1f9f174a7b34e7a98c0cb9efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ENGINE_add_conf_module</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_add_conf_module</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a1a4c64972a826437ab485f2be312a2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ENGINE_get_static_state</definition>
        <argsstring>(void)</argsstring>
        <name>ENGINE_get_static_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="741" column="1"/>
      </memberdef>
      <memberdef kind="function" id="engine_8h_1a586a97640290d44a14785f71b4af9a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_ENGINE_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_ENGINE_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/engine.h" line="751" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>openssl/engine.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Written<sp/>by<sp/>Geoff<sp/>Thorpe<sp/>(geoff@geoffthorpe.net)<sp/>for<sp/>the<sp/>OpenSSL</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>project<sp/>2000.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2004<sp/>The<sp/>OpenSSL<sp/>Project.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgment:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit.<sp/>(http://www.OpenSSL.org/)&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>4.<sp/>The<sp/>names<sp/>&quot;OpenSSL<sp/>Toolkit&quot;<sp/>and<sp/>&quot;OpenSSL<sp/>Project&quot;<sp/>must<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>prior<sp/>written<sp/>permission.<sp/>For<sp/>written<sp/>permission,<sp/>please<sp/>contact</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>licensing@OpenSSL.org.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>5.<sp/>Products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>may<sp/>not<sp/>be<sp/>called<sp/>&quot;OpenSSL&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>nor<sp/>may<sp/>&quot;OpenSSL&quot;<sp/>appear<sp/>in<sp/>their<sp/>names<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>permission<sp/>of<sp/>the<sp/>OpenSSL<sp/>Project.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>6.<sp/>Redistributions<sp/>of<sp/>any<sp/>form<sp/>whatsoever<sp/>must<sp/>retain<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>acknowledgment:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>OpenSSL<sp/>Project</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>for<sp/>use<sp/>in<sp/>the<sp/>OpenSSL<sp/>Toolkit<sp/>(http://www.OpenSSL.org/)&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>OpenSSL<sp/>PROJECT<sp/>OR</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>ITS<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by<sp/>Eric<sp/>Young</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>(eay@cryptsoft.com).<sp/><sp/>This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>ECDH<sp/>support<sp/>in<sp/>OpenSSL<sp/>originally<sp/>developed<sp/>by<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>SUN<sp/>MICROSYSTEMS,<sp/>INC.,<sp/>and<sp/>contributed<sp/>to<sp/>the<sp/>OpenSSL<sp/>project.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_ENGINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_ENGINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/opensslconf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_NO_ENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>ENGINE<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/dsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/dh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_ECDH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ecdh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_ECDSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ecdsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rand.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ui.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/symhacks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>flags<sp/>are<sp/>used<sp/>to<sp/>control<sp/>combinations<sp/>of<sp/>algorithm<sp/>(methods)</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>by<sp/>bitwise<sp/>&quot;OR&quot;ing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_RSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_DSA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_DH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_RAND<sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_ECDH<sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_ECDSA<sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_CIPHERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_DIGESTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_STORE<sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_PKEY_METHS<sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_PKEY_ASN1_METHS<sp/><sp/><sp/>(unsigned<sp/>int)0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Obvious<sp/>all-or-nothing<sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_METHOD_NONE<sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This(ese)<sp/>flag(s)<sp/>controls<sp/>behaviour<sp/>of<sp/>the<sp/>ENGINE_TABLE<sp/>mechanism<sp/>used</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>internally<sp/>to<sp/>control<sp/>registration<sp/>of<sp/>ENGINE<sp/>implementations,<sp/>and<sp/>can<sp/>be<sp/>set</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>by<sp/>ENGINE_set_table_flags().<sp/>The<sp/>&quot;NOINIT&quot;<sp/>flag<sp/>prevents<sp/>attempts<sp/>to</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>initialise<sp/>registered<sp/>ENGINEs<sp/>if<sp/>they<sp/>are<sp/>not<sp/>already<sp/>initialised.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_TABLE_FLAG_NOINIT<sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ENGINE<sp/>flags<sp/>that<sp/>can<sp/>be<sp/>set<sp/>by<sp/>ENGINE_set_flags().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>ENGINE_FLAGS_MALLOCED<sp/><sp/><sp/><sp/>0x0001<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>is<sp/>for<sp/>ENGINEs<sp/>that<sp/>wish<sp/>to<sp/>handle<sp/>the<sp/>various<sp/>&apos;CMD&apos;-related</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>control<sp/>commands<sp/>on<sp/>their<sp/>own.<sp/>Without<sp/>this<sp/>flag,<sp/>ENGINE_ctrl()<sp/>handles<sp/>these</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>control<sp/>commands<sp/>on<sp/>behalf<sp/>of<sp/>the<sp/>ENGINE<sp/>using<sp/>their<sp/>&quot;cmd_defns&quot;<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_FLAGS_MANUAL_CMD_CTRL<sp/><sp/><sp/><sp/>(int)0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>is<sp/>for<sp/>ENGINEs<sp/>who<sp/>return<sp/>new<sp/>duplicate<sp/>structures<sp/>when<sp/>found<sp/>via</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>&quot;ENGINE_by_id()&quot;.<sp/>When<sp/>an<sp/>ENGINE<sp/>must<sp/>store<sp/>state<sp/>(eg.<sp/>if<sp/>ENGINE_ctrl()</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>commands<sp/>are<sp/>called<sp/>in<sp/>sequence<sp/>as<sp/>part<sp/>of<sp/>some<sp/>stateful<sp/>process<sp/>like</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>key-generation<sp/>setup<sp/>and<sp/>execution),<sp/>it<sp/>can<sp/>set<sp/>this<sp/>flag<sp/>-<sp/>then<sp/>each<sp/>attempt</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>to<sp/>obtain<sp/>the<sp/>ENGINE<sp/>will<sp/>result<sp/>in<sp/>it<sp/>being<sp/>copied<sp/>into<sp/>a<sp/>new<sp/>structure.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>Normally,<sp/>ENGINEs<sp/>don&apos;t<sp/>declare<sp/>this<sp/>flag<sp/>so<sp/>ENGINE_by_id()<sp/>just<sp/>increments</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>the<sp/>existing<sp/>ENGINE&apos;s<sp/>structural<sp/>reference<sp/>count.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_FLAGS_BY_ID_COPY<sp/><sp/><sp/><sp/><sp/>(int)0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>flag<sp/>if<sp/>for<sp/>an<sp/>ENGINE<sp/>that<sp/>does<sp/>not<sp/>want<sp/>its<sp/>methods<sp/>registered<sp/>as<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>part<sp/>of<sp/>ENGINE_register_all_complete()<sp/>for<sp/>example<sp/>if<sp/>the<sp/>methods<sp/>are</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>not<sp/>usable<sp/>as<sp/>default<sp/>methods.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_FLAGS_NO_REGISTER_ALL<sp/><sp/><sp/><sp/>(int)0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ENGINEs<sp/>can<sp/>support<sp/>their<sp/>own<sp/>command<sp/>types,<sp/>and<sp/>these<sp/>flags<sp/>are<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>ENGINE_CTRL_GET_CMD_FLAGS<sp/>to<sp/>indicate<sp/>to<sp/>the<sp/>caller<sp/>what<sp/>kind<sp/>of<sp/>input<sp/>each</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>command<sp/>expects.<sp/>Currently<sp/>only<sp/>numeric<sp/>and<sp/>string<sp/>input<sp/>is<sp/>supported.<sp/>If<sp/>a</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>control<sp/>command<sp/>supports<sp/>none<sp/>of<sp/>the<sp/>_NUMERIC,<sp/>_STRING,<sp/>or<sp/>_NO_INPUT<sp/>options,</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>then<sp/>it<sp/>is<sp/>regarded<sp/>as<sp/>an<sp/>&quot;internal&quot;<sp/>control<sp/>command<sp/>-<sp/>and<sp/>not<sp/>for<sp/>use<sp/>in</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>config<sp/>setting<sp/>situations.<sp/>As<sp/>such,<sp/>they&apos;re<sp/>not<sp/>available<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>ENGINE_ctrl_cmd_string()<sp/>function,<sp/>only<sp/>raw<sp/>ENGINE_ctrl()<sp/>access.<sp/>Changes<sp/>to</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>&apos;command<sp/>types&apos;<sp/>should<sp/>be<sp/>reflected<sp/>carefully<sp/>in</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>ENGINE_cmd_is_executable()<sp/>and<sp/>ENGINE_ctrl_cmd_string().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>accepts<sp/>a<sp/>&apos;long&apos;<sp/>input<sp/>value<sp/>(3rd<sp/>parameter<sp/>to<sp/>ENGINE_ctrl)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CMD_FLAG_NUMERIC<sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>accepts<sp/>string<sp/>input<sp/>(cast<sp/>from<sp/>&apos;void*&apos;<sp/>to<sp/>&apos;const<sp/>char<sp/>*&apos;,<sp/>4th<sp/>parameter<sp/>to</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>ENGINE_ctrl)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CMD_FLAG_STRING<sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Indicates<sp/>that<sp/>the<sp/>control<sp/>command<sp/>takes<sp/>*no*<sp/>input.<sp/>Ie.<sp/>the<sp/>control<sp/>command</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>is<sp/>unparameterised.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CMD_FLAG_NO_INPUT<sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Indicates<sp/>that<sp/>the<sp/>control<sp/>command<sp/>is<sp/>internal.<sp/>This<sp/>control<sp/>command<sp/>won&apos;t</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>be<sp/>shown<sp/>in<sp/>any<sp/>output,<sp/>and<sp/>is<sp/>only<sp/>usable<sp/>through<sp/>the<sp/>ENGINE_ctrl_cmd()</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CMD_FLAG_INTERNAL<sp/><sp/><sp/><sp/>(unsigned<sp/>int)0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NB:<sp/>These<sp/>3<sp/>control<sp/>commands<sp/>are<sp/>deprecated<sp/>and<sp/>should<sp/>not<sp/>be<sp/>used.<sp/>ENGINEs</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>relying<sp/>on<sp/>these<sp/>commands<sp/>should<sp/>compile<sp/>conditional<sp/>support<sp/>for</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>compatibility<sp/>(eg.<sp/>if<sp/>these<sp/>symbols<sp/>are<sp/>defined)<sp/>but<sp/>should<sp/>also<sp/>migrate<sp/>the</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>same<sp/>functionality<sp/>to<sp/>their<sp/>own<sp/>ENGINE-specific<sp/>control<sp/>functions<sp/>that<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>&quot;discovered&quot;<sp/>by<sp/>calling<sp/>applications.<sp/>The<sp/>fact<sp/>these<sp/>control<sp/>commands</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>wouldn&apos;t<sp/>be<sp/>&quot;executable&quot;<sp/>(ie.<sp/>usable<sp/>by<sp/>text-based<sp/>config)<sp/>doesn&apos;t<sp/>change<sp/>the</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>fact<sp/>that<sp/>application<sp/>code<sp/>can<sp/>find<sp/>and<sp/>use<sp/>them<sp/>without<sp/>requiring<sp/>per-ENGINE</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>hacking.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>flags<sp/>are<sp/>used<sp/>to<sp/>tell<sp/>the<sp/>ctrl<sp/>function<sp/>what<sp/>should<sp/>be<sp/>done.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>All<sp/>command<sp/>numbers<sp/>are<sp/>shared<sp/>between<sp/>all<sp/>engines,<sp/>even<sp/>if<sp/>some<sp/>don&apos;t</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>make<sp/>sense<sp/>to<sp/>some<sp/>engines.<sp/><sp/>In<sp/>such<sp/>a<sp/>case,<sp/>they<sp/>do<sp/>nothing<sp/>but<sp/>return</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>the<sp/>error<sp/>ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_SET_LOGSTREAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_SET_PASSWORD_CALLBACK<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_HUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>and<sp/>reinitialise<sp/>any</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handles/connections<sp/>etc.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_SET_USER_INTERFACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/></highlight><highlight class="comment">/*<sp/>Alternative<sp/>to<sp/>callback<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_SET_CALLBACK_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/></highlight><highlight class="comment">/*<sp/>User-specific<sp/>data,<sp/>used</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>calling<sp/>the<sp/>password</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>and<sp/>the<sp/>user</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_LOAD_CONFIGURATION<sp/><sp/><sp/><sp/><sp/><sp/>6<sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>a<sp/>configuration,<sp/>given</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>string<sp/>that<sp/>represents<sp/>a</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>name<sp/>or<sp/>so<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_LOAD_SECTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/></highlight><highlight class="comment">/*<sp/>Load<sp/>data<sp/>from<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>in<sp/>the<sp/>already<sp/>loaded</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>control<sp/>commands<sp/>allow<sp/>an<sp/>application<sp/>to<sp/>deal<sp/>with<sp/>an<sp/>arbitrary<sp/>engine</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>dynamic<sp/>way.<sp/>Warn:<sp/>Negative<sp/>return<sp/>values<sp/>indicate<sp/>errors<sp/>FOR<sp/>THESE</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>COMMANDS<sp/>because<sp/>zero<sp/>is<sp/>used<sp/>to<sp/>indicate<sp/>&apos;end-of-list&apos;.<sp/>Other<sp/>commands,</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>including<sp/>ENGINE-specific<sp/>command<sp/>types,<sp/>return<sp/>zero<sp/>for<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>An<sp/>ENGINE<sp/>can<sp/>choose<sp/>to<sp/>implement<sp/>these<sp/>ctrl<sp/>functions,<sp/>and<sp/>can<sp/>internally</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>manage<sp/>things<sp/>however<sp/>it<sp/>chooses<sp/>-<sp/>it<sp/>does<sp/>so<sp/>by<sp/>setting<sp/>the</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>ENGINE_FLAGS_MANUAL_CMD_CTRL<sp/>flag<sp/>(using<sp/>ENGINE_set_flags()).<sp/>Otherwise<sp/>the</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>ENGINE_ctrl()<sp/>code<sp/>handles<sp/>this<sp/>on<sp/>the<sp/>ENGINE&apos;s<sp/>behalf<sp/>using<sp/>the<sp/>cmd_defns</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>data<sp/>(set<sp/>using<sp/>ENGINE_set_cmd_defns()).<sp/>This<sp/>means<sp/>an<sp/>ENGINE&apos;s<sp/>ctrl()</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>handler<sp/>need<sp/>only<sp/>implement<sp/>its<sp/>own<sp/>commands<sp/>-<sp/>the<sp/>above<sp/>&quot;meta&quot;<sp/>commands<sp/>will</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>be<sp/>taken<sp/>care<sp/>of.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>non-zero<sp/>if<sp/>the<sp/>supplied<sp/>ENGINE<sp/>has<sp/>a<sp/>ctrl()<sp/>handler.<sp/>If<sp/>&quot;not&quot;,<sp/>then</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>all<sp/>the<sp/>remaining<sp/>control<sp/>commands<sp/>will<sp/>return<sp/>failure,<sp/>so<sp/>it<sp/>is<sp/>worth</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>checking<sp/>this<sp/>first<sp/>if<sp/>the<sp/>caller<sp/>is<sp/>trying<sp/>to<sp/>&quot;discover&quot;<sp/>the<sp/>engine&apos;s</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>capabilities<sp/>and<sp/>doesn&apos;t<sp/>want<sp/>errors<sp/>generated<sp/>unnecessarily.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_HAS_CTRL_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>a<sp/>positive<sp/>command<sp/>number<sp/>for<sp/>the<sp/>first<sp/>command<sp/>supported<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>engine.<sp/>Returns<sp/>zero<sp/>if<sp/>no<sp/>ctrl<sp/>commands<sp/>are<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_FIRST_CMD_TYPE<sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>&apos;long&apos;<sp/>argument<sp/>specifies<sp/>a<sp/>command<sp/>implemented<sp/>by<sp/>the<sp/>engine,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>return<sp/>value<sp/>is<sp/>the<sp/>next<sp/>command<sp/>supported,<sp/>or<sp/>zero<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_NEXT_CMD_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>&apos;void*&apos;<sp/>argument<sp/>is<sp/>a<sp/>command<sp/>name<sp/>(cast<sp/>from<sp/>&apos;const<sp/>char<sp/>*&apos;),<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>return<sp/>value<sp/>is<sp/>the<sp/>command<sp/>that<sp/>corresponds<sp/>to<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_CMD_FROM_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>next<sp/>two<sp/>allow<sp/>a<sp/>command<sp/>to<sp/>be<sp/>converted<sp/>into<sp/>its<sp/>corresponding<sp/>string</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>form.<sp/>In<sp/>each<sp/>case,<sp/>the<sp/>&apos;long&apos;<sp/>argument<sp/>supplies<sp/>the<sp/>command.<sp/>In<sp/>the<sp/>NAME_LEN</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>case,<sp/>the<sp/>return<sp/>value<sp/>is<sp/>the<sp/>length<sp/>of<sp/>the<sp/>command<sp/>name<sp/>(not<sp/>counting<sp/>a</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>trailing<sp/>EOL).<sp/>In<sp/>the<sp/>NAME<sp/>case,<sp/>the<sp/>&apos;void*&apos;<sp/>argument<sp/>must<sp/>be<sp/>a<sp/>string<sp/>buffer</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>large<sp/>enough,<sp/>and<sp/>it<sp/>will<sp/>be<sp/>populated<sp/>with<sp/>the<sp/>name<sp/>of<sp/>the<sp/>command<sp/>(WITH<sp/>a</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>trailing<sp/>EOL).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_NAME_LEN_FROM_CMD<sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_NAME_FROM_CMD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>next<sp/>two<sp/>are<sp/>similar<sp/>but<sp/>give<sp/>a<sp/>&quot;short<sp/>description&quot;<sp/>of<sp/>a<sp/>command.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_DESC_LEN_FROM_CMD<sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_DESC_FROM_CMD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>With<sp/>this<sp/>command,<sp/>the<sp/>return<sp/>value<sp/>is<sp/>the<sp/>OR&apos;d<sp/>combination<sp/>of</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>ENGINE_CMD_FLAG_***<sp/>values<sp/>that<sp/>indicate<sp/>what<sp/>kind<sp/>of<sp/>input<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>engine-specific<sp/>ctrl<sp/>command<sp/>expects.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_GET_CMD_FLAGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ENGINE<sp/>implementations<sp/>should<sp/>start<sp/>the<sp/>numbering<sp/>of<sp/>their<sp/>own<sp/>control</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>commands<sp/>from<sp/>this<sp/>value.<sp/>(ie.<sp/>ENGINE_CMD_BASE,<sp/>ENGINE_CMD_BASE<sp/>+<sp/>1,<sp/>etc).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CMD_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NB:<sp/>These<sp/>2<sp/>nCipher<sp/>&quot;chil&quot;<sp/>control<sp/>commands<sp/>are<sp/>deprecated,<sp/>and<sp/>their</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>functionality<sp/>is<sp/>now<sp/>available<sp/>through<sp/>ENGINE-specific<sp/>control<sp/>commands</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>(exposed<sp/>through<sp/>the<sp/>above-mentioned<sp/>&apos;CMD&apos;-handling).<sp/>Code<sp/>using<sp/>these<sp/>2</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>commands<sp/>should<sp/>be<sp/>migrated<sp/>to<sp/>the<sp/>more<sp/>general<sp/>command<sp/>handling<sp/>before<sp/>these</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>are<sp/>removed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>specific<sp/>to<sp/>the<sp/>nCipher<sp/>&quot;chil&quot;<sp/>engine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_CHIL_SET_FORKCHECK<sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depending<sp/>on<sp/>the<sp/>value<sp/>of<sp/>the<sp/>(long)i<sp/>argument,<sp/>this<sp/>sets<sp/>or</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unsets<sp/>the<sp/>SimpleForkCheck<sp/>flag<sp/>in<sp/>the<sp/>CHIL<sp/>API<sp/>to<sp/>enable<sp/>or</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>disable<sp/>checking<sp/>and<sp/>workarounds<sp/>for<sp/>applications<sp/>that<sp/>fork().</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_CTRL_CHIL_NO_LOCKING<sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>prevents<sp/>the<sp/>initialisation<sp/>function<sp/>from<sp/>providing<sp/>mutex</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>callbacks<sp/>to<sp/>the<sp/>nCipher<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>an<sp/>ENGINE<sp/>supports<sp/>its<sp/>own<sp/>specific<sp/>control<sp/>commands<sp/>and<sp/>wishes<sp/>the</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>framework<sp/>to<sp/>handle<sp/>the<sp/>above<sp/>&apos;ENGINE_CMD_***&apos;-manipulation<sp/>commands<sp/>on<sp/>its</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>behalf,<sp/>it<sp/>should<sp/>supply<sp/>a<sp/>null-terminated<sp/>array<sp/>of<sp/>ENGINE_CMD_DEFN<sp/>entries</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>to<sp/>ENGINE_set_cmd_defns().<sp/>It<sp/>should<sp/>also<sp/>implement<sp/>a<sp/>ctrl()<sp/>handler<sp/>that</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>supports<sp/>the<sp/>stated<sp/>commands<sp/>(ie.<sp/>the<sp/>&quot;cmd_num&quot;<sp/>entries<sp/>as<sp/>described<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>array).<sp/>NB:<sp/>The<sp/>array<sp/>must<sp/>be<sp/>ordered<sp/>in<sp/>increasing<sp/>order<sp/>of<sp/>cmd_num.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>&quot;null-terminated&quot;<sp/>means<sp/>that<sp/>the<sp/>last<sp/>ENGINE_CMD_DEFN<sp/>element<sp/>has<sp/>cmd_num<sp/>set</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>to<sp/>zero<sp/>and/or<sp/>cmd_name<sp/>set<sp/>to<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN_st</ref></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_num;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>command<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd_name;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>command<sp/>name<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd_desc;<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>short<sp/>description<sp/>of<sp/>the<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_flags;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>input<sp/>the<sp/>command<sp/>expects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generic<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_GEN_FUNC_PTR)(void);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generic<sp/>function<sp/>pointer<sp/>taking<sp/>no<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_GEN_INT_FUNC_PTR)(ENGINE<sp/>*);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Specific<sp/>control<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_CTRL_FUNC_PTR)(ENGINE<sp/>*,<sp/>int,<sp/>long,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>void<sp/>(*f)(void));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generic<sp/>load_key<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*<sp/>(*ENGINE_LOAD_KEY_PTR)(ENGINE<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>UI_METHOD<sp/>*ui_method,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_SSL_CLIENT_CERT_PTR)(ENGINE<sp/>*,<sp/><ref refid="structssl__st" kindref="compound">SSL</ref><sp/>*ssl,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref>)<sp/>*ca_dn,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>**pcert,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**pkey,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>**pother,<sp/>UI_METHOD<sp/>*ui_method,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>callback<sp/>types<sp/>are<sp/>for<sp/>an<sp/>ENGINE&apos;s<sp/>handler<sp/>for<sp/>cipher<sp/>and<sp/>digest<sp/>logic.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>These<sp/>handlers<sp/>have<sp/>these<sp/>prototypes;</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/><sp/><sp/>int<sp/>foo(ENGINE<sp/>*e,<sp/>const<sp/>EVP_CIPHER<sp/>**cipher,<sp/>const<sp/>int<sp/>**nids,<sp/>int<sp/>nid);</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/><sp/><sp/>int<sp/>foo(ENGINE<sp/>*e,<sp/>const<sp/>EVP_MD<sp/>**digest,<sp/>const<sp/>int<sp/>**nids,<sp/>int<sp/>nid);</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>Looking<sp/>at<sp/>how<sp/>to<sp/>implement<sp/>these<sp/>handlers<sp/>in<sp/>the<sp/>case<sp/>of<sp/>cipher<sp/>support,<sp/>if</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>the<sp/>framework<sp/>wants<sp/>the<sp/>EVP_CIPHER<sp/>for<sp/>&apos;nid&apos;,<sp/>it<sp/>will<sp/>call;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/><sp/><sp/>foo(e,<sp/>&amp;p_evp_cipher,<sp/>NULL,<sp/>nid);<sp/><sp/><sp/><sp/>(return<sp/>zero<sp/>for<sp/>failure)</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>framework<sp/>wants<sp/>a<sp/>list<sp/>of<sp/>supported<sp/>&apos;nid&apos;s,<sp/>it<sp/>will<sp/>call;</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/><sp/><sp/>foo(e,<sp/>NULL,<sp/>&amp;p_nids,<sp/>0);<sp/>(returns<sp/>number<sp/>of<sp/>&apos;nids&apos;<sp/>or<sp/>-1<sp/>for<sp/>error)</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>to<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>array<sp/>of<sp/>supported<sp/>cipher<sp/>&apos;nid&apos;s.<sp/>If<sp/>the<sp/>second</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>parameter<sp/>is<sp/>non-NULL<sp/>it<sp/>is<sp/>set<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>returned<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_CIPHERS_PTR)(ENGINE<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**,<sp/>int);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_DIGESTS_PTR)(ENGINE<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**,<sp/>int);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_PKEY_METHS_PTR)(ENGINE<sp/>*,<sp/>EVP_PKEY_METHOD<sp/>**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**,<sp/>int);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*ENGINE_PKEY_ASN1_METHS_PTR)(ENGINE<sp/>*,<sp/>EVP_PKEY_ASN1_METHOD<sp/>**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**,<sp/>int);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STRUCTURE<sp/>functions<sp/>...<sp/>all<sp/>of<sp/>these<sp/>functions<sp/>deal<sp/>with<sp/>pointers<sp/>to<sp/>ENGINE</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>structures<sp/>where<sp/>the<sp/>pointers<sp/>have<sp/>a<sp/>&quot;structural<sp/>reference&quot;.<sp/>This<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>their<sp/>reference<sp/>is<sp/>to<sp/>allowed<sp/>access<sp/>to<sp/>the<sp/>structure<sp/>but<sp/>it<sp/>does<sp/>not<sp/>imply</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>that<sp/>the<sp/>structure<sp/>is<sp/>functional.<sp/>To<sp/>simply<sp/>increment<sp/>or<sp/>decrement<sp/>the</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>structural<sp/>reference<sp/>count,<sp/>use<sp/>ENGINE_by_id<sp/>and<sp/>ENGINE_free.<sp/>NB:<sp/>This<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>required<sp/>when<sp/>iterating<sp/>using<sp/>ENGINE_get_next<sp/>as<sp/>it<sp/>will<sp/>automatically</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>decrement<sp/>the<sp/>structural<sp/>reference<sp/>count<sp/>of<sp/>the<sp/>&quot;current&quot;<sp/>ENGINE<sp/>and</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>increment<sp/>the<sp/>structural<sp/>reference<sp/>count<sp/>of<sp/>the<sp/>ENGINE<sp/>it<sp/>returns<sp/>(unless<sp/>it</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>is<sp/>NULL).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>first/last<sp/>&quot;ENGINE&quot;<sp/>type<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">ENGINE<sp/>*ENGINE_get_first(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">ENGINE<sp/>*ENGINE_get_last(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Iterate<sp/>to<sp/>the<sp/>next/previous<sp/>&quot;ENGINE&quot;<sp/>type<sp/>(NULL<sp/>=<sp/>end<sp/>of<sp/>the<sp/>list).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">ENGINE<sp/>*ENGINE_get_next(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">ENGINE<sp/>*ENGINE_get_prev(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>another<sp/>&quot;ENGINE&quot;<sp/>type<sp/>into<sp/>the<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_add(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Remove<sp/>an<sp/>existing<sp/>&quot;ENGINE&quot;<sp/>type<sp/>from<sp/>the<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_remove(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>an<sp/>engine<sp/>from<sp/>the<sp/>list<sp/>by<sp/>its<sp/>unique<sp/>&quot;id&quot;<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">ENGINE<sp/>*ENGINE_by_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>all<sp/>the<sp/>built-in<sp/>engines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_openssl(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_dynamic(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_STATIC_ENGINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_4758cca(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_aep(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_atalla(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_chil(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_cswift(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_nuron(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_sureware(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_ubsec(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_padlock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_capi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_GMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_gmp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_GOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_gost(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_cryptodev(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_rsax(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_rdrand(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_load_builtin_engines(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>and<sp/>set<sp/>global<sp/>flags<sp/>(ENGINE_TABLE_FLAG_***)<sp/>for<sp/>the<sp/>implementation</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>&quot;registry&quot;<sp/>handling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_get_table_flags(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_set_table_flags(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Manage<sp/>registration<sp/>of<sp/>ENGINEs<sp/>per<sp/>&quot;table&quot;.<sp/>For<sp/>each<sp/>type,<sp/>there<sp/>are<sp/>3</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>functions;</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/><sp/><sp/>ENGINE_register_***(e)<sp/>-<sp/>registers<sp/>the<sp/>implementation<sp/>from<sp/>&apos;e&apos;<sp/>(if<sp/>it<sp/>has<sp/>one)</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/><sp/><sp/>ENGINE_unregister_***(e)<sp/>-<sp/>unregister<sp/>the<sp/>implementation<sp/>from<sp/>&apos;e&apos;</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/><sp/><sp/>ENGINE_register_all_***()<sp/>-<sp/>call<sp/>ENGINE_register_***()<sp/>for<sp/>each<sp/>&apos;e&apos;<sp/>in<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>Cleanup<sp/>is<sp/>automatically<sp/>registered<sp/>from<sp/>each<sp/>table<sp/>when<sp/>required,<sp/>so</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>ENGINE_cleanup()<sp/>will<sp/>reverse<sp/>any<sp/>&quot;register&quot;<sp/>operations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_RSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_RSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_RSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_DSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_DSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_DSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_ECDH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_ECDH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_ECDH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_ECDSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_ECDSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_ECDSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_DH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_DH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_DH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_RAND(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_RAND(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_RAND(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_STORE(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_STORE(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_STORE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_ciphers(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_ciphers(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_ciphers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_digests(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_digests(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_digests(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_pkey_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_pkey_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_pkey_meths(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_pkey_asn1_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_unregister_pkey_asn1_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_register_all_pkey_asn1_meths(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>register<sp/>all<sp/>support<sp/>from<sp/>the<sp/>above<sp/>categories.<sp/>Note,<sp/>use<sp/>of</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>these<sp/>functions<sp/>can<sp/>result<sp/>in<sp/>static<sp/>linkage<sp/>of<sp/>code<sp/>your<sp/>application<sp/>may<sp/>not</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>need.<sp/>If<sp/>you<sp/>only<sp/>need<sp/>a<sp/>subset<sp/>of<sp/>functionality,<sp/>consider<sp/>using<sp/>more</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>selective<sp/>initialisation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_complete(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_register_all_complete(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Send<sp/>parametrised<sp/>control<sp/>commands<sp/>to<sp/>the<sp/>engine.<sp/>The<sp/>possibilities<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>down<sp/>an<sp/>integer,<sp/>a<sp/>pointer<sp/>to<sp/>data<sp/>or<sp/>a<sp/>function<sp/>pointer<sp/>are<sp/>provided.<sp/>Any<sp/>of</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>the<sp/>parameters<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>NULL,<sp/>depending<sp/>on<sp/>the<sp/>command<sp/>number.<sp/>In</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>actuality,<sp/>this<sp/>function<sp/>only<sp/>requires<sp/>a<sp/>structural<sp/>(rather<sp/>than<sp/>functional)</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>reference<sp/>to<sp/>an<sp/>engine,<sp/>but<sp/>many<sp/>control<sp/>commands<sp/>may<sp/>require<sp/>the<sp/>engine<sp/>be</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>functional.<sp/>The<sp/>caller<sp/>should<sp/>be<sp/>aware<sp/>of<sp/>trying<sp/>commands<sp/>that<sp/>require<sp/>an</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>operational<sp/>ENGINE,<sp/>and<sp/>only<sp/>use<sp/>functional<sp/>references<sp/>in<sp/>such<sp/>situations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_ctrl(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>tests<sp/>if<sp/>an<sp/>ENGINE-specific<sp/>command<sp/>is<sp/>usable<sp/>as<sp/>a<sp/>&quot;setting&quot;.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>Eg.<sp/>in<sp/>an<sp/>application&apos;s<sp/>config<sp/>file<sp/>that<sp/>gets<sp/>processed<sp/>through</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>ENGINE_ctrl_cmd_string().<sp/>If<sp/>this<sp/>returns<sp/>zero,<sp/>it<sp/>is<sp/>not<sp/>available<sp/>to</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>ENGINE_ctrl_cmd_string(),<sp/>only<sp/>ENGINE_ctrl().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_cmd_is_executable(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>works<sp/>like<sp/>ENGINE_ctrl()<sp/>with<sp/>the<sp/>exception<sp/>of<sp/>taking<sp/>a</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>command<sp/>name<sp/>instead<sp/>of<sp/>a<sp/>command<sp/>number,<sp/>and<sp/>can<sp/>handle<sp/>optional<sp/>commands.</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>comment<sp/>on<sp/>ENGINE_ctrl_cmd_string()<sp/>for<sp/>an<sp/>explanation<sp/>on<sp/>how<sp/>to</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>use<sp/>the<sp/>cmd_name<sp/>and<sp/>cmd_optional.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_ctrl_cmd(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd_name,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_optional);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>passes<sp/>a<sp/>command-name<sp/>and<sp/>argument<sp/>to<sp/>an<sp/>ENGINE.<sp/>The<sp/>cmd_name</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>is<sp/>converted<sp/>to<sp/>a<sp/>command<sp/>number<sp/>and<sp/>the<sp/>control<sp/>command<sp/>is<sp/>called<sp/>using</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>&apos;arg&apos;<sp/>as<sp/>an<sp/>argument<sp/>(unless<sp/>the<sp/>ENGINE<sp/>doesn&apos;t<sp/>support<sp/>such<sp/>a<sp/>command,<sp/>in</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>which<sp/>case<sp/>no<sp/>control<sp/>command<sp/>is<sp/>called).<sp/>The<sp/>command<sp/>is<sp/>checked<sp/>for<sp/>input</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>flags,<sp/>and<sp/>if<sp/>necessary<sp/>the<sp/>argument<sp/>will<sp/>be<sp/>converted<sp/>to<sp/>a<sp/>numeric<sp/>value.<sp/>If</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>cmd_optional<sp/>is<sp/>non-zero,<sp/>then<sp/>if<sp/>the<sp/>ENGINE<sp/>doesn&apos;t<sp/>support<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>cmd_name<sp/>the<sp/>return<sp/>value<sp/>will<sp/>be<sp/>success<sp/>anyway.<sp/>This<sp/>function<sp/>is<sp/>intended</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>for<sp/>applications<sp/>to<sp/>use<sp/>so<sp/>that<sp/>users<sp/>(or<sp/>config<sp/>files)<sp/>can<sp/>supply</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>engine-specific<sp/>config<sp/>data<sp/>to<sp/>the<sp/>ENGINE<sp/>at<sp/>run-time<sp/>to<sp/>control<sp/>behaviour<sp/>of</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>specific<sp/>engines.<sp/>As<sp/>such,<sp/>it<sp/>shouldn&apos;t<sp/>be<sp/>used<sp/>for<sp/>calling<sp/>ENGINE_ctrl()</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>functions<sp/>that<sp/>return<sp/>data,<sp/>deal<sp/>with<sp/>binary<sp/>data,<sp/>or<sp/>that<sp/>are<sp/>otherwise</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>supposed<sp/>to<sp/>be<sp/>used<sp/>directly<sp/>through<sp/>ENGINE_ctrl()<sp/>in<sp/>application<sp/>code.<sp/>Any</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>&quot;return&quot;<sp/>data<sp/>from<sp/>an<sp/>ENGINE_ctrl()<sp/>operation<sp/>in<sp/>this<sp/>function<sp/>will<sp/>be<sp/>lost<sp/>-</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>the<sp/>return<sp/>value<sp/>is<sp/>interpreted<sp/>as<sp/>failure<sp/>if<sp/>the<sp/>return<sp/>value<sp/>is<sp/>zero,</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>success<sp/>otherwise,<sp/>and<sp/>this<sp/>function<sp/>returns<sp/>a<sp/>boolean<sp/>value<sp/>as<sp/>a<sp/>result.<sp/>In</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>other<sp/>words,<sp/>vendors<sp/>of<sp/>&apos;ENGINE&apos;-enabled<sp/>devices<sp/>should<sp/>write<sp/>ENGINE</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>implementations<sp/>with<sp/>parameterisations<sp/>that<sp/>work<sp/>in<sp/>this<sp/>scheme,<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>compliant<sp/>ENGINE-based<sp/>applications<sp/>can<sp/>work<sp/>consistently<sp/>with<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>configuration<sp/>for<sp/>the<sp/>same<sp/>ENGINE-enabled<sp/>devices,<sp/>across<sp/>applications.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_ctrl_cmd_string(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_optional);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>are<sp/>useful<sp/>for<sp/>manufacturing<sp/>new<sp/>ENGINE<sp/>structures.<sp/>They</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>don&apos;t<sp/>address<sp/>reference<sp/>counting<sp/>at<sp/>all<sp/>-<sp/>one<sp/>uses<sp/>them<sp/>to<sp/>populate<sp/>an<sp/>ENGINE</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>structure<sp/>with<sp/>personalised<sp/>implementations<sp/>of<sp/>things<sp/>prior<sp/>to<sp/>using<sp/>it</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>directly<sp/>or<sp/>adding<sp/>it<sp/>to<sp/>the<sp/>builtin<sp/>ENGINE<sp/>list<sp/>in<sp/>OpenSSL.<sp/>These<sp/>are<sp/>also</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>here<sp/>so<sp/>that<sp/>the<sp/>ENGINE<sp/>structure<sp/>doesn&apos;t<sp/>have<sp/>to<sp/>be<sp/>exposed<sp/>and<sp/>break<sp/>binary</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>compatibility!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">ENGINE<sp/>*ENGINE_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_free(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_up_ref(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_id(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_name(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_RSA(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrsa__meth__st" kindref="compound">RSA_METHOD</ref><sp/>*rsa_meth);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_DSA(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*dsa_meth);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_ECDH(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ECDH_METHOD<sp/>*ecdh_meth);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_ECDSA(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ECDSA_METHOD<sp/>*ecdsa_meth);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_DH(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdh__method" kindref="compound">DH_METHOD</ref><sp/>*dh_meth);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_RAND(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrand__meth__st" kindref="compound">RAND_METHOD</ref><sp/>*rand_meth);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_STORE(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORE_METHOD<sp/>*store_meth);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_destroy_function(ENGINE<sp/>*e,<sp/>ENGINE_GEN_INT_FUNC_PTR<sp/>destroy_f);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_init_function(ENGINE<sp/>*e,<sp/>ENGINE_GEN_INT_FUNC_PTR<sp/>init_f);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_finish_function(ENGINE<sp/>*e,<sp/>ENGINE_GEN_INT_FUNC_PTR<sp/>finish_f);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_ctrl_function(ENGINE<sp/>*e,<sp/>ENGINE_CTRL_FUNC_PTR<sp/>ctrl_f);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_load_privkey_function(ENGINE<sp/>*e,<sp/>ENGINE_LOAD_KEY_PTR<sp/>loadpriv_f);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_load_pubkey_function(ENGINE<sp/>*e,<sp/>ENGINE_LOAD_KEY_PTR<sp/>loadpub_f);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_load_ssl_client_cert_function(ENGINE<sp/>*e,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENGINE_SSL_CLIENT_CERT_PTR<sp/>loadssl_f);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_ciphers(ENGINE<sp/>*e,<sp/>ENGINE_CIPHERS_PTR<sp/>f);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_digests(ENGINE<sp/>*e,<sp/>ENGINE_DIGESTS_PTR<sp/>f);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_pkey_meths(ENGINE<sp/>*e,<sp/>ENGINE_PKEY_METHS_PTR<sp/>f);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_pkey_asn1_meths(ENGINE<sp/>*e,<sp/>ENGINE_PKEY_ASN1_METHS_PTR<sp/>f);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_flags(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_cmd_defns(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN</ref><sp/>*defns);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>allow<sp/>control<sp/>over<sp/>any<sp/>per-structure<sp/>ENGINE<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_get_ex_new_index(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp,<sp/>CRYPTO_EX_new<sp/>*new_func,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_EX_dup<sp/>*dup_func,<sp/>CRYPTO_EX_free<sp/>*free_func);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_ex_data(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ENGINE_get_ex_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>cleans<sp/>up<sp/>anything<sp/>that<sp/>needs<sp/>it.<sp/>Eg.<sp/>the<sp/>ENGINE_add()<sp/>function</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>automatically<sp/>ensures<sp/>the<sp/>list<sp/>cleanup<sp/>function<sp/>is<sp/>registered<sp/>to<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>from<sp/>ENGINE_cleanup().<sp/>Similarly,<sp/>all<sp/>ENGINE_register_***<sp/>functions<sp/>ensure</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>ENGINE_cleanup()<sp/>will<sp/>clean<sp/>up<sp/>after<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>return<sp/>values<sp/>from<sp/>within<sp/>the<sp/>ENGINE<sp/>structure.<sp/>These<sp/>can<sp/>be<sp/>useful</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>with<sp/>functional<sp/>references<sp/>as<sp/>well<sp/>as<sp/>structural<sp/>references<sp/>-<sp/>it<sp/>depends</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>which<sp/>you<sp/>obtained.<sp/>Using<sp/>the<sp/>result<sp/>for<sp/>functional<sp/>purposes<sp/>if<sp/>you<sp/>only</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>obtained<sp/>a<sp/>structural<sp/>reference<sp/>may<sp/>be<sp/>problematic!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ENGINE_get_id(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ENGINE_get_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrsa__meth__st" kindref="compound">RSA_METHOD</ref><sp/>*ENGINE_get_RSA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*ENGINE_get_DSA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ECDH_METHOD<sp/>*ENGINE_get_ECDH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ECDSA_METHOD<sp/>*ENGINE_get_ECDSA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdh__method" kindref="compound">DH_METHOD</ref><sp/>*ENGINE_get_DH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrand__meth__st" kindref="compound">RAND_METHOD</ref><sp/>*ENGINE_get_RAND(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORE_METHOD<sp/>*ENGINE_get_STORE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">ENGINE_GEN_INT_FUNC_PTR<sp/>ENGINE_get_destroy_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">ENGINE_GEN_INT_FUNC_PTR<sp/>ENGINE_get_init_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">ENGINE_GEN_INT_FUNC_PTR<sp/>ENGINE_get_finish_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">ENGINE_CTRL_FUNC_PTR<sp/>ENGINE_get_ctrl_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">ENGINE_LOAD_KEY_PTR<sp/>ENGINE_get_load_privkey_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">ENGINE_LOAD_KEY_PTR<sp/>ENGINE_get_load_pubkey_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">ENGINE_SSL_CLIENT_CERT_PTR<sp/>ENGINE_get_ssl_client_cert_function(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="530"><highlight class="normal">ENGINE_CIPHERS_PTR<sp/>ENGINE_get_ciphers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">ENGINE_DIGESTS_PTR<sp/>ENGINE_get_digests(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">ENGINE_PKEY_METHS_PTR<sp/>ENGINE_get_pkey_meths(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">ENGINE_PKEY_ASN1_METHS_PTR<sp/>ENGINE_get_pkey_asn1_meths(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_CIPHER<sp/>*ENGINE_get_cipher(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_MD<sp/>*ENGINE_get_digest(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_PKEY_METHOD<sp/>*ENGINE_get_pkey_meth(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_PKEY_ASN1_METHOD<sp/>*ENGINE_get_pkey_asn1_meth(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_PKEY_ASN1_METHOD<sp/>*ENGINE_get_pkey_asn1_meth_str(ENGINE<sp/>*e,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EVP_PKEY_ASN1_METHOD<sp/>*ENGINE_pkey_asn1_find_str(ENGINE<sp/>**pe,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_e_n_g_i_n_e___c_m_d___d_e_f_n__st" kindref="compound">ENGINE_CMD_DEFN</ref><sp/>*ENGINE_get_cmd_defns(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_get_flags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FUNCTIONAL<sp/>functions.<sp/>These<sp/>functions<sp/>deal<sp/>with<sp/>ENGINE<sp/>structures</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>that<sp/>have<sp/>(or<sp/>will)<sp/>be<sp/>initialised<sp/>for<sp/>use.<sp/>Broadly<sp/>speaking,<sp/>the</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>structural<sp/>functions<sp/>are<sp/>useful<sp/>for<sp/>iterating<sp/>the<sp/>list<sp/>of<sp/>available</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>engine<sp/>types,<sp/>creating<sp/>new<sp/>engine<sp/>types,<sp/>and<sp/>other<sp/>&quot;list&quot;<sp/>operations.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>These<sp/>functions<sp/>actually<sp/>deal<sp/>with<sp/>ENGINEs<sp/>that<sp/>are<sp/>to<sp/>be<sp/>used.<sp/>As</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>such<sp/>these<sp/>functions<sp/>can<sp/>fail<sp/>(if<sp/>applicable)<sp/>when<sp/>particular</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>engines<sp/>are<sp/>unavailable<sp/>-<sp/>eg.<sp/>if<sp/>a<sp/>hardware<sp/>accelerator<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>attached<sp/>or<sp/>not<sp/>functioning<sp/>correctly.<sp/>Each<sp/>ENGINE<sp/>has<sp/>2<sp/>reference</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>counts;<sp/>structural<sp/>and<sp/>functional.<sp/>Every<sp/>time<sp/>a<sp/>functional<sp/>reference</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>is<sp/>obtained<sp/>or<sp/>released,<sp/>a<sp/>corresponding<sp/>structural<sp/>reference<sp/>is</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>automatically<sp/>obtained<sp/>or<sp/>released<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialise<sp/>a<sp/>engine<sp/>type<sp/>for<sp/>use<sp/>(or<sp/>up<sp/>its<sp/>reference<sp/>count<sp/>if<sp/>it&apos;s</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/>already<sp/>in<sp/>use).<sp/>This<sp/>will<sp/>fail<sp/>if<sp/>the<sp/>engine<sp/>is<sp/>not<sp/>currently</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>operational<sp/>and<sp/>cannot<sp/>initialise.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_init(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Free<sp/>a<sp/>functional<sp/>reference<sp/>to<sp/>a<sp/>engine<sp/>type.<sp/>This<sp/>does<sp/>not<sp/>require</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>a<sp/>corresponding<sp/>call<sp/>to<sp/>ENGINE_free<sp/>as<sp/>it<sp/>also<sp/>releases<sp/>a<sp/>structural</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>reference.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_finish(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>functions<sp/>handle<sp/>keys<sp/>that<sp/>are<sp/>stored<sp/>in<sp/>some<sp/>secondary</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>location,<sp/>handled<sp/>by<sp/>the<sp/>engine.<sp/><sp/>The<sp/>storage<sp/>may<sp/>be<sp/>on<sp/>a<sp/>card<sp/>or</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*<sp/>whatever.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*ENGINE_load_private_key(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_id,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>UI_METHOD<sp/>*ui_method,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*ENGINE_load_public_key(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_id,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>UI_METHOD<sp/>*ui_method,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_load_ssl_client_cert(ENGINE<sp/>*e,<sp/><ref refid="structssl__st" kindref="compound">SSL</ref><sp/>*s,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref>)<sp/>*ca_dn,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>**pcert,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**ppkey,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)<sp/>**pother,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>UI_METHOD<sp/>*ui_method,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>returns<sp/>a<sp/>pointer<sp/>for<sp/>the<sp/>current<sp/>ENGINE<sp/>structure<sp/>that</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>is<sp/>(by<sp/>default)<sp/>performing<sp/>any<sp/>RSA<sp/>operations.<sp/>The<sp/>value<sp/>returned</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>is<sp/>an<sp/>incremented<sp/>reference,<sp/>so<sp/>it<sp/>should<sp/>be<sp/>free&apos;d<sp/>(ENGINE_finish)</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>before<sp/>it<sp/>is<sp/>discarded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_RSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>&quot;methods&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_DSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_ECDH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_ECDSA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_DH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">ENGINE<sp/>*ENGINE_get_default_RAND(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>can<sp/>be<sp/>used<sp/>to<sp/>get<sp/>a<sp/>functional<sp/>reference<sp/>to<sp/>perform</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>ciphering<sp/>or<sp/>digesting<sp/>corresponding<sp/>to<sp/>&quot;nid&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">ENGINE<sp/>*ENGINE_get_cipher_engine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="592"><highlight class="normal">ENGINE<sp/>*ENGINE_get_digest_engine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">ENGINE<sp/>*ENGINE_get_pkey_meth_engine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">ENGINE<sp/>*ENGINE_get_pkey_asn1_meth_engine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>sets<sp/>a<sp/>new<sp/>default<sp/>ENGINE<sp/>structure<sp/>for<sp/>performing<sp/>RSA</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>operations.<sp/>If<sp/>the<sp/>result<sp/>is<sp/>non-zero<sp/>(success)<sp/>then<sp/>the<sp/>ENGINE</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>structure<sp/>will<sp/>have<sp/>had<sp/>its<sp/>reference<sp/>count<sp/>up&apos;d<sp/>so<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>should<sp/>still<sp/>free<sp/>their<sp/>own<sp/>reference<sp/>&apos;e&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_RSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_string(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def_list);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Same<sp/>for<sp/>the<sp/>other<sp/>&quot;methods&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_DSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_ECDH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_ECDSA(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_DH(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_RAND(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_ciphers(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_digests(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_pkey_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default_pkey_asn1_meths(ENGINE<sp/>*e);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>combination<sp/>&quot;set&quot;<sp/>-<sp/>the<sp/>flags<sp/>are<sp/>bitwise<sp/>&quot;OR&quot;d<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>ENGINE_METHOD_***<sp/>defines<sp/>above.<sp/>As<sp/>with<sp/>the<sp/>&quot;ENGINE_register_complete()&quot;</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/>function,<sp/>this<sp/>function<sp/>can<sp/>result<sp/>in<sp/>unnecessary<sp/>static<sp/>linkage.<sp/>If<sp/>your</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>application<sp/>requires<sp/>only<sp/>specific<sp/>functionality,<sp/>consider<sp/>using<sp/>more</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>selective<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENGINE_set_default(ENGINE<sp/>*e,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_add_conf_module(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>functions<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>int<sp/>ENGINE_clear_defaults(void);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">/**************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DYNAMIC<sp/>ENGINE<sp/>SUPPORT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">/**************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Binary/behaviour<sp/>compatibility<sp/>levels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OSSL_DYNAMIC_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>long)0x00020000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Binary<sp/>versions<sp/>older<sp/>than<sp/>this<sp/>are<sp/>too<sp/>old<sp/>for<sp/>us<sp/>(whether<sp/>we&apos;re<sp/>a<sp/>loader<sp/>or</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*<sp/>a<sp/>loadee)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OSSL_DYNAMIC_OLDEST<sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>long)0x00020000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>compiling<sp/>an<sp/>ENGINE<sp/>entirely<sp/>as<sp/>an<sp/>external<sp/>shared<sp/>library,<sp/>loadable<sp/>by</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/>the<sp/>&quot;dynamic&quot;<sp/>ENGINE,<sp/>these<sp/>types<sp/>are<sp/>needed.<sp/>The<sp/>&apos;dynamic_fns&apos;<sp/>structure</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>type<sp/>provides<sp/>the<sp/>calling<sp/>application&apos;s<sp/>(or<sp/>library&apos;s)<sp/>error<sp/>functionality</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>and<sp/>memory<sp/>management<sp/>function<sp/>pointers<sp/>to<sp/>the<sp/>loaded<sp/>library.<sp/>These<sp/>should</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>be<sp/>used/set<sp/>in<sp/>the<sp/>loaded<sp/>library<sp/>code<sp/>so<sp/>that<sp/>the<sp/>loading<sp/>application&apos;s</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>&apos;state&apos;<sp/>will<sp/>be<sp/>used/changed<sp/>in<sp/>all<sp/>operations.<sp/>The<sp/>&apos;static_state&apos;<sp/>pointer</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>allows<sp/>the<sp/>loaded<sp/>library<sp/>to<sp/>know<sp/>if<sp/>it<sp/>shares<sp/>the<sp/>same<sp/>static<sp/>data<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>calling<sp/>application<sp/>(or<sp/>library),<sp/>and<sp/>thus<sp/>whether<sp/>these<sp/>callbacks<sp/>need<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/>set<sp/>or<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*dyn_MEM_malloc_cb)(size_t);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*dyn_MEM_realloc_cb)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*dyn_MEM_free_cb)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="647" refid="structst__dynamic___m_e_m__fns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structst__dynamic___m_e_m__fns" kindref="compound">st_dynamic_MEM_fns</ref><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_MEM_malloc_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc_cb;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_MEM_realloc_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realloc_cb;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_MEM_free_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_cb;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structst__dynamic___m_e_m__fns" kindref="compound">dynamic_MEM_fns</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Perhaps<sp/>the<sp/>memory<sp/>and<sp/>locking<sp/>code<sp/>(crypto.h)<sp/>should<sp/>declare<sp/>and<sp/>use</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/>these<sp/>types<sp/>so<sp/>we<sp/>(and<sp/>any<sp/>other<sp/>dependant<sp/>code)<sp/>can<sp/>simplify<sp/>a<sp/>bit??<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*dyn_lock_locking_cb)(int,int,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,int);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*dyn_lock_add_lock_cb)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*,int,int,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,int);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CRYPTO_dynlock_value<sp/>*(*dyn_dynlock_create_cb)(</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,int);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*dyn_dynlock_lock_cb)(int,</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CRYPTO_dynlock_value<sp/>*,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,int);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*dyn_dynlock_destroy_cb)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CRYPTO_dynlock_value<sp/>*,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,int);</highlight></codeline>
<codeline lineno="662" refid="structst__dynamic___l_o_c_k__fns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structst__dynamic___l_o_c_k__fns" kindref="compound">st_dynamic_LOCK_fns</ref><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_lock_locking_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_locking_cb;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_lock_add_lock_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_add_lock_cb;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_dynlock_create_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynlock_create_cb;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_dynlock_lock_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynlock_lock_cb;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>dyn_dynlock_destroy_cb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynlock_destroy_cb;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structst__dynamic___l_o_c_k__fns" kindref="compound">dynamic_LOCK_fns</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>top-level<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="structst__dynamic__fns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structst__dynamic__fns" kindref="compound">st_dynamic_fns</ref><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*static_state;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ERR_FNS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err_fns;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CRYPTO_EX_DATA_IMPL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ex_data_fns;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structst__dynamic___m_e_m__fns" kindref="compound">dynamic_MEM_fns</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_fns;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structst__dynamic___l_o_c_k__fns" kindref="compound">dynamic_LOCK_fns</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_fns;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structst__dynamic__fns" kindref="compound">dynamic_fns</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>version<sp/>checking<sp/>function<sp/>should<sp/>be<sp/>of<sp/>this<sp/>prototype.<sp/>NB:<sp/>The</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*<sp/>ossl_version<sp/>value<sp/>passed<sp/>in<sp/>is<sp/>the<sp/>OSSL_DYNAMIC_VERSION<sp/>of<sp/>the<sp/>loading<sp/>code.</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>function<sp/>returns<sp/>zero,<sp/>it<sp/>indicates<sp/>a<sp/>(potential)<sp/>version</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/>*<sp/>incompatibility<sp/>and<sp/>the<sp/>loaded<sp/>library<sp/>doesn&apos;t<sp/>believe<sp/>it<sp/>can<sp/>proceed.</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/>Otherwise,<sp/>the<sp/>returned<sp/>value<sp/>is<sp/>the<sp/>(latest)<sp/>version<sp/>supported<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>loading<sp/>library.<sp/>The<sp/>loader<sp/>may<sp/>still<sp/>decide<sp/>that<sp/>the<sp/>loaded<sp/>code&apos;s<sp/>version</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/>is<sp/>unsatisfactory<sp/>and<sp/>could<sp/>veto<sp/>the<sp/>load.<sp/>The<sp/>function<sp/>is<sp/>expected<sp/>to</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>be<sp/>implemented<sp/>with<sp/>the<sp/>symbol<sp/>name<sp/>&quot;v_check&quot;,<sp/>and<sp/>a<sp/>default<sp/>implementation</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/>can<sp/>be<sp/>fully<sp/>instantiated<sp/>with<sp/>IMPLEMENT_DYNAMIC_CHECK_FN().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long<sp/>(*dynamic_v_check_fn)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ossl_version);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_DYNAMIC_CHECK_FN()<sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_EXPORT<sp/>unsigned<sp/>long<sp/>v_check(unsigned<sp/>long<sp/>v);<sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_EXPORT<sp/>unsigned<sp/>long<sp/>v_check(unsigned<sp/>long<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(v<sp/>&gt;=<sp/>OSSL_DYNAMIC_OLDEST)<sp/>return<sp/>OSSL_DYNAMIC_VERSION;<sp/>\</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>passed<sp/>the<sp/>ENGINE<sp/>structure<sp/>to<sp/>initialise<sp/>with<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/>function<sp/>and<sp/>command<sp/>settings.<sp/>It<sp/>should<sp/>not<sp/>adjust<sp/>the<sp/>structural<sp/>or</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*<sp/>functional<sp/>reference<sp/>counts.<sp/>If<sp/>this<sp/>function<sp/>returns<sp/>zero,<sp/>(a)<sp/>the<sp/>load<sp/>will</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/>be<sp/>aborted,<sp/>(b)<sp/>the<sp/>previous<sp/>ENGINE<sp/>state<sp/>will<sp/>be<sp/>memcpy&apos;d<sp/>back<sp/>onto<sp/>the</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/>structure,<sp/>and<sp/>(c)<sp/>the<sp/>shared<sp/>library<sp/>will<sp/>be<sp/>unloaded.<sp/>So<sp/>implementations</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>should<sp/>do<sp/>their<sp/>own<sp/>internal<sp/>cleanup<sp/>in<sp/>failure<sp/>circumstances<sp/>otherwise<sp/>they</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/>could<sp/>leak.<sp/>The<sp/>&apos;id&apos;<sp/>parameter,<sp/>if<sp/>non-NULL,<sp/>represents<sp/>the<sp/>ENGINE<sp/>id<sp/>that</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*<sp/>the<sp/>loader<sp/>is<sp/>looking<sp/>for.<sp/>If<sp/>this<sp/>is<sp/>NULL,<sp/>the<sp/>shared<sp/>library<sp/>can<sp/>choose<sp/>to</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>return<sp/>failure<sp/>or<sp/>to<sp/>initialise<sp/>a<sp/>&apos;default&apos;<sp/>ENGINE.<sp/>If<sp/>non-NULL,<sp/>the<sp/>shared</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*<sp/>library<sp/>must<sp/>initialise<sp/>only<sp/>an<sp/>ENGINE<sp/>matching<sp/>the<sp/>passed<sp/>&apos;id&apos;.<sp/>The<sp/>function</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>implemented<sp/>with<sp/>the<sp/>symbol<sp/>name<sp/>&quot;bind_engine&quot;.<sp/>A<sp/>standard</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/>*<sp/>implementation<sp/>can<sp/>be<sp/>instantiated<sp/>with<sp/>IMPLEMENT_DYNAMIC_BIND_FN(fn)<sp/>where</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/>*<sp/>the<sp/>parameter<sp/>&apos;fn&apos;<sp/>is<sp/>a<sp/>callback<sp/>function<sp/>that<sp/>populates<sp/>the<sp/>ENGINE<sp/>structure</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/>and<sp/>returns<sp/>an<sp/>int<sp/>value<sp/>(zero<sp/>for<sp/>failure).<sp/>&apos;fn&apos;<sp/>should<sp/>have<sp/>prototype;</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>[static]<sp/>int<sp/>fn(ENGINE<sp/>*e,<sp/>const<sp/>char<sp/>*id);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*dynamic_bind_engine)(ENGINE<sp/>*e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*id,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structst__dynamic__fns" kindref="compound">dynamic_fns</ref><sp/>*fns);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPLEMENT_DYNAMIC_BIND_FN(fn)<sp/>\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_EXPORT<sp/>\</highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>bind_engine(ENGINE<sp/>*e,<sp/>const<sp/>char<sp/>*id,<sp/>const<sp/>dynamic_fns<sp/>*fns);<sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>OPENSSL_EXPORT<sp/>\</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>bind_engine(ENGINE<sp/>*e,<sp/>const<sp/>char<sp/>*id,<sp/>const<sp/>dynamic_fns<sp/>*fns)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ENGINE_get_static_state()<sp/>==<sp/>fns-&gt;static_state)<sp/>goto<sp/>skip_cbs;<sp/>\</highlight></codeline>
<codeline lineno="717"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!CRYPTO_set_mem_functions(fns-&gt;mem_fns.malloc_cb,<sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fns-&gt;mem_fns.realloc_cb,<sp/>fns-&gt;mem_fns.free_cb))<sp/>\</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_set_locking_callback(fns-&gt;lock_fns.lock_locking_cb);<sp/>\</highlight></codeline>
<codeline lineno="721"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_set_add_lock_callback(fns-&gt;lock_fns.lock_add_lock_cb);<sp/>\</highlight></codeline>
<codeline lineno="722"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_set_dynlock_create_callback(fns-&gt;lock_fns.dynlock_create_cb);<sp/>\</highlight></codeline>
<codeline lineno="723"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_set_dynlock_lock_callback(fns-&gt;lock_fns.dynlock_lock_cb);<sp/>\</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_set_dynlock_destroy_callback(fns-&gt;lock_fns.dynlock_destroy_cb);<sp/>\</highlight></codeline>
<codeline lineno="725"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!CRYPTO_set_ex_data_implementation(fns-&gt;ex_data_fns))<sp/>\</highlight></codeline>
<codeline lineno="726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!ERR_set_implementation(fns-&gt;err_fns))<sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>skip_cbs:<sp/>\</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!fn(e,id))<sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>loading<sp/>application<sp/>(or<sp/>library)<sp/>and<sp/>the<sp/>loaded<sp/>ENGINE<sp/>library<sp/>share</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*<sp/>the<sp/>same<sp/>static<sp/>data<sp/>(eg.<sp/>they&apos;re<sp/>both<sp/>dynamically<sp/>linked<sp/>to<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*<sp/>libcrypto.so)<sp/>we<sp/>need<sp/>a<sp/>way<sp/>to<sp/>avoid<sp/>trying<sp/>to<sp/>set<sp/>system<sp/>callbacks<sp/>-<sp/>this</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*<sp/>would<sp/>fail,<sp/>and<sp/>for<sp/>the<sp/>same<sp/>reason<sp/>that<sp/>it&apos;s<sp/>unnecessary<sp/>to<sp/>try.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*<sp/>loaded<sp/>ENGINE<sp/>has<sp/>(or<sp/>gets<sp/>from<sp/>through<sp/>the<sp/>loader)<sp/>its<sp/>own<sp/>copy<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/>*<sp/>libcrypto<sp/>static<sp/>data,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>the<sp/>callbacks.<sp/>The<sp/>easiest<sp/>way<sp/>to</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/>detect<sp/>this<sp/>is<sp/>to<sp/>have<sp/>a<sp/>function<sp/>that<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>some<sp/>static<sp/>data</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/>and<sp/>let<sp/>the<sp/>loading<sp/>application<sp/>and<sp/>loaded<sp/>ENGINE<sp/>compare<sp/>their<sp/>respective</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ENGINE_get_static_state(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__OpenBSD__)<sp/>||<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(HAVE_CRYPTODEV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ENGINE_setup_bsd_cryptodev(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_ENGINE_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>ENGINE<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_DYNAMIC_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_DYNAMIC_GET_DATA_CTX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>181</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_DYNAMIC_LOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>182</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_DYNAMIC_SET_DATA_CTX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>183</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_BY_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_CMD_IS_EXECUTABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>170</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>142</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_CTRL_CMD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>178</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_CTRL_CMD_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>171</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_FINISH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_FREE_UTIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_CIPHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>185</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_DEFAULT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>177</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_DIGEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>186</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_NEXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_PKEY_ASN1_METH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>193</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_PKEY_METH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_GET_PREV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_LIST_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_LIST_REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_LOAD_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_LOAD_PUBLIC_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>151</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>194</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_SET_DEFAULT_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>189</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_SET_DEFAULT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_SET_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_SET_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_TABLE_REGISTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>184</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_UNLOAD_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>152</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_UNLOCKED_FINISH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>191</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_ENGINE_UP_REF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>190</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_INT_CTRL_HELPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>172</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_INT_ENGINE_CONFIGURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>188</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_INT_ENGINE_MODULE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>187</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_F_LOG_MESSAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>141</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ALREADY_LOADED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>133</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_CMD_NOT_EXECUTABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>134</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_COMMAND_TAKES_INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_COMMAND_TAKES_NO_INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_CONFLICTING_ENGINE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_DH_NOT_IMPLEMENTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>139</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_DSA_NOT_IMPLEMENTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_DSO_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_DSO_NOT_FOUND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ENGINES_SECTION_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>148</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ENGINE_CONFIGURATION_ERROR<sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ENGINE_IS_NOT_IN_LIST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ENGINE_SECTION_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>149</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_FAILED_LOADING_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_FAILED_LOADING_PUBLIC_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_FINISH_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_GET_HANDLE_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_ID_OR_NAME_MISSING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INIT_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INTERNAL_LIST_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INVALID_ARGUMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>143</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INVALID_CMD_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>137</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INVALID_CMD_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INVALID_INIT_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>151</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_INVALID_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NOT_INITIALISED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NOT_LOADED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_CONTROL_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_INDEX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_LOAD_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_REFERENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_SUCH_ENGINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_NO_UNLOAD_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_PROVIDE_PARAMETERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_RSA_NOT_IMPLEMENTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>141</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_UNIMPLEMENTED_CIPHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>146</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_UNIMPLEMENTED_DIGEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>147</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_UNIMPLEMENTED_PUBLIC_KEY_METHOD<sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENGINE_R_VERSION_INCOMPATIBILITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>145</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/engine.h"/>
  </compounddef>
</doxygen>
