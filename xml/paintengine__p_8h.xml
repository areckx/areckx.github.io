<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="paintengine__p_8h" kind="file" language="C++">
    <compoundname>paintengine_p.h</compoundname>
    <includedby refid="svggenerator_8cpp" local="yes">mscore/svggenerator.cpp</includedby>
    <invincdepgraph>
      <node id="63742">
        <label>mscore/svggenerator.cpp</label>
        <link refid="svggenerator_8cpp_source"/>
      </node>
      <node id="63741">
        <label>mscore/paintengine_p.h</label>
        <link refid="paintengine__p_8h"/>
        <childnode refid="63742" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_q_paint_engine_private" prot="public">QPaintEnginePrivate</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Nokia<sp/>Corporation<sp/>and/or<sp/>its<sp/>subsidiary(-ies).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Contact:<sp/>Nokia<sp/>Corporation<sp/>(qt-info@nokia.com)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>QtGui<sp/>module<sp/>of<sp/>the<sp/>Qt<sp/>Toolkit.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>$QT_BEGIN_LICENSE:LGPL$</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>This<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>License<sp/>version<sp/>2.1<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.LGPL<sp/>included<sp/>in<sp/>the<sp/>packaging<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>file.<sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to<sp/>ensure<sp/>the<sp/>GNU<sp/>Lesser</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2.1<sp/>requirements<sp/>will<sp/>be<sp/>met:</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>In<sp/>addition,<sp/>as<sp/>a<sp/>special<sp/>exception,<sp/>Nokia<sp/>gives<sp/>you<sp/>certain<sp/>additional</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/>rights.<sp/>These<sp/>rights<sp/>are<sp/>described<sp/>in<sp/>the<sp/>Nokia<sp/>Qt<sp/>LGPL<sp/>Exception</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>version<sp/>1.1,<sp/>included<sp/>in<sp/>the<sp/>file<sp/>LGPL_EXCEPTION.txt<sp/>in<sp/>this<sp/>package.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>and<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.GPL<sp/>included<sp/>in<sp/>the<sp/>packaging<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>file.<sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to<sp/>ensure<sp/>the<sp/>GNU<sp/>General</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>requirements<sp/>will<sp/>be<sp/>met:</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/>http://www.gnu.org/copyleft/gpl.html.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>Other<sp/>Usage</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>in<sp/>accordance<sp/>with<sp/>the<sp/>terms<sp/>and</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>conditions<sp/>contained<sp/>in<sp/>a<sp/>signed<sp/>written<sp/>agreement<sp/>between<sp/>you<sp/>and<sp/>Nokia.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/>$QT_END_LICENSE$</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**</highlight></codeline>
<codeline lineno="40"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PAINTENGINE_P_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAINTENGINE_P_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>W<sp/>A<sp/>R<sp/>N<sp/>I<sp/>N<sp/>G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>Qt<sp/>API.<sp/><sp/>It<sp/>exists<sp/>for<sp/>the<sp/>convenience</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>other<sp/>Qt<sp/>classes.<sp/><sp/>This<sp/>header<sp/>file<sp/>may<sp/>change<sp/>from<sp/>version<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>without<sp/>notice,<sp/>or<sp/>even<sp/>be<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>mean<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">QT_BEGIN_NAMESPACE</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QPaintDevice;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_q_paint_engine_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_q_paint_engine_private" kindref="compound">QPaintEnginePrivate</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_DECLARE_PUBLIC(QPaintEngine)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_paint_engine_private" kindref="compound">QPaintEnginePrivate</ref>()<sp/>:<sp/>pdev(0),<sp/>q_ptr(0),<sp/>currentClipWidget(0),<sp/>hasSystemTransform(0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSystemViewport(0)<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_q_paint_engine_private" kindref="compound">QPaintEnginePrivate</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>QPaintDevice<sp/>*pdev;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>QPaintEngine<sp/>*q_ptr;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>systemClip;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>systemRect;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>systemViewport;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>QTransform<sp/>systemTransform;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>QWidget<sp/>*currentClipWidget;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>hasSystemTransform<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>hasSystemViewport<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>transformSystemClip()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(systemClip.isEmpty())</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSystemTransform)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(systemTransform.type()<sp/>&lt;=<sp/>QTransform::TxTranslate)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemClip.translate(qRound(systemTransform.dx()),<sp/>qRound(systemTransform.dy()));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemClip<sp/>=<sp/>systemTransform.map(systemClip);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we&apos;re<sp/>inside<sp/>the<sp/>viewport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSystemViewport)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemClip<sp/>&amp;=<sp/>systemViewport;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(systemClip.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>paint<sp/>without<sp/>system<sp/>clip,<sp/>so<sp/>set<sp/>it<sp/>to<sp/>1<sp/>pixel<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemClip<sp/>=<sp/>QRect(systemViewport.boundingRect().topLeft(),<sp/>QSize(1,<sp/>1));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSystemTransform(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QTransform<sp/>&amp;xform)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemTransform<sp/>=<sp/>xform;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hasSystemTransform<sp/>=<sp/>!xform.isIdentity())<sp/>||<sp/>hasSystemViewport)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformSystemClip();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemStateChanged();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSystemViewport(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemViewport<sp/>=<sp/>region;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSystemViewport<sp/>=<sp/>!systemViewport.isEmpty();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>systemStateChanged()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawBoxTextItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QTextItemInt<sp/>&amp;ti);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">QT_END_NAMESPACE</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QPAINTENGINE_P_H</highlight></codeline>
    </programlisting>
    <location file="mscore/paintengine_p.h"/>
  </compounddef>
</doxygen>
