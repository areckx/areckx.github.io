<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_flate_encoder_8cc" kind="file" language="C++">
    <compoundname>FlateEncoder.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="_flate_encoder_8h" local="yes">FlateEncoder.h</includes>
    <incdepgraph>
      <node id="86804">
        <label>stdarg.h</label>
      </node>
      <node id="86791">
        <label>FlateEncoder.h</label>
        <link refid="_flate_encoder_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86793" relation="include">
        </childnode>
        <childnode refid="86794" relation="include">
        </childnode>
        <childnode refid="86795" relation="include">
        </childnode>
        <childnode refid="86796" relation="include">
        </childnode>
        <childnode refid="86797" relation="include">
        </childnode>
        <childnode refid="86798" relation="include">
        </childnode>
        <childnode refid="86799" relation="include">
        </childnode>
        <childnode refid="86803" relation="include">
        </childnode>
        <childnode refid="86807" relation="include">
        </childnode>
        <childnode refid="86815" relation="include">
        </childnode>
        <childnode refid="86814" relation="include">
        </childnode>
        <childnode refid="86816" relation="include">
        </childnode>
      </node>
      <node id="86789">
        <label>thirdparty/poppler/poppler/FlateEncoder.cc</label>
        <link refid="_flate_encoder_8cc"/>
        <childnode refid="86790" relation="include">
        </childnode>
        <childnode refid="86791" relation="include">
        </childnode>
      </node>
      <node id="86799">
        <label>goo/gfile.h</label>
        <link refid="gfile_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86793" relation="include">
        </childnode>
        <childnode refid="86794" relation="include">
        </childnode>
        <childnode refid="86795" relation="include">
        </childnode>
        <childnode refid="86800" relation="include">
        </childnode>
        <childnode refid="86801" relation="include">
        </childnode>
        <childnode refid="86802" relation="include">
        </childnode>
      </node>
      <node id="86794">
        <label>stdlib.h</label>
      </node>
      <node id="86798">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="86793" relation="include">
        </childnode>
        <childnode refid="86792" relation="include">
        </childnode>
      </node>
      <node id="86810">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86807" relation="include">
        </childnode>
        <childnode refid="86811" relation="include">
        </childnode>
      </node>
      <node id="86803">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="86804" relation="include">
        </childnode>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86802" relation="include">
        </childnode>
        <childnode refid="86805" relation="include">
        </childnode>
      </node>
      <node id="86816">
        <label>zlib.h</label>
        <link refid="zlib_8h_source"/>
        <childnode refid="86817" relation="include">
        </childnode>
      </node>
      <node id="86815">
        <label>Decrypt.h</label>
        <link refid="_decrypt_8h_source"/>
        <childnode refid="86802" relation="include">
        </childnode>
        <childnode refid="86805" relation="include">
        </childnode>
        <childnode refid="86807" relation="include">
        </childnode>
        <childnode refid="86814" relation="include">
        </childnode>
      </node>
      <node id="86813">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86807" relation="include">
        </childnode>
        <childnode refid="86811" relation="include">
        </childnode>
      </node>
      <node id="86795">
        <label>stddef.h</label>
      </node>
      <node id="86806">
        <label>limits.h</label>
      </node>
      <node id="86792">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="86793" relation="include">
        </childnode>
      </node>
      <node id="86809">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="86814">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
        <childnode refid="86793" relation="include">
        </childnode>
        <childnode refid="86802" relation="include">
        </childnode>
        <childnode refid="86807" relation="include">
        </childnode>
        <childnode refid="86811" relation="include">
        </childnode>
      </node>
      <node id="86812">
        <label>pthread.h</label>
      </node>
      <node id="86801">
        <label>sys/types.h</label>
      </node>
      <node id="86796">
        <label>string.h</label>
      </node>
      <node id="86805">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="86806" relation="include">
        </childnode>
        <childnode refid="86804" relation="include">
        </childnode>
        <childnode refid="86794" relation="include">
        </childnode>
        <childnode refid="86802" relation="include">
        </childnode>
      </node>
      <node id="86807">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="86808" relation="include">
        </childnode>
        <childnode refid="86793" relation="include">
        </childnode>
        <childnode refid="86796" relation="include">
        </childnode>
        <childnode refid="86802" relation="include">
        </childnode>
        <childnode refid="86798" relation="include">
        </childnode>
        <childnode refid="86805" relation="include">
        </childnode>
        <childnode refid="86809" relation="include">
        </childnode>
        <childnode refid="86803" relation="include">
        </childnode>
        <childnode refid="86810" relation="include">
        </childnode>
        <childnode refid="86813" relation="include">
        </childnode>
        <childnode refid="86814" relation="include">
        </childnode>
      </node>
      <node id="86800">
        <label>unistd.h</label>
      </node>
      <node id="86817">
        <label>zconf.h</label>
        <link refid="zconf_8h_source"/>
      </node>
      <node id="86811">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="86812" relation="include">
        </childnode>
      </node>
      <node id="86797">
        <label>ctype.h</label>
      </node>
      <node id="86802">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="86792" relation="include">
        </childnode>
      </node>
      <node id="86808">
        <label>set</label>
      </node>
      <node id="86790">
        <label>config.h</label>
      </node>
      <node id="86793">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FlateEncoder.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2016,<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>under<sp/>the<sp/>GPLv2<sp/>or<sp/>later<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FlateEncoder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FlateEncoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">FlateEncoder::FlateEncoder(<ref refid="class_stream" kindref="compound">Stream</ref><sp/>*strA):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_filter_stream" kindref="compound">FilterStream</ref>(strA)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zlib_status;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>outBufPtr<sp/>=<sp/>outBufEnd<sp/>=<sp/>outBuf;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>inBufEof<sp/>=<sp/>outBufEof<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>zlib_stream.zalloc<sp/>=<sp/>Z_NULL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>zlib_stream.zfree<sp/>=<sp/>Z_NULL;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>zlib_stream.opaque<sp/>=<sp/>Z_NULL;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>zlib_status<sp/>=<sp/>deflateInit(&amp;zlib_stream,<sp/>Z_DEFAULT_COMPRESSION);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zlib_status<sp/>!=<sp/>Z_OK)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>inBufEof<sp/>=<sp/>outBufEof<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Internal:<sp/>deflateInit()<sp/>failed<sp/>in<sp/>FlateEncoder::FlateEncoder()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>zlib_stream.next_out<sp/>=<sp/>outBufEnd;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>zlib_stream.avail_out<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>anything<sp/>but<sp/>0<sp/>to<sp/>trigger<sp/>a<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">FlateEncoder::~FlateEncoder()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>deflateEnd(&amp;zlib_stream);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str-&gt;isEncoder())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlateEncoder::reset()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zlib_status;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>str-&gt;reset();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>outBufPtr<sp/>=<sp/>outBufEnd<sp/>=<sp/>outBuf;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>inBufEof<sp/>=<sp/>outBufEof<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>deflateEnd(&amp;zlib_stream);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>zlib_status<sp/>=<sp/>deflateInit(&amp;zlib_stream,<sp/>Z_DEFAULT_COMPRESSION);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zlib_status<sp/>!=<sp/>Z_OK)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>inBufEof<sp/>=<sp/>outBufEof<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Internal:<sp/>deflateInit()<sp/>failed<sp/>in<sp/>FlateEncoder::reset()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>zlib_stream.next_out<sp/>=<sp/>outBufEnd;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>zlib_stream.avail_out<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>anything<sp/>but<sp/>0<sp/>to<sp/>trigger<sp/>a<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">GBool<sp/>FlateEncoder::fillBuf()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_avail_out;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zlib_status;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>output<sp/>is<sp/>done,<sp/>don&apos;t<sp/>try<sp/>to<sp/>read<sp/>more.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outBufEof)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>output<sp/>buffer<sp/>should<sp/>be<sp/>empty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>it<sp/>is<sp/>not<sp/>empty,<sp/>push<sp/>any<sp/>processed<sp/>data<sp/>to<sp/>the<sp/>start.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outBufPtr<sp/>&gt;<sp/>outBuf<sp/>&amp;&amp;<sp/>outBufPtr<sp/>&lt;<sp/>outBufEnd)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>outBufEnd<sp/>-<sp/>outBufPtr;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(outBuf,<sp/>outBufPtr,<sp/>n);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>outBufEnd<sp/>=<sp/>&amp;outBuf[n];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>outBufEnd<sp/>=<sp/>outBuf;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>outBufPtr<sp/>=<sp/>outBuf;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>feeding<sp/>zlib<sp/>until<sp/>we<sp/>get<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>zlib<sp/>might<sp/>consume<sp/>a<sp/>few<sp/>input<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>before<sp/>it<sp/>starts<sp/>producing<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avail_out<sp/>&gt;<sp/>0<sp/>means<sp/>that<sp/>zlib<sp/>has<sp/>depleted<sp/>its<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>needs<sp/>a<sp/>new<sp/>chunk<sp/>of<sp/>input<sp/>in<sp/>order<sp/>to<sp/>generate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>more<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zlib_stream.avail_out<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>the<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(inBufEof?<sp/>0:<sp/>str-&gt;doGetChars(inBufSize,<sp/>inBuf));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>inBufEof<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zlib_stream.next_in<sp/>=<sp/>inBuf;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zlib_stream.avail_in<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ask<sp/>zlib<sp/>for<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>zlib_stream.next_out<sp/>=<sp/>outBufEnd;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>starting_avail_out<sp/>=<sp/>&amp;outBuf[<sp/>outBufSize<sp/>]<sp/>-<sp/>outBufEnd;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>zlib_stream.avail_out<sp/>=<sp/>starting_avail_out;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>zlib_status<sp/>=<sp/>deflate(&amp;zlib_stream,<sp/>(inBufEof?<sp/>Z_FINISH:<sp/>Z_NO_FLUSH));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zlib_status<sp/>==<sp/>Z_STREAM_ERROR<sp/>||</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zlib_stream.avail_out<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zlib_stream.avail_out<sp/>&gt;<sp/>starting_avail_out)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unrecoverable<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inBufEof<sp/>=<sp/>outBufEof<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Internal:<sp/>deflate()<sp/>failed<sp/>in<sp/>FlateEncoder::fillBuf()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(zlib_stream.avail_out<sp/>==<sp/>outBufSize<sp/>&amp;&amp;<sp/>!inBufEof);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>outBufEnd<sp/>=<sp/>&amp;outBuf[<sp/>outBufSize<sp/>]<sp/>-<sp/>zlib_stream.avail_out;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inBufEof<sp/>&amp;&amp;<sp/>zlib_stream.avail_out<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>outBufEof<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outBufPtr<sp/>&lt;<sp/>outBufEnd;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/FlateEncoder.cc"/>
  </compounddef>
</doxygen>
