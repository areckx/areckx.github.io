<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_sig_event" kind="class" language="C++" prot="public">
    <compoundname>Ms::SigEvent</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_sig_event_1ab5ba35785ddea4b4c758bb343a6ba4ea" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_time_sig_frac" kindref="compound">TimeSigFrac</ref></type>
        <definition>TimeSigFrac Ms::SigEvent::_timesig</definition>
        <argsstring></argsstring>
        <name>_timesig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="96" column="1" bodyfile="libmscore/sig.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_sig_event_1adf245d3d669ca6c092f66b8ea162656d" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_time_sig_frac" kindref="compound">TimeSigFrac</ref></type>
        <definition>TimeSigFrac Ms::SigEvent::_nominal</definition>
        <argsstring></argsstring>
        <name>_nominal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="97" column="1" bodyfile="libmscore/sig.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_sig_event_1a408e12730c973c9f9f1cae617d51ae38" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::SigEvent::_bar</definition>
        <argsstring></argsstring>
        <name>_bar</name>
        <briefdescription>
<para>precomputed value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="98" column="1" bodyfile="libmscore/sig.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_sig_event_1aaacc0b884833ce4256ed440e7e0c10d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::SigEvent::read</definition>
        <argsstring>(XmlReader &amp;, int fileDivision)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <param>
          <type>int</type>
          <declname>fileDivision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="101" column="1" bodyfile="libmscore/sig.cpp" bodystart="407" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1ada3dd993d95ac7a219b16b243292f30e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SigEvent::write</definition>
        <argsstring>(XmlWriter &amp;, int) const</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <param>
          <type>int</type>
          <defname>tick</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="102" column="1" bodyfile="libmscore/sig.cpp" bodystart="395" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a73457bf596807fa02b0d0e5ee41b27b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Ms::SigEvent::SigEvent</definition>
        <argsstring>()</argsstring>
        <name>SigEvent</name>
        <briefdescription>
<para>default <ref refid="class_ms_1_1_sig_event" kindref="compound">SigEvent</ref> is invalid </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="104" column="1" bodyfile="libmscore/sig.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a28344c9fc5fc314e7509723dc7b2f20a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::SigEvent::SigEvent</definition>
        <argsstring>(const Fraction &amp;s, int bar=0)</argsstring>
        <name>SigEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bar</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="105" column="1" bodyfile="libmscore/sig.h" bodystart="105" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1ab334ed1adf57a9f0ae9ed074bc55b88a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::SigEvent::SigEvent</definition>
        <argsstring>(const Fraction &amp;s, const Fraction &amp;ss, int bar=0)</argsstring>
        <name>SigEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>ss</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bar</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="107" column="1" bodyfile="libmscore/sig.h" bodystart="107" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a484db5195a65d8e09d0578bafc8bdf54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::SigEvent::SigEvent</definition>
        <argsstring>(const SigEvent &amp;e)</argsstring>
        <name>SigEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_sig_event" kindref="compound">SigEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="109" column="1" bodyfile="libmscore/sig.cpp" bodystart="384" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a5b67b92381f85dc6e991984f706702f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::SigEvent::operator==</definition>
        <argsstring>(const SigEvent &amp;e) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_sig_event" kindref="compound">SigEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="111" column="1" bodyfile="libmscore/sig.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a272ab9dcaa8cdbf8827992692612802d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::SigEvent::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="112" column="1" bodyfile="libmscore/sig.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1ade6c3dc320cf871dffb5ac106d027947" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::SigEvent::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="113" column="1" bodyfile="libmscore/sig.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1abee5940c196ff0d86e99a07c53c47e85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_time_sig_frac" kindref="compound">TimeSigFrac</ref></type>
        <definition>TimeSigFrac Ms::SigEvent::timesig</definition>
        <argsstring>() const</argsstring>
        <name>timesig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="114" column="1" bodyfile="libmscore/sig.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a2c69ec55023fadeede2bb10cdcbfba9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_time_sig_frac" kindref="compound">TimeSigFrac</ref></type>
        <definition>TimeSigFrac Ms::SigEvent::nominal</definition>
        <argsstring>() const</argsstring>
        <name>nominal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="115" column="1" bodyfile="libmscore/sig.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a14b128555b3f95c6cd8bf7eec05b732c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SigEvent::setNominal</definition>
        <argsstring>(const Fraction &amp;f)</argsstring>
        <name>setNominal</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="116" column="1" bodyfile="libmscore/sig.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a6a1dc8f6dbdaa48be7a7e50691f79c95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::SigEvent::bar</definition>
        <argsstring>() const</argsstring>
        <name>bar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="117" column="1" bodyfile="libmscore/sig.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_sig_event_1a6de1f1713f3081e6f4557c211d2e8366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::SigEvent::setBar</definition>
        <argsstring>(int val)</argsstring>
        <name>setBar</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/sig.h" line="118" column="1" bodyfile="libmscore/sig.h" bodystart="118" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/sig.h" line="95" column="1" bodyfile="libmscore/sig.h" bodystart="95" bodyend="119"/>
    <listofallmembers>
      <member refid="class_ms_1_1_sig_event_1a408e12730c973c9f9f1cae617d51ae38" prot="private" virt="non-virtual"><scope>Ms::SigEvent</scope><name>_bar</name></member>
      <member refid="class_ms_1_1_sig_event_1adf245d3d669ca6c092f66b8ea162656d" prot="private" virt="non-virtual"><scope>Ms::SigEvent</scope><name>_nominal</name></member>
      <member refid="class_ms_1_1_sig_event_1ab5ba35785ddea4b4c758bb343a6ba4ea" prot="private" virt="non-virtual"><scope>Ms::SigEvent</scope><name>_timesig</name></member>
      <member refid="class_ms_1_1_sig_event_1a6a1dc8f6dbdaa48be7a7e50691f79c95" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>bar</name></member>
      <member refid="class_ms_1_1_sig_event_1a2c69ec55023fadeede2bb10cdcbfba9e" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>nominal</name></member>
      <member refid="class_ms_1_1_sig_event_1a5b67b92381f85dc6e991984f706702f5" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_sig_event_1ade6c3dc320cf871dffb5ac106d027947" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>print</name></member>
      <member refid="class_ms_1_1_sig_event_1aaacc0b884833ce4256ed440e7e0c10d1" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>read</name></member>
      <member refid="class_ms_1_1_sig_event_1a6de1f1713f3081e6f4557c211d2e8366" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>setBar</name></member>
      <member refid="class_ms_1_1_sig_event_1a14b128555b3f95c6cd8bf7eec05b732c" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>setNominal</name></member>
      <member refid="class_ms_1_1_sig_event_1a73457bf596807fa02b0d0e5ee41b27b6" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>SigEvent</name></member>
      <member refid="class_ms_1_1_sig_event_1a28344c9fc5fc314e7509723dc7b2f20a" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>SigEvent</name></member>
      <member refid="class_ms_1_1_sig_event_1ab334ed1adf57a9f0ae9ed074bc55b88a" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>SigEvent</name></member>
      <member refid="class_ms_1_1_sig_event_1a484db5195a65d8e09d0578bafc8bdf54" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>SigEvent</name></member>
      <member refid="class_ms_1_1_sig_event_1abee5940c196ff0d86e99a07c53c47e85" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>timesig</name></member>
      <member refid="class_ms_1_1_sig_event_1a272ab9dcaa8cdbf8827992692612802d" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>valid</name></member>
      <member refid="class_ms_1_1_sig_event_1ada3dd993d95ac7a219b16b243292f30e" prot="public" virt="non-virtual"><scope>Ms::SigEvent</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
