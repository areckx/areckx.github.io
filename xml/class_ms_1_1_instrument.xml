<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_instrument" kind="class" language="C++" prot="public">
    <compoundname>Ms::Instrument</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a3cb5223999e0fdcef5d68c628755ea1e" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_staff_name_list" kindref="compound">StaffNameList</ref></type>
        <definition>StaffNameList Ms::Instrument::_longNames</definition>
        <argsstring></argsstring>
        <name>_longNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="134" column="1" bodyfile="libmscore/instrument.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a8996813624d27837891d8b977b57ba2d" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_staff_name_list" kindref="compound">StaffNameList</ref></type>
        <definition>StaffNameList Ms::Instrument::_shortNames</definition>
        <argsstring></argsstring>
        <name>_shortNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="135" column="1" bodyfile="libmscore/instrument.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a1357081a5c35fc332264fdb3d8091ea1" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Instrument::_trackName</definition>
        <argsstring></argsstring>
        <name>_trackName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="136" column="1" bodyfile="libmscore/instrument.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a8816abd01b707804e43ad457362c8475" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Instrument::_minPitchA</definition>
        <argsstring></argsstring>
        <name>_minPitchA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="138" column="1" bodyfile="libmscore/instrument.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aa46380eaf2aea7b04d39cf38f7f4d43a" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Instrument::_maxPitchA</definition>
        <argsstring></argsstring>
        <name>_maxPitchA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="138" column="1" bodyfile="libmscore/instrument.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aab65a2b4426f303f2ad139ccb40ee1fa" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Instrument::_minPitchP</definition>
        <argsstring></argsstring>
        <name>_minPitchP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="138" column="1" bodyfile="libmscore/instrument.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a622a4288ee532710538ecffa7a125d95" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Instrument::_maxPitchP</definition>
        <argsstring></argsstring>
        <name>_maxPitchP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="138" column="1" bodyfile="libmscore/instrument.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aad067956c7ac22dae3d71e15555be181" prot="private" static="no" mutable="no">
        <type><ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref></type>
        <definition>Interval Ms::Instrument::_transpose</definition>
        <argsstring></argsstring>
        <name>_transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="139" column="1" bodyfile="libmscore/instrument.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1ade891452f15073b4a465f01978769cca" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Instrument::_instrumentId</definition>
        <argsstring></argsstring>
        <name>_instrumentId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="140" column="1" bodyfile="libmscore/instrument.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a96949db5a1edcd04dd644478f5db92d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Instrument::_useDrumset</definition>
        <argsstring></argsstring>
        <name>_useDrumset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="142" column="1" bodyfile="libmscore/instrument.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aad092ba47eb06e1d75e6c03d29e13cd8" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_drumset" kindref="compound">Drumset</ref> *</type>
        <definition>Drumset* Ms::Instrument::_drumset</definition>
        <argsstring></argsstring>
        <name>_drumset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="143" column="1" bodyfile="libmscore/instrument.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1a4374b6fbfad4a0d7767319acc66736f5" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_string_data" kindref="compound">StringData</ref></type>
        <definition>StringData Ms::Instrument::_stringData</definition>
        <argsstring></argsstring>
        <name>_stringData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="144" column="1" bodyfile="libmscore/instrument.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1ac5c07717fd240588bca2583f7380e9d3" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_named_event_list" kindref="compound">NamedEventList</ref> &gt;</type>
        <definition>QList&lt;NamedEventList&gt; Ms::Instrument::_midiActions</definition>
        <argsstring></argsstring>
        <name>_midiActions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="146" column="1" bodyfile="libmscore/instrument.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1ac0ecfd0ac53c2d8a0f9f95af6d22e5d4" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_midi_articulation" kindref="compound">MidiArticulation</ref> &gt;</type>
        <definition>QList&lt;MidiArticulation&gt; Ms::Instrument::_articulation</definition>
        <argsstring></argsstring>
        <name>_articulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="147" column="1" bodyfile="libmscore/instrument.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aa91e3cfba9e728a9b655130c4530576f" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_channel" kindref="compound">Channel</ref> * &gt;</type>
        <definition>QList&lt;Channel*&gt; Ms::Instrument::_channel</definition>
        <argsstring></argsstring>
        <name>_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="148" column="1" bodyfile="libmscore/instrument.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_instrument_1aab5eb9d170fdedae06075b4675f3dfaf" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_clef_type_list" kindref="compound">ClefTypeList</ref> &gt;</type>
        <definition>QList&lt;ClefTypeList&gt; Ms::Instrument::_clefType</definition>
        <argsstring></argsstring>
        <name>_clefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="149" column="1" bodyfile="libmscore/instrument.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_instrument_1a1c7b4bbce5c8ca36a89c33b853b6d805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Instrument::Instrument</definition>
        <argsstring>()</argsstring>
        <name>Instrument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="152" column="1" bodyfile="libmscore/instrument.cpp" bodystart="84" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ada9dc7b0257938a9ccfd99ed63548005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Instrument::Instrument</definition>
        <argsstring>(const Instrument &amp;)</argsstring>
        <name>Instrument</name>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument" kindref="compound">Instrument</ref> &amp;</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="153" column="1" bodyfile="libmscore/instrument.cpp" bodystart="98" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a6ad444f145ae2b79709286b864cd3447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::operator=</definition>
        <argsstring>(const Instrument &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument" kindref="compound">Instrument</ref> &amp;</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="154" column="1" bodyfile="libmscore/instrument.cpp" bodystart="121" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ac81836757ba5b27cf3fdf9765d9bc5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Instrument::~Instrument</definition>
        <argsstring>()</argsstring>
        <name>~Instrument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="155" column="1" bodyfile="libmscore/instrument.cpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a5ce412e4f90eee152d242bfbdec55951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::read</definition>
        <argsstring>(XmlReader &amp;, Part *part)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="157" column="1" bodyfile="libmscore/instrument.cpp" bodystart="255" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1af228740167f18fa0615dfde9c03ab108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Instrument::readProperties</definition>
        <argsstring>(XmlReader &amp;, Part *, bool *customDrumset)</argsstring>
        <name>readProperties</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <param>
          <type>bool *</type>
          <declname>customDrumset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="158" column="1" bodyfile="libmscore/instrument.cpp" bodystart="275" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a6e1df7f82c4eaa0eb998922e6d2ea985" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::write</definition>
        <argsstring>(XmlWriter &amp;xml, Part *part) const</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="159" column="1" bodyfile="libmscore/instrument.cpp" bodystart="190" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a9be864c62f7d12f938292d5e8276e0db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_named_event_list" kindref="compound">NamedEventList</ref> *</type>
        <definition>NamedEventList * Ms::Instrument::midiAction</definition>
        <argsstring>(const QString &amp;s, int channel) const</argsstring>
        <name>midiAction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="160" column="1" bodyfile="libmscore/instrument.cpp" bodystart="376" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aed7d2c00f36a4176f098e1fedcc8e77d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Instrument::channelIdx</definition>
        <argsstring>(const QString &amp;s) const</argsstring>
        <name>channelIdx</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="161" column="1" bodyfile="libmscore/instrument.cpp" bodystart="597" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a2aebe9753c44e5080dc94f3b7fb3043e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::updateVelocity</definition>
        <argsstring>(int *velocity, int channel, const QString &amp;name)</argsstring>
        <name>updateVelocity</name>
        <param>
          <type>int *</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="162" column="1" bodyfile="libmscore/instrument.cpp" bodystart="659" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ad4f5fc0cc1cfa2bcea6ace19849c22ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::updateGateTime</definition>
        <argsstring>(int *gateTime, int channelIdx, const QString &amp;name)</argsstring>
        <name>updateGateTime</name>
        <param>
          <type>int *</type>
          <declname>gateTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channelIdx</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="163" column="1" bodyfile="libmscore/instrument.cpp" bodystart="673" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a0963f1462e91f210f52edf6238afa3d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Instrument::operator==</definition>
        <argsstring>(const Instrument &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument" kindref="compound">Instrument</ref> &amp;</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="165" column="1" bodyfile="libmscore/instrument.cpp" bodystart="687" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a8b5342b40efb77e2ab3c13314d2d988d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setMinPitchP</definition>
        <argsstring>(int v)</argsstring>
        <name>setMinPitchP</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="167" column="1" bodyfile="libmscore/instrument.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a377c095d03aaf7ade23d413ee8b1eb41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setMaxPitchP</definition>
        <argsstring>(int v)</argsstring>
        <name>setMaxPitchP</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="168" column="1" bodyfile="libmscore/instrument.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ad0f624488e8d22d885b5b71a7128b36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setMinPitchA</definition>
        <argsstring>(int v)</argsstring>
        <name>setMinPitchA</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="169" column="1" bodyfile="libmscore/instrument.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aca547d29d2726faa4f66b8807d823c75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setMaxPitchA</definition>
        <argsstring>(int v)</argsstring>
        <name>setMaxPitchA</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="170" column="1" bodyfile="libmscore/instrument.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aa79b017182d2d76a2d398a56c038b3fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref></type>
        <definition>Interval Ms::Instrument::transpose</definition>
        <argsstring>() const</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="171" column="1" bodyfile="libmscore/instrument.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aebf5fe12b5d95b1fe14cc9eeded4ebeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setTranspose</definition>
        <argsstring>(const Interval &amp;v)</argsstring>
        <name>setTranspose</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="172" column="1" bodyfile="libmscore/instrument.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aa4cc1131c5ee048a6e16897cbb7c2a13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Instrument::instrumentId</definition>
        <argsstring>()</argsstring>
        <name>instrumentId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="173" column="1" bodyfile="libmscore/instrument.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a0422ca02ce2b78387f5a31dc74bb4bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setInstrumentId</definition>
        <argsstring>(const QString &amp;instrumentId)</argsstring>
        <name>setInstrumentId</name>
        <param>
          <type>const QString &amp;</type>
          <declname>instrumentId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="174" column="1" bodyfile="libmscore/instrument.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a8d1568b455350500327acd25dfd89e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setDrumset</definition>
        <argsstring>(const Drumset *ds)</argsstring>
        <name>setDrumset</name>
        <param>
          <type>const <ref refid="class_ms_1_1_drumset" kindref="compound">Drumset</ref> *</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="176" column="1" bodyfile="libmscore/instrument.cpp" bodystart="742" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ac377dcee9176d06151474454b0f3c265" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_drumset" kindref="compound">Drumset</ref> *</type>
        <definition>const Drumset* Ms::Instrument::drumset</definition>
        <argsstring>() const</argsstring>
        <name>drumset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="177" column="1" bodyfile="libmscore/instrument.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a3a0e52aa4b075f5bdc9510f8306c95bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_drumset" kindref="compound">Drumset</ref> *</type>
        <definition>Drumset* Ms::Instrument::drumset</definition>
        <argsstring>()</argsstring>
        <name>drumset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="178" column="1" bodyfile="libmscore/instrument.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a1632d4bf3af6b96e024ae13be290099d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Instrument::useDrumset</definition>
        <argsstring>() const</argsstring>
        <name>useDrumset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="179" column="1" bodyfile="libmscore/instrument.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a1de09574c7bb06120e1d7515fe01da4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setUseDrumset</definition>
        <argsstring>(bool val)</argsstring>
        <name>setUseDrumset</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="180" column="1" bodyfile="libmscore/instrument.cpp" bodystart="731" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aedea38a9f0a91615e42f5ed1d7f5399d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setAmateurPitchRange</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>setAmateurPitchRange</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="181" column="1" bodyfile="libmscore/instrument.h" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a91946d203c2bc1a2e0ca3fd5e82ce5f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setProfessionalPitchRange</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>setProfessionalPitchRange</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="182" column="1" bodyfile="libmscore/instrument.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aa4f0203241ae16e4b0b036a17758a00a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_channel" kindref="compound">Channel</ref> *</type>
        <definition>Channel* Ms::Instrument::channel</definition>
        <argsstring>(int idx)</argsstring>
        <name>channel</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="183" column="1" bodyfile="libmscore/instrument.h" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ac12e47a107a3ef2d95757d99c0967411" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_ms_1_1_channel" kindref="compound">Channel</ref> *</type>
        <definition>const Channel* Ms::Instrument::channel</definition>
        <argsstring>(int idx) const</argsstring>
        <name>channel</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="184" column="1" bodyfile="libmscore/instrument.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a32a720606d9b468ca7c5ddd5ff12bf13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_clef_type_list" kindref="compound">ClefTypeList</ref></type>
        <definition>ClefTypeList Ms::Instrument::clefType</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>clefType</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="185" column="1" bodyfile="libmscore/instrument.cpp" bodystart="801" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a238574689702903909650b8b1cb08f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setClefType</definition>
        <argsstring>(int staffIdx, const ClefTypeList &amp;c)</argsstring>
        <name>setClefType</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>const <ref refid="struct_ms_1_1_clef_type_list" kindref="compound">ClefTypeList</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="186" column="1" bodyfile="libmscore/instrument.cpp" bodystart="815" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a00b44e7232b9cc810fd3becc7bf96c22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="struct_ms_1_1_named_event_list" kindref="compound">NamedEventList</ref> &gt; &amp;</type>
        <definition>const QList&lt;NamedEventList&gt;&amp; Ms::Instrument::midiActions</definition>
        <argsstring>() const</argsstring>
        <name>midiActions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="188" column="1" bodyfile="libmscore/instrument.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a370e641cf45c27a5b61c941ff710eed1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="struct_ms_1_1_midi_articulation" kindref="compound">MidiArticulation</ref> &gt; &amp;</type>
        <definition>const QList&lt;MidiArticulation&gt;&amp; Ms::Instrument::articulation</definition>
        <argsstring>() const</argsstring>
        <name>articulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="189" column="1" bodyfile="libmscore/instrument.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a186a430816fe22e7a3a0fe4fcc21467e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="struct_ms_1_1_channel" kindref="compound">Channel</ref> * &gt; &amp;</type>
        <definition>const QList&lt;Channel*&gt;&amp; Ms::Instrument::channel</definition>
        <argsstring>() const</argsstring>
        <name>channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="191" column="1" bodyfile="libmscore/instrument.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aaec70bfa6c33bac938ff13ac6c28f06f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::appendChannel</definition>
        <argsstring>(Channel *c)</argsstring>
        <name>appendChannel</name>
        <param>
          <type><ref refid="struct_ms_1_1_channel" kindref="compound">Channel</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="192" column="1" bodyfile="libmscore/instrument.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1ab55a4ff72eff8ca506c07178a962a243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::clearChannels</definition>
        <argsstring>()</argsstring>
        <name>clearChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="193" column="1" bodyfile="libmscore/instrument.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a5615222c1ec456e28c4bba1dabb53318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setMidiActions</definition>
        <argsstring>(const QList&lt; NamedEventList &gt; &amp;l)</argsstring>
        <name>setMidiActions</name>
        <param>
          <type>const QList&lt; <ref refid="struct_ms_1_1_named_event_list" kindref="compound">NamedEventList</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="195" column="1" bodyfile="libmscore/instrument.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a4b72f2b1b17707258c1bdb4ca472e487" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setArticulation</definition>
        <argsstring>(const QList&lt; MidiArticulation &gt; &amp;l)</argsstring>
        <name>setArticulation</name>
        <param>
          <type>const QList&lt; <ref refid="struct_ms_1_1_midi_articulation" kindref="compound">MidiArticulation</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="196" column="1" bodyfile="libmscore/instrument.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a212a6cb5bd1c9382df7ef53a92f3d9db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_string_data" kindref="compound">StringData</ref> *</type>
        <definition>const StringData* Ms::Instrument::stringData</definition>
        <argsstring>() const</argsstring>
        <name>stringData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="197" column="1" bodyfile="libmscore/instrument.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a2b6c7df74eb8dbd6f1620a1bbcceebcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setStringData</definition>
        <argsstring>(const StringData &amp;d)</argsstring>
        <name>setStringData</name>
        <param>
          <type>const <ref refid="class_ms_1_1_string_data" kindref="compound">StringData</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="198" column="1" bodyfile="libmscore/instrument.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a17d61362f6b893bdb52231a8f52e8b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setLongName</definition>
        <argsstring>(const QString &amp;f)</argsstring>
        <name>setLongName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="200" column="1" bodyfile="libmscore/instrument.cpp" bodystart="760" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aa846ef9cb5d517d6198361bbab3d06ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setShortName</definition>
        <argsstring>(const QString &amp;f)</argsstring>
        <name>setShortName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="201" column="1" bodyfile="libmscore/instrument.cpp" bodystart="772" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1acedf34801efe4c500959f91d996c3600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::addLongName</definition>
        <argsstring>(const StaffName &amp;f)</argsstring>
        <name>addLongName</name>
        <param>
          <type>const <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="203" column="1" bodyfile="libmscore/instrument.cpp" bodystart="783" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1aa1bcbfdb45118ceb7303b00218c95f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::addShortName</definition>
        <argsstring>(const StaffName &amp;f)</argsstring>
        <name>addShortName</name>
        <param>
          <type>const <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="204" column="1" bodyfile="libmscore/instrument.cpp" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a8f4096136b0f823fd6c0def30e51b088" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Instrument::minPitchP</definition>
        <argsstring>() const</argsstring>
        <name>minPitchP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="206" column="1" bodyfile="libmscore/instrument.cpp" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a05bf0214df1736820e37e04dc3686b7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Instrument::maxPitchP</definition>
        <argsstring>() const</argsstring>
        <name>maxPitchP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="207" column="1" bodyfile="libmscore/instrument.cpp" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a73a1bd2424ed4b53d2ed8d41199b99a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Instrument::minPitchA</definition>
        <argsstring>() const</argsstring>
        <name>minPitchA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="208" column="1" bodyfile="libmscore/instrument.cpp" bodystart="844" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a891d3c35b24ac8fb8a414bc4fa2ce01d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Instrument::maxPitchA</definition>
        <argsstring>() const</argsstring>
        <name>maxPitchA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="209" column="1" bodyfile="libmscore/instrument.cpp" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a27153e56433f34c380d6ffb121043aff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Instrument::instrumentId</definition>
        <argsstring>() const</argsstring>
        <name>instrumentId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="210" column="1" bodyfile="libmscore/instrument.cpp" bodystart="862" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a830681075fd99c1aa45d28f95486990e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &gt; &amp;</type>
        <definition>const QList&lt; StaffName &gt; &amp; Ms::Instrument::longNames</definition>
        <argsstring>() const</argsstring>
        <name>longNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="212" column="1" bodyfile="libmscore/instrument.cpp" bodystart="911" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a98587cf1ebaaeb27874429e68bf47ccf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &gt; &amp;</type>
        <definition>const QList&lt; StaffName &gt; &amp; Ms::Instrument::shortNames</definition>
        <argsstring>() const</argsstring>
        <name>shortNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="213" column="1" bodyfile="libmscore/instrument.cpp" bodystart="920" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a985473d44bd902d7566a05f3a8794464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &gt; &amp;</type>
        <definition>QList&lt; StaffName &gt; &amp; Ms::Instrument::longNames</definition>
        <argsstring>()</argsstring>
        <name>longNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="214" column="1" bodyfile="libmscore/instrument.cpp" bodystart="929" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1adb49f3a990d855489a2194414e2e9172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_staff_name" kindref="compound">StaffName</ref> &gt; &amp;</type>
        <definition>QList&lt; StaffName &gt; &amp; Ms::Instrument::shortNames</definition>
        <argsstring>()</argsstring>
        <name>shortNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="216" column="1" bodyfile="libmscore/instrument.cpp" bodystart="938" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a96a6135ca18ef424be2db795d50c6c11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Instrument::trackName</definition>
        <argsstring>() const</argsstring>
        <name>trackName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="217" column="1" bodyfile="libmscore/instrument.cpp" bodystart="947" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_instrument_1a53d05a717400cc25f6e7cabf399b4e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Instrument::setTrackName</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>setTrackName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="218" column="1" bodyfile="libmscore/instrument.cpp" bodystart="952" bodyend="955"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_instrument_1a65d8e0fadc7e6d2b6cd64c37094ed43e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_instrument" kindref="compound">Instrument</ref></type>
        <definition>Instrument Ms::Instrument::fromTemplate</definition>
        <argsstring>(const InstrumentTemplate *t)</argsstring>
        <name>fromTemplate</name>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/instrument.h" line="219" column="1" bodyfile="libmscore/instrument.cpp" bodystart="961" bodyend="984"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/instrument.h" line="133" column="1" bodyfile="libmscore/instrument.h" bodystart="133" bodyend="220"/>
    <listofallmembers>
      <member refid="class_ms_1_1_instrument_1ac0ecfd0ac53c2d8a0f9f95af6d22e5d4" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_articulation</name></member>
      <member refid="class_ms_1_1_instrument_1aa91e3cfba9e728a9b655130c4530576f" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_channel</name></member>
      <member refid="class_ms_1_1_instrument_1aab5eb9d170fdedae06075b4675f3dfaf" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_clefType</name></member>
      <member refid="class_ms_1_1_instrument_1aad092ba47eb06e1d75e6c03d29e13cd8" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_drumset</name></member>
      <member refid="class_ms_1_1_instrument_1ade891452f15073b4a465f01978769cca" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_instrumentId</name></member>
      <member refid="class_ms_1_1_instrument_1a3cb5223999e0fdcef5d68c628755ea1e" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_longNames</name></member>
      <member refid="class_ms_1_1_instrument_1aa46380eaf2aea7b04d39cf38f7f4d43a" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_maxPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1a622a4288ee532710538ecffa7a125d95" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_maxPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1ac5c07717fd240588bca2583f7380e9d3" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_midiActions</name></member>
      <member refid="class_ms_1_1_instrument_1a8816abd01b707804e43ad457362c8475" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_minPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1aab65a2b4426f303f2ad139ccb40ee1fa" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_minPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1a8996813624d27837891d8b977b57ba2d" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_shortNames</name></member>
      <member refid="class_ms_1_1_instrument_1a4374b6fbfad4a0d7767319acc66736f5" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_stringData</name></member>
      <member refid="class_ms_1_1_instrument_1a1357081a5c35fc332264fdb3d8091ea1" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_trackName</name></member>
      <member refid="class_ms_1_1_instrument_1aad067956c7ac22dae3d71e15555be181" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_transpose</name></member>
      <member refid="class_ms_1_1_instrument_1a96949db5a1edcd04dd644478f5db92d0" prot="private" virt="non-virtual"><scope>Ms::Instrument</scope><name>_useDrumset</name></member>
      <member refid="class_ms_1_1_instrument_1acedf34801efe4c500959f91d996c3600" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>addLongName</name></member>
      <member refid="class_ms_1_1_instrument_1aa1bcbfdb45118ceb7303b00218c95f2f" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>addShortName</name></member>
      <member refid="class_ms_1_1_instrument_1aaec70bfa6c33bac938ff13ac6c28f06f" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>appendChannel</name></member>
      <member refid="class_ms_1_1_instrument_1a370e641cf45c27a5b61c941ff710eed1" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>articulation</name></member>
      <member refid="class_ms_1_1_instrument_1aa4f0203241ae16e4b0b036a17758a00a" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>channel</name></member>
      <member refid="class_ms_1_1_instrument_1ac12e47a107a3ef2d95757d99c0967411" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>channel</name></member>
      <member refid="class_ms_1_1_instrument_1a186a430816fe22e7a3a0fe4fcc21467e" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>channel</name></member>
      <member refid="class_ms_1_1_instrument_1aed7d2c00f36a4176f098e1fedcc8e77d" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>channelIdx</name></member>
      <member refid="class_ms_1_1_instrument_1ab55a4ff72eff8ca506c07178a962a243" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>clearChannels</name></member>
      <member refid="class_ms_1_1_instrument_1a32a720606d9b468ca7c5ddd5ff12bf13" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>clefType</name></member>
      <member refid="class_ms_1_1_instrument_1ac377dcee9176d06151474454b0f3c265" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>drumset</name></member>
      <member refid="class_ms_1_1_instrument_1a3a0e52aa4b075f5bdc9510f8306c95bf" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>drumset</name></member>
      <member refid="class_ms_1_1_instrument_1a65d8e0fadc7e6d2b6cd64c37094ed43e" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>fromTemplate</name></member>
      <member refid="class_ms_1_1_instrument_1a1c7b4bbce5c8ca36a89c33b853b6d805" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>Instrument</name></member>
      <member refid="class_ms_1_1_instrument_1ada9dc7b0257938a9ccfd99ed63548005" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>Instrument</name></member>
      <member refid="class_ms_1_1_instrument_1aa4cc1131c5ee048a6e16897cbb7c2a13" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>instrumentId</name></member>
      <member refid="class_ms_1_1_instrument_1a27153e56433f34c380d6ffb121043aff" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>instrumentId</name></member>
      <member refid="class_ms_1_1_instrument_1a830681075fd99c1aa45d28f95486990e" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>longNames</name></member>
      <member refid="class_ms_1_1_instrument_1a985473d44bd902d7566a05f3a8794464" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>longNames</name></member>
      <member refid="class_ms_1_1_instrument_1a891d3c35b24ac8fb8a414bc4fa2ce01d" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>maxPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1a05bf0214df1736820e37e04dc3686b7c" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>maxPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1a9be864c62f7d12f938292d5e8276e0db" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>midiAction</name></member>
      <member refid="class_ms_1_1_instrument_1a00b44e7232b9cc810fd3becc7bf96c22" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>midiActions</name></member>
      <member refid="class_ms_1_1_instrument_1a73a1bd2424ed4b53d2ed8d41199b99a7" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>minPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1a8f4096136b0f823fd6c0def30e51b088" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>minPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1a6ad444f145ae2b79709286b864cd3447" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_instrument_1a0963f1462e91f210f52edf6238afa3d4" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_instrument_1a5ce412e4f90eee152d242bfbdec55951" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>read</name></member>
      <member refid="class_ms_1_1_instrument_1af228740167f18fa0615dfde9c03ab108" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>readProperties</name></member>
      <member refid="class_ms_1_1_instrument_1aedea38a9f0a91615e42f5ed1d7f5399d" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setAmateurPitchRange</name></member>
      <member refid="class_ms_1_1_instrument_1a4b72f2b1b17707258c1bdb4ca472e487" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setArticulation</name></member>
      <member refid="class_ms_1_1_instrument_1a238574689702903909650b8b1cb08f10" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setClefType</name></member>
      <member refid="class_ms_1_1_instrument_1a8d1568b455350500327acd25dfd89e9a" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setDrumset</name></member>
      <member refid="class_ms_1_1_instrument_1a0422ca02ce2b78387f5a31dc74bb4bca" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setInstrumentId</name></member>
      <member refid="class_ms_1_1_instrument_1a17d61362f6b893bdb52231a8f52e8b5b" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setLongName</name></member>
      <member refid="class_ms_1_1_instrument_1aca547d29d2726faa4f66b8807d823c75" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setMaxPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1a377c095d03aaf7ade23d413ee8b1eb41" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setMaxPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1a5615222c1ec456e28c4bba1dabb53318" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setMidiActions</name></member>
      <member refid="class_ms_1_1_instrument_1ad0f624488e8d22d885b5b71a7128b36b" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setMinPitchA</name></member>
      <member refid="class_ms_1_1_instrument_1a8b5342b40efb77e2ab3c13314d2d988d" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setMinPitchP</name></member>
      <member refid="class_ms_1_1_instrument_1a91946d203c2bc1a2e0ca3fd5e82ce5f0" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setProfessionalPitchRange</name></member>
      <member refid="class_ms_1_1_instrument_1aa846ef9cb5d517d6198361bbab3d06ca" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setShortName</name></member>
      <member refid="class_ms_1_1_instrument_1a2b6c7df74eb8dbd6f1620a1bbcceebcd" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setStringData</name></member>
      <member refid="class_ms_1_1_instrument_1a53d05a717400cc25f6e7cabf399b4e68" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setTrackName</name></member>
      <member refid="class_ms_1_1_instrument_1aebf5fe12b5d95b1fe14cc9eeded4ebeb" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setTranspose</name></member>
      <member refid="class_ms_1_1_instrument_1a1de09574c7bb06120e1d7515fe01da4b" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>setUseDrumset</name></member>
      <member refid="class_ms_1_1_instrument_1a98587cf1ebaaeb27874429e68bf47ccf" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>shortNames</name></member>
      <member refid="class_ms_1_1_instrument_1adb49f3a990d855489a2194414e2e9172" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>shortNames</name></member>
      <member refid="class_ms_1_1_instrument_1a212a6cb5bd1c9382df7ef53a92f3d9db" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>stringData</name></member>
      <member refid="class_ms_1_1_instrument_1a96a6135ca18ef424be2db795d50c6c11" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>trackName</name></member>
      <member refid="class_ms_1_1_instrument_1aa79b017182d2d76a2d398a56c038b3fc" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>transpose</name></member>
      <member refid="class_ms_1_1_instrument_1ad4f5fc0cc1cfa2bcea6ace19849c22ee" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>updateGateTime</name></member>
      <member refid="class_ms_1_1_instrument_1a2aebe9753c44e5080dc94f3b7fb3043e" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>updateVelocity</name></member>
      <member refid="class_ms_1_1_instrument_1a1632d4bf3af6b96e024ae13be290099d" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>useDrumset</name></member>
      <member refid="class_ms_1_1_instrument_1a6e1df7f82c4eaa0eb998922e6d2ea985" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>write</name></member>
      <member refid="class_ms_1_1_instrument_1ac81836757ba5b27cf3fdf9765d9bc5ed" prot="public" virt="non-virtual"><scope>Ms::Instrument</scope><name>~Instrument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
