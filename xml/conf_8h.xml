<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="conf_8h" kind="file" language="C++">
    <compoundname>conf.h</compoundname>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="lhash_8h" local="no">openssl/lhash.h</includes>
    <includes refid="stack_8h" local="no">openssl/stack.h</includes>
    <includes refid="safestack_8h" local="no">openssl/safestack.h</includes>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includedby refid="conf__api_8h" local="no">thirdparty/openssl/include/openssl/conf_api.h</includedby>
    <includedby refid="x509v3_8h" local="no">thirdparty/openssl/include/openssl/x509v3.h</includedby>
    <incdepgraph>
      <node id="82417">
        <label>stdarg.h</label>
      </node>
      <node id="82422">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82425">
        <label>stdint.h</label>
      </node>
      <node id="82419">
        <label>stdlib.h</label>
      </node>
      <node id="82413">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82414" relation="include">
        </childnode>
        <childnode refid="82416" relation="include">
        </childnode>
        <childnode refid="82417" relation="include">
        </childnode>
        <childnode refid="82418" relation="include">
        </childnode>
        <childnode refid="82425" relation="include">
        </childnode>
      </node>
      <node id="82420">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82424">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82414" relation="include">
        </childnode>
      </node>
      <node id="82421">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82420" relation="include">
        </childnode>
      </node>
      <node id="82412">
        <label>thirdparty/openssl/include/openssl/conf.h</label>
        <link refid="conf_8h"/>
        <childnode refid="82413" relation="include">
        </childnode>
        <childnode refid="82426" relation="include">
        </childnode>
        <childnode refid="82420" relation="include">
        </childnode>
        <childnode refid="82421" relation="include">
        </childnode>
        <childnode refid="82414" relation="include">
        </childnode>
        <childnode refid="82423" relation="include">
        </childnode>
      </node>
      <node id="82426">
        <label>openssl/lhash.h</label>
        <link refid="lhash_8h_source"/>
        <childnode refid="82414" relation="include">
        </childnode>
        <childnode refid="82416" relation="include">
        </childnode>
        <childnode refid="82413" relation="include">
        </childnode>
      </node>
      <node id="82415">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82414">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82415" relation="include">
        </childnode>
      </node>
      <node id="82416">
        <label>stdio.h</label>
      </node>
      <node id="82423">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82414" relation="include">
        </childnode>
      </node>
      <node id="82418">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82419" relation="include">
        </childnode>
        <childnode refid="82414" relation="include">
        </childnode>
        <childnode refid="82416" relation="include">
        </childnode>
        <childnode refid="82420" relation="include">
        </childnode>
        <childnode refid="82421" relation="include">
        </childnode>
        <childnode refid="82422" relation="include">
        </childnode>
        <childnode refid="82423" relation="include">
        </childnode>
        <childnode refid="82424" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="82431">
        <label>thirdparty/openssl/include/openssl/ts.h</label>
        <link refid="ts_8h_source"/>
      </node>
      <node id="82428">
        <label>thirdparty/openssl/include/openssl/conf_api.h</label>
        <link refid="conf__api_8h_source"/>
      </node>
      <node id="82427">
        <label>thirdparty/openssl/include/openssl/conf.h</label>
        <link refid="conf_8h"/>
        <childnode refid="82428" relation="include">
        </childnode>
        <childnode refid="82429" relation="include">
        </childnode>
      </node>
      <node id="82429">
        <label>thirdparty/openssl/include/openssl/x509v3.h</label>
        <link refid="x509v3_8h_source"/>
        <childnode refid="82430" relation="include">
        </childnode>
        <childnode refid="82431" relation="include">
        </childnode>
      </node>
      <node id="82430">
        <label>thirdparty/openssl/include/openssl/ocsp.h</label>
        <link refid="ocsp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_c_o_n_f___v_a_l_u_e" prot="public">CONF_VALUE</innerclass>
    <innerclass refid="structconf__method__st" prot="public">conf_method_st</innerclass>
    <innerclass refid="structconf__st" prot="public">conf_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="conf_8h_1a32aadf4229e3ae15fb21fd3a1ba5377b" prot="public" static="no">
        <name>CONF_MFLAGS_IGNORE_ERRORS</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="114" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a0ad4076260ae53599e132930119311bf" prot="public" static="no">
        <name>CONF_MFLAGS_IGNORE_RETURN_CODES</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="115" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a610afe719bbfdb863ef8ea77ffaeb4cc" prot="public" static="no">
        <name>CONF_MFLAGS_SILENT</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="116" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a8dc581ae61819370490ab8065f922d3d" prot="public" static="no">
        <name>CONF_MFLAGS_NO_DSO</name>
        <initializer>0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="117" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a903a65859f2e614a19d6731235c09df5" prot="public" static="no">
        <name>CONF_MFLAGS_IGNORE_MISSING_FILE</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="118" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a79da251eb77be78cd4d8e2cf765c4979" prot="public" static="no">
        <name>CONF_MFLAGS_DEFAULT_SECTION</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="119" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a8142e0ff4254643c09099eb8818e00a1" prot="public" static="no">
        <name>NCONF_get_number</name>
        <param><defname>c</defname></param>
        <param><defname>g</defname></param>
        <param><defname>n</defname></param>
        <param><defname>r</defname></param>
        <initializer>NCONF_get_number_e(c,g,n,r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="178" column="10" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a58b2d7e66ae99c3ad1fe761410cbe8ff" prot="public" static="no">
        <name>CONF_F_CONF_DUMP_FP</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="219" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ae939570e42bbfa5ba17c831298afbe3d" prot="public" static="no">
        <name>CONF_F_CONF_LOAD</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="220" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a9ac227378f5667128c4187e5f08b4258" prot="public" static="no">
        <name>CONF_F_CONF_LOAD_BIO</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="221" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ae4ffc37652cc4dd089d4f3bde7daa509" prot="public" static="no">
        <name>CONF_F_CONF_LOAD_FP</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="222" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a537f8032ceddc14ac6173e777a415f65" prot="public" static="no">
        <name>CONF_F_CONF_MODULES_LOAD</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="223" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a21272a8f50b439213cf597b981f9e19a" prot="public" static="no">
        <name>CONF_F_CONF_PARSE_LIST</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="224" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1af410fde9d3a7071b55d785e4496cce4f" prot="public" static="no">
        <name>CONF_F_DEF_LOAD</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="225" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1aa86218980e84cda0023a024534829d07" prot="public" static="no">
        <name>CONF_F_DEF_LOAD_BIO</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="226" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a904ce61745069ab9442fd94f30266225" prot="public" static="no">
        <name>CONF_F_MODULE_INIT</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="227" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a93b16bc6f0c4f237fc1b037d078af3fe" prot="public" static="no">
        <name>CONF_F_MODULE_LOAD_DSO</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="228" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a269bad8347ddb613b2c14c4eaa21abc2" prot="public" static="no">
        <name>CONF_F_MODULE_RUN</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="229" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a6c4e234c1d107a0e13d71c70956590f8" prot="public" static="no">
        <name>CONF_F_NCONF_DUMP_BIO</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="230" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a24b163104dcaa3f995ad99dbe2c09732" prot="public" static="no">
        <name>CONF_F_NCONF_DUMP_FP</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="231" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ac3d167d7bcc8432b18c9a565e6cea612" prot="public" static="no">
        <name>CONF_F_NCONF_GET_NUMBER</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="232" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a8dad55f0ba3e87a3403f71ab53ba5bd3" prot="public" static="no">
        <name>CONF_F_NCONF_GET_NUMBER_E</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="233" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a8a268a0fb8ac3f9afad1e148632c1584" prot="public" static="no">
        <name>CONF_F_NCONF_GET_SECTION</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="234" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a94f6fc0aa0a18a5c541ec99bc3330b7d" prot="public" static="no">
        <name>CONF_F_NCONF_GET_STRING</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="235" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a43bd8e7987692714a49f727bd0f0b2a1" prot="public" static="no">
        <name>CONF_F_NCONF_LOAD</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="236" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a25e1f86f45662bb3c31c82c086d57c7b" prot="public" static="no">
        <name>CONF_F_NCONF_LOAD_BIO</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="237" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1af4d4221074485d7949c93481cb99fdc2" prot="public" static="no">
        <name>CONF_F_NCONF_LOAD_FP</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="238" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1aaa34a7a90fc6e88e922ce53804f0636b" prot="public" static="no">
        <name>CONF_F_NCONF_NEW</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="239" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a1857b238758d02e5419603540b2a03e4" prot="public" static="no">
        <name>CONF_F_STR_COPY</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="240" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a0b2b66a4365ef84e92abeea411cfa8ad" prot="public" static="no">
        <name>CONF_R_ERROR_LOADING_DSO</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="243" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a9ba7a1e5ff6b2241e5da456b78839179" prot="public" static="no">
        <name>CONF_R_LIST_CANNOT_BE_NULL</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="244" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a7edfce6fb888aad1177759470e5eff51" prot="public" static="no">
        <name>CONF_R_MISSING_CLOSE_SQUARE_BRACKET</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="245" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a9c3d8cde4634f739900452c6b3d4458f" prot="public" static="no">
        <name>CONF_R_MISSING_EQUAL_SIGN</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="246" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1adb8a0490b09c94fe5486c1b43e7f1f5f" prot="public" static="no">
        <name>CONF_R_MISSING_FINISH_FUNCTION</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="247" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a5c725050d0347fe2be11890eda7c3ea4" prot="public" static="no">
        <name>CONF_R_MISSING_INIT_FUNCTION</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="248" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a2c63770441b750cf1c6d57d9917e5604" prot="public" static="no">
        <name>CONF_R_MODULE_INITIALIZATION_ERROR</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="249" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ac9cbe85eac85ba77813c2d9aaf3c69cc" prot="public" static="no">
        <name>CONF_R_NO_CLOSE_BRACE</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="250" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a0be923fa0667b07a5204b62713568745" prot="public" static="no">
        <name>CONF_R_NO_CONF</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="251" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ac4c26b7e87d3df32985894518301fa8e" prot="public" static="no">
        <name>CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="252" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1add239447427ec81c462cd4d805956981" prot="public" static="no">
        <name>CONF_R_NO_SECTION</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="253" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ab4697858ab32e5a40f46e83263b5127e" prot="public" static="no">
        <name>CONF_R_NO_SUCH_FILE</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="254" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1a3a77f9e3e0f8981e74664014a4a7f3a7" prot="public" static="no">
        <name>CONF_R_NO_VALUE</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="255" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ad696615474536065269c2cbc2a67952d" prot="public" static="no">
        <name>CONF_R_UNABLE_TO_CREATE_NEW_SECTION</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="256" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1ad497cdd3de7ea2992e5aefd1a7e4341c" prot="public" static="no">
        <name>CONF_R_UNKNOWN_MODULE_NAME</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="257" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf_8h_1add17ff87cc0680b8d61fd159395020cb" prot="public" static="no">
        <name>CONF_R_VARIABLE_HAS_NO_VALUE</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="258" column="9" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="conf_8h_1a8e1c42b09eb2fde768c3a90e8338a6ea" prot="public" static="no">
        <type>struct <ref refid="structconf__method__st" kindref="compound">conf_method_st</ref></type>
        <definition>typedef struct conf_method_st CONF_METHOD</definition>
        <argsstring></argsstring>
        <name>CONF_METHOD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf_8h_1acf10e0c8d54e6564b01679190e4a0e9e" prot="public" static="no">
        <type>struct conf_imodule_st</type>
        <definition>typedef struct conf_imodule_st CONF_IMODULE</definition>
        <argsstring></argsstring>
        <name>CONF_IMODULE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf_8h_1a399e25ea1bc044bd413067a3c5a4bd0d" prot="public" static="no">
        <type>struct conf_module_st</type>
        <definition>typedef struct conf_module_st CONF_MODULE</definition>
        <argsstring></argsstring>
        <name>CONF_MODULE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="82" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf_8h_1af0c70bd2dc8808e9ea9d882d92446075" prot="public" static="no">
        <type>int</type>
        <definition>typedef int conf_init_func(CONF_IMODULE *md, const CONF *cnf)</definition>
        <argsstring>(CONF_IMODULE *md, const CONF *cnf)</argsstring>
        <name>conf_init_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="111" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf_8h_1a0fb72cfcd04e5c5052196c68d6e8656c" prot="public" static="no">
        <type>void</type>
        <definition>typedef void conf_finish_func(CONF_IMODULE *md)</definition>
        <argsstring>(CONF_IMODULE *md)</argsstring>
        <name>conf_finish_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="112" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="conf_8h_1af0baa3ccdd9d2a6adf03b72e2bea5789" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="123" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8h_1a3684aa00620e99a7cff598ed9a846da3" prot="public" static="no" mutable="no">
        <type>const char long *</type>
        <definition>BIO long * eline</definition>
        <argsstring></argsstring>
        <name>eline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="124" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8h_1aa065f30aa9f5f9a42132c82c787ee70b" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="126" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8h_1a8f12a78fdc053e4143bc0896f8b3d937" prot="public" static="no" mutable="no">
        <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
        <definition>BIO* bp</definition>
        <argsstring></argsstring>
        <name>bp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="129" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf_8h_1a93c89824da901eb1b148337a6847a244" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * section</definition>
        <argsstring></argsstring>
        <name>section</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="131" column="1" bodyfile="thirdparty/openssl/include/openssl/conf.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="conf_8h_1abfbfc97593b2c04f0aedeabd1aa286aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_LHASH_OF</definition>
        <argsstring>(CONF_VALUE)</argsstring>
        <name>DECLARE_LHASH_OF</name>
        <param>
          <type><ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a417be167d0db6ef718e582310c45894c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_set_default_method</definition>
        <argsstring>(CONF_METHOD *meth)</argsstring>
        <name>CONF_set_default_method</name>
        <param>
          <type><ref refid="structconf__method__st" kindref="compound">CONF_METHOD</ref> *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a1c23b8dbe46fcc8b224d1bc734e552c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_set_nconf</definition>
        <argsstring>(CONF *conf, LHASH_OF(CONF_VALUE) *hash)</argsstring>
        <name>CONF_set_nconf</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a0a3d5e43b19365e764a1d48e77568839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LHASH_OF</definition>
        <argsstring>(CONF_VALUE) *CONF_load(LHASH_OF(CONF_VALUE) *conf</argsstring>
        <name>LHASH_OF</name>
        <param>
          <type><ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1abe3a000c9981e721e9b1b81fac5be659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(CONF_VALUE) *CONF_get_section(LHASH_OF(CONF_VALUE) *conf</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aba3ca93ceb2befc8792e216daa33931e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CONF_get_string</definition>
        <argsstring>(LHASH_OF(CONF_VALUE) *conf, const char *group, const char *name)</argsstring>
        <name>CONF_get_string</name>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aa8716accce6de5fb9011479c69a9b3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long CONF_get_number</definition>
        <argsstring>(LHASH_OF(CONF_VALUE) *conf, const char *group, const char *name)</argsstring>
        <name>CONF_get_number</name>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aad6af226c56e748269aaed65791161df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_free</definition>
        <argsstring>(LHASH_OF(CONF_VALUE) *conf)</argsstring>
        <name>CONF_free</name>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a33a0cfb9be7e47b1aba8b5e0417a086a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_dump_fp</definition>
        <argsstring>(LHASH_OF(CONF_VALUE) *conf, FILE *out)</argsstring>
        <name>CONF_dump_fp</name>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a13f7055bba0ea14315bccdc392ce0e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_dump_bio</definition>
        <argsstring>(LHASH_OF(CONF_VALUE) *conf, BIO *out)</argsstring>
        <name>CONF_dump_bio</name>
        <param>
          <type>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>) *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a7294a3755f83f5fead358d52bd4cebb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OPENSSL_config</definition>
        <argsstring>(const char *config_name)</argsstring>
        <name>OPENSSL_config</name>
        <param>
          <type>const char *</type>
          <declname>config_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a1ac44524fd62a35ef6f07bc4a2fad7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OPENSSL_no_config</definition>
        <argsstring>(void)</argsstring>
        <name>OPENSSL_no_config</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a2efe421b5ac2a003b0260e57f32085f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
        <definition>CONF* NCONF_new</definition>
        <argsstring>(CONF_METHOD *meth)</argsstring>
        <name>NCONF_new</name>
        <param>
          <type><ref refid="structconf__method__st" kindref="compound">CONF_METHOD</ref> *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aa6188b37b20a9d9aef6e45e3ad9d875f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structconf__method__st" kindref="compound">CONF_METHOD</ref> *</type>
        <definition>CONF_METHOD* NCONF_default</definition>
        <argsstring>(void)</argsstring>
        <name>NCONF_default</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a173482d2c9d7a68af6c4b2102aa095fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structconf__method__st" kindref="compound">CONF_METHOD</ref> *</type>
        <definition>CONF_METHOD* NCONF_WIN32</definition>
        <argsstring>(void)</argsstring>
        <name>NCONF_WIN32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ade7fccb0c9e553ce29945e2d283b15c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NCONF_free</definition>
        <argsstring>(CONF *conf)</argsstring>
        <name>NCONF_free</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aea719cef6b80058365530cb12089a4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NCONF_free_data</definition>
        <argsstring>(CONF *conf)</argsstring>
        <name>NCONF_free_data</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1abb83f5bf259c27cd8ebb73a3b2976709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_load</definition>
        <argsstring>(CONF *conf, const char *file, long *eline)</argsstring>
        <name>NCONF_load</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>eline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ab9f5c6910ec18a52e677ae25d6098424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_load_fp</definition>
        <argsstring>(CONF *conf, FILE *fp, long *eline)</argsstring>
        <name>NCONF_load_fp</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>eline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aae7eab2b892d50943d8c963a578b0fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_load_bio</definition>
        <argsstring>(CONF *conf, BIO *bp, long *eline)</argsstring>
        <name>NCONF_load_bio</name>
        <param>
          <type><ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>eline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1aa69b0a54a0ea26f7a5d056b07eb814e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* NCONF_get_string</definition>
        <argsstring>(const CONF *conf, const char *group, const char *name)</argsstring>
        <name>NCONF_get_string</name>
        <param>
          <type>const <ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1af0d28301016a85211bb747483bee71e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_get_number_e</definition>
        <argsstring>(const CONF *conf, const char *group, const char *name, long *result)</argsstring>
        <name>NCONF_get_number_e</name>
        <param>
          <type>const <ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a9860bd318af0ead67fef43bd0dd66952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_dump_fp</definition>
        <argsstring>(const CONF *conf, FILE *out)</argsstring>
        <name>NCONF_dump_fp</name>
        <param>
          <type>const <ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ab91426172180f10c1c6fbfa621f9f5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NCONF_dump_bio</definition>
        <argsstring>(const CONF *conf, BIO *out)</argsstring>
        <name>NCONF_dump_bio</name>
        <param>
          <type>const <ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ab3b1522d6376a72b3a9cb54564839fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_modules_load</definition>
        <argsstring>(const CONF *cnf, const char *appname, unsigned long flags)</argsstring>
        <name>CONF_modules_load</name>
        <param>
          <type>const <ref refid="structconf__st" kindref="compound">CONF</ref> *</type>
          <declname>cnf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>appname</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a6b1bdfe745ae2aa54557bf320ac98ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_modules_load_file</definition>
        <argsstring>(const char *filename, const char *appname, unsigned long flags)</argsstring>
        <name>CONF_modules_load_file</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>appname</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a4b153468b0cd40d863e8432d0c5bb93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_modules_unload</definition>
        <argsstring>(int all)</argsstring>
        <name>CONF_modules_unload</name>
        <param>
          <type>int</type>
          <declname>all</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a6850e4ab3e3f6c4115244e3587f03a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_modules_finish</definition>
        <argsstring>(void)</argsstring>
        <name>CONF_modules_finish</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a78c465b66a827c8bfce2c0743d1290e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_modules_free</definition>
        <argsstring>(void)</argsstring>
        <name>CONF_modules_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1add6a9712159bc37170d8574dfc56e18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_module_add</definition>
        <argsstring>(const char *name, conf_init_func *ifunc, conf_finish_func *ffunc)</argsstring>
        <name>CONF_module_add</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>conf_init_func *</type>
          <declname>ifunc</declname>
        </param>
        <param>
          <type>conf_finish_func *</type>
          <declname>ffunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1adb4acb8c8478b445b6c5f1cf2cc36aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* CONF_imodule_get_name</definition>
        <argsstring>(const CONF_IMODULE *md)</argsstring>
        <name>CONF_imodule_get_name</name>
        <param>
          <type>const CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a63af6f8f5e06e79ed67f983b3ffd198d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* CONF_imodule_get_value</definition>
        <argsstring>(const CONF_IMODULE *md)</argsstring>
        <name>CONF_imodule_get_value</name>
        <param>
          <type>const CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ad3b37fb6a9a72aa8f0f0e1bbb3ec0dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* CONF_imodule_get_usr_data</definition>
        <argsstring>(const CONF_IMODULE *md)</argsstring>
        <name>CONF_imodule_get_usr_data</name>
        <param>
          <type>const CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a89550c88901ea773aa4a244e21616663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_imodule_set_usr_data</definition>
        <argsstring>(CONF_IMODULE *md, void *usr_data)</argsstring>
        <name>CONF_imodule_set_usr_data</name>
        <param>
          <type>CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>usr_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a184daac2100f4047112468cfd72f80df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CONF_MODULE *</type>
        <definition>CONF_MODULE* CONF_imodule_get_module</definition>
        <argsstring>(const CONF_IMODULE *md)</argsstring>
        <name>CONF_imodule_get_module</name>
        <param>
          <type>const CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a8c1689a2a86d9762d6093eedf0bfd65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CONF_imodule_get_flags</definition>
        <argsstring>(const CONF_IMODULE *md)</argsstring>
        <name>CONF_imodule_get_flags</name>
        <param>
          <type>const CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ad9b9afb74834852d0a2d31a44a28119f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_imodule_set_flags</definition>
        <argsstring>(CONF_IMODULE *md, unsigned long flags)</argsstring>
        <name>CONF_imodule_set_flags</name>
        <param>
          <type>CONF_IMODULE *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ad81e3d1666fa9341ccf8b1fb8a98e76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* CONF_module_get_usr_data</definition>
        <argsstring>(CONF_MODULE *pmod)</argsstring>
        <name>CONF_module_get_usr_data</name>
        <param>
          <type>CONF_MODULE *</type>
          <declname>pmod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a71b59538decd41996a2afc06d9ada7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CONF_module_set_usr_data</definition>
        <argsstring>(CONF_MODULE *pmod, void *usr_data)</argsstring>
        <name>CONF_module_set_usr_data</name>
        <param>
          <type>CONF_MODULE *</type>
          <declname>pmod</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>usr_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ab22e976fabaa78142089d94508672be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CONF_get1_default_config_file</definition>
        <argsstring>(void)</argsstring>
        <name>CONF_get1_default_config_file</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1ac26b1d06d222092ec03af467a91ae328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONF_parse_list</definition>
        <argsstring>(const char *list, int sep, int nospc, int(*list_cb)(const char *elem, int len, void *usr), void *arg)</argsstring>
        <name>CONF_parse_list</name>
        <param>
          <type>const char *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nospc</declname>
        </param>
        <param>
          <type>int(*)(const char *elem, int len, void *usr)</type>
          <declname>list_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a54d46ae41e01aabdcaae3ec51a63ebda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OPENSSL_load_builtin_modules</definition>
        <argsstring>(void)</argsstring>
        <name>OPENSSL_load_builtin_modules</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conf_8h_1a9cb7b47cfcd8e2aa805f9323f625965b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_CONF_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_CONF_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/conf.h" line="214" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/conf/conf.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/>HEADER_CONF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_CONF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/lhash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/stack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/safestack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct_c_o_n_f___v_a_l_u_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">DECLARE_LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconf__st" kindref="compound">conf_st</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconf__method__st" kindref="compound">conf_method_st</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconf__method__st" kindref="compound">conf_method_st</ref><sp/>CONF_METHOD;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structconf__method__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconf__method__st" kindref="compound">conf_method_st</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*(*create)(CONF_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*init)(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*destroy)(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*destroy_data)(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*load_bio)(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dump)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*is_number)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*to_int)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*load)(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">conf_imodule_st<sp/>CONF_IMODULE;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">conf_module_st<sp/>CONF_MODULE;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">DECLARE_STACK_OF(CONF_MODULE)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">DECLARE_STACK_OF(CONF_IMODULE)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DSO<sp/>module<sp/>function<sp/>typedefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf_init_func(CONF_IMODULE<sp/>*md,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*cnf);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conf_finish_func(CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_IGNORE_ERRORS<sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_IGNORE_RETURN_CODES<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_SILENT<sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_NO_DSO<sp/><sp/><sp/><sp/><sp/><sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_IGNORE_MISSING_FILE<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_MFLAGS_DEFAULT_SECTION<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_set_default_method(CONF_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_set_nconf(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*hash);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*CONF_load(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*CONF_load_fp(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,<sp/>FILE<sp/>*fp,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*CONF_load_bio(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">STACK_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*CONF_get_section(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CONF_get_string(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CONF_get_number(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_free(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_dump_fp(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,<sp/>FILE<sp/>*out);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_dump_bio(LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPENSSL_config(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*config_name);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPENSSL_no_config(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>New<sp/>conf<sp/>code.<sp/><sp/>The<sp/>semantics<sp/>are<sp/>different<sp/>from<sp/>the<sp/>functions<sp/>above.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>If<sp/>that<sp/>wasn&apos;t<sp/>the<sp/>case,<sp/>the<sp/>above<sp/>functions<sp/>would<sp/>have<sp/>been<sp/>replaced<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structconf__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconf__st" kindref="compound">conf_st</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>CONF_METHOD<sp/>*meth;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*meth_data;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>LHASH_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*data;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*NCONF_new(CONF_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">CONF_METHOD<sp/>*NCONF_default(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">CONF_METHOD<sp/>*NCONF_WIN32(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>to<sp/>give<sp/>you<sp/>an<sp/>idea<sp/>of<sp/>what<sp/>I<sp/>have<sp/>in<sp/>mind<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">CONF_METHOD<sp/>*NCONF_XML(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NCONF_free(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NCONF_free_data(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_load(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_load_fp(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/>FILE<sp/>*fp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_load_bio(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*eline);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">STACK_OF(<ref refid="struct_c_o_n_f___v_a_l_u_e" kindref="compound">CONF_VALUE</ref>)<sp/>*NCONF_get_section(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*NCONF_get_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_get_number_e(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*result);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_dump_fp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/>FILE<sp/>*out);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NCONF_dump_bio(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,<sp/><ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>function<sp/>has<sp/>no<sp/>error<sp/>checking,</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>and<sp/>should<sp/>therefore<sp/>be<sp/>avoided<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>NCONF_get_number(<ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*conf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NCONF_get_number(c,g,n,r)<sp/>NCONF_get_number_e(c,g,n,r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_modules_load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structconf__st" kindref="compound">CONF</ref><sp/>*cnf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*appname,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_modules_load_file(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*appname,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_modules_unload(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>all);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_modules_finish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_modules_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_module_add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>conf_init_func<sp/>*ifunc,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf_finish_func<sp/>*ffunc);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CONF_imodule_get_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CONF_imodule_get_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CONF_imodule_get_usr_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_imodule_set_usr_data(CONF_IMODULE<sp/>*md,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*usr_data);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">CONF_MODULE<sp/>*CONF_imodule_get_module(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CONF_imodule_get_flags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONF_IMODULE<sp/>*md);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_imodule_set_flags(CONF_IMODULE<sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CONF_module_get_usr_data(CONF_MODULE<sp/>*pmod);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CONF_module_set_usr_data(CONF_MODULE<sp/>*pmod,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*usr_data);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CONF_get1_default_config_file(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONF_parse_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nospc,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*list_cb)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*elem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*usr),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPENSSL_load_builtin_modules(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_CONF_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>CONF<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_DUMP_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_LOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_LOAD_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_LOAD_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_MODULES_LOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_CONF_PARSE_LIST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_DEF_LOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_DEF_LOAD_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_MODULE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_MODULE_LOAD_DSO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_MODULE_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_DUMP_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_DUMP_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_GET_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_GET_NUMBER_E<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_GET_SECTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_GET_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_LOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_LOAD_BIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_LOAD_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_NCONF_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_F_STR_COPY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_ERROR_LOADING_DSO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_LIST_CANNOT_BE_NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_MISSING_CLOSE_SQUARE_BRACKET<sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_MISSING_EQUAL_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_MISSING_FINISH_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_MISSING_INIT_FUNCTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_MODULE_INITIALIZATION_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_CLOSE_BRACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_CONF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_SECTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_SUCH_FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_NO_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_UNABLE_TO_CREATE_NEW_SECTION<sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_UNKNOWN_MODULE_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONF_R_VARIABLE_HAS_NO_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/conf.h"/>
  </compounddef>
</doxygen>
