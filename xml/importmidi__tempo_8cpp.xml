<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="importmidi__tempo_8cpp" kind="file" language="C++">
    <compoundname>importmidi_tempo.cpp</compoundname>
    <includes refid="importmidi__tempo_8h" local="yes">importmidi_tempo.h</includes>
    <includes refid="importmidi__inner_8h" local="yes">importmidi_inner.h</includes>
    <includes refid="importmidi__beat_8h" local="yes">importmidi_beat.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="tempo_8h" local="yes">libmscore/tempo.h</includes>
    <includes refid="tempotext_8h" local="yes">libmscore/tempotext.h</includes>
    <includes refid="preferences_8h" local="yes">mscore/preferences.h</includes>
    <incdepgraph>
      <node id="54060">
        <label>list</label>
      </node>
      <node id="54054">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="54041" relation="include">
        </childnode>
      </node>
      <node id="54079">
        <label>mscore/importmidi/importmidi_operations.h</label>
        <link refid="importmidi__operations_8h_source"/>
        <childnode refid="54033" relation="include">
        </childnode>
        <childnode refid="54080" relation="include">
        </childnode>
      </node>
      <node id="54056">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="54075">
        <label>mscore/preferences.h</label>
        <link refid="preferences_8h_source"/>
        <childnode refid="54076" relation="include">
        </childnode>
        <childnode refid="54077" relation="include">
        </childnode>
        <childnode refid="54079" relation="include">
        </childnode>
      </node>
      <node id="54028">
        <label>importmidi_inner.h</label>
        <link refid="importmidi__inner_8h_source"/>
        <childnode refid="54029" relation="include">
        </childnode>
        <childnode refid="54032" relation="include">
        </childnode>
        <childnode refid="54033" relation="include">
        </childnode>
        <childnode refid="54035" relation="include">
        </childnode>
        <childnode refid="54036" relation="include">
        </childnode>
        <childnode refid="54037" relation="include">
        </childnode>
      </node>
      <node id="54070">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="54071" relation="include">
        </childnode>
      </node>
      <node id="54068">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="54069" relation="include">
        </childnode>
        <childnode refid="54030" relation="include">
        </childnode>
        <childnode refid="54070" relation="include">
        </childnode>
      </node>
      <node id="54049">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="54077">
        <label>shortcut.h</label>
        <link refid="shortcut_8h_source"/>
        <childnode refid="54078" relation="include">
        </childnode>
        <childnode refid="54076" relation="include">
        </childnode>
      </node>
      <node id="54061">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="54071">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54049" relation="include">
        </childnode>
        <childnode refid="54041" relation="include">
        </childnode>
      </node>
      <node id="54043">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="54051">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54052" relation="include">
        </childnode>
      </node>
      <node id="54073">
        <label>libmscore/tempotext.h</label>
        <link refid="tempotext_8h_source"/>
        <childnode refid="54044" relation="include">
        </childnode>
        <childnode refid="54074" relation="include">
        </childnode>
      </node>
      <node id="54083">
        <label>map</label>
      </node>
      <node id="54044">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="54030" relation="include">
        </childnode>
        <childnode refid="54045" relation="include">
        </childnode>
      </node>
      <node id="54032">
        <label>importmidi_tuplet.h</label>
        <link refid="importmidi__tuplet_8h_source"/>
        <childnode refid="54029" relation="include">
        </childnode>
      </node>
      <node id="54078">
        <label>icons.h</label>
        <link refid="icons_8h_source"/>
      </node>
      <node id="54072">
        <label>libmscore/tempo.h</label>
        <link refid="tempo_8h_source"/>
      </node>
      <node id="54062">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="54063" relation="include">
        </childnode>
      </node>
      <node id="54029">
        <label>importmidi_fraction.h</label>
        <link refid="importmidi__fraction_8h_source"/>
        <childnode refid="54030" relation="include">
        </childnode>
      </node>
      <node id="54033">
        <label>importmidi_operation.h</label>
        <link refid="importmidi__operation_8h_source"/>
        <childnode refid="54029" relation="include">
        </childnode>
        <childnode refid="54034" relation="include">
        </childnode>
      </node>
      <node id="54063">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="54035" relation="include">
        </childnode>
        <childnode refid="54064" relation="include">
        </childnode>
        <childnode refid="54065" relation="include">
        </childnode>
      </node>
      <node id="54069">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54066" relation="include">
        </childnode>
      </node>
      <node id="54026">
        <label>mscore/importmidi/importmidi_tempo.cpp</label>
        <link refid="importmidi__tempo_8cpp"/>
        <childnode refid="54027" relation="include">
        </childnode>
        <childnode refid="54028" relation="include">
        </childnode>
        <childnode refid="54038" relation="include">
        </childnode>
        <childnode refid="54039" relation="include">
        </childnode>
        <childnode refid="54068" relation="include">
        </childnode>
        <childnode refid="54072" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54075" relation="include">
        </childnode>
      </node>
      <node id="54055">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="54050" relation="include">
        </childnode>
      </node>
      <node id="54035">
        <label>vector</label>
      </node>
      <node id="54052">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="54047">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="54067">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="54037">
        <label>utility</label>
      </node>
      <node id="54030">
        <label>libmscore/fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="54031" relation="include">
        </childnode>
      </node>
      <node id="54050">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="54051" relation="include">
        </childnode>
      </node>
      <node id="54042">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="54043" relation="include">
        </childnode>
      </node>
      <node id="54076">
        <label>globals.h</label>
        <link refid="globals_8h_source"/>
      </node>
      <node id="54080">
        <label>midi/midifile.h</label>
        <link refid="midifile_8h_source"/>
        <childnode refid="54081" relation="include">
        </childnode>
        <childnode refid="54082" relation="include">
        </childnode>
      </node>
      <node id="54027">
        <label>importmidi_tempo.h</label>
        <link refid="importmidi__tempo_8h_source"/>
      </node>
      <node id="54074">
        <label>text.h</label>
        <link refid="text_8h_source"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54052" relation="include">
        </childnode>
        <childnode refid="54067" relation="include">
        </childnode>
      </node>
      <node id="54038">
        <label>importmidi_beat.h</label>
        <link refid="importmidi__beat_8h_source"/>
        <childnode refid="54034" relation="include">
        </childnode>
      </node>
      <node id="54057">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54044" relation="include">
        </childnode>
      </node>
      <node id="54066">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="54046" relation="include">
        </childnode>
      </node>
      <node id="54046">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="54047" relation="include">
        </childnode>
        <childnode refid="54030" relation="include">
        </childnode>
        <childnode refid="54048" relation="include">
        </childnode>
        <childnode refid="54049" relation="include">
        </childnode>
      </node>
      <node id="54059">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="54060" relation="include">
        </childnode>
      </node>
      <node id="54065">
        <label>iostream</label>
      </node>
      <node id="54041">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="54031" relation="include">
        </childnode>
        <childnode refid="54042" relation="include">
        </childnode>
      </node>
      <node id="54036">
        <label>cstddef</label>
      </node>
      <node id="54040">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="54041" relation="include">
        </childnode>
        <childnode refid="54044" relation="include">
        </childnode>
        <childnode refid="54057" relation="include">
        </childnode>
      </node>
      <node id="54053">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="54034">
        <label>set</label>
      </node>
      <node id="54031">
        <label>config.h</label>
      </node>
      <node id="54064">
        <label>algorithm</label>
      </node>
      <node id="54039">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="54031" relation="include">
        </childnode>
        <childnode refid="54040" relation="include">
        </childnode>
        <childnode refid="54058" relation="include">
        </childnode>
        <childnode refid="54059" relation="include">
        </childnode>
        <childnode refid="54061" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54066" relation="include">
        </childnode>
        <childnode refid="54067" relation="include">
        </childnode>
      </node>
      <node id="54082">
        <label>synthesizer/event.h</label>
        <link refid="synthesizer_2event_8h_source"/>
        <childnode refid="54083" relation="include">
        </childnode>
      </node>
      <node id="54081">
        <label>libmscore/sig.h</label>
        <link refid="sig_8h_source"/>
        <childnode refid="54030" relation="include">
        </childnode>
      </node>
      <node id="54048">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="54058">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="54054" relation="include">
        </childnode>
        <childnode refid="54041" relation="include">
        </childnode>
        <childnode refid="54044" relation="include">
        </childnode>
      </node>
      <node id="54045">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54050" relation="include">
        </childnode>
        <childnode refid="54053" relation="include">
        </childnode>
        <childnode refid="54054" relation="include">
        </childnode>
        <childnode refid="54049" relation="include">
        </childnode>
        <childnode refid="54055" relation="include">
        </childnode>
        <childnode refid="54056" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
    <innernamespace refid="namespace_ms_1_1_midi_tempo">Ms::MidiTempo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;importmidi_tempo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_inner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;importmidi_beat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/tempo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/tempotext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mscore/preferences.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">MidiTempo<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">ReducedFraction<sp/>time2Tick(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ticksPerSec)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReducedFraction::fromTicks(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(ticksPerSec<sp/>*<sp/>time));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tempo<sp/>in<sp/>beats<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>findBasicTempo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHumanPerformance)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;track:<sp/>tracks)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>read<sp/>tempo<sp/>from<sp/>tempo<sp/>track<sp/>for<sp/>human<sp/>performed<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>very<sp/>often<sp/>the<sp/>tempo<sp/>in<sp/>such<sp/>track<sp/>is<sp/>completely<sp/>erroneous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isHumanPerformance<sp/>&amp;&amp;<sp/>track.second.chords.empty())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ie<sp/>:<sp/>track.second.mtrack-&gt;events())<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_midi_event" kindref="compound">MidiEvent</ref><sp/>&amp;e<sp/>=<sp/>ie.second;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.type()<sp/>==<sp/>ME_META<sp/>&amp;&amp;<sp/>e.metaType()<sp/>==<sp/>META_TEMPO)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uchar*<sp/>data<sp/>=<sp/>(uchar*)e.edata();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tempo<sp/>=<sp/>data[2]<sp/>+<sp/>(data[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(data[0]<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000000.0<sp/>/<sp/>double(tempo);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>beats<sp/>per<sp/>second<sp/>=<sp/>120<sp/>beats<sp/>per<sp/>minute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTempoToScore(Score<sp/>*score,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beatsPerSecond)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score-&gt;tempomap()-&gt;find(tick)<sp/>!=<sp/>score-&gt;tempomap()-&gt;end())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>repeat<sp/>tempo,<sp/>always<sp/>set<sp/>only<sp/>tempo<sp/>for<sp/>tick<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tick<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>score-&gt;tempo(tick)<sp/>==<sp/>beatsPerSecond)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;setTempo(tick,<sp/>beatsPerSecond);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>preferences.midiImportOperations.data();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;trackOpers.showTempoText.value())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempoInBpm<sp/>=<sp/>qRound(beatsPerSecond<sp/>*<sp/>60.0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempoText<sp/>*tempoText<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TempoText(score);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempoText-&gt;setTempo(beatsPerSecond);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempoText-&gt;setXmlText(QString(</highlight><highlight class="stringliteral">&quot;&lt;sym&gt;metNoteQuarterUp&lt;/sym&gt;<sp/>=<sp/>%1&quot;</highlight><highlight class="normal">).arg(tempoInBpm));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempoText-&gt;setTrack(0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Measure<sp/>*measure<sp/>=<sp/>score-&gt;tick2measure(tick);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!measure)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;MidiTempo::setTempoToScore:<sp/>no<sp/>measure<sp/>for<sp/>tick<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>tick);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Segment<sp/>*segment<sp/>=<sp/>measure-&gt;getSegment(SegmentType::ChordRest,<sp/>tick);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!segment)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;MidiTempo::setTempoToScore:<sp/>no<sp/>chord/rest<sp/>segment<sp/>for<sp/>tempo<sp/>at<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>tick);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment-&gt;add(tempoText);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;hasTempoText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>show<sp/>tempo<sp/>text<sp/>column<sp/>in<sp/>the<sp/>MIDI<sp/>import<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roundToBpm(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beatsPerSecond)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qRound(beatsPerSecond<sp/>*<sp/>60.0)<sp/>/<sp/>60.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyAllTempoEvents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks,<sp/>Score<sp/>*score)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;track:<sp/>tracks)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track.second.isDivisionInTps)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ticksPerBeat<sp/>=<sp/>MScore::division;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beatsPerSecond<sp/>=<sp/>roundToBpm(track.second.division<sp/>/<sp/>ticksPerBeat);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTempoToScore(score,<sp/>0,<sp/>beatsPerSecond);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beats<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ie<sp/>:<sp/>track.second.mtrack-&gt;events())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_midi_event" kindref="compound">MidiEvent</ref><sp/>&amp;e<sp/>=<sp/>ie.second;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.type()<sp/>==<sp/>ME_META<sp/>&amp;&amp;<sp/>e.metaType()<sp/>==<sp/>META_TEMPO)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tick<sp/>=<sp/>toMuseScoreTicks(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ie.first,<sp/>track.second.division,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uchar*<sp/>data<sp/>=<sp/>(uchar*)e.edata();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tempo<sp/>=<sp/>data[2]<sp/>+<sp/>(data[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(data[0]<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beatsPerSecond<sp/>=<sp/>roundToBpm(1000000.0<sp/>/<sp/>tempo);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTempoToScore(score,<sp/>tick.ticks(),<sp/>beatsPerSecond);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTempo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;int,<sp/>MTrack&gt;<sp/>&amp;tracks,<sp/>Score<sp/>*score)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;tempomap()-&gt;clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*midiData<sp/>=<sp/>preferences.midiImportOperations.data();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;ReducedFraction&gt;<sp/>beats<sp/>=<sp/>midiData-&gt;humanBeatData.beatSet;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beats.empty())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>most<sp/>likely<sp/>not<sp/>a<sp/>human<sp/>performance;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>find<sp/>all<sp/>tempo<sp/>events<sp/>and<sp/>set<sp/>tempo<sp/>changes<sp/>to<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applyAllTempoEvents(tracks,<sp/>score);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>and<sp/>set<sp/>tempo<sp/>from<sp/>adjusted<sp/>beat<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midiData-&gt;trackOpers.measureCount2xLess.value())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MidiBeat::removeEvery2ndBeat(beats);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT_X(beats.size()<sp/>&gt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;MidiBeat::setTempo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Human<sp/>beat<sp/>count<sp/>&lt;<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averageTempoFactor<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>beats.begin();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>beatStart<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newBeatLen<sp/>=<sp/>ReducedFraction::fromTicks(MScore::division);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++it;<sp/>it<sp/>!=<sp/>beats.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;beatEnd<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT_X(beatEnd<sp/>&gt;<sp/>beatStart,<sp/></highlight><highlight class="stringliteral">&quot;MidiBeat::detectTempoChanges&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Beat<sp/>end<sp/>&lt;=<sp/>beat<sp/>start<sp/>that<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>averageTempoFactor<sp/>+=<sp/>(newBeatLen<sp/>/<sp/>(beatEnd<sp/>-<sp/>beatStart)).toDouble();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beatStart<sp/>=<sp/>beatEnd;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>averageTempoFactor<sp/>/=<sp/>counter;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basicTempo<sp/>=<sp/>MidiTempo::findBasicTempo(tracks,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempo<sp/>=<sp/>roundToBpm(basicTempo<sp/>*<sp/>averageTempoFactor);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;tempomap()-&gt;clear();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>only<sp/>one<sp/>tempo<sp/>marking<sp/>for<sp/>all<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTempoToScore(score,<sp/>0,<sp/>tempo);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score-&gt;tempomap()-&gt;empty())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;tempomap()-&gt;setTempo(0,<sp/>2.0);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>MidiTempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mscore/importmidi/importmidi_tempo.cpp"/>
  </compounddef>
</doxygen>
