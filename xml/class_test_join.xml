<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_test_join" kind="class" language="C++" prot="public">
    <compoundname>TestJoin</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref refid="class_ms_1_1_m_test" prot="public" virt="non-virtual">Ms::MTest</basecompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_join_1a5bad024c2da37a01c64b348288248fc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join</definition>
        <argsstring>(const char *p1, const char *p2)</argsstring>
        <name>join</name>
        <param>
          <type>const char *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="34" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_test_join_1af6b4699c46d0bab6f626495736be205e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join</definition>
        <argsstring>(const char *p1, const char *p2, int)</argsstring>
        <name>join</name>
        <param>
          <type>const char *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="35" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="79" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_test_join_1a3d5991c15dfb091276bd8bc814f0bcbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join1</definition>
        <argsstring>(const char *p1)</argsstring>
        <name>join1</name>
        <param>
          <type>const char *</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="36" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="97" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_join_1a85e7a77bcb76f33425f1df3d7610debf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::initTestCase</definition>
        <argsstring>()</argsstring>
        <name>initTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="39" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a74fe70cfd5ae32e2414a7aa75b4fad4e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join01</definition>
        <argsstring>()</argsstring>
        <name>join01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="40" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a93a31e23967a0194841b671dc189dcdd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join02</definition>
        <argsstring>()</argsstring>
        <name>join02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="41" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a378fb9d0050f8e3a3a9a9d4315300627" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join03</definition>
        <argsstring>()</argsstring>
        <name>join03</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="42" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a6163a4b18d2fce456487ba95429871fd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join04</definition>
        <argsstring>()</argsstring>
        <name>join04</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="43" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1abed79751ad5af7b935464852803df531" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join05</definition>
        <argsstring>()</argsstring>
        <name>join05</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="44" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a33f01951aa97bc17fa3e45722a4b62e1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join06</definition>
        <argsstring>()</argsstring>
        <name>join06</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="45" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a2c861915e1223bef876092c3508071b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join07</definition>
        <argsstring>()</argsstring>
        <name>join07</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="46" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_join_1a7bf608b77ea18e30f39cfdd4d2cbfb76" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TestJoin::join08</definition>
        <argsstring>()</argsstring>
        <name>join08</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/join/tst_join.cpp" line="47" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="17479">
        <label>QObject</label>
      </node>
      <node id="17480">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
      </node>
      <node id="17478">
        <label>TestJoin</label>
        <link refid="class_test_join"/>
        <childnode refid="17479" relation="public-inheritance">
        </childnode>
        <childnode refid="17480" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17495">
        <label>Ms::Sequencer</label>
        <link refid="class_ms_1_1_sequencer"/>
      </node>
      <node id="17482">
        <label>QObject</label>
      </node>
      <node id="17484">
        <label>Ms::EditData</label>
        <link refid="class_ms_1_1_edit_data"/>
        <childnode refid="17485" relation="usage">
          <edgelabel>duration</edgelabel>
        </childnode>
        <childnode refid="17486" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="17493" relation="usage">
          <edgelabel>element</edgelabel>
        </childnode>
      </node>
      <node id="17494">
        <label>Ms::MScore</label>
        <link refid="class_ms_1_1_m_score"/>
        <childnode refid="17482" relation="public-inheritance">
        </childnode>
        <childnode refid="17495" relation="usage">
          <edgelabel>seq</edgelabel>
        </childnode>
      </node>
      <node id="17492">
        <label>std::list&lt; SynthesizerGroup &gt;</label>
      </node>
      <node id="17491">
        <label>Ms::SynthesizerState</label>
        <link refid="class_ms_1_1_synthesizer_state"/>
        <childnode refid="17492" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17485">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="17488">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="17489" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="17489">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="17490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17483">
        <label>Ms::MTest</label>
        <link refid="class_ms_1_1_m_test"/>
        <childnode refid="17484" relation="usage">
          <edgelabel>ed</edgelabel>
        </childnode>
        <childnode refid="17487" relation="usage">
          <edgelabel>score</edgelabel>
        </childnode>
        <childnode refid="17494" relation="usage">
          <edgelabel>mscore</edgelabel>
        </childnode>
      </node>
      <node id="17481">
        <label>TestJoin</label>
        <link refid="class_test_join"/>
        <childnode refid="17482" relation="public-inheritance">
        </childnode>
        <childnode refid="17483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17487">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="17482" relation="public-inheritance">
        </childnode>
        <childnode refid="17488" relation="private-inheritance">
        </childnode>
        <childnode refid="17491" relation="usage">
          <edgelabel>_synthesizerState</edgelabel>
        </childnode>
      </node>
      <node id="17493">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="17488" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17490">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
      <node id="17486">
        <label>Ms::MuseScoreView</label>
        <link refid="class_ms_1_1_muse_score_view"/>
        <childnode refid="17487" relation="usage">
          <edgelabel>_score</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="mtest/libmscore/join/tst_join.cpp" line="31" column="1" bodyfile="mtest/libmscore/join/tst_join.cpp" bodystart="30" bodyend="48"/>
    <listofallmembers>
      <member refid="class_ms_1_1_m_test_1a37e6c16e898cab655f8ccd2518274acf" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>compareFiles</name></member>
      <member refid="class_ms_1_1_m_test_1a47c4f40157a350d27906dc6331e6cfd9" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>ed</name></member>
      <member refid="class_ms_1_1_m_test_1a0bf5210cc1ee4587d6959899aaff4a14" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>initMTest</name></member>
      <member refid="class_test_join_1a85e7a77bcb76f33425f1df3d7610debf" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>initTestCase</name></member>
      <member refid="class_test_join_1a5bad024c2da37a01c64b348288248fc9" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join</name></member>
      <member refid="class_test_join_1af6b4699c46d0bab6f626495736be205e" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join</name></member>
      <member refid="class_test_join_1a74fe70cfd5ae32e2414a7aa75b4fad4e" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join01</name></member>
      <member refid="class_test_join_1a93a31e23967a0194841b671dc189dcdd" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join02</name></member>
      <member refid="class_test_join_1a378fb9d0050f8e3a3a9a9d4315300627" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join03</name></member>
      <member refid="class_test_join_1a6163a4b18d2fce456487ba95429871fd" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join04</name></member>
      <member refid="class_test_join_1abed79751ad5af7b935464852803df531" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join05</name></member>
      <member refid="class_test_join_1a33f01951aa97bc17fa3e45722a4b62e1" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join06</name></member>
      <member refid="class_test_join_1a2c861915e1223bef876092c3508071b6" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join07</name></member>
      <member refid="class_test_join_1a7bf608b77ea18e30f39cfdd4d2cbfb76" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join08</name></member>
      <member refid="class_test_join_1a3d5991c15dfb091276bd8bc814f0bcbf" prot="private" virt="non-virtual"><scope>TestJoin</scope><name>join1</name></member>
      <member refid="class_ms_1_1_m_test_1a62fa3697bed02fa431b025df0457763e" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>mscore</name></member>
      <member refid="class_ms_1_1_m_test_1a744f5e054b180afc3e977956f58b069a" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>MTest</name></member>
      <member refid="class_ms_1_1_m_test_1af3c0a9c8bd7784086f966faf701429d3" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>readCreatedScore</name></member>
      <member refid="class_ms_1_1_m_test_1ac35525fff12b9e2d07806bcd6602217e" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>readScore</name></member>
      <member refid="class_ms_1_1_m_test_1a1891a6553283a1d3fda0aace440d359e" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>root</name></member>
      <member refid="class_ms_1_1_m_test_1a3014ea5ea6a33451fd5b26becb07cf7d" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveCompareMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a5c0af7fbce856e84aeda9c6699e2eeca" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveCompareMusicXmlScore</name></member>
      <member refid="class_ms_1_1_m_test_1a686ee7797f648e1d0e47e405ca90f92c" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveCompareScore</name></member>
      <member refid="class_ms_1_1_m_test_1a8e9111673d6bb2ed25851e4fa7858d03" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveMimeData</name></member>
      <member refid="class_ms_1_1_m_test_1a740ba0e9f2c5ebc6e0937ed9dd0da64f" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveMusicXml</name></member>
      <member refid="class_ms_1_1_m_test_1a58c9c58bc05dec98a8a1b783e18a1703" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>savePdf</name></member>
      <member refid="class_ms_1_1_m_test_1a9191a2086f4eb17a64eb466327c74452" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>saveScore</name></member>
      <member refid="class_ms_1_1_m_test_1a7ae6f01386275392b5c840ad6e8006f4" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>score</name></member>
      <member refid="class_ms_1_1_m_test_1a752b054eee21c04a6084af6672447499" prot="protected" virt="non-virtual"><scope>TestJoin</scope><name>writeReadElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
