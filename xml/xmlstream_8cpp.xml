<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xmlstream_8cpp" kind="file" language="C++">
    <compoundname>xmlstream.cpp</compoundname>
    <includes refid="xmlstream_8h" local="yes">xmlstream.h</includes>
    <includes refid="xmlutils__p_8h" local="yes">xmlutils_p.h</includes>
    <includes local="no">qdebug.h</includes>
    <includes local="no">qfile.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">qtextcodec.h</includes>
    <includes local="no">qstack.h</includes>
    <includes local="no">qbuffer.h</includes>
    <includes local="no">qcoreapplication.h</includes>
    <includes refid="xmlstream__p_8h" local="yes">xmlstream_p.h</includes>
    <incdepgraph>
      <node id="93383">
        <label>xmlutils_p.h</label>
        <link refid="xmlutils__p_8h_source"/>
        <childnode refid="93380" relation="include">
        </childnode>
      </node>
      <node id="93385">
        <label>qfile.h</label>
      </node>
      <node id="93388">
        <label>qstack.h</label>
      </node>
      <node id="93381">
        <label>QtCore/qvector.h</label>
      </node>
      <node id="93384">
        <label>qdebug.h</label>
      </node>
      <node id="93389">
        <label>qbuffer.h</label>
      </node>
      <node id="93379">
        <label>QtCore/qiodevice.h</label>
      </node>
      <node id="93390">
        <label>qcoreapplication.h</label>
      </node>
      <node id="93391">
        <label>xmlstream_p.h</label>
        <link refid="xmlstream__p_8h_source"/>
      </node>
      <node id="93378">
        <label>xmlstream.h</label>
        <link refid="xmlstream_8h_source"/>
        <childnode refid="93379" relation="include">
        </childnode>
        <childnode refid="93380" relation="include">
        </childnode>
        <childnode refid="93381" relation="include">
        </childnode>
        <childnode refid="93382" relation="include">
        </childnode>
      </node>
      <node id="93387">
        <label>qtextcodec.h</label>
      </node>
      <node id="93382">
        <label>QtCore/qscopedpointer.h</label>
      </node>
      <node id="93377">
        <label>thirdparty/xmlstream/xmlstream.cpp</label>
        <link refid="xmlstream_8cpp"/>
        <childnode refid="93378" relation="include">
        </childnode>
        <childnode refid="93383" relation="include">
        </childnode>
        <childnode refid="93384" relation="include">
        </childnode>
        <childnode refid="93385" relation="include">
        </childnode>
        <childnode refid="93386" relation="include">
        </childnode>
        <childnode refid="93387" relation="include">
        </childnode>
        <childnode refid="93388" relation="include">
        </childnode>
        <childnode refid="93389" relation="include">
        </childnode>
        <childnode refid="93390" relation="include">
        </childnode>
        <childnode refid="93391" relation="include">
        </childnode>
      </node>
      <node id="93386">
        <label>stdio.h</label>
      </node>
      <node id="93380">
        <label>QtCore/qstring.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_xml_stream_writer_private" prot="public">XmlStreamWriterPrivate</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="xmlstream_8cpp_1ac08f9a4a9f75e9d82ef3a2b5be6ead50" prot="public" static="no">
        <name>NameChar</name>
        <enumvalue id="xmlstream_8cpp_1ac08f9a4a9f75e9d82ef3a2b5be6ead50aa01b72351e6bbdf2c8832a3d6adfb99e" prot="public">
          <name>NameBeginning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="xmlstream_8cpp_1ac08f9a4a9f75e9d82ef3a2b5be6ead50a78a2ed0c0818680a812c9f4a0512d611" prot="public">
          <name>NameNotBeginning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="xmlstream_8cpp_1ac08f9a4a9f75e9d82ef3a2b5be6ead50a77bb8b2e3fe4045265b1d7c57fdc2e67" prot="public">
          <name>NotName</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1350" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1350" bodyend="1350"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="xmlstream_8cpp_1abb3eed6748aae4f293ceb6e5d858719c" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char XmlStreamReader_tokenTypeString_string[]</definition>
        <argsstring>[]</argsstring>
        <name>XmlStreamReader_tokenTypeString_string</name>
        <initializer>=
    &quot;NoToken\0&quot;
    &quot;Invalid\0&quot;
    &quot;StartDocument\0&quot;
    &quot;EndDocument\0&quot;
    &quot;StartElement\0&quot;
    &quot;EndElement\0&quot;
    &quot;Characters\0&quot;
    &quot;Comment\0&quot;
    &quot;DTD\0&quot;
    &quot;EntityReference\0&quot;
    &quot;ProcessingInstruction\0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="715" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xmlstream_8cpp_1a9e1b36276959cde49fa3471cf2b7f443" prot="public" static="yes" mutable="no">
        <type>const short</type>
        <definition>const short XmlStreamReader_tokenTypeString_indices[]</definition>
        <argsstring>[]</argsstring>
        <name>XmlStreamReader_tokenTypeString_indices</name>
        <initializer>= {
    0, 8, 16, 30, 42, 55, 66, 77, 85, 89, 105, 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="728" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xmlstream_8cpp_1ac4d3710e48dce4ab781f0bd751251c58" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char Begi</definition>
        <argsstring></argsstring>
        <name>Begi</name>
        <initializer>= static_cast&lt;char&gt;(NameBeginning)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1352" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xmlstream_8cpp_1adf095919e67f294e6b03d04a36814006" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char NtBg</definition>
        <argsstring></argsstring>
        <name>NtBg</name>
        <initializer>= static_cast&lt;char&gt;(NameNotBeginning)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1353" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xmlstream_8cpp_1a8e2259a4aa41bfdb1b099c6b71187ec1" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char NotN</definition>
        <argsstring></argsstring>
        <name>NotN</name>
        <initializer>= static_cast&lt;char&gt;(NotName)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1354" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xmlstream_8cpp_1a4b67e1d888bbdfc340e877003525dbbe" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char nameCharTable[128]</definition>
        <argsstring>[128]</argsstring>
        <name>nameCharTable</name>
        <initializer>=
{

    NotN, NotN, NotN, NotN, NotN, NotN, NotN, NotN,
    NotN, NotN, NotN, NotN, NotN, NotN, NotN, NotN,

    NotN, NotN, NotN, NotN, NotN, NotN, NotN, NotN,
    NotN, NotN, NotN, NotN, NotN, NotN, NotN, NotN,

    NotN, NotN, NotN, NotN, NotN, NotN, NotN, NotN,
    NotN, NotN, NotN, NotN, NotN, NtBg, NtBg, NotN,

    NtBg, NtBg, NtBg, NtBg, NtBg, NtBg, NtBg, NtBg,
    NtBg, NtBg, Begi, NotN, NotN, NotN, NotN, NotN,

    NotN, Begi, Begi, Begi, Begi, Begi, Begi, Begi,
    Begi, Begi, Begi, Begi, Begi, Begi, Begi, Begi,

    Begi, Begi, Begi, Begi, Begi, Begi, Begi, Begi,
    Begi, Begi, Begi, NotN, NotN, NotN, NotN, Begi,

    NotN, Begi, Begi, Begi, Begi, Begi, Begi, Begi,
    Begi, Begi, Begi, Begi, Begi, Begi, Begi, Begi,

    Begi, Begi, Begi, Begi, Begi, Begi, Begi, Begi,
    Begi, Begi, Begi, NotN, NotN, NotN, NotN, NotN
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1356" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xmlstream_8cpp_1aa29e7047c999c458631ba2702ad1b2d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NameChar</type>
        <definition>static NameChar fastDetermineNameChar</definition>
        <argsstring>(QChar ch)</argsstring>
        <name>fastDetermineNameChar</name>
        <param>
          <type>QChar</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="1384" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="1384" bodyend="1399"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Digia<sp/>Plc<sp/>and/or<sp/>its<sp/>subsidiary(-ies).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Contact:<sp/>http://www.qt-project.org/legal</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>QtCore<sp/>module<sp/>of<sp/>the<sp/>Qt<sp/>Toolkit.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>$QT_BEGIN_LICENSE:LGPL$</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>Commercial<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>Licensees<sp/>holding<sp/>valid<sp/>commercial<sp/>Qt<sp/>licenses<sp/>may<sp/>use<sp/>this<sp/>file<sp/>in</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>accordance<sp/>with<sp/>the<sp/>commercial<sp/>license<sp/>agreement<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>Software<sp/>or,<sp/>alternatively,<sp/>in<sp/>accordance<sp/>with<sp/>the<sp/>terms<sp/>contained<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>a<sp/>written<sp/>agreement<sp/>between<sp/>you<sp/>and<sp/>Digia.<sp/><sp/>For<sp/>licensing<sp/>terms<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>conditions<sp/>see<sp/>http://qt.digia.com/licensing.<sp/><sp/>For<sp/>further<sp/>information</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>use<sp/>the<sp/>contact<sp/>form<sp/>at<sp/>http://qt.digia.com/contact-us.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2.1<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>Foundation<sp/>and<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.LGPL<sp/>included<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>packaging<sp/>of<sp/>this<sp/>file.<sp/><sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>ensure<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2.1<sp/>requirements</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>will<sp/>be<sp/>met:<sp/>http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>In<sp/>addition,<sp/>as<sp/>a<sp/>special<sp/>exception,<sp/>Digia<sp/>gives<sp/>you<sp/>certain<sp/>additional</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>rights.<sp/><sp/>These<sp/>rights<sp/>are<sp/>described<sp/>in<sp/>the<sp/>Digia<sp/>Qt<sp/>LGPL<sp/>Exception</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>version<sp/>1.1,<sp/>included<sp/>in<sp/>the<sp/>file<sp/>LGPL_EXCEPTION.txt<sp/>in<sp/>this<sp/>package.</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>Usage</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>Alternatively,<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>Foundation<sp/>and<sp/>appearing<sp/>in<sp/>the<sp/>file<sp/>LICENSE.GPL<sp/>included<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**<sp/>packaging<sp/>of<sp/>this<sp/>file.<sp/><sp/>Please<sp/>review<sp/>the<sp/>following<sp/>information<sp/>to</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**<sp/>ensure<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>3.0<sp/>requirements<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/>met:<sp/>http://www.gnu.org/copyleft/gpl.html.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/>$QT_END_LICENSE$</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**</highlight></codeline>
<codeline lineno="40"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmlstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmlutils_p.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdebug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtextcodec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qbuffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_BOOTSTRAPPED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qcoreapplication.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>specialization<sp/>of<sp/>Q_DECLARE_TR_FUNCTIONS<sp/>is<sp/>not<sp/>in<sp/>qcoreapplication.h,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>because<sp/>that<sp/>header<sp/>depends<sp/>on<sp/>QObject<sp/>being<sp/>available,<sp/>which<sp/>is<sp/>not<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>case<sp/>for<sp/>most<sp/>bootstrapped<sp/>applications.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Q_DECLARE_TR_FUNCTIONS(context)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor">public:<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>QString<sp/>tr(const<sp/>char<sp/>*sourceText,<sp/>const<sp/>char<sp/>*comment<sp/>=<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Q_UNUSED(comment);<sp/>return<sp/>QString::fromLatin1(sourceText);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>QString<sp/>trUtf8(const<sp/>char<sp/>*sourceText,<sp/>const<sp/>char<sp/>*comment<sp/>=<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Q_UNUSED(comment);<sp/>return<sp/>QString::fromLatin1(sourceText);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>QString<sp/>tr(const<sp/>char<sp/>*sourceText,<sp/>const<sp/>char*,<sp/>int)<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/>QString::fromLatin1(sourceText);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>QString<sp/>trUtf8(const<sp/>char<sp/>*sourceText,<sp/>const<sp/>char*,<sp/>int)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/>QString::fromLatin1(sourceText);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor">private:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmlstream_p.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_xml_stream_entity_resolver_1a35c25460718ff89bc5c26db79f65edf3" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_resolver_1a35c25460718ff89bc5c26db79f65edf3" kindref="member">XmlStreamEntityResolver::~XmlStreamEntityResolver</ref>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">QString<sp/>XmlStreamEntityResolver::resolveEntity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/></highlight><highlight class="comment">/*publicId*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/></highlight><highlight class="comment">/*systemId*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_xml_stream_entity_resolver_1adb9a96c9174d809d5f4842fc52829f2c" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_xml_stream_entity_resolver_1adb9a96c9174d809d5f4842fc52829f2c" kindref="member">XmlStreamEntityResolver::resolveUndeclaredEntity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;</highlight><highlight class="comment">/*name*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">QString<sp/>XmlStreamReaderPrivate::resolveUndeclaredEntity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entityResolver)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entityResolver-&gt;resolveUndeclaredEntity(name);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_xml_stream_reader_1af77e0f8b78b6cedfaec4a34634670893" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1af77e0f8b78b6cedfaec4a34634670893" kindref="member">XmlStreamReader::setEntityResolver</ref>(<ref refid="class_xml_stream_entity_resolver" kindref="compound">XmlStreamEntityResolver</ref><sp/>*resolver)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;entityResolver<sp/>=<sp/>resolver;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_xml_stream_reader_1aac2531acc527bccec511df4c29ed2ff8" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_resolver" kindref="compound">XmlStreamEntityResolver</ref><sp/>*<ref refid="class_xml_stream_reader_1aac2531acc527bccec511df4c29ed2ff8" kindref="member">XmlStreamReader::entityResolver</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;entityResolver;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" kindref="member">XmlStreamReader::XmlStreamReader</ref>()</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(this))</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="class_xml_stream_reader_1a21d81e0a48fc957b40b7b735ab4c2b10" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" kindref="member">XmlStreamReader::XmlStreamReader</ref>(QIODevice<sp/>*<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(this))</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a0d166c5c7814d44a0015a82f0500cee5" kindref="member">setDevice</ref>(device);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="class_xml_stream_reader_1a5e3dd56e92748dcb914a1d4444ec58dc" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" kindref="member">XmlStreamReader::XmlStreamReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;data)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(this))</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dataBuffer<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_xml_stream_reader_1adf9a5f6b6a076f53e62d5c414139f5dd" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" kindref="member">XmlStreamReader::XmlStreamReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;data)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(this))</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dataBuffer<sp/>=<sp/>data.toLatin1();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dataBuffer<sp/>=<sp/>d-&gt;codec-&gt;fromUnicode(data);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;decoder<sp/>=<sp/>d-&gt;codec-&gt;makeDecoder();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lockEncoding<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="class_xml_stream_reader_1ab8374c8328df1023e4274b780caefea3" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ac25232b146a8737e6735544116fb703d" kindref="member">XmlStreamReader::XmlStreamReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(this))</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dataBuffer<sp/>=<sp/>QByteArray(data);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_xml_stream_reader_1ae1ee1ea88f07303fa7a25d9c800d646a" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ae1ee1ea88f07303fa7a25d9c800d646a" kindref="member">XmlStreamReader::~XmlStreamReader</ref>()</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;deleteDevice)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_xml_stream_reader_1a0d166c5c7814d44a0015a82f0500cee5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a0d166c5c7814d44a0015a82f0500cee5" kindref="member">XmlStreamReader::setDevice</ref>(QIODevice<sp/>*<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;deleteDevice)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;deleteDevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;device<sp/>=<sp/><ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;init();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" refkind="member"><highlight class="normal">QIODevice<sp/>*<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">XmlStreamReader::device</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">XmlStreamReader::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;data)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;device)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;XmlStreamReader:<sp/>addData()<sp/>with<sp/>device()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dataBuffer<sp/>+=<sp/>data;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="class_xml_stream_reader_1ac998bbe2fc600172e2d780a58708f358" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">XmlStreamReader::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;data)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lockEncoding<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">addData</ref>(data.toLatin1());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">addData</ref>(d-&gt;codec-&gt;fromUnicode(data));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="class_xml_stream_reader_1a4dc8d02a038a0b16e6a47f5d2a36d8a3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">XmlStreamReader::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1add6baa0f8790fc528c1fa6e05755f96b" kindref="member">addData</ref>(QByteArray(data));</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_xml_stream_reader_1a2a67f5a1fff83d33214ccc9ec9494ca0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a2a67f5a1fff83d33214ccc9ec9494ca0" kindref="member">XmlStreamReader::clear</ref>()</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;init();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;device)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;deleteDevice)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;device<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">XmlStreamReader::atEnd</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="562"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;atEnd</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;type<sp/>==<sp/>XmlStreamReader::Invalid<sp/>&amp;&amp;<sp/>d-&gt;error<sp/>==<sp/>PrematureEndOfDocumentError)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::EndDocument)))<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;device)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;device-&gt;atEnd();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!d-&gt;dataBuffer.size();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d-&gt;atEnd<sp/>||<sp/>d-&gt;type<sp/>==<sp/>XmlStreamReader::Invalid);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1a99e2023f874f0ca648c996ae79c3b5f7" kindref="member">XmlStreamReader::TokenType</ref><sp/><ref refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" kindref="member">XmlStreamReader::readNext</ref>()</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>!=<sp/>Invalid)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;hasCheckedStartDocument)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;checkStartDocument())</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;type;<sp/></highlight><highlight class="comment">//<sp/>synthetic<sp/>StartDocument<sp/>or<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;parse();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;atEnd<sp/>&amp;&amp;<sp/>d-&gt;type<sp/>!=<sp/>EndDocument<sp/>&amp;&amp;<sp/>d-&gt;type<sp/>!=<sp/>Invalid)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;raiseError(PrematureEndOfDocumentError);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;atEnd<sp/>&amp;&amp;<sp/>d-&gt;type<sp/>==<sp/>EndDocument)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Extra<sp/>content<sp/>at<sp/>end<sp/>of<sp/>document.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;error<sp/>==<sp/>PrematureEndOfDocumentError)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resume<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;type<sp/>=<sp/>NoToken;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;atEnd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;token<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;type;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="class_xml_stream_reader_1a2c26bfb63c27f2992e24f038d65c8c0a" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1a99e2023f874f0ca648c996ae79c3b5f7" kindref="member">XmlStreamReader::TokenType</ref><sp/><ref refid="class_xml_stream_reader_1a2c26bfb63c27f2992e24f038d65c8c0a" kindref="member">XmlStreamReader::tokenType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="628"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;type;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="class_xml_stream_reader_1acc156ff248a564ada18939f9382e0b05" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1acc156ff248a564ada18939f9382e0b05" kindref="member">XmlStreamReader::readNextStartElement</ref>()</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" kindref="member">readNext</ref>()<sp/>!=<sp/>Invalid)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a4262447470b01b9544d1e83bf9521b35" kindref="member">isEndElement</ref>())</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a78cb57350cabab5e7ca7c1a8963a774d" kindref="member">isStartElement</ref>())</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="class_xml_stream_reader_1a3a0bd3dc7aca930af2a53591309f9e8e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a3a0bd3dc7aca930af2a53591309f9e8e" kindref="member">XmlStreamReader::skipCurrentElement</ref>()</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(depth<sp/>&amp;&amp;<sp/><ref refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" kindref="member">readNext</ref>()<sp/>!=<sp/>Invalid)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a4262447470b01b9544d1e83bf9521b35" kindref="member">isEndElement</ref>())</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--depth;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a78cb57350cabab5e7ca7c1a8963a774d" kindref="member">isStartElement</ref>())</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++depth;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/>Use<sp/>the<sp/>following<sp/>Perl<sp/>script<sp/>to<sp/>generate<sp/>the<sp/>error<sp/>string<sp/>index<sp/>list:</highlight></codeline>
<codeline lineno="685"><highlight class="comment">=====<sp/>PERL<sp/>SCRIPT<sp/>====</highlight></codeline>
<codeline lineno="686"><highlight class="comment">print<sp/>&quot;static<sp/>const<sp/>char<sp/>XmlStreamReader_tokenTypeString_string[]<sp/>=\n&quot;;</highlight></codeline>
<codeline lineno="687"><highlight class="comment">$counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="comment">$i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="comment">while<sp/>(&lt;STDIN&gt;)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/>chomp;</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/>print<sp/>&quot;<sp/><sp/><sp/><sp/>\&quot;$_\\0\&quot;\n&quot;;</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/>$sizes[$i++]<sp/>=<sp/>$counter;</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/>$counter<sp/>+=<sp/>length<sp/>1<sp/>+<sp/>$_;</highlight></codeline>
<codeline lineno="694"><highlight class="comment">}</highlight></codeline>
<codeline lineno="695"><highlight class="comment">print<sp/>&quot;<sp/><sp/><sp/><sp/>\&quot;\\0\&quot;;\n\nstatic<sp/>const<sp/>short<sp/>XmlStreamReader_tokenTypeString_indices[]<sp/>=<sp/>{\n<sp/><sp/><sp/><sp/>&quot;;</highlight></codeline>
<codeline lineno="696"><highlight class="comment">for<sp/>($j<sp/>=<sp/>0;<sp/>$j<sp/>&lt;<sp/>$i;<sp/>++$j)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/>printf<sp/>&quot;$sizes[$j],<sp/>&quot;;</highlight></codeline>
<codeline lineno="698"><highlight class="comment">}</highlight></codeline>
<codeline lineno="699"><highlight class="comment">print<sp/>&quot;0\n};\n&quot;;</highlight></codeline>
<codeline lineno="700"><highlight class="comment">=====<sp/>PERL<sp/>SCRIPT<sp/>====</highlight></codeline>
<codeline lineno="701"><highlight class="comment"></highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>The<sp/>input<sp/>data<sp/>is<sp/>as<sp/>follows<sp/>(copied<sp/>from<sp/>qxmlstream.h):</highlight></codeline>
<codeline lineno="703"><highlight class="comment">NoToken</highlight></codeline>
<codeline lineno="704"><highlight class="comment">Invalid</highlight></codeline>
<codeline lineno="705"><highlight class="comment">StartDocument</highlight></codeline>
<codeline lineno="706"><highlight class="comment">EndDocument</highlight></codeline>
<codeline lineno="707"><highlight class="comment">StartElement</highlight></codeline>
<codeline lineno="708"><highlight class="comment">EndElement</highlight></codeline>
<codeline lineno="709"><highlight class="comment">Characters</highlight></codeline>
<codeline lineno="710"><highlight class="comment">Comment</highlight></codeline>
<codeline lineno="711"><highlight class="comment">DTD</highlight></codeline>
<codeline lineno="712"><highlight class="comment">EntityReference</highlight></codeline>
<codeline lineno="713"><highlight class="comment">ProcessingInstruction</highlight></codeline>
<codeline lineno="714"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>XmlStreamReader_tokenTypeString_string[]<sp/>=</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NoToken\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StartDocument\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EndDocument\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StartElement\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EndElement\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Characters\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Comment\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DTD\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EntityReference\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ProcessingInstruction\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>XmlStreamReader_tokenTypeString_indices[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>8,<sp/>16,<sp/>30,<sp/>42,<sp/>55,<sp/>66,<sp/>77,<sp/>85,<sp/>89,<sp/>105,<sp/>0</highlight></codeline>
<codeline lineno="730"><highlight class="normal">};</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReader::setNamespaceProcessing(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;namespaceProcessing<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" kindref="member">XmlStreamReader::namespaceProcessing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="752"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;namespaceProcessing;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="class_xml_stream_reader_1a7e60a09f7692db1fccc420573b56c68b" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_xml_stream_reader_1a7e60a09f7692db1fccc420573b56c68b" kindref="member">XmlStreamReader::tokenString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="762"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QLatin1String(XmlStreamReader_tokenTypeString_string<sp/>+</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XmlStreamReader_tokenTypeString_indices[d-&gt;type]);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">XmlStreamPrivateTagStack::XmlStreamPrivateTagStack()</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>tagStack.reserve(16);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>tagStackStringStorage.reserve(32);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>tagStackStringStorageSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>NamespaceDeclaration<sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.push();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix<sp/>=<sp/>addToStringStorage(QLatin1String(</highlight><highlight class="stringliteral">&quot;xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>addToStringStorage(QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/XML/1998/namespace&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WS<sp/>initialTagStackStringStorageSize<sp/>=<sp/>tagStackStringStorageSize;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal">XmlStreamReaderPrivate::XmlStreamReaderPrivate(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref><sp/>*q)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>:q_ptr(q)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteDevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_size<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>sym_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>state_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>reallocateStack();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aac2531acc527bccec511df4c29ed2ff8" kindref="member">entityResolver</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>entityHash.insert(QLatin1String(</highlight><highlight class="stringliteral">&quot;lt&quot;</highlight><highlight class="normal">),<sp/>Entity::createLiteral(QLatin1String(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>entityHash.insert(QLatin1String(</highlight><highlight class="stringliteral">&quot;gt&quot;</highlight><highlight class="normal">),<sp/>Entity::createLiteral(QLatin1String(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>entityHash.insert(QLatin1String(</highlight><highlight class="stringliteral">&quot;amp&quot;</highlight><highlight class="normal">),<sp/>Entity::createLiteral(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>entityHash.insert(QLatin1String(</highlight><highlight class="stringliteral">&quot;apos&quot;</highlight><highlight class="normal">),<sp/>Entity::createLiteral(QLatin1String(</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>entityHash.insert(QLatin1String(</highlight><highlight class="stringliteral">&quot;quot&quot;</highlight><highlight class="normal">),<sp/>Entity::createLiteral(QLatin1String(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::init()</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>scanDtd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>token<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>token_char<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>isEmptyElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a15550b223a59978b612b0fc32bd543e1" kindref="member">isWhitespace</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1ad1c5f23d9c60ab41c032940191d71ae4" kindref="member">isCDATA</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>standalone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>tos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>resumeReduction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>state_stack[tos++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>state_stack[tos]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.clear();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.reserve(32);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>textBuffer.clear();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>textBuffer.reserve(256);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>tagStack.clear();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>tagsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>.clear();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>.reserve(16);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref><sp/>=<sp/>lastLineStart<sp/>=<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>readBufferPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>nbytesread<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>QTextCodec::codecForMib(106);<sp/></highlight><highlight class="comment">//<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>decoder;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeStack.clear();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeStack.reserve(16);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>entityParser<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCheckedStartDocument<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>normalizeLiterals<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>hasSeenTag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>inParseEntity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceToUnparsedEntityDetected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceToParameterEntityDetected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>hasExternalDtdSubset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>lockEncoding<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" kindref="member">namespaceProcessing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>rawReadBuffer.clear();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>dataBuffer.clear();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>readBuffer.clear();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WS<sp/>tagStackStringStorageSize<sp/>=<sp/>initialTagStackStringStorageSize;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>XmlStreamReader::NoToken;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref><sp/>=<sp/>XmlStreamReader::NoError;</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/>Well-formed<sp/>requires<sp/>that<sp/>we<sp/>verify<sp/>entity<sp/>values.<sp/>We<sp/>do<sp/>this<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/>standard<sp/>parser.</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::parseEntity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.isEmpty())</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityParser)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityParser<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_private" kindref="compound">XmlStreamReaderPrivate</ref>(q);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityParser-&gt;init();</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>entityParser-&gt;inParseEntity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>entityParser-&gt;readBuffer<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>entityParser-&gt;injectToken(PARSE_ENTITY);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!entityParser-&gt;atEnd<sp/>&amp;&amp;<sp/>entityParser-&gt;type<sp/>!=<sp/>XmlStreamReader::Invalid)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityParser-&gt;parse();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entityParser-&gt;type<sp/>==<sp/>XmlStreamReader::Invalid<sp/>||<sp/>entityParser-&gt;tagStack.size())</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>value.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::reallocateStack()</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_size<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>sym_stack<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Value*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(realloc(sym_stack,<sp/>stack_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Value)));</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_CHECK_PTR(sym_stack);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>state_stack<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(realloc(state_stack,<sp/>stack_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_CHECK_PTR(sym_stack);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal">XmlStreamReaderPrivate::~XmlStreamReaderPrivate()</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>decoder;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sym_stack);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>free(state_stack);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>entityParser;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/>XmlStreamReaderPrivate::filterCarriageReturn()</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>peekc<sp/>=<sp/>peekChar();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peekc<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(putStack.size())</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.pop();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++readBufferPos;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>peekc;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peekc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/>XmlStreamReaderPrivate::getChar()</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>c;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(putStack.size())<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref><sp/>?<sp/>0<sp/>:<sp/>putStack.pop();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readBufferPos<sp/>&lt;<sp/>readBuffer.size())</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>readBuffer.at(readBufferPos++).unicode();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>getChar_helper();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint<sp/>XmlStreamReaderPrivate::peekChar()</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>c;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(putStack.size())<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>putStack.top();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readBufferPos<sp/>&lt;<sp/>readBuffer.size())<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>readBuffer.at(readBufferPos).unicode();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar_helper()))</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--readBufferPos;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanUntil(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>tokenToInject)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>textBuffer.size();</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldLineNumber<sp/>=<sp/><ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uint<sp/>c<sp/>=<sp/>getChar())<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>we<sp/>do<sp/>the<sp/>validation<sp/>&amp;<sp/>normalization.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>filterCarriageReturn())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLineStart<sp/>=<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>+<sp/>readBufferPos;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x20<sp/>||<sp/>(c<sp/>&gt;<sp/>0xFFFD<sp/>&amp;&amp;<sp/>c<sp/>&lt;<sp/>0x10000)<sp/>||<sp/>c<sp/>&gt;<sp/>QChar::LastValidCodePoint<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>XML<sp/>character.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref><sp/>=<sp/>oldLineNumber;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second,<sp/>attempt<sp/>to<sp/>lookup<sp/>str.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>uint(*str))<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*(str<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenToInject<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>injectToken(tokenToInject);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(str<sp/>+<sp/>1,<sp/>tokenToInject,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>putString(textBuffer,<sp/>pos);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>textBuffer.resize(pos);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref><sp/>=<sp/>oldLineNumber;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>tokenToInject,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireSpace)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[n])<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>c<sp/>=<sp/>getChar();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>ushort(str[n]))<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n--)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(ushort(str[n]));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(ushort(str[i]));</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requireSpace)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>fastScanSpace();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s<sp/>||<sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>textBuffer.size()<sp/>-<sp/>n<sp/>-<sp/>s;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putString(textBuffer,<sp/>pos);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer.resize(pos);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenToInject<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>injectToken(tokenToInject);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanAfterLangleBang()</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peekChar())<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[CDATA_START],<sp/>CDATA_START,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[DOCTYPE],<sp/>DOCTYPE);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[ATTLIST],<sp/>ATTLIST);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[NOTATION],<sp/>NOTATION);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[ELEMENT],<sp/>ELEMENT))</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[ENTITY],<sp/>ENTITY);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanPublicOrSystem()</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peekChar())<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[SYSTEM],<sp/>SYSTEM);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[PUBLIC],<sp/>PUBLIC);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanNData()</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fastScanSpace())<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[NDATA],<sp/>NDATA))</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanAfterDefaultDecl()</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peekChar())<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[REQUIRED],<sp/>REQUIRED,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[IMPLIED],<sp/>IMPLIED,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[FIXED],<sp/>FIXED,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::scanAttType()</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peekChar())<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[CDATA],<sp/>CDATA);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[ID],<sp/>ID))</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[IDREF],<sp/>IDREF))</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[IDREFS],<sp/>IDREFS);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[ENTITY],<sp/>ENTITY))</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[ENTITIES],<sp/>ENTITIES);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[NOTATION],<sp/>NOTATION))</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[NMTOKEN],<sp/>NMTOKEN))</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanString(spell[NMTOKENS],<sp/>NMTOKENS);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::fastScanLiteralContent()</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>c;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar()))<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ushort(c))<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xfffe:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xffff:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>putChar()<sp/>call<sp/>is<sp/>necessary<sp/>so<sp/>the<sp/>parser<sp/>re-gets</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>character<sp/>from<sp/>the<sp/>input<sp/>source,<sp/>when<sp/>raising<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filterCarriageReturn()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLineStart<sp/>=<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>+<sp/>readBufferPos;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalizeLiterals)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&amp;<sp/>0xff0000))<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::fastScanSpace()</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>ushort<sp/>c;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar()))<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>filterCarriageReturn())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLineStart<sp/>=<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>+<sp/>readBufferPos;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::fastScanContentCharList()</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>c;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar()))<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ushort(c))<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xfffe:</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xffff:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a15550b223a59978b612b0fc32bd543e1" kindref="member">isWhitespace</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>textBuffer.size();</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(ushort(c));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar())<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(ushort(c));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putString(textBuffer,<sp/>pos);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer.resize(pos);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>textBuffer.at(textBuffer.size()-2)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Sequence<sp/>&apos;]]&gt;&apos;<sp/>not<sp/>allowed<sp/>in<sp/>content.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>filterCarriageReturn())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">lineNumber</ref>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLineStart<sp/>=<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>+<sp/>readBufferPos;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(ushort(c));</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&amp;<sp/>0xff0000))<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x20)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a15550b223a59978b612b0fc32bd543e1" kindref="member">isWhitespace</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(ushort(c));</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::fastScanName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>ushort<sp/>c;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar()))<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix<sp/>&amp;&amp;<sp/>*prefix<sp/>==<sp/>n+1)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*prefix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix<sp/>=<sp/>n+2;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>colon<sp/>allowed<sp/>according<sp/>to<sp/>the<sp/>namespace<sp/>spec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>textBuffer.size()<sp/>-<sp/>n;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>putString(textBuffer,<sp/>pos);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>textBuffer.resize(pos);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>NameChar<sp/>{<sp/>NameBeginning,<sp/>NameNotBeginning,<sp/>NotName<sp/>};</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Begi<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(NameBeginning);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>NtBg<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(NameNotBeginning);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>NotN<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(NotName);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nameCharTable[128]<sp/>=</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x20<sp/>(0x2D<sp/>is<sp/>&apos;-&apos;,<sp/>0x2E<sp/>is<sp/>&apos;.&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NtBg,<sp/>NtBg,<sp/>NotN,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x30<sp/>(0x30..0x39<sp/>are<sp/>&apos;0&apos;..&apos;9&apos;,<sp/>0x3A<sp/>is<sp/>&apos;:&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>NtBg,<sp/>NtBg,<sp/>NtBg,<sp/>NtBg,<sp/>NtBg,<sp/>NtBg,<sp/>NtBg,<sp/>NtBg,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>NtBg,<sp/>NtBg,<sp/>Begi,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x40<sp/>(0x41..0x5A<sp/>are<sp/>&apos;A&apos;..&apos;Z&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x50<sp/>(0x5F<sp/>is<sp/>&apos;_&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>Begi,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x60<sp/>(0x61..0x7A<sp/>are<sp/>&apos;a&apos;..&apos;z&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>NotN,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>Begi,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>Begi,<sp/>Begi,<sp/>Begi,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN,<sp/>NotN</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>NameChar<sp/>fastDetermineNameChar(QChar<sp/>ch)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>ushort<sp/>uc<sp/>=<sp/>ch.unicode();</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(uc<sp/>&amp;<sp/>~0x7f))<sp/></highlight><highlight class="comment">//<sp/>uc<sp/>&lt;<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">NameChar</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nameCharTable[uc]);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>QChar::Category<sp/>cat<sp/>=<sp/>ch.category();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###<sp/>some<sp/>these<sp/>categories<sp/>might<sp/>be<sp/>slightly<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cat<sp/>&gt;=<sp/>QChar::Letter_Uppercase<sp/>&amp;&amp;<sp/>cat<sp/>&lt;=<sp/>QChar::Letter_Other)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>cat<sp/>==<sp/>QChar::Number_Letter)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NameBeginning;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cat<sp/>&gt;=<sp/>QChar::Number_DecimalDigit<sp/>&amp;&amp;<sp/>cat<sp/>&lt;=<sp/>QChar::Number_Other)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(cat<sp/>&gt;=<sp/>QChar::Mark_NonSpacing<sp/>&amp;&amp;<sp/>cat<sp/>&lt;=<sp/>QChar::Mark_Enclosing))</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NameNotBeginning;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NotName;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::fastScanNMTOKEN()</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>c;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getChar()))<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fastDetermineNameChar(c)<sp/>==<sp/>NotName)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putChar(c);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBuffer<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>textBuffer.size()<sp/>-<sp/>n;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>putString(textBuffer,<sp/>pos);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>textBuffer.resize(pos);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::putString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.reserve(s.size());</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.size()-1;<sp/>i<sp/>&gt;=<sp/>from;<sp/>--i)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>s.at(i).unicode();</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::putStringLiteral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.reserve(s.size());</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.size()-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>((LETTER<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>s.at(i).unicode());</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::putReplacement(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.reserve(s.size());</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.size()-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>c<sp/>=<sp/>s.at(i).unicode();</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>((LETTER<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>c);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::putReplacementInAttributeValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>putStack.reserve(s.size());</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s.size()-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>c<sp/>=<sp/>s.at(i).unicode();</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putStack.rawPush()<sp/>=<sp/>((LETTER<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>c);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal">ushort<sp/>XmlStreamReaderPrivate::getChar_helper()</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BUFFER_SIZE<sp/>=<sp/>8192;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">characterOffset</ref><sp/>+=<sp/>readBufferPos;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>readBufferPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>readBuffer.resize(0);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decoder)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbytesread<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawReadBuffer.resize(BUFFER_SIZE);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytesreadOrMinus1<sp/>=<sp/><ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>-&gt;read(rawReadBuffer.data()<sp/>+<sp/>nbytesread,<sp/>BUFFER_SIZE<sp/>-<sp/>nbytesread);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbytesread<sp/>+=<sp/>qMax(nbytesreadOrMinus1,<sp/>0);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytesread)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawReadBuffer<sp/>+=<sp/>dataBuffer;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawReadBuffer<sp/>=<sp/>dataBuffer;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbytesread<sp/>=<sp/>rawReadBuffer.size();</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataBuffer.clear();</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nbytesread)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoder)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytesread<sp/>&lt;<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>4<sp/>is<sp/>to<sp/>cover<sp/>0xef<sp/>0xbb<sp/>0xbf<sp/>plus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>extra<sp/>for<sp/>the<sp/>utf8<sp/>codec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mib<sp/>=<sp/>106;<sp/></highlight><highlight class="comment">//<sp/>UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>byte<sp/>order<sp/>mark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>ch1<sp/>=<sp/>rawReadBuffer.at(0);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>ch2<sp/>=<sp/>rawReadBuffer.at(1);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>ch3<sp/>=<sp/>rawReadBuffer.at(2);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>ch4<sp/>=<sp/>rawReadBuffer.at(3);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ch1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ch3<sp/>==<sp/>0xfe<sp/>&amp;&amp;<sp/>ch4<sp/>==<sp/>0xff)<sp/>||</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ch1<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0xfe<sp/>&amp;&amp;<sp/>ch3<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ch4<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1017;<sp/></highlight><highlight class="comment">//<sp/>UTF-32<sp/>with<sp/>byte<sp/>order<sp/>mark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>==<sp/>0x3c<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch3<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch4<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1019;<sp/></highlight><highlight class="comment">//<sp/>UTF-32LE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch3<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch4<sp/>==<sp/>0x3c)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1018;<sp/></highlight><highlight class="comment">//<sp/>UTF-32BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ch1<sp/>==<sp/>0xfe<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0xff)<sp/>||<sp/>(ch1<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0xfe))</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1015;<sp/></highlight><highlight class="comment">//<sp/>UTF-16<sp/>with<sp/>byte<sp/>order<sp/>mark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>==<sp/>0x3c<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1014;<sp/></highlight><highlight class="comment">//<sp/>UTF-16LE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>==<sp/>0x00<sp/>&amp;&amp;<sp/>ch2<sp/>==<sp/>0x3c)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mib<sp/>=<sp/>1013;<sp/></highlight><highlight class="comment">//<sp/>UTF-16BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>QTextCodec::codecForMib(mib);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(codec);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder<sp/>=<sp/>codec-&gt;makeDecoder();</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder-&gt;toUnicode(&amp;readBuffer,<sp/>rawReadBuffer.constData(),<sp/>nbytesread);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lockEncoding<sp/>&amp;&amp;<sp/>decoder-&gt;hasFailure())<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Encountered<sp/>incorrectly<sp/>encoded<sp/>content.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readBuffer.clear();</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>readBuffer<sp/>=<sp/>QString::fromLatin1(rawReadBuffer.data(),<sp/>nbytesread);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>readBuffer.reserve(1);<sp/></highlight><highlight class="comment">//<sp/>keep<sp/>capacity<sp/>when<sp/>calling<sp/>resize()<sp/>next<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readBufferPos<sp/>&lt;<sp/>readBuffer.size())<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ushort<sp/>c<sp/>=<sp/>readBuffer.at(readBufferPos++).unicode();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal">QStringRef<sp/>XmlStreamReaderPrivate::namespaceForPrefix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef<sp/>&amp;<ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.size()<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NamespaceDeclaration<sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.at(j);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namespaceDeclaration.prefix<sp/>==<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>namespaceDeclaration.namespaceUri;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" kindref="member">namespaceProcessing</ref><sp/>&amp;&amp;<sp/>!prefix.isEmpty())</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Namespace<sp/>prefix<sp/>&apos;%1&apos;<sp/>not<sp/>declared&quot;</highlight><highlight class="normal">).arg(prefix.toString()));</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/>uses<sp/>namespaceForPrefix<sp/>and<sp/>builds<sp/>the<sp/>attribute<sp/>vector</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::resolveTag()</highlight></codeline>
<codeline lineno="1564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>attributeStack.size();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" kindref="member">namespaceProcessing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>dtdAttributes.size();<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DtdAttribute<sp/>&amp;dtdAttribute<sp/>=<sp/>dtdAttributes[a];</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dtdAttribute.isNamespaceAttribute</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.defaultValue.isNull()</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.tagName<sp/>!=<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.attributeQualifiedName.isNull())</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n<sp/>&amp;&amp;<sp/>symName(attributeStack[i].key)<sp/>!=<sp/>dtdAttribute.attributeQualifiedName)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtdAttribute.attributePrefix.isEmpty()<sp/>&amp;&amp;<sp/>dtdAttribute.attributeName<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xmlns&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NamespaceDeclaration<sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.push();</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix.clear();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef<sp/>ns(dtdAttribute.defaultValue);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ns<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/2000/xmlns/&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/XML/1998/namespace&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>namespace<sp/>declaration.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>ns;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtdAttribute.attributePrefix<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xmlns&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NamespaceDeclaration<sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.push();</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>namespacePrefix<sp/>=<sp/>dtdAttribute.attributeName;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref><sp/>=<sp/>dtdAttribute.defaultValue;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((namespacePrefix<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xml&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^<sp/>(namespaceUri<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/XML/1998/namespace&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>namespaceUri<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/2000/xmlns/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>namespaceUri.isEmpty()</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>namespacePrefix<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xmlns&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>namespace<sp/>declaration.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix<sp/>=<sp/>namespacePrefix;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>tagStack.top().namespaceDeclaration.namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref><sp/>=<sp/>namespaceForPrefix(<ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>.resize(n);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>[i];</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attribute" kindref="compound">Attribute</ref><sp/>&amp;attrib<sp/>=<sp/>attributeStack[i];</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/><ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>(symPrefix(attrib.key));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/><ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>(symString(attrib.key));</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>(symName(attrib.key));</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>value(symString(attrib.value));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_name<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(name);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_qualifiedName<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(qualifiedName);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_value<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(value);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>attributeNamespaceUri<sp/>=<sp/>namespaceForPrefix(prefix);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(attributeNamespaceUri);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>[j].<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>()<sp/>==<sp/>attribute.<ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name</ref>()</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>[j].namespaceUri()<sp/>==<sp/>attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>()</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="class_xml_stream_reader_1ab834393cf21f28f8ae088b19033cacfa" kindref="member">namespaceProcessing</ref><sp/>||<sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>[j].qualifiedName()<sp/>==<sp/>attribute.<ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName</ref>()))</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Attribute<sp/>redefined.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>dtdAttributes.size();<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DtdAttribute<sp/>&amp;dtdAttribute<sp/>=<sp/>dtdAttributes[a];</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtdAttribute.isNamespaceAttribute</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.defaultValue.isNull()</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.tagName<sp/>!=<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>dtdAttribute.attributeQualifiedName.isNull())</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n<sp/>&amp;&amp;<sp/>symName(attributeStack[i].key)<sp/>!=<sp/>dtdAttribute.attributeQualifiedName)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>attribute;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_name<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(dtdAttribute.attributeName);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_qualifiedName<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(dtdAttribute.attributeQualifiedName);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_value<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(dtdAttribute.defaultValue);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dtdAttribute.attributePrefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>attributeNamespaceUri<sp/>=<sp/>namespaceForPrefix(dtdAttribute.attributePrefix);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(attributeNamespaceUri);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.m_isDefault<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>.<ref refid="class_xml_stream_attributes_1a51a667e3daddcea19ec85d51f0da6d6b" kindref="member">append</ref>(attribute);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeStack.clear();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::resolvePublicNamespaces()</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tag<sp/>&amp;tag<sp/>=<sp/>tagStack.top();</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.size()<sp/>-<sp/>tag.namespaceDeclarationsSize;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>publicNamespaceDeclarations.resize(n);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NamespaceDeclaration<sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.at(tag.namespaceDeclarationsSize<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref><sp/>&amp;publicNamespaceDeclaration<sp/>=<sp/>publicNamespaceDeclarations[i];</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicNamespaceDeclaration.m_prefix<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(namespaceDeclaration.prefix);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicNamespaceDeclaration.m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(namespaceDeclaration.namespaceUri);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::resolveDtd()</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>publicNotationDeclarations.resize(<ref refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" kindref="member">notationDeclarations</ref>.size());</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" kindref="member">notationDeclarations</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_xml_stream_reader_private_1_1_notation_declaration" kindref="compound">XmlStreamReaderPrivate::NotationDeclaration</ref><sp/>&amp;notationDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" kindref="member">notationDeclarations</ref>.at(i);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref><sp/>&amp;publicNotationDeclaration<sp/>=<sp/>publicNotationDeclarations[i];</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicNotationDeclaration.m_name<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(notationDeclaration.name);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicNotationDeclaration.m_systemId<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(notationDeclaration.systemId);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicNotationDeclaration.m_publicId<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(notationDeclaration.publicId);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" kindref="member">notationDeclarations</ref>.clear();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>publicEntityDeclarations.resize(<ref refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" kindref="member">entityDeclarations</ref>.size());</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" kindref="member">entityDeclarations</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_xml_stream_reader_private_1_1_entity_declaration" kindref="compound">XmlStreamReaderPrivate::EntityDeclaration</ref><sp/>&amp;entityDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" kindref="member">entityDeclarations</ref>.at(i);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_entity_declaration" kindref="compound">XmlStreamEntityDeclaration</ref><sp/>&amp;publicEntityDeclaration<sp/>=<sp/>publicEntityDeclarations[i];</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicEntityDeclaration.m_name<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(entityDeclaration.name);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicEntityDeclaration.m_notationName<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(entityDeclaration.notationName);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicEntityDeclaration.m_systemId<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(entityDeclaration.systemId);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicEntityDeclaration.m_publicId<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(entityDeclaration.publicId);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publicEntityDeclaration.m_value<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(entityDeclaration.value);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" kindref="member">entityDeclarations</ref>.clear();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>parameterEntityHash.clear();</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal">uint<sp/>XmlStreamReaderPrivate::resolveCharRef(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symbolIndex)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>s;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>###<sp/>add<sp/>toXShort<sp/>to<sp/>QStringRef?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sym(symbolIndex).c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>symString(symbolIndex,<sp/>1).toString().toUInt(&amp;ok,<sp/>16);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>symString(symbolIndex).toString().toUInt(&amp;ok,<sp/>10);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>(s<sp/>==<sp/>0x9<sp/>||<sp/>s<sp/>==<sp/>0xa<sp/>||<sp/>s<sp/>==<sp/>0xd<sp/>||<sp/>(s<sp/>&gt;=<sp/>0x20<sp/>&amp;&amp;<sp/>s<sp/>&lt;=<sp/>0xd7ff)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(s<sp/>&gt;=<sp/>0xe000<sp/>&amp;&amp;<sp/>s<sp/>&lt;=<sp/>0xfffd)<sp/>||<sp/>(s<sp/>&gt;=<sp/>0x10000<sp/>&amp;&amp;<sp/>s<sp/>&lt;=<sp/>QChar::LastValidCodePoint));</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>?<sp/>s<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::checkPublicLiteral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef<sp/>&amp;publicId)</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="comment">//#x20<sp/>|<sp/>#xD<sp/>|<sp/>#xA<sp/>|<sp/>[a-zA-Z0-9]<sp/>|<sp/>[-&apos;()+,./:=?;!*#@$_%]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ushort<sp/>*data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">ushort<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(publicId.constData());</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>uchar<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>publicId.size()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[i]<sp/>&lt;<sp/>256)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>data[i]))<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>character<sp/>&apos;%1&apos;<sp/>in<sp/>public<sp/>id<sp/>literal.&quot;</highlight><highlight class="normal">).arg(QChar(QLatin1Char(c))));</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/>Checks<sp/>whether<sp/>the<sp/>document<sp/>starts<sp/>with<sp/>an<sp/>xml<sp/>declaration.<sp/>If<sp/>it</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/><sp/>does,<sp/>this<sp/>function<sp/>returns<sp/>\c<sp/>true;<sp/>otherwise<sp/>it<sp/>sets<sp/>up<sp/>everything</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/><sp/>for<sp/>a<sp/>synthetic<sp/>start<sp/>document<sp/>event<sp/>and<sp/>returns<sp/>\c<sp/>false.</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::checkStartDocument()</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCheckedStartDocument<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanString(spell[XML],<sp/>XML))</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>XmlStreamReader::StartDocument;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a4acf0ba0ea25300b66c9d85ba3e8dfb3" kindref="member">atEnd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasCheckedStartDocument<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" kindref="member">raiseError</ref>(XmlStreamReader::PrematureEndOfDocumentError);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::startDocument()</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>err;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a6667b8f4c648c8f192802c8091f617fb" kindref="member">documentVersion</ref><sp/>!=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a6667b8f4c648c8f192802c8091f617fb" kindref="member">documentVersion</ref>.toString().contains(QLatin1Char(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>XML<sp/>version<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>XML<sp/>version.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>attributeStack.size();</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>this<sp/>bool<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>pesudo<sp/>attributes<sp/>are<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>proper<sp/>order:</highlight></codeline>
<codeline lineno="1783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[23]<sp/><sp/><sp/><sp/><sp/>XMLDecl<sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/><sp/><sp/><sp/>&apos;&lt;?xml&apos;<sp/>VersionInfo<sp/>EncodingDecl?<sp/>SDDecl?<sp/>S?<sp/>&apos;?&gt;&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasStandalone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>err.isNull()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attribute" kindref="compound">Attribute</ref><sp/>&amp;attrib<sp/>=<sp/>attributeStack[i];</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/><ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>(symPrefix(attrib.key));</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>key(symString(attrib.key));</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringRef<sp/>value(symString(attrib.value));</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix.isEmpty()<sp/>&amp;&amp;<sp/>key<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;encoding&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/><ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>(value.toString());</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a8326fe20290e37d1c1549737cc02d25b" kindref="member">documentEncoding</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasStandalone)</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;The<sp/>standalone<sp/>pseudo<sp/>attribute<sp/>must<sp/>appear<sp/>after<sp/>the<sp/>encoding.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!QXmlUtils::isEncName(<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;%1<sp/>is<sp/>an<sp/>invalid<sp/>encoding<sp/>name.&quot;</highlight><highlight class="normal">).arg(<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readBuffer<sp/>=<sp/>QString::fromLatin1(rawReadBuffer.data(),<sp/>nbytesread);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextCodec<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>newCodec<sp/>=<sp/>QTextCodec::codecForName(<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>.toLatin1());</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newCodec)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Encoding<sp/>%1<sp/>is<sp/>unsupported&quot;</highlight><highlight class="normal">).arg(<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCodec<sp/>!=<sp/>codec<sp/>&amp;&amp;<sp/>!lockEncoding)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>newCodec;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>decoder;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder<sp/>=<sp/>codec-&gt;makeDecoder();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder-&gt;toUnicode(&amp;readBuffer,<sp/>rawReadBuffer.data(),<sp/>nbytesread);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix.isEmpty()<sp/>&amp;&amp;<sp/>key<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;standalone&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasStandalone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standalone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standalone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Standalone<sp/>accepts<sp/>only<sp/>yes<sp/>or<sp/>no.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>attribute<sp/>in<sp/>XML<sp/>declaration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!err.isNull())</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseWellFormedError(err);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeStack.clear();</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::raiseError(<ref refid="class_xml_stream_reader_1ae7aa6749ae6e9de9bcb6f084a9884286" kindref="member">XmlStreamReader::Error</ref><sp/><ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>message)</highlight></codeline>
<codeline lineno="1836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref><sp/>=<sp/><ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" kindref="member">errorString</ref><sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" kindref="member">errorString</ref>.isNull())<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref><sp/>==<sp/>XmlStreamReader::PrematureEndOfDocumentError)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" kindref="member">errorString</ref><sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Premature<sp/>end<sp/>of<sp/>document.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref><sp/>==<sp/>XmlStreamReader::CustomError)</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" kindref="member">errorString</ref><sp/>=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>document.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>XmlStreamReader::Invalid;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::raiseWellFormedError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;message)</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" kindref="member">raiseError</ref>(XmlStreamReader::NotWellFormedError,<sp/>message);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::parseError()</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token<sp/>==<sp/>EOF_SYMBOL)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" kindref="member">raiseError</ref>(XmlStreamReader::PrematureEndOfDocumentError);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmax<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>error_message;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ers<sp/>=<sp/>state_stack[tos];</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nexpected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected[nmax];</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>ERROR)</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tk<sp/>=<sp/>0;<sp/>tk<sp/>&lt;<sp/>TERMINAL_COUNT;<sp/>++tk)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>t_action(ers,<sp/>tk);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spell[tk])<sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nexpected<sp/>&lt;<sp/>nmax)</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected[nexpected++]<sp/>=<sp/>tk;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>error_message.clear<sp/>();</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nexpected<sp/>&amp;&amp;<sp/>nexpected<sp/>&lt;<sp/>nmax)<sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>nexpected;<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>XmlStream::tr<sp/>(</highlight><highlight class="stringliteral">&quot;Expected<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>nexpected<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String<sp/>(nexpected<sp/>&gt;<sp/>2<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>or<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String<sp/>(spell<sp/>[expected[s]]);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>got<sp/>\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(spell<sp/>[token]);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(spell<sp/>[token]);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>error_message<sp/>+=<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>raiseWellFormedError(error_message);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamReaderPrivate::resume(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>resumeReduction<sp/>=<sp/>rule;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">error</ref><sp/>==<sp/>XmlStreamReader::NoError)</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" kindref="member">raiseError</ref>(XmlStreamReader::PrematureEndOfDocumentError);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917" refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" refkind="member"><highlight class="normal">qint64<sp/><ref refid="class_xml_stream_reader_1a74a3827867942f9904924f2004c4177e" kindref="member">XmlStreamReader::lineNumber</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1918"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;lineNumber<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>public<sp/>we<sp/>start<sp/>with<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927" refid="class_xml_stream_reader_1a88724d9577a835b0e8d84ed945c306df" refkind="member"><highlight class="normal">qint64<sp/><ref refid="class_xml_stream_reader_1a88724d9577a835b0e8d84ed945c306df" kindref="member">XmlStreamReader::columnNumber</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1928"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;characterOffset<sp/>-<sp/>d-&gt;lastLineStart<sp/>+<sp/>d-&gt;readBufferPos;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937" refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" refkind="member"><highlight class="normal">qint64<sp/><ref refid="class_xml_stream_reader_1a08a187eb8969ddabf238e1f731bb754a" kindref="member">XmlStreamReader::characterOffset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1938"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;characterOffset<sp/>+<sp/>d-&gt;readBufferPos;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947" refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" kindref="member">XmlStreamReader::text</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1948"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;text;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960" refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" refkind="member"><highlight class="normal">XmlStreamNotationDeclarations<sp/><ref refid="class_xml_stream_reader_1af1980e6e4fa0ec4468bb384000bf33db" kindref="member">XmlStreamReader::notationDeclarations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1961"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;notationDeclarations.size())</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;XmlStreamReaderPrivate<sp/>*&gt;(d)-&gt;resolveDtd();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;publicNotationDeclarations;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975" refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" refkind="member"><highlight class="normal">XmlStreamEntityDeclarations<sp/><ref refid="class_xml_stream_reader_1a1746b1c8df6ec7a4172c5dbee907bfb3" kindref="member">XmlStreamReader::entityDeclarations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1976"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;entityDeclarations.size())</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;XmlStreamReaderPrivate<sp/>*&gt;(d)-&gt;resolveDtd();</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;publicEntityDeclarations;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990" refid="class_xml_stream_reader_1a17977920c069d3e4a71182aa07cb4eaa" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a17977920c069d3e4a71182aa07cb4eaa" kindref="member">XmlStreamReader::dtdName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1991"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::DTD)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;dtdName;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="1996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005" refid="class_xml_stream_reader_1a5b8d61714dde7a6f75aa16555b85db18" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a5b8d61714dde7a6f75aa16555b85db18" kindref="member">XmlStreamReader::dtdPublicId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2006"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::DTD)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;dtdPublicId;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020" refid="class_xml_stream_reader_1a8021ea53fd25af7404bfe81a2e4e7bdd" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a8021ea53fd25af7404bfe81a2e4e7bdd" kindref="member">XmlStreamReader::dtdSystemId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2021"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::DTD)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;dtdSystemId;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037" refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" refkind="member"><highlight class="normal">XmlStreamNamespaceDeclarations<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">XmlStreamReader::namespaceDeclarations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2038"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;publicNamespaceDeclarations.isEmpty()<sp/>&amp;&amp;<sp/>d-&gt;type<sp/>==<sp/>StartElement)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;XmlStreamReaderPrivate<sp/>*&gt;(d)-&gt;resolvePublicNamespaces();</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;publicNamespaceDeclarations;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056" refid="class_xml_stream_reader_1a6c6b71cc9f62ad5c1b85c207ba1be850" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a6c6b71cc9f62ad5c1b85c207ba1be850" kindref="member">XmlStreamReader::addExtraNamespaceDeclaration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref><sp/>&amp;extraNamespaceDeclaration)</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">XmlStreamReaderPrivate::NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/>d-&gt;namespaceDeclarations.push();</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix<sp/>=<sp/>d-&gt;addToStringStorage(extraNamespaceDeclaration.<ref refid="class_xml_stream_namespace_declaration_1a84440d3a55f8679da78032e02a49ccbd" kindref="member">prefix</ref>());</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>d-&gt;addToStringStorage(extraNamespaceDeclaration.<ref refid="class_xml_stream_namespace_declaration_1ac2d6510eeacc33073402389403e2c3ef" kindref="member">namespaceUri</ref>());</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071" refid="class_xml_stream_reader_1a8661643768d54c1c49645a59abed5d29" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a8661643768d54c1c49645a59abed5d29" kindref="member">XmlStreamReader::addExtraNamespaceDeclarations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XmlStreamNamespaceDeclarations<sp/>&amp;extraNamespaceDeclarations)</highlight></codeline>
<codeline lineno="2072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>extraNamespaceDeclarations.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a6c6b71cc9f62ad5c1b85c207ba1be850" kindref="member">addExtraNamespaceDeclaration</ref>(extraNamespaceDeclarations.at(i));</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095" refid="class_xml_stream_reader_1a45f936b88df1b72f39c43d1c41fb9940" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_xml_stream_reader_1a45f936b88df1b72f39c43d1c41fb9940" kindref="member">XmlStreamReader::readElementText</ref>(<ref refid="class_xml_stream_reader_1aa67823f6737762b7e1a426ac841e29fa" kindref="member">ReadElementTextBehaviour</ref><sp/>behaviour)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a78cb57350cabab5e7ca7c1a8963a774d" kindref="member">isStartElement</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>result;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forever<sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1adb18e6f9842e9b470cde16385732ad84" kindref="member">readNext</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Characters:</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EntityReference:</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(result.size(),<sp/>d-&gt;text.unicode(),<sp/>d-&gt;text.size());</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EndElement:</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ProcessingInstruction:</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comment:</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>StartElement:</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(behaviour<sp/>==<sp/>SkipChildElements)<sp/>{</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a3a0bd3dc7aca930af2a53591309f9e8e" kindref="member">skipCurrentElement</ref>();</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(behaviour<sp/>==<sp/>IncludeChildElements)<sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_xml_stream_reader_1a45f936b88df1b72f39c43d1c41fb9940" kindref="member">readElementText</ref>(behaviour);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>through<sp/>(for<sp/>ErrorOnUnexpectedElement)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;error<sp/>||<sp/>behaviour<sp/>==<sp/>ErrorOnUnexpectedElement)<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;error)</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;raiseError(UnexpectedElementError,<sp/>XmlStream::tr(</highlight><highlight class="stringliteral">&quot;Expected<sp/>character<sp/>data.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136" refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1aae008ac9078fb7edb4a77ba3e76b8dfa" kindref="member">XmlStreamReader::raiseError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>message)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;raiseError(CustomError,<sp/>message);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147" refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_xml_stream_reader_1a119d913daa2a7b8174f0b26dcd7e9720" kindref="member">XmlStreamReader::errorString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::Invalid)</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;errorString;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159" refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_reader_1ae7aa6749ae6e9de9bcb6f084a9884286" kindref="member">XmlStreamReader::Error</ref><sp/><ref refid="class_xml_stream_reader_1ae9a7e8fe9f15b0f5c4ec5fa080c6249f" kindref="member">XmlStreamReader::error</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::Invalid)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;error;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NoError;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170" refid="class_xml_stream_reader_1a66bd483fca16586142dd890cacb9b967" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a66bd483fca16586142dd890cacb9b967" kindref="member">XmlStreamReader::processingInstructionTarget</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;processingInstructionTarget;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179" refid="class_xml_stream_reader_1a2c9146676cc92895abaadc89f6fbc738" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a2c9146676cc92895abaadc89f6fbc738" kindref="member">XmlStreamReader::processingInstructionData</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;processingInstructionData;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192" refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">XmlStreamReader::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2193"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;name;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203" refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">XmlStreamReader::namespaceUri</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2204"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;namespaceUri;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221" refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">XmlStreamReader::qualifiedName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;qualifiedName;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236" refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">XmlStreamReader::prefix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2237"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;prefix;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245" refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attributes" kindref="compound">XmlStreamAttributes</ref><sp/><ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">XmlStreamReader::attributes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2246"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;attributes;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271" refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" kindref="member">XmlStreamAttribute::XmlStreamAttribute</ref>()</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isDefault<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279" refid="class_xml_stream_attribute_1a0790a80f54d9bb1dba7ce5f230ff3b61" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute_1a0790a80f54d9bb1dba7ce5f230ff3b61" kindref="member">XmlStreamAttribute::~XmlStreamAttribute</ref>()</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286" refid="class_xml_stream_attribute_1a266b1754effadd2f2388969a27cf91a2" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" kindref="member">XmlStreamAttribute::XmlStreamAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;namespaceUri));</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>m_qualifiedName<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;name));</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;value));</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;namespaceUri));</highlight></codeline>
<codeline lineno="2292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297" refid="class_xml_stream_attribute_1aa6fb4b0b8a1b67e82eb96f1ca18433a0" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" kindref="member">XmlStreamAttribute::XmlStreamAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colon<sp/>=<sp/>qualifiedName.indexOf(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;qualifiedName,</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colon<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qualifiedName.size()<sp/>-<sp/>(colon<sp/>+<sp/>1)));</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>m_qualifiedName<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;qualifiedName));</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref>(QStringRef(&amp;value));</highlight></codeline>
<codeline lineno="2305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360" refid="class_xml_stream_attribute_1a14fa3927c8ba018070ab4edbdef2f638" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute_1aa5f200993700468c044eadc4ce7ae89f" kindref="member">XmlStreamAttribute::XmlStreamAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368" refid="class_xml_stream_attribute_1a7d455c18b5d261f261523752e9d39b98" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref>&amp;<sp/><ref refid="class_xml_stream_attribute_1a7d455c18b5d261f261523752e9d39b98" kindref="member">XmlStreamAttribute::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>other.m_name;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>m_namespaceUri<sp/>=<sp/>other.m_namespaceUri;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>m_qualifiedName<sp/>=<sp/>other.m_qualifiedName;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>other.m_value;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isDefault<sp/>=<sp/>other.m_isDefault;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433" refid="class_xml_stream_notation_declaration_1ab189bffc2f535e607045e724645cea66" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_notation_declaration_1ab189bffc2f535e607045e724645cea66" kindref="member">XmlStreamNotationDeclaration::XmlStreamNotationDeclaration</ref>()</highlight></codeline>
<codeline lineno="2434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2439" refid="class_xml_stream_notation_declaration_1a6477e182d03d9981672ac72b9a52d8bd" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_notation_declaration_1ab189bffc2f535e607045e724645cea66" kindref="member">XmlStreamNotationDeclaration::XmlStreamNotationDeclaration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447" refid="class_xml_stream_notation_declaration_1a3689e3063f5c7f21416d4c2b55913bbb" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref>&amp;<sp/><ref refid="class_xml_stream_notation_declaration_1a3689e3063f5c7f21416d4c2b55913bbb" kindref="member">XmlStreamNotationDeclaration::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>other.m_name;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>m_systemId<sp/>=<sp/>other.m_systemId;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>m_publicId<sp/>=<sp/>other.m_publicId;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458" refid="class_xml_stream_notation_declaration_1a39154003f4dde259994ad84dae38a428" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_notation_declaration_1a39154003f4dde259994ad84dae38a428" kindref="member">XmlStreamNotationDeclaration::~XmlStreamNotationDeclaration</ref>()</highlight></codeline>
<codeline lineno="2459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2518" refid="class_xml_stream_namespace_declaration_1a7d6716e210ce5ee3dea6ed914117368d" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_namespace_declaration_1a7d6716e210ce5ee3dea6ed914117368d" kindref="member">XmlStreamNamespaceDeclaration::XmlStreamNamespaceDeclaration</ref>()</highlight></codeline>
<codeline lineno="2519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527" refid="class_xml_stream_namespace_declaration_1af7284ccda394915ac5a1a8bd2c80c064" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_namespace_declaration_1a7d6716e210ce5ee3dea6ed914117368d" kindref="member">XmlStreamNamespaceDeclaration::XmlStreamNamespaceDeclaration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>)</highlight></codeline>
<codeline lineno="2528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>m_prefix<sp/>=<sp/><ref refid="class_xml_stream_reader_1aed2c2d3189639c9f73dc50432c628204" kindref="member">prefix</ref>;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>m_namespaceUri<sp/>=<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536" refid="class_xml_stream_namespace_declaration_1a438efeeca364b3003ef2ef16d45d9d22" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_namespace_declaration_1a7d6716e210ce5ee3dea6ed914117368d" kindref="member">XmlStreamNamespaceDeclaration::XmlStreamNamespaceDeclaration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544" refid="class_xml_stream_namespace_declaration_1a554efdcdfc87142180db128f9c8c0ed7" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref>&amp;<sp/><ref refid="class_xml_stream_namespace_declaration_1a554efdcdfc87142180db128f9c8c0ed7" kindref="member">XmlStreamNamespaceDeclaration::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>m_prefix<sp/>=<sp/>other.m_prefix;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>m_namespaceUri<sp/>=<sp/>other.m_namespaceUri;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2553" refid="class_xml_stream_namespace_declaration_1a682a9243d890610af2b680b8feb2145e" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_namespace_declaration_1a682a9243d890610af2b680b8feb2145e" kindref="member">XmlStreamNamespaceDeclaration::~XmlStreamNamespaceDeclaration</ref>()</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599" refid="class_xml_stream_entity_declaration_1a84512094bb6fff3e9878e392942b796d" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_declaration_1a84512094bb6fff3e9878e392942b796d" kindref="member">XmlStreamEntityDeclaration::XmlStreamEntityDeclaration</ref>()</highlight></codeline>
<codeline lineno="2600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606" refid="class_xml_stream_entity_declaration_1ab12e983409a46173d89968dc503b2f20" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_declaration_1a84512094bb6fff3e9878e392942b796d" kindref="member">XmlStreamEntityDeclaration::XmlStreamEntityDeclaration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_entity_declaration" kindref="compound">XmlStreamEntityDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614" refid="class_xml_stream_entity_declaration_1a597aca72eac0086d5184ffd8b18eb588" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_declaration" kindref="compound">XmlStreamEntityDeclaration</ref>&amp;<sp/><ref refid="class_xml_stream_entity_declaration_1a597aca72eac0086d5184ffd8b18eb588" kindref="member">XmlStreamEntityDeclaration::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_entity_declaration" kindref="compound">XmlStreamEntityDeclaration</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>other.m_name;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>m_notationName<sp/>=<sp/>other.m_notationName;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>m_systemId<sp/>=<sp/>other.m_systemId;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>m_publicId<sp/>=<sp/>other.m_publicId;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>other.m_value;</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627" refid="class_xml_stream_entity_declaration_1ab0206ec465e688a62948c2aff01d8ff4" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_entity_declaration_1ab0206ec465e688a62948c2aff01d8ff4" kindref="member">XmlStreamEntityDeclaration::~XmlStreamEntityDeclaration</ref>()</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667" refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" kindref="member">XmlStreamAttributes::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2668"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name</ref>()<sp/>==<sp/>name<sp/>&amp;&amp;<sp/>attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>()<sp/>==<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>)</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682" refid="class_xml_stream_attributes_1a6b298362365a1199b9287dbbcbcf39c0" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" kindref="member">XmlStreamAttributes::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/>QLatin1String<sp/><ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2683"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name</ref>()<sp/>==<sp/>name<sp/>&amp;&amp;<sp/>attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>()<sp/>==<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>)</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697" refid="class_xml_stream_attributes_1ac782842988173fa01be24dd38c7c4605" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" kindref="member">XmlStreamAttributes::value</ref>(QLatin1String<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/>QLatin1String<sp/><ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2698"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name</ref>()<sp/>==<sp/>name<sp/>&amp;&amp;<sp/>attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>()<sp/>==<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719" refid="class_xml_stream_attributes_1adeb02e3a2e49bbf7a32066fe6780016b" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" kindref="member">XmlStreamAttributes::value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2720"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName</ref>()<sp/>==<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>)</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741" refid="class_xml_stream_attributes_1ac783484006b66fe5c4af1c0f6aba1976" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_attributes_1ac13c28528742b32ef4c4684f8c39941b" kindref="member">XmlStreamAttributes::value</ref>(QLatin1String<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2742"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref><sp/>&amp;attribute<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName</ref>()<sp/>==<sp/><ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>)</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755" refid="class_xml_stream_attributes_1a51a667e3daddcea19ec85d51f0da6d6b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attributes_1a51a667e3daddcea19ec85d51f0da6d6b" kindref="member">XmlStreamAttributes::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="2756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>append(<ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref>(namespaceUri,<sp/>name,<sp/>value));</highlight></codeline>
<codeline lineno="2758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764" refid="class_xml_stream_attributes_1a062ae122b7c39f5993cfcf0cd30a4942" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attributes_1a51a667e3daddcea19ec85d51f0da6d6b" kindref="member">XmlStreamAttributes::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a1afff37e8245261beb5c31db56912b8c" kindref="member">qualifiedName</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="2765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>append(<ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref>(qualifiedName,<sp/>value));</highlight></codeline>
<codeline lineno="2767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806" refid="class_xml_stream_reader_1a15550b223a59978b612b0fc32bd543e1" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1a15550b223a59978b612b0fc32bd543e1" kindref="member">XmlStreamReader::isWhitespace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2807"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;type<sp/>==<sp/>XmlStreamReader::Characters<sp/>&amp;&amp;<sp/>d-&gt;isWhitespace;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817" refid="class_xml_stream_reader_1ad1c5f23d9c60ab41c032940191d71ae4" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1ad1c5f23d9c60ab41c032940191d71ae4" kindref="member">XmlStreamReader::isCDATA</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2818"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;type<sp/>==<sp/>XmlStreamReader::Characters<sp/>&amp;&amp;<sp/>d-&gt;isCDATA;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831" refid="class_xml_stream_reader_1aa5678c8de5e5efd67e85b60dbda6374f" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1aa5678c8de5e5efd67e85b60dbda6374f" kindref="member">XmlStreamReader::isStandaloneDocument</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2832"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;standalone;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845" refid="class_xml_stream_reader_1a6667b8f4c648c8f192802c8091f617fb" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a6667b8f4c648c8f192802c8091f617fb" kindref="member">XmlStreamReader::documentVersion</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2846"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::StartDocument)</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;documentVersion;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860" refid="class_xml_stream_reader_1a8326fe20290e37d1c1549737cc02d25b" refkind="member"><highlight class="normal">QStringRef<sp/><ref refid="class_xml_stream_reader_1a8326fe20290e37d1c1549737cc02d25b" kindref="member">XmlStreamReader::documentEncoding</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2861"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref>);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;type<sp/>==<sp/>XmlStreamReader::StartDocument)</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;documentEncoding;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringRef();</highlight></codeline>
<codeline lineno="2866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="preprocessor">#ifndef<sp/>QT_NO_XMLSTREAMWRITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947" refid="class_xml_stream_writer_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_private_tag_stack" kindref="compound">XmlStreamPrivateTagStack</ref><sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref><sp/>*q_ptr;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_DECLARE_PUBLIC(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>)</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref><sp/>*q);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleteDevice)</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>encoder;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef<sp/>&amp;);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeEscaped(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>escapeWhitespace<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>(&amp;s)[N])<sp/>{<sp/>write(s,<sp/>N<sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finishStartElement(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contents<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeStartElement(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>QIODevice<sp/>*<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>*stringDevice;</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>deleteDevice<sp/>:1;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>inStartElement<sp/>:1;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>inEmptyElement<sp/>:1;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>lastWasStartElement<sp/>:1;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>wroteSomething<sp/>:1;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref><sp/>:1;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>autoFormatting<sp/>:1;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>isCodecASCIICompatible<sp/>:1;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>autoFormattingIndent;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>emptyNamespace;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastNamespaceDeclaration;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextCodec<sp/>*codec;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextEncoder<sp/>*encoder;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkIfASCIICompatibleCodec();</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>&amp;findNamespace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeDeclaration<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noDefault<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeNamespaceDeclaration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>namespacePrefixCount;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>indent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal">XmlStreamWriterPrivate::XmlStreamWriterPrivate(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref><sp/>*q)</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>:autoFormattingIndent(4,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>q_ptr<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>stringDevice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteDevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>QTextCodec::codecForMib(106);<sp/></highlight><highlight class="comment">//<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder<sp/>=<sp/>codec-&gt;makeEncoder(QTextCodec::IgnoreHeader);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>byte<sp/>order<sp/>mark<sp/>for<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>checkIfASCIICompatibleCodec();</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>inStartElement<sp/>=<sp/>inEmptyElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>wroteSomething<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>lastWasStartElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNamespaceDeclaration<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>autoFormatting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>namespacePrefixCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::checkIfASCIICompatibleCodec()</highlight></codeline>
<codeline lineno="3018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(encoder);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assumes<sp/>ASCII-compatibility<sp/>for<sp/>all<sp/>8-bit<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>bytes<sp/>=<sp/>encoder-&gt;fromUnicode(QStringLiteral(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>isCodecASCIICompatible<sp/>=<sp/>(bytes.count()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/>isCodecASCIICompatible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef<sp/>&amp;s)</highlight></codeline>
<codeline lineno="3030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref>)</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>bytes<sp/>=<sp/>s.toLatin1();</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>bytes<sp/>=<sp/>encoder-&gt;fromUnicode(s.constData(),<sp/>s.size());</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>-&gt;write(bytes)<sp/>!=<sp/>bytes.size())</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringDevice)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.appendTo(stringDevice);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;XmlStreamWriter:<sp/>No<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="3049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref>)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>bytes<sp/>=<sp/>s.toLatin1();</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>bytes<sp/>=<sp/>encoder-&gt;fromUnicode(s);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>-&gt;write(bytes)<sp/>!=<sp/>bytes.size())</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringDevice)</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringDevice-&gt;append(s);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;XmlStreamWriter:<sp/>No<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::writeEscaped(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>escapeWhitespace)</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>escaped;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>escaped.reserve(s.size());</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s.size();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QChar<sp/>c<sp/>=<sp/>s.at(i);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;lt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;amp;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(escapeWhitespace<sp/>&amp;&amp;<sp/>c.isSpace())<sp/>{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;#10;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;#13;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.unicode()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped.append(QLatin1String(</highlight><highlight class="stringliteral">&quot;&amp;#9;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escaped<sp/>+=<sp/>QChar(c);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>write(escaped);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>from<sp/>ASCII<sp/>to<sp/>output<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="3099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref>)</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isCodecASCIICompatible)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1aa2a751d1b36fac13138b2f370683dfe7" kindref="member">device</ref>-&gt;write(s,<sp/>len)<sp/>!=<sp/>len)</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_reader_1a26bc2d6831322e5a1d86182295f912d0" kindref="member">hasError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>write(QString::fromLatin1(s,<sp/>len));</highlight></codeline>
<codeline lineno="3111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::writeNamespaceDeclaration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration)<sp/>{</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namespaceDeclaration.prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;<sp/>xmlns=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(namespaceDeclaration.namespaceUri);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;<sp/>xmlns:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(namespaceDeclaration.prefix);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(namespaceDeclaration.namespaceUri);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::finishStartElement(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contents)</highlight></codeline>
<codeline lineno="3128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hadSomethingWritten<sp/>=<sp/>wroteSomething;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/>wroteSomething<sp/>=<sp/>contents;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inStartElement)</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadSomethingWritten;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inEmptyElement)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;/&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_tag" kindref="compound">XmlStreamWriterPrivate::Tag</ref><sp/>&amp;tag<sp/>=<sp/>tagStack_pop();</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastNamespaceDeclaration<sp/>=<sp/>tag.namespaceDeclarationsSize;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastWasStartElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>inStartElement<sp/>=<sp/>inEmptyElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNamespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.size();</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadSomethingWritten;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">XmlStreamPrivateTagStack::NamespaceDeclaration</ref><sp/>&amp;XmlStreamWriterPrivate::findNamespace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeDeclaration,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noDefault)</highlight></codeline>
<codeline lineno="3148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.size()<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>[j];</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namespaceDeclaration.namespaceUri<sp/>==<sp/><ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!noDefault<sp/>||<sp/>!namespaceDeclaration.prefix.isEmpty())</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>namespaceDeclaration;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>.isEmpty())</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emptyNamespace;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.push();</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix.clear();</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>s;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>++namespacePrefixCount;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forever<sp/>{</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)<sp/>+<sp/>QString::number(n++);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.size()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>.at(j).prefix<sp/>!=<sp/>s)</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix<sp/>=<sp/>addToStringStorage(s);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>addToStringStorage(<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeDeclaration)</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeNamespaceDeclaration(namespaceDeclaration);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>namespaceDeclaration;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::indent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>level;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(autoFormattingIndent.constData(),<sp/>autoFormattingIndent.length());</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195" refid="class_xml_stream_writer_1acaffb798a42742e6be689bc0cf9b80d9" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_writer_1acaffb798a42742e6be689bc0cf9b80d9" kindref="member">XmlStreamWriter::XmlStreamWriter</ref>()</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>(this))</highlight></codeline>
<codeline lineno="3197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203" refid="class_xml_stream_writer_1adad3a38281bd2eee59f7240098fb0c96" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_writer_1acaffb798a42742e6be689bc0cf9b80d9" kindref="member">XmlStreamWriter::XmlStreamWriter</ref>(QIODevice<sp/>*<ref refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>(this))</highlight></codeline>
<codeline lineno="3205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;device<sp/>=<sp/><ref refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214" refid="class_xml_stream_writer_1a59044bd63fb4f1bf1c615666a44ea325" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_writer_1acaffb798a42742e6be689bc0cf9b80d9" kindref="member">XmlStreamWriter::XmlStreamWriter</ref>(QByteArray<sp/>*array)</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>(this))</highlight></codeline>
<codeline lineno="3216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;device<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QBuffer(array);</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;device-&gt;open(QIODevice::WriteOnly);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;deleteDevice<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226" refid="class_xml_stream_writer_1a149da545bb2fa21dbb6989c0eab6cf99" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_writer_1acaffb798a42742e6be689bc0cf9b80d9" kindref="member">XmlStreamWriter::XmlStreamWriter</ref>(QString<sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_ptr(new<sp/><ref refid="class_xml_stream_writer_private" kindref="compound">XmlStreamWriterPrivate</ref>(this))</highlight></codeline>
<codeline lineno="3228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stringDevice<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236" refid="class_xml_stream_writer_1a0cd28f6b6ce9ad95831b35d6823a8ecb" refkind="member"><highlight class="normal"><ref refid="class_xml_stream_writer_1a0cd28f6b6ce9ad95831b35d6823a8ecb" kindref="member">XmlStreamWriter::~XmlStreamWriter</ref>()</highlight></codeline>
<codeline lineno="3237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247" refid="class_xml_stream_writer_1ac03d4a48cc662d5c43a136560f514fd3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ac03d4a48cc662d5c43a136560f514fd3" kindref="member">XmlStreamWriter::setDevice</ref>(QIODevice<sp/>*<ref refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="3248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/>d-&gt;device)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;stringDevice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;deleteDevice)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;deleteDevice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;device<sp/>=<sp/><ref refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266" refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" refkind="member"><highlight class="normal">QIODevice<sp/>*<ref refid="class_xml_stream_writer_1a306a738e0aad39898ee318c7b7c8bc3c" kindref="member">XmlStreamWriter::device</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3267"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;device;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285" refid="class_xml_stream_writer_1ab73a5ee5db6824afd4a2bc66e8f12e78" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ab73a5ee5db6824afd4a2bc66e8f12e78" kindref="member">XmlStreamWriter::setCodec</ref>(QTextCodec<sp/>*<ref refid="class_xml_stream_writer_1a08d4e9eddc07ed3682ced34cce8861f9" kindref="member">codec</ref>)</highlight></codeline>
<codeline lineno="3286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codec)<sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;codec<sp/>=<sp/><ref refid="class_xml_stream_writer_1a08d4e9eddc07ed3682ced34cce8861f9" kindref="member">codec</ref>;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d-&gt;encoder;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;encoder<sp/>=<sp/>codec-&gt;makeEncoder(QTextCodec::IgnoreHeader);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>byte<sp/>order<sp/>mark<sp/>for<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;checkIfASCIICompatibleCodec();</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304" refid="class_xml_stream_writer_1a926ebebdb26125f7423cf579bf07143a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ab73a5ee5db6824afd4a2bc66e8f12e78" kindref="member">XmlStreamWriter::setCodec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*codecName)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1ab73a5ee5db6824afd4a2bc66e8f12e78" kindref="member">setCodec</ref>(QTextCodec::codecForName(codecName));</highlight></codeline>
<codeline lineno="3307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314" refid="class_xml_stream_writer_1a08d4e9eddc07ed3682ced34cce8861f9" refkind="member"><highlight class="normal">QTextCodec<sp/>*<ref refid="class_xml_stream_writer_1a08d4e9eddc07ed3682ced34cce8861f9" kindref="member">XmlStreamWriter::codec</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;codec;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345" refid="class_xml_stream_writer_1a537defbbbbbad819448033b22aaf0d28" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a537defbbbbbad819448033b22aaf0d28" kindref="member">XmlStreamWriter::setAutoFormatting</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="3346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;autoFormatting<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356" refid="class_xml_stream_writer_1a257ecf97cf02f3ca8cb86c2ecf425a8c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a257ecf97cf02f3ca8cb86c2ecf425a8c" kindref="member">XmlStreamWriter::autoFormatting</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;autoFormatting;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriter::setAutoFormattingIndent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacesOrTabs)</highlight></codeline>
<codeline lineno="3377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;autoFormattingIndent<sp/>=<sp/>QByteArray(qAbs(spacesOrTabs),<sp/>spacesOrTabs<sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382" refid="class_xml_stream_writer_1a322ab2c9f7ec4d33ef0fb55cfbdd9d7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a322ab2c9f7ec4d33ef0fb55cfbdd9d7d" kindref="member">XmlStreamWriter::autoFormattingIndent</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3383"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;autoFormattingIndent.count(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>-<sp/>d-&gt;autoFormattingIndent.count(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight></codeline>
<codeline lineno="3394" refid="class_xml_stream_writer_1a8a336415622c257d2df545b088e38eef" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a8a336415622c257d2df545b088e38eef" kindref="member">XmlStreamWriter::hasError</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3395"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;hasError;</highlight></codeline>
<codeline lineno="3398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408" refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">XmlStreamWriter::writeAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;qualifiedName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="3409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(d-&gt;inStartElement);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(qualifiedName.count(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(qualifiedName);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeEscaped(value,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428" refid="class_xml_stream_writer_1abfbab3a6a1ad652db31e46d40e727f84" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">XmlStreamWriter::writeAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value)</highlight></codeline>
<codeline lineno="3429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(d-&gt;inStartElement);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!name.contains(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">XmlStreamWriterPrivate::NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/>d-&gt;findNamespace(namespaceUri,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!namespaceDeclaration.prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(namespaceDeclaration.prefix);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(name);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeEscaped(value,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453" refid="class_xml_stream_writer_1aaa0061750c74a393ab443af6ddd06db5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">XmlStreamWriter::writeAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attribute" kindref="compound">XmlStreamAttribute</ref>&amp;<sp/>attribute)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>().isEmpty())</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">writeAttribute</ref>(attribute.<ref refid="class_xml_stream_attribute_1acc21c4ce8b0539d6c1131ab789171dd9" kindref="member">qualifiedName</ref>().toString(),</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>().toString());</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">writeAttribute</ref>(attribute.<ref refid="class_xml_stream_attribute_1adf6da78e3783c50df9ce1d950e0b94c8" kindref="member">namespaceUri</ref>().toString(),</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.<ref refid="class_xml_stream_attribute_1a2053ea2d13de7262dac760788ed8265f" kindref="member">name</ref>().toString(),</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.<ref refid="class_xml_stream_attribute_1a0cd7ec6aa7531c411ed20a354c2e7f24" kindref="member">value</ref>().toString());</highlight></codeline>
<codeline lineno="3462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474" refid="class_xml_stream_writer_1a401845495b28fcc27a7f491ac402ea47" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a401845495b28fcc27a7f491ac402ea47" kindref="member">XmlStreamWriter::writeAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_attributes" kindref="compound">XmlStreamAttributes</ref>&amp;<sp/>attributes)</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(d-&gt;inStartElement);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNUSED(d);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>attributes.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a685d12dc71870e20e835085b6326787b" kindref="member">writeAttribute</ref>(attributes.at(i));</highlight></codeline>
<codeline lineno="3481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3492" refid="class_xml_stream_writer_1a812b894549f810c701ca3826acd9cc65" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a812b894549f810c701ca3826acd9cc65" kindref="member">XmlStreamWriter::writeCDATA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="3493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement();</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>copy(text);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/>copy.replace(QLatin1String(</highlight><highlight class="stringliteral">&quot;]]&gt;&quot;</highlight><highlight class="normal">),<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;]]]]&gt;&lt;![CDATA[&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;![CDATA[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(copy);</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;]]&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510" refid="class_xml_stream_writer_1aea9dab80ea787794736d3f2a524780e5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1aea9dab80ea787794736d3f2a524780e5" kindref="member">XmlStreamWriter::writeCharacters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement();</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeEscaped(text);</highlight></codeline>
<codeline lineno="3515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522" refid="class_xml_stream_writer_1aa250fc649bdef6373d1f25d4bc7db431" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1aa250fc649bdef6373d1f25d4bc7db431" kindref="member">XmlStreamWriter::writeComment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!text.contains(QLatin1String(</highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>!text.endsWith(QLatin1Char(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>d-&gt;autoFormatting)</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;indent(d-&gt;tagStack.size());</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;!--&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(text);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;--&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inStartElement<sp/>=<sp/>d-&gt;lastWasStartElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538" refid="class_xml_stream_writer_1a6e2b9fe72e7a85b044690cf41aee18fe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a6e2b9fe72e7a85b044690cf41aee18fe" kindref="member">XmlStreamWriter::writeDTD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;dtd)</highlight></codeline>
<codeline lineno="3539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement();</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;autoFormatting)</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(dtd);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;autoFormatting)</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555" refid="class_xml_stream_writer_1a07e058f896327e9236e7c19132842cf2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a07e058f896327e9236e7c19132842cf2" kindref="member">XmlStreamWriter::writeEmptyElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;qualifiedName)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(qualifiedName.count(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeStartElement(QString(),<sp/>qualifiedName);</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inEmptyElement<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3571" refid="class_xml_stream_writer_1ad366e97aa66482054f029843bc982586" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a07e058f896327e9236e7c19132842cf2" kindref="member">XmlStreamWriter::writeEmptyElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="3572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!name.contains(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeStartElement(namespaceUri,<sp/>name);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;inEmptyElement<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588" refid="class_xml_stream_writer_1a3c1e28db26255b0a88745ac76e84485e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a3c1e28db26255b0a88745ac76e84485e" kindref="member">XmlStreamWriter::writeTextElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;qualifiedName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="3589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" kindref="member">writeStartElement</ref>(qualifiedName);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aea9dab80ea787794736d3f2a524780e5" kindref="member">writeCharacters</ref>(text);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" kindref="member">writeEndElement</ref>();</highlight></codeline>
<codeline lineno="3593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605" refid="class_xml_stream_writer_1a378c2645f837b9ea5786648285d4d6f4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a3c1e28db26255b0a88745ac76e84485e" kindref="member">XmlStreamWriter::writeTextElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="3606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" kindref="member">writeStartElement</ref>(namespaceUri,<sp/>name);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aea9dab80ea787794736d3f2a524780e5" kindref="member">writeCharacters</ref>(text);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" kindref="member">writeEndElement</ref>();</highlight></codeline>
<codeline lineno="3610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618" refid="class_xml_stream_writer_1a4fa078ed52892cec544e890efb1c3b50" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a4fa078ed52892cec544e890efb1c3b50" kindref="member">XmlStreamWriter::writeEndDocument</ref>()</highlight></codeline>
<codeline lineno="3619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(d-&gt;tagStack.size())</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" kindref="member">writeEndElement</ref>();</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3631" refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" kindref="member">XmlStreamWriter::writeEndElement</ref>()</highlight></codeline>
<codeline lineno="3632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;tagStack.isEmpty())</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shortcut:<sp/>if<sp/>nothing<sp/>was<sp/>written,<sp/>close<sp/>as<sp/>empty<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inStartElement<sp/>&amp;&amp;<sp/>!d-&gt;inEmptyElement)<sp/>{</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;/&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;lastWasStartElement<sp/>=<sp/>d-&gt;inStartElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_tag" kindref="compound">XmlStreamWriterPrivate::Tag</ref><sp/>&amp;tag<sp/>=<sp/>d-&gt;tagStack_pop();</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;lastNamespaceDeclaration<sp/>=<sp/>tag.namespaceDeclarationsSize;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!d-&gt;lastWasStartElement<sp/>&amp;&amp;<sp/>d-&gt;autoFormatting)</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;indent(d-&gt;tagStack.size()-1);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;tagStack.isEmpty())</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastWasStartElement<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_tag" kindref="compound">XmlStreamWriterPrivate::Tag</ref><sp/>&amp;tag<sp/>=<sp/>d-&gt;tagStack_pop();</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastNamespaceDeclaration<sp/>=<sp/>tag.namespaceDeclarationsSize;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tag.namespaceDeclaration.prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(tag.namespaceDeclaration.prefix);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(tag.name);</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3667" refid="class_xml_stream_writer_1aeea05577f7ecd0eaa34b4237fdbe446d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1aeea05577f7ecd0eaa34b4237fdbe446d" kindref="member">XmlStreamWriter::writeEntityReference</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="3668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement();</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(name);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692" refid="class_xml_stream_writer_1ae04b7c7035435fd98cc625257776e732" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ae04b7c7035435fd98cc625257776e732" kindref="member">XmlStreamWriter::writeNamespace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;prefix)</highlight></codeline>
<codeline lineno="3693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!namespaceUri.isEmpty());</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(prefix<sp/>!=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xmlns&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;findNamespace(namespaceUri,<sp/>d-&gt;inStartElement);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!((prefix<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;xml&quot;</highlight><highlight class="normal">))<sp/>^<sp/>(namespaceUri<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/XML/1998/namespace&quot;</highlight><highlight class="normal">))));</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(namespaceUri<sp/>!=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/2000/xmlns/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">XmlStreamWriterPrivate::NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/>d-&gt;namespaceDeclarations.push();</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix<sp/>=<sp/>d-&gt;addToStringStorage(prefix);</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>d-&gt;addToStringStorage(namespaceUri);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inStartElement)</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;writeNamespaceDeclaration(namespaceDeclaration);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721" refid="class_xml_stream_writer_1ad545600b4e2c9d73ad9e216a20ff081e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ad545600b4e2c9d73ad9e216a20ff081e" kindref="member">XmlStreamWriter::writeDefaultNamespace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri)</highlight></codeline>
<codeline lineno="3722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(namespaceUri<sp/>!=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/XML/1998/namespace&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(namespaceUri<sp/>!=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/2000/xmlns/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_xml_stream_private_tag_stack_1_1_namespace_declaration" kindref="compound">XmlStreamWriterPrivate::NamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/>d-&gt;namespaceDeclarations.push();</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.prefix.clear();</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceDeclaration.namespaceUri<sp/>=<sp/>d-&gt;addToStringStorage(namespaceUri);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;inStartElement)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;writeNamespaceDeclaration(namespaceDeclaration);</highlight></codeline>
<codeline lineno="3731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738" refid="class_xml_stream_writer_1a5b31ab7e5667538264c8d8fa8de79eda" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1a5b31ab7e5667538264c8d8fa8de79eda" kindref="member">XmlStreamWriter::writeProcessingInstruction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;data)</highlight></codeline>
<codeline lineno="3739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!data.contains(QLatin1String(</highlight><highlight class="stringliteral">&quot;?&gt;&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>d-&gt;autoFormatting)</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;indent(d-&gt;tagStack.size());</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(target);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.isNull())<sp/>{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(data);</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;?&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763" refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" kindref="member">XmlStreamWriter::writeStartDocument</ref>()</highlight></codeline>
<codeline lineno="3764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" kindref="member">writeStartDocument</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774" refid="class_xml_stream_writer_1affda139fb2d91c8893615b6ca6b9570a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" kindref="member">XmlStreamWriter::writeStartDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;version)</highlight></codeline>
<codeline lineno="3775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(version);</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;device)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>stringDevice<sp/>does<sp/>not<sp/>get<sp/>any<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>encoding=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;iso-8859-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(d-&gt;codec-&gt;name().constData(),<sp/>d-&gt;codec-&gt;name().length());</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;?&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3797" refid="class_xml_stream_writer_1af7df556ca625050ceba8041b9e71654b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" kindref="member">XmlStreamWriter::writeStartDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;version,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>standalone)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;write(version);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;device)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>stringDevice<sp/>does<sp/>not<sp/>get<sp/>any<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>encoding=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_TEXTCODEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;iso-8859-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(d-&gt;codec-&gt;name().constData(),<sp/>d-&gt;codec-&gt;name().length());</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(standalone)</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>standalone=\&quot;yes\&quot;?&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;write(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>standalone=\&quot;no\&quot;?&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825" refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" kindref="member">XmlStreamWriter::writeStartElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;qualifiedName)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(qualifiedName.count(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeStartElement(QString(),<sp/>qualifiedName);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight></codeline>
<codeline lineno="3841" refid="class_xml_stream_writer_1ab8d06c59d1684e88d2bd820c72baf7bc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" kindref="member">XmlStreamWriter::writeStartElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="3842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="class_xml_stream_writer" kindref="compound">XmlStreamWriter</ref>);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!name.contains(QLatin1Char(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;writeStartElement(namespaceUri,<sp/>name);</highlight></codeline>
<codeline lineno="3846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XmlStreamWriterPrivate::writeStartElement(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;namespaceUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="3849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!finishStartElement(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="class_xml_stream_writer_1a257ecf97cf02f3ca8cb86c2ecf425a8c" kindref="member">autoFormatting</ref>)</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent(tagStack.size());</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/>Tag<sp/>&amp;tag<sp/>=<sp/>tagStack_push();</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/>tag.name<sp/>=<sp/>addToStringStorage(name);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/>tag.namespaceDeclaration<sp/>=<sp/>findNamespace(namespaceUri);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tag.namespaceDeclaration.prefix.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(tag.namespaceDeclaration.prefix);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/>write(tag.name);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>inStartElement<sp/>=<sp/>lastWasStartElement<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lastNamespaceDeclaration;<sp/>i<sp/>&lt;<sp/>namespaceDeclarations.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeNamespaceDeclaration(namespaceDeclarations[i]);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>tag.namespaceDeclarationsSize<sp/>=<sp/>lastNamespaceDeclaration;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877" refid="class_xml_stream_writer_1ad3fc36a8359435e85bb0fa85dc785d70" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_writer_1ad3fc36a8359435e85bb0fa85dc785d70" kindref="member">XmlStreamWriter::writeCurrentToken</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_reader" kindref="compound">XmlStreamReader</ref><sp/>&amp;reader)</highlight></codeline>
<codeline lineno="3878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reader.<ref refid="class_xml_stream_reader_1a2c26bfb63c27f2992e24f038d65c8c0a" kindref="member">tokenType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::NoToken:</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::StartDocument:</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1ae9d5ccf2e94485352e4c1c8843dc0641" kindref="member">writeStartDocument</ref>();</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::EndDocument:</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a4fa078ed52892cec544e890efb1c3b50" kindref="member">writeEndDocument</ref>();</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::StartElement:<sp/>{</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XmlStreamNamespaceDeclarations<sp/>namespaceDeclarations<sp/>=<sp/>reader.<ref refid="class_xml_stream_reader_1a3e6033d64f3744d90e96287f3a04d913" kindref="member">namespaceDeclarations</ref>();</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>namespaceDeclarations.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_xml_stream_namespace_declaration" kindref="compound">XmlStreamNamespaceDeclaration</ref><sp/>&amp;namespaceDeclaration<sp/>=<sp/>namespaceDeclarations.at(i);</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1ae04b7c7035435fd98cc625257776e732" kindref="member">writeNamespace</ref>(namespaceDeclaration.<ref refid="class_xml_stream_namespace_declaration_1ac2d6510eeacc33073402389403e2c3ef" kindref="member">namespaceUri</ref>().toString(),</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespaceDeclaration.<ref refid="class_xml_stream_namespace_declaration_1a84440d3a55f8679da78032e02a49ccbd" kindref="member">prefix</ref>().toString());</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aa001c660c1df012b4e37773aa219c379" kindref="member">writeStartElement</ref>(reader.<ref refid="class_xml_stream_reader_1a4ea3344f8632d1cd70edfaddf9a8027c" kindref="member">namespaceUri</ref>().toString(),<sp/>reader.<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>().toString());</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a401845495b28fcc27a7f491ac402ea47" kindref="member">writeAttributes</ref>(reader.<ref refid="class_xml_stream_reader_1aaa89a6baad93837857847a3ec5d7710a" kindref="member">attributes</ref>());</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::EndElement:</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1add89e8f61a141e2b320cf2b567e7edfb" kindref="member">writeEndElement</ref>();</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::Characters:</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.<ref refid="class_xml_stream_reader_1ad1c5f23d9c60ab41c032940191d71ae4" kindref="member">isCDATA</ref>())</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a812b894549f810c701ca3826acd9cc65" kindref="member">writeCDATA</ref>(reader.<ref refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" kindref="member">text</ref>().toString());</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aea9dab80ea787794736d3f2a524780e5" kindref="member">writeCharacters</ref>(reader.<ref refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" kindref="member">text</ref>().toString());</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::Comment:</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aa250fc649bdef6373d1f25d4bc7db431" kindref="member">writeComment</ref>(reader.<ref refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" kindref="member">text</ref>().toString());</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::DTD:</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a6e2b9fe72e7a85b044690cf41aee18fe" kindref="member">writeDTD</ref>(reader.<ref refid="class_xml_stream_reader_1a1d129d0171b231efac34d7ee4480a50f" kindref="member">text</ref>().toString());</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::EntityReference:</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1aeea05577f7ecd0eaa34b4237fdbe446d" kindref="member">writeEntityReference</ref>(reader.<ref refid="class_xml_stream_reader_1a09b44691e1e74daa6bdd4ed465d3c0a2" kindref="member">name</ref>().toString());</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>XmlStreamReader::ProcessingInstruction:</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_xml_stream_writer_1a5b31ab7e5667538264c8d8fa8de79eda" kindref="member">writeProcessingInstruction</ref>(reader.<ref refid="class_xml_stream_reader_1a66bd483fca16586142dd890cacb9b967" kindref="member">processingInstructionTarget</ref>().toString(),</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_xml_stream_reader_1a2c9146676cc92895abaadc89f6fbc738" kindref="member">processingInstructionData</ref>().toString());</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(reader.<ref refid="class_xml_stream_reader_1a2c26bfb63c27f2992e24f038d65c8c0a" kindref="member">tokenType</ref>()<sp/>!=<sp/>XmlStreamReader::Invalid);</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning(</highlight><highlight class="stringliteral">&quot;XmlStreamWriter:<sp/>writeCurrentToken()<sp/>with<sp/>invalid<sp/>state.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_XMLSTREAMREADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_XMLSTREAMWRITER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/xmlstream/xmlstream.cpp"/>
  </compounddef>
</doxygen>
