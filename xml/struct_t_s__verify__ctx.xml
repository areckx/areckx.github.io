<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_t_s__verify__ctx" kind="struct" language="C++" prot="public">
    <compoundname>TS_verify_ctx</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a5e906cf22084ef30d67bdb15df294480" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned TS_verify_ctx::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="655" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a9aa523132a1fc3f0c6f5330b524e177f" prot="public" static="no" mutable="no">
        <type><ref refid="structx509__store__st" kindref="compound">X509_STORE</ref> *</type>
        <definition>X509_STORE* TS_verify_ctx::store</definition>
        <argsstring></argsstring>
        <name>store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="658" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1ab433c7a76c0dd42e99eb654aa7c459fa" prot="public" static="no" mutable="no">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* TS_verify_ctx::policy</definition>
        <argsstring></argsstring>
        <name>policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="662" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a1875de1fef64a6d896f228badbdd2ddf" prot="public" static="no" mutable="no">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* TS_verify_ctx::md_alg</definition>
        <argsstring></argsstring>
        <name>md_alg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="666" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a97e06ef1b0ab4490f7f50f06933c4187" prot="public" static="no" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* TS_verify_ctx::imprint</definition>
        <argsstring></argsstring>
        <name>imprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="667" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a4b7cf5f0d8930796aeac6966712612bb" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned TS_verify_ctx::imprint_len</definition>
        <argsstring></argsstring>
        <name>imprint_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="668" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a093f5641e9235cf8523d18b550bee7f4" prot="public" static="no" mutable="no">
        <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
        <definition>BIO* TS_verify_ctx::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="671" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1a3b3407367a1dd2b12053d527040b28a2" prot="public" static="no" mutable="no">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* TS_verify_ctx::nonce</definition>
        <argsstring></argsstring>
        <name>nonce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="674" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_t_s__verify__ctx_1aa41f4334c8821a67eca400e955957f57" prot="public" static="no" mutable="no">
        <type><ref refid="struct_g_e_n_e_r_a_l___n_a_m_e__st" kindref="compound">GENERAL_NAME</ref> *</type>
        <definition>GENERAL_NAME* TS_verify_ctx::tsa_name</definition>
        <argsstring></argsstring>
        <name>tsa_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="677" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_t_s__verify__ctx_1a27ea1de4a3594f27c7ac6255091f858f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TS_verify_ctx::STACK_OF</definition>
        <argsstring>(X509) *certs</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/ts.h" line="659" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="18901">
        <label>X509_name_st</label>
        <link refid="struct_x509__name__st"/>
        <childnode refid="18902" relation="usage">
          <edgelabel>bytes</edgelabel>
        </childnode>
      </node>
      <node id="18898">
        <label>TS_verify_ctx</label>
        <link refid="struct_t_s__verify__ctx"/>
        <childnode refid="18899" relation="usage">
          <edgelabel>nonce</edgelabel>
        </childnode>
        <childnode refid="18900" relation="usage">
          <edgelabel>store</edgelabel>
        </childnode>
        <childnode refid="18905" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="18907" relation="usage">
          <edgelabel>policy</edgelabel>
        </childnode>
        <childnode refid="18908" relation="usage">
          <edgelabel>md_alg</edgelabel>
        </childnode>
        <childnode refid="18910" relation="usage">
          <edgelabel>tsa_name</edgelabel>
        </childnode>
      </node>
      <node id="18910">
        <label>GENERAL_NAME_st</label>
        <link refid="struct_g_e_n_e_r_a_l___n_a_m_e__st"/>
        <childnode refid="18899" relation="usage">
          <edgelabel>dNSName</edgelabel>
          <edgelabel>iPAddress</edgelabel>
          <edgelabel>uniformResourceIdentifier</edgelabel>
          <edgelabel>ip</edgelabel>
          <edgelabel>rfc822Name</edgelabel>
          <edgelabel>ia5</edgelabel>
        </childnode>
        <childnode refid="18911" relation="usage">
          <edgelabel>otherName</edgelabel>
        </childnode>
        <childnode refid="18912" relation="usage">
          <edgelabel>ediPartyName</edgelabel>
        </childnode>
        <childnode refid="18901" relation="usage">
          <edgelabel>directoryName</edgelabel>
          <edgelabel>dirn</edgelabel>
        </childnode>
        <childnode refid="18907" relation="usage">
          <edgelabel>rid</edgelabel>
          <edgelabel>registeredID</edgelabel>
        </childnode>
        <childnode refid="18909" relation="usage">
          <edgelabel>x400Address</edgelabel>
          <edgelabel>other</edgelabel>
        </childnode>
      </node>
      <node id="18900">
        <label>x509_store_st</label>
        <link refid="structx509__store__st"/>
        <childnode refid="18901" relation="usage">
          <edgelabel>nm</edgelabel>
        </childnode>
        <childnode refid="18903" relation="usage">
          <edgelabel>param</edgelabel>
        </childnode>
        <childnode refid="18904" relation="usage">
          <edgelabel>ex_data</edgelabel>
        </childnode>
      </node>
      <node id="18906">
        <label>bio_method_st</label>
        <link refid="structbio__method__st"/>
      </node>
      <node id="18912">
        <label>EDIPartyName_st</label>
        <link refid="struct_e_d_i_party_name__st"/>
        <childnode refid="18899" relation="usage">
          <edgelabel>nameAssigner</edgelabel>
          <edgelabel>partyName</edgelabel>
        </childnode>
      </node>
      <node id="18909">
        <label>asn1_type_st</label>
        <link refid="structasn1__type__st"/>
        <childnode refid="18899" relation="usage">
          <edgelabel>bit_string</edgelabel>
          <edgelabel>utctime</edgelabel>
          <edgelabel>ia5string</edgelabel>
          <edgelabel>bmpstring</edgelabel>
          <edgelabel>universalstring</edgelabel>
          <edgelabel>sequence</edgelabel>
          <edgelabel>set</edgelabel>
          <edgelabel>generalstring</edgelabel>
          <edgelabel>utf8string</edgelabel>
          <edgelabel>enumerated</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18907" relation="usage">
          <edgelabel>object</edgelabel>
        </childnode>
      </node>
      <node id="18903">
        <label>X509_VERIFY_PARAM_st</label>
        <link refid="struct_x509___v_e_r_i_f_y___p_a_r_a_m__st"/>
      </node>
      <node id="18905">
        <label>bio_st</label>
        <link refid="structbio__st"/>
        <childnode refid="18905" relation="usage">
          <edgelabel>next_bio</edgelabel>
          <edgelabel>prev_bio</edgelabel>
        </childnode>
        <childnode refid="18904" relation="usage">
          <edgelabel>ex_data</edgelabel>
        </childnode>
        <childnode refid="18906" relation="usage">
          <edgelabel>method</edgelabel>
        </childnode>
      </node>
      <node id="18902">
        <label>buf_mem_st</label>
        <link refid="structbuf__mem__st"/>
      </node>
      <node id="18908">
        <label>X509_algor_st</label>
        <link refid="struct_x509__algor__st"/>
        <childnode refid="18907" relation="usage">
          <edgelabel>algorithm</edgelabel>
        </childnode>
        <childnode refid="18909" relation="usage">
          <edgelabel>parameter</edgelabel>
        </childnode>
      </node>
      <node id="18899">
        <label>asn1_string_st</label>
        <link refid="structasn1__string__st"/>
      </node>
      <node id="18907">
        <label>asn1_object_st</label>
        <link refid="structasn1__object__st"/>
      </node>
      <node id="18911">
        <label>otherName_st</label>
        <link refid="structother_name__st"/>
        <childnode refid="18907" relation="usage">
          <edgelabel>type_id</edgelabel>
        </childnode>
        <childnode refid="18909" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="18904">
        <label>crypto_ex_data_st</label>
        <link refid="structcrypto__ex__data__st"/>
      </node>
    </collaborationgraph>
    <location file="thirdparty/openssl/include/openssl/ts.h" line="653" column="1" bodyfile="thirdparty/openssl/include/openssl/ts.h" bodystart="652" bodyend="678"/>
    <listofallmembers>
      <member refid="struct_t_s__verify__ctx_1a093f5641e9235cf8523d18b550bee7f4" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>data</name></member>
      <member refid="struct_t_s__verify__ctx_1a5e906cf22084ef30d67bdb15df294480" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>flags</name></member>
      <member refid="struct_t_s__verify__ctx_1a97e06ef1b0ab4490f7f50f06933c4187" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>imprint</name></member>
      <member refid="struct_t_s__verify__ctx_1a4b7cf5f0d8930796aeac6966712612bb" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>imprint_len</name></member>
      <member refid="struct_t_s__verify__ctx_1a1875de1fef64a6d896f228badbdd2ddf" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>md_alg</name></member>
      <member refid="struct_t_s__verify__ctx_1a3b3407367a1dd2b12053d527040b28a2" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>nonce</name></member>
      <member refid="struct_t_s__verify__ctx_1ab433c7a76c0dd42e99eb654aa7c459fa" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>policy</name></member>
      <member refid="struct_t_s__verify__ctx_1a27ea1de4a3594f27c7ac6255091f858f" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>STACK_OF</name></member>
      <member refid="struct_t_s__verify__ctx_1a9aa523132a1fc3f0c6f5330b524e177f" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>store</name></member>
      <member refid="struct_t_s__verify__ctx_1aa41f4334c8821a67eca400e955957f57" prot="public" virt="non-virtual"><scope>TS_verify_ctx</scope><name>tsa_name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
