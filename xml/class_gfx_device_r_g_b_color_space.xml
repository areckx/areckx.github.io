<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_gfx_device_r_g_b_color_space" kind="class" language="C++" prot="public">
    <compoundname>GfxDeviceRGBColorSpace</compoundname>
    <basecompoundref refid="class_gfx_color_space" prot="public" virt="non-virtual">GfxColorSpace</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a1abc99f53b557211908412a6ddde70ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfxDeviceRGBColorSpace::GfxDeviceRGBColorSpace</definition>
        <argsstring>()</argsstring>
        <name>GfxDeviceRGBColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="368" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1021" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1afc0aba70a491643b5d49be1728a718d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>GfxDeviceRGBColorSpace::~GfxDeviceRGBColorSpace</definition>
        <argsstring>()</argsstring>
        <name>~GfxDeviceRGBColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="369" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1024" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a17c7299d917d8ed91eb6b85daf6680b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref> *</type>
        <definition>GfxColorSpace * GfxDeviceRGBColorSpace::copy</definition>
        <argsstring>()</argsstring>
        <name>copy</name>
        <reimplements refid="class_gfx_color_space_1ab9b445e9acc594640393e17e27e4cf5c">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="370" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1027" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a7e30334da11f114a4f713b21413f27d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GfxColorSpaceMode</type>
        <definition>virtual GfxColorSpaceMode GfxDeviceRGBColorSpace::getMode</definition>
        <argsstring>()</argsstring>
        <name>getMode</name>
        <reimplements refid="class_gfx_color_space_1a4559405ac922360f73a0d06ce05ca623">getMode</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="371" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a81324cfce1ad3fb98460a73d934c4db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getGray</definition>
        <argsstring>(GfxColor *color, GfxGray *gray)</argsstring>
        <name>getGray</name>
        <reimplements refid="class_gfx_color_space_1a76c3d1987b9328cfeeab349dfb8eddaa">getGray</reimplements>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type>GfxGray *</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="373" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1031" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1abbab8078bf5d31fd422ddbb76b5a2a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getRGB</definition>
        <argsstring>(GfxColor *color, GfxRGB *rgb)</argsstring>
        <name>getRGB</name>
        <reimplements refid="class_gfx_color_space_1a75622e2b5bdc720d5a13af5abeb9d93a">getRGB</reimplements>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref> *</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="374" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1048" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a22d28b3bb8a59db28b6160f63d9f89e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getCMYK</definition>
        <argsstring>(GfxColor *color, GfxCMYK *cmyk)</argsstring>
        <name>getCMYK</name>
        <reimplements refid="class_gfx_color_space_1af7bf579a6b33d40f3581224a32358c1a">getCMYK</reimplements>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref> *</type>
          <declname>cmyk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="375" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1125" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a4d83af2eb8a9d0815a59508996acb6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getDeviceN</definition>
        <argsstring>(GfxColor *color, GfxColor *deviceN)</argsstring>
        <name>getDeviceN</name>
        <reimplements refid="class_gfx_color_space_1a4fe08463045871f547c67e0ba6a26ceb">getDeviceN</reimplements>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>deviceN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="376" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1144" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1ae33640b0e1c2c2a6ecbd4f132565381b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getGrayLine</definition>
        <argsstring>(Guchar *in, Guchar *out, int length)</argsstring>
        <name>getGrayLine</name>
        <reimplements refid="class_gfx_color_space_1acfdfc1b540710b4c27c5694fd4379724">getGrayLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="377" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1037" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1aed850dbaa4062e3b2d7789384549ee4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getRGBLine</definition>
        <argsstring>(Guchar *in, unsigned int *out, int length)</argsstring>
        <name>getRGBLine</name>
        <reimplements refid="class_gfx_color_space_1a733db66f1648133353926534f6df9a4b">getRGBLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="378" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1054" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1ab996257195c279f6c921a40fcea0f117" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getRGBLine</definition>
        <argsstring>(Guchar *in, Guchar *out, int length)</argsstring>
        <name>getRGBLine</name>
        <reimplements refid="class_gfx_color_space_1acb4b06db7af47cfba3799b505b64a216">getRGBLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="379" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1063" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1aac2b92f89d84e3033baa28ea7dbccb67" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getRGBXLine</definition>
        <argsstring>(Guchar *in, Guchar *out, int length)</argsstring>
        <name>getRGBXLine</name>
        <reimplements refid="class_gfx_color_space_1a39b4b676e836a008a85d221c6ad6224f">getRGBXLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="380" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1071" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a73009b552b45053ea75d3af19003095c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getCMYKLine</definition>
        <argsstring>(Guchar *in, Guchar *out, int length)</argsstring>
        <name>getCMYKLine</name>
        <reimplements refid="class_gfx_color_space_1a910dcaca94d45162d45fa4fc3e39e050">getCMYKLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="381" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1080" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1aab8b6369a020869936b62cdb21b6e2f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getDeviceNLine</definition>
        <argsstring>(Guchar *in, Guchar *out, int length)</argsstring>
        <name>getDeviceNLine</name>
        <reimplements refid="class_gfx_color_space_1ac202e5c3f35019f469e31c24f8629902">getDeviceNLine</reimplements>
        <param>
          <type>Guchar *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="382" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1101" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1ae51495df28ad70e9637e28a397bb0bfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxDeviceRGBColorSpace::useGetRGBLine</definition>
        <argsstring>()</argsstring>
        <name>useGetRGBLine</name>
        <reimplements refid="class_gfx_color_space_1a5dc3e2f45b27e18903355b372c91b7d3">useGetRGBLine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="384" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a042b0ea2007a7f1fb651bdc5da8b04e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxDeviceRGBColorSpace::useGetGrayLine</definition>
        <argsstring>()</argsstring>
        <name>useGetGrayLine</name>
        <reimplements refid="class_gfx_color_space_1a1ce738aa5f5d2f1003722606131de666">useGetGrayLine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="385" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="385" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1ad280c59e843b5764c4174d4a50b4bca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxDeviceRGBColorSpace::useGetCMYKLine</definition>
        <argsstring>()</argsstring>
        <name>useGetCMYKLine</name>
        <reimplements refid="class_gfx_color_space_1a658fcf572f3c594da1af8d761e347db2">useGetCMYKLine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="386" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="386" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1aa504a34e8ce16c4669dc970b08070f83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxDeviceRGBColorSpace::useGetDeviceNLine</definition>
        <argsstring>()</argsstring>
        <name>useGetDeviceNLine</name>
        <reimplements refid="class_gfx_color_space_1a05afe94a07e6aef98242e7d91ca321fc">useGetDeviceNLine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="387" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a3eecf86dea0bf88bea603b2e3eaea74d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int GfxDeviceRGBColorSpace::getNComps</definition>
        <argsstring>()</argsstring>
        <name>getNComps</name>
        <reimplements refid="class_gfx_color_space_1a7c02497043112d539cb9fff80d59a149">getNComps</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="389" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_device_r_g_b_color_space_1a82c3504662893f754c3bba5580776129" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxDeviceRGBColorSpace::getDefaultColor</definition>
        <argsstring>(GfxColor *color)</argsstring>
        <name>getDefaultColor</name>
        <reimplements refid="class_gfx_color_space_1a46216c9497adc828d92c23b3ef3ec874">getDefaultColor</reimplements>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="390" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="1155" bodyend="1159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6725">
        <label>GfxColorSpace</label>
        <link refid="class_gfx_color_space"/>
      </node>
      <node id="6724">
        <label>GfxDeviceRGBColorSpace</label>
        <link refid="class_gfx_device_r_g_b_color_space"/>
        <childnode refid="6725" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6727">
        <label>GfxColorSpace</label>
        <link refid="class_gfx_color_space"/>
      </node>
      <node id="6726">
        <label>GfxDeviceRGBColorSpace</label>
        <link refid="class_gfx_device_r_g_b_color_space"/>
        <childnode refid="6727" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/GfxState.h" line="365" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="365" bodyend="393"/>
    <listofallmembers>
      <member refid="class_gfx_device_r_g_b_color_space_1a17c7299d917d8ed91eb6b85daf6680b4" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>copy</name></member>
      <member refid="class_gfx_color_space_1a858450091c4800d3b20f5ec00d3d7bb2" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>createMapping</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a22d28b3bb8a59db28b6160f63d9f89e1" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getCMYK</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a73009b552b45053ea75d3af19003095c" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getCMYKLine</name></member>
      <member refid="class_gfx_color_space_1a565e06b7691f78e2cb116c9ae86a75d8" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getColorSpaceModeName</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a82c3504662893f754c3bba5580776129" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getDefaultColor</name></member>
      <member refid="class_gfx_color_space_1ae6ef6bf8cc5350a86163d8c924c28259" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getDefaultRanges</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a4d83af2eb8a9d0815a59508996acb6c6" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getDeviceN</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1aab8b6369a020869936b62cdb21b6e2f8" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getDeviceNLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a81324cfce1ad3fb98460a73d934c4db3" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getGray</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1ae33640b0e1c2c2a6ecbd4f132565381b" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getGrayLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a7e30334da11f114a4f713b21413f27d1" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getMode</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a3eecf86dea0bf88bea603b2e3eaea74d" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getNComps</name></member>
      <member refid="class_gfx_color_space_1ae3246de274ca29e6b3f8c9518bcd7e7a" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getNumColorSpaceModes</name></member>
      <member refid="class_gfx_color_space_1a1e2df22dd9f134c45e538c81817ecece" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getOverprintMask</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1abbab8078bf5d31fd422ddbb76b5a2a44" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getRGB</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1aed850dbaa4062e3b2d7789384549ee4a" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getRGBLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1ab996257195c279f6c921a40fcea0f117" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getRGBLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1aac2b92f89d84e3033baa28ea7dbccb67" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>getRGBXLine</name></member>
      <member refid="class_gfx_color_space_1ab3e7357f0fcc95a97e0ae03739a7927d" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>GfxColorSpace</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a1abc99f53b557211908412a6ddde70ad" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>GfxDeviceRGBColorSpace</name></member>
      <member refid="class_gfx_color_space_1a17f370ed734b51be5389a47c73f44a07" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>isNonMarking</name></member>
      <member refid="class_gfx_color_space_1abb58f49030532ce0472969de9aeb94aa" prot="protected" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>mapping</name></member>
      <member refid="class_gfx_color_space_1a98d9d81b6aed7ad9d9164ef834478e66" prot="protected" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>overprintMask</name></member>
      <member refid="class_gfx_color_space_1a5148e906da19d9fb4f1ed8bc58aa9c69" prot="public" virt="non-virtual"><scope>GfxDeviceRGBColorSpace</scope><name>parse</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1ad280c59e843b5764c4174d4a50b4bca0" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>useGetCMYKLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1aa504a34e8ce16c4669dc970b08070f83" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>useGetDeviceNLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1a042b0ea2007a7f1fb651bdc5da8b04e1" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>useGetGrayLine</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1ae51495df28ad70e9637e28a397bb0bfa" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>useGetRGBLine</name></member>
      <member refid="class_gfx_color_space_1a5ce3223b6e798e6ef6ed1633e93fb79d" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>~GfxColorSpace</name></member>
      <member refid="class_gfx_device_r_g_b_color_space_1afc0aba70a491643b5d49be1728a718d6" prot="public" virt="virtual"><scope>GfxDeviceRGBColorSpace</scope><name>~GfxDeviceRGBColorSpace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
