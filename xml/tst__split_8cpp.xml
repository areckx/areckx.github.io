<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__split_8cpp" kind="file" language="C++">
    <compoundname>tst_split.cpp</compoundname>
    <includes local="no">QtTest/QtTest</includes>
    <includes refid="testutils_8h" local="yes">mtest/testutils.h</includes>
    <includes refid="score_8h" local="yes">libmscore/score.h</includes>
    <includes refid="measure_8h" local="yes">libmscore/measure.h</includes>
    <includes refid="segment_8h" local="yes">libmscore/segment.h</includes>
    <includes refid="chordrest_8h" local="yes">libmscore/chordrest.h</includes>
    <includes local="yes">tst_split.moc</includes>
    <incdepgraph>
      <node id="73905">
        <label>list</label>
      </node>
      <node id="73899">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="73890" relation="include">
        </childnode>
      </node>
      <node id="73901">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="73879">
        <label>mtest/libmscore/split/tst_split.cpp</label>
        <link refid="tst__split_8cpp"/>
        <childnode refid="73880" relation="include">
        </childnode>
        <childnode refid="73881" relation="include">
        </childnode>
        <childnode refid="73888" relation="include">
        </childnode>
        <childnode refid="73914" relation="include">
        </childnode>
        <childnode refid="73917" relation="include">
        </childnode>
        <childnode refid="73918" relation="include">
        </childnode>
        <childnode refid="73921" relation="include">
        </childnode>
      </node>
      <node id="73919">
        <label>functional</label>
      </node>
      <node id="73920">
        <label>duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="73885" relation="include">
        </childnode>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73893" relation="include">
        </childnode>
      </node>
      <node id="73916">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="73917" relation="include">
        </childnode>
      </node>
      <node id="73914">
        <label>libmscore/measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="73915" relation="include">
        </childnode>
        <childnode refid="73884" relation="include">
        </childnode>
        <childnode refid="73916" relation="include">
        </childnode>
      </node>
      <node id="73887">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="73921">
        <label>tst_split.moc</label>
      </node>
      <node id="73906">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="73917">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73887" relation="include">
        </childnode>
        <childnode refid="73890" relation="include">
        </childnode>
      </node>
      <node id="73892">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="73896">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73897" relation="include">
        </childnode>
      </node>
      <node id="73893">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="73884" relation="include">
        </childnode>
        <childnode refid="73894" relation="include">
        </childnode>
      </node>
      <node id="73907">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="73908" relation="include">
        </childnode>
      </node>
      <node id="73908">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="73909" relation="include">
        </childnode>
        <childnode refid="73910" relation="include">
        </childnode>
        <childnode refid="73911" relation="include">
        </childnode>
      </node>
      <node id="73915">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73912" relation="include">
        </childnode>
      </node>
      <node id="73900">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="73895" relation="include">
        </childnode>
      </node>
      <node id="73881">
        <label>mtest/testutils.h</label>
        <link refid="testutils_8h_source"/>
        <childnode refid="73882" relation="include">
        </childnode>
      </node>
      <node id="73909">
        <label>vector</label>
      </node>
      <node id="73897">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="73883">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="73913">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="73884">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="73885" relation="include">
        </childnode>
      </node>
      <node id="73895">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="73896" relation="include">
        </childnode>
      </node>
      <node id="73891">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="73892" relation="include">
        </childnode>
      </node>
      <node id="73902">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73893" relation="include">
        </childnode>
      </node>
      <node id="73912">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="73882" relation="include">
        </childnode>
      </node>
      <node id="73882">
        <label>libmscore/element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="73883" relation="include">
        </childnode>
        <childnode refid="73884" relation="include">
        </childnode>
        <childnode refid="73886" relation="include">
        </childnode>
        <childnode refid="73887" relation="include">
        </childnode>
      </node>
      <node id="73904">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="73905" relation="include">
        </childnode>
      </node>
      <node id="73911">
        <label>iostream</label>
      </node>
      <node id="73890">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="73885" relation="include">
        </childnode>
        <childnode refid="73891" relation="include">
        </childnode>
      </node>
      <node id="73889">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="73890" relation="include">
        </childnode>
        <childnode refid="73893" relation="include">
        </childnode>
        <childnode refid="73902" relation="include">
        </childnode>
      </node>
      <node id="73898">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="73918">
        <label>libmscore/chordrest.h</label>
        <link refid="chordrest_8h_source"/>
        <childnode refid="73919" relation="include">
        </childnode>
        <childnode refid="73895" relation="include">
        </childnode>
        <childnode refid="73920" relation="include">
        </childnode>
        <childnode refid="73902" relation="include">
        </childnode>
        <childnode refid="73887" relation="include">
        </childnode>
      </node>
      <node id="73885">
        <label>config.h</label>
      </node>
      <node id="73910">
        <label>algorithm</label>
      </node>
      <node id="73888">
        <label>libmscore/score.h</label>
        <link refid="score_8h"/>
        <childnode refid="73885" relation="include">
        </childnode>
        <childnode refid="73889" relation="include">
        </childnode>
        <childnode refid="73903" relation="include">
        </childnode>
        <childnode refid="73904" relation="include">
        </childnode>
        <childnode refid="73906" relation="include">
        </childnode>
        <childnode refid="73907" relation="include">
        </childnode>
        <childnode refid="73912" relation="include">
        </childnode>
        <childnode refid="73913" relation="include">
        </childnode>
      </node>
      <node id="73886">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="73903">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="73899" relation="include">
        </childnode>
        <childnode refid="73890" relation="include">
        </childnode>
        <childnode refid="73893" relation="include">
        </childnode>
      </node>
      <node id="73894">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="73882" relation="include">
        </childnode>
        <childnode refid="73895" relation="include">
        </childnode>
        <childnode refid="73898" relation="include">
        </childnode>
        <childnode refid="73899" relation="include">
        </childnode>
        <childnode refid="73887" relation="include">
        </childnode>
        <childnode refid="73900" relation="include">
        </childnode>
        <childnode refid="73901" relation="include">
        </childnode>
      </node>
      <node id="73880">
        <label>QtTest/QtTest</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_test_split" prot="public">TestSplit</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__split_8cpp_1a6c8de73bb604d91743c7f6f356eb171e" prot="public" static="no">
        <name>DIR</name>
        <initializer>QString(&quot;libmscore/split/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtest/libmscore/split/tst_split.cpp" line="21" column="9" bodyfile="mtest/libmscore/split/tst_split.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>$Id:$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2012<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtTest/QtTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtest/testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">libmscore/score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">libmscore/measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libmscore/chordrest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIR<sp/>QString(&quot;libmscore/split/&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>TestSplit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_test_split" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_split" kindref="compound">TestSplit</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_m_test" kindref="compound">MTest</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reference);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reference,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split01()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split01.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split01-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split02()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split02.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split02-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split03()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split03.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split03-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split04()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split04.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split04-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split05()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split05.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split05-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split06()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split06.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split06-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>6);<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split07()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split07.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split07-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split08()<sp/>{<sp/>split(</highlight><highlight class="stringliteral">&quot;split08.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split08-ref.mscx&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split183846()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-qn-qn-wn.mscx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-qn-qn-wn-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-wn-wn.mscx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-wn-wn-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-wn-wr-wn-hr-qr.mscx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-wn-wr-wn-hr-qr-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-wr-wn-wr-hn-qn.mscx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-wr-wn-wr-hn-qn-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-hn-hn-qn-qn-hn-hn.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-hn-hn-qn-qn-hn-hn-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>5);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split183846-irregular-verylong.mscx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;split183846-irregular-verylong-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>7);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split184061()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split184061-no-tie.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split184061-no-tie-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>3);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>splitting<sp/>on<sp/>11/16th<sp/>the<sp/>way<sp/>though<sp/>measure,<sp/>but<sp/>voice<sp/>2<sp/>has<sp/>whole<sp/>note<sp/>which<sp/>can&apos;t<sp/>be<sp/>divided<sp/>into<sp/>two<sp/>durations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split184061-keep-tie.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split184061-keep-tie-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>same,<sp/>but<sp/>this<sp/>this<sp/>the<sp/>split-up<sp/>whole<sp/>note<sp/>has<sp/>a<sp/>tie<sp/>to<sp/>the<sp/>next<sp/>measure...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split184061-keep-tie-before-break-voice-4.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split184061-keep-tie-before-break-voice-4-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>splitting<sp/>1/64th<sp/>after<sp/>middle<sp/>of<sp/>measure...voice<sp/>4<sp/>already<sp/>has<sp/>a<sp/>tie<sp/>that<sp/>need<sp/>to<sp/>be<sp/>preserved<sp/>after<sp/>splitting,<sp/>and<sp/>voice<sp/>2<sp/>has<sp/>whole<sp/>note<sp/>that<sp/>must<sp/>be<sp/>split<sp/>up<sp/>with<sp/>triple-dotted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split(</highlight><highlight class="stringliteral">&quot;split184061-other-inst-only-one-tie.mscx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;split184061-other-inst-only-one-tie-ref.mscx&quot;</highlight><highlight class="normal">,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>only<sp/>the<sp/>one<sp/>tied<sp/>note<sp/>of<sp/>the<sp/>chord<sp/>in<sp/>the<sp/>flute<sp/>should<sp/>still<sp/>be<sp/>tied<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>initTestCase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSplit::initTestCase()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initMTest();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSplit::split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m-&gt;first(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;next(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*<sp/>cr<sp/>=<sp/>toChordRest(s-&gt;element(0));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdSplitMeasure(cr);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1,<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestSplit::split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref>*<sp/>score<sp/>=<sp/><ref refid="namespace_ms_1ad2944b23a7131292b8ff341d5c023904" kindref="member">readScore</ref>(DIR<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(score);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/>m<sp/>=<sp/>score-&gt;firstMeasure();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/>s<sp/>=<sp/>m-&gt;first(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>index;<sp/>++i)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s-&gt;<ref refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" kindref="member">next1</ref>(SegmentType::ChordRest);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref>*<sp/>cr<sp/>=<sp/>toChordRest(s-&gt;element(0));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score-&gt;cmdSplitMeasure(cr);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(saveCompareScore(score,<sp/>f1,<sp/>DIR<sp/>+<sp/>ref));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">QTEST_MAIN(<ref refid="class_test_split" kindref="compound">TestSplit</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tst_split.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mtest/libmscore/split/tst_split.cpp"/>
  </compounddef>
</doxygen>
