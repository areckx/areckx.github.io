<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_state_8cc" kind="file" language="C++">
    <compoundname>SplashState.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="_splash_pattern_8h" local="yes">SplashPattern.h</includes>
    <includes refid="_splash_screen_8h" local="yes">SplashScreen.h</includes>
    <includes refid="_splash_clip_8h" local="yes">SplashClip.h</includes>
    <includes refid="_splash_bitmap_8h" local="yes">SplashBitmap.h</includes>
    <includes refid="_splash_state_8h" local="yes">SplashState.h</includes>
    <incdepgraph>
      <node id="92741">
        <label>stdarg.h</label>
      </node>
      <node id="92752">
        <label>SplashState.h</label>
        <link refid="_splash_state_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
      </node>
      <node id="92749">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="92728" relation="include">
        </childnode>
        <childnode refid="92737" relation="include">
        </childnode>
        <childnode refid="92738" relation="include">
        </childnode>
      </node>
      <node id="92750">
        <label>assert.h</label>
      </node>
      <node id="92729">
        <label>SplashScreen.h</label>
        <link refid="_splash_screen_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
        <childnode refid="92730" relation="include">
        </childnode>
      </node>
      <node id="92736">
        <label>poppler/GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92728" relation="include">
        </childnode>
        <childnode refid="92737" relation="include">
        </childnode>
        <childnode refid="92749" relation="include">
        </childnode>
        <childnode refid="92750" relation="include">
        </childnode>
        <childnode refid="92751" relation="include">
        </childnode>
      </node>
      <node id="92730">
        <label>stdlib.h</label>
      </node>
      <node id="92723">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="92724" relation="include">
        </childnode>
        <childnode refid="92725" relation="include">
        </childnode>
      </node>
      <node id="92744">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92737" relation="include">
        </childnode>
        <childnode refid="92745" relation="include">
        </childnode>
      </node>
      <node id="92751">
        <label>map</label>
      </node>
      <node id="92743">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="92741" relation="include">
        </childnode>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92728" relation="include">
        </childnode>
        <childnode refid="92739" relation="include">
        </childnode>
      </node>
      <node id="92747">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92737" relation="include">
        </childnode>
        <childnode refid="92745" relation="include">
        </childnode>
      </node>
      <node id="92740">
        <label>limits.h</label>
      </node>
      <node id="92725">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92724" relation="include">
        </childnode>
      </node>
      <node id="92742">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="92748">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92724" relation="include">
        </childnode>
        <childnode refid="92728" relation="include">
        </childnode>
        <childnode refid="92737" relation="include">
        </childnode>
        <childnode refid="92745" relation="include">
        </childnode>
      </node>
      <node id="92746">
        <label>pthread.h</label>
      </node>
      <node id="92734">
        <label>SplashXPathScanner.h</label>
        <link refid="_splash_x_path_scanner_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
      </node>
      <node id="92722">
        <label>string.h</label>
      </node>
      <node id="92739">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="92740" relation="include">
        </childnode>
        <childnode refid="92741" relation="include">
        </childnode>
        <childnode refid="92730" relation="include">
        </childnode>
        <childnode refid="92728" relation="include">
        </childnode>
      </node>
      <node id="92737">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="92738" relation="include">
        </childnode>
        <childnode refid="92724" relation="include">
        </childnode>
        <childnode refid="92722" relation="include">
        </childnode>
        <childnode refid="92728" relation="include">
        </childnode>
        <childnode refid="92723" relation="include">
        </childnode>
        <childnode refid="92739" relation="include">
        </childnode>
        <childnode refid="92742" relation="include">
        </childnode>
        <childnode refid="92743" relation="include">
        </childnode>
        <childnode refid="92744" relation="include">
        </childnode>
        <childnode refid="92747" relation="include">
        </childnode>
        <childnode refid="92748" relation="include">
        </childnode>
      </node>
      <node id="92732">
        <label>SplashMath.h</label>
        <link refid="_splash_math_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
        <childnode refid="92733" relation="include">
        </childnode>
        <childnode refid="92727" relation="include">
        </childnode>
      </node>
      <node id="92735">
        <label>SplashBitmap.h</label>
        <link refid="_splash_bitmap_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
        <childnode refid="92736" relation="include">
        </childnode>
        <childnode refid="92724" relation="include">
        </childnode>
      </node>
      <node id="92731">
        <label>SplashClip.h</label>
        <link refid="_splash_clip_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
        <childnode refid="92732" relation="include">
        </childnode>
        <childnode refid="92734" relation="include">
        </childnode>
      </node>
      <node id="92733">
        <label>math.h</label>
      </node>
      <node id="92726">
        <label>SplashPattern.h</label>
        <link refid="_splash_pattern_8h_source"/>
        <childnode refid="92727" relation="include">
        </childnode>
      </node>
      <node id="92745">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="92746" relation="include">
        </childnode>
      </node>
      <node id="92727">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92728" relation="include">
        </childnode>
      </node>
      <node id="92728">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92725" relation="include">
        </childnode>
      </node>
      <node id="92738">
        <label>set</label>
      </node>
      <node id="92721">
        <label>config.h</label>
      </node>
      <node id="92724">
        <label>stdio.h</label>
      </node>
      <node id="92720">
        <label>thirdparty/poppler/splash/SplashState.cc</label>
        <link refid="_splash_state_8cc"/>
        <childnode refid="92721" relation="include">
        </childnode>
        <childnode refid="92722" relation="include">
        </childnode>
        <childnode refid="92723" relation="include">
        </childnode>
        <childnode refid="92726" relation="include">
        </childnode>
        <childnode refid="92729" relation="include">
        </childnode>
        <childnode refid="92731" relation="include">
        </childnode>
        <childnode refid="92735" relation="include">
        </childnode>
        <childnode refid="92752" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_splash_state_8cc_1ac2d89a461075d602cc7899b56fefdb2b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int splashColorModeNComps[]</definition>
        <argsstring>[]</argsstring>
        <name>splashColorModeNComps</name>
        <initializer>= {
  1, 1, 3, 3, 4



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/SplashState.cc" line="40" column="1" bodyfile="thirdparty/poppler/splash/SplashState.cc" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashState.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009,<sp/>2011,<sp/>2012,<sp/>2015<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashPattern.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashScreen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashClip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashBitmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>components<sp/>in<sp/>each<sp/>color<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>splashColorModeNComps[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>1,<sp/>1,<sp/>3,<sp/>3,<sp/>4</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,<sp/>4,<sp/>4<sp/>+<sp/>SPOT_NCOMPS</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">SplashState::SplashState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>vectorAntialias,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_splash_screen_params" kindref="compound">SplashScreenParams</ref><sp/>*screenParams)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>SplashColor<sp/><ref refid="structcolor" kindref="compound">color</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>matrix[0]<sp/>=<sp/>1;<sp/><sp/>matrix[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>matrix[2]<sp/>=<sp/>0;<sp/><sp/>matrix[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>matrix[4]<sp/>=<sp/>0;<sp/><sp/>matrix[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>memset(&amp;color,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashColor));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>strokePattern<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_solid_color" kindref="compound">SplashSolidColor</ref>(color);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>fillPattern<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_solid_color" kindref="compound">SplashSolidColor</ref>(color);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>screen<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref>(screenParams);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>blendFunc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>strokeAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>fillAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>multiplyPatternAlpha<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>patternStrokeAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>patternFillAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>lineWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>lineCap<sp/>=<sp/>splashLineCapButt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>lineJoin<sp/>=<sp/>splashLineJoinMiter;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>miterLimit<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>flatness<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>lineDash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>lineDashLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>lineDashPhase<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>strokeAdjust<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>clip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_clip" kindref="compound">SplashClip</ref>(0,<sp/>0,<sp/>width<sp/>-<sp/>0.001,<sp/>height<sp/>-<sp/>0.001,<sp/>vectorAntialias);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>softMask<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>deleteSoftMask<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>inNonIsolatedGroup<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>fillOverprint<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>strokeOverprint<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>overprintMode<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferR[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferG[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferB[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>grayTransfer[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferC[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferM[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferY[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferK[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceNTransfer[cp][i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>overprintMask<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>overprintAdditive<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">SplashState::SplashState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>GBool<sp/>vectorAntialias,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>*screenA)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>SplashColor<sp/>color;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>matrix[0]<sp/>=<sp/>1;<sp/><sp/>matrix[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>matrix[2]<sp/>=<sp/>0;<sp/><sp/>matrix[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>matrix[4]<sp/>=<sp/>0;<sp/><sp/>matrix[5]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>memset(&amp;color,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashColor));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>strokePattern<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_solid_color" kindref="compound">SplashSolidColor</ref>(color);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>fillPattern<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_solid_color" kindref="compound">SplashSolidColor</ref>(color);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>screen<sp/>=<sp/>screenA-&gt;copy();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>blendFunc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>strokeAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>fillAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>multiplyPatternAlpha<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>patternStrokeAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>patternFillAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>lineWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>lineCap<sp/>=<sp/>splashLineCapButt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>lineJoin<sp/>=<sp/>splashLineJoinMiter;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>miterLimit<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>flatness<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>lineDash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>lineDashLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>lineDashPhase<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>strokeAdjust<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>clip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_clip" kindref="compound">SplashClip</ref>(0,<sp/>0,<sp/>width<sp/>-<sp/>0.001,<sp/>height<sp/>-<sp/>0.001,<sp/>vectorAntialias);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>softMask<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>deleteSoftMask<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>inNonIsolatedGroup<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>fillOverprint<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>strokeOverprint<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>overprintMode<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferR[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferG[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>rgbTransferB[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>grayTransfer[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferC[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferM[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferY[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferK[i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceNTransfer[cp][i]<sp/>=<sp/>(Guchar)i;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>overprintMask<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>overprintAdditive<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">SplashState::SplashState(<ref refid="class_splash_state" kindref="compound">SplashState</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>memcpy(matrix,<sp/>state-&gt;matrix,<sp/>6<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>strokePattern<sp/>=<sp/>state-&gt;strokePattern-&gt;copy();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>fillPattern<sp/>=<sp/>state-&gt;fillPattern-&gt;copy();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>screen<sp/>=<sp/>state-&gt;screen-&gt;copy();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>blendFunc<sp/>=<sp/>state-&gt;blendFunc;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>strokeAlpha<sp/>=<sp/>state-&gt;strokeAlpha;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>fillAlpha<sp/>=<sp/>state-&gt;fillAlpha;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>multiplyPatternAlpha<sp/>=<sp/>state-&gt;multiplyPatternAlpha;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>patternStrokeAlpha<sp/>=<sp/>state-&gt;patternStrokeAlpha;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>patternFillAlpha<sp/>=<sp/>state-&gt;patternFillAlpha;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>lineWidth<sp/>=<sp/>state-&gt;lineWidth;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>lineCap<sp/>=<sp/>state-&gt;lineCap;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>lineJoin<sp/>=<sp/>state-&gt;lineJoin;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>miterLimit<sp/>=<sp/>state-&gt;miterLimit;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>flatness<sp/>=<sp/>state-&gt;flatness;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineDash)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashLength<sp/>=<sp/>state-&gt;lineDashLength;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDash<sp/>=<sp/>(SplashCoord<sp/>*)gmallocn(lineDashLength,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lineDash,<sp/>state-&gt;lineDash,<sp/>lineDashLength<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>lineDashPhase<sp/>=<sp/>state-&gt;lineDashPhase;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>strokeAdjust<sp/>=<sp/>state-&gt;strokeAdjust;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>clip<sp/>=<sp/>state-&gt;clip-&gt;copy();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>softMask<sp/>=<sp/>state-&gt;softMask;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>deleteSoftMask<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>inNonIsolatedGroup<sp/>=<sp/>state-&gt;inNonIsolatedGroup;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>fillOverprint<sp/>=<sp/>state-&gt;fillOverprint;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>strokeOverprint<sp/>=<sp/>state-&gt;strokeOverprint;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>overprintMode<sp/>=<sp/>state-&gt;overprintMode;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferR,<sp/>state-&gt;rgbTransferR,<sp/>256);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferG,<sp/>state-&gt;rgbTransferG,<sp/>256);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferB,<sp/>state-&gt;rgbTransferB,<sp/>256);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>memcpy(grayTransfer,<sp/>state-&gt;grayTransfer,<sp/>256);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>memcpy(cmykTransferC,<sp/>state-&gt;cmykTransferC,<sp/>256);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>memcpy(cmykTransferM,<sp/>state-&gt;cmykTransferM,<sp/>256);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>memcpy(cmykTransferY,<sp/>state-&gt;cmykTransferY,<sp/>256);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>memcpy(cmykTransferK,<sp/>state-&gt;cmykTransferK,<sp/>256);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(deviceNTransfer[cp],<sp/>state-&gt;deviceNTransfer[cp],<sp/>256);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>overprintMask<sp/>=<sp/>state-&gt;overprintMask;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>overprintAdditive<sp/>=<sp/>state-&gt;overprintAdditive;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">SplashState::~SplashState()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>strokePattern;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fillPattern;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>screen;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>gfree(lineDash);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleteSoftMask<sp/>&amp;&amp;<sp/>softMask)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>softMask;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setStrokePattern(<ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*strokePatternA)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>strokePattern;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>strokePattern<sp/>=<sp/>strokePatternA;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setFillPattern(<ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*fillPatternA)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fillPattern;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>fillPattern<sp/>=<sp/>fillPatternA;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setScreen(<ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>*screenA)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>screen;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>screen<sp/>=<sp/>screenA;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setLineDash(SplashCoord<sp/>*lineDashA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDashLengthA,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>lineDashPhaseA)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>gfree(lineDash);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>lineDashLength<sp/>=<sp/>lineDashLengthA;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashLength<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDash<sp/>=<sp/>(SplashCoord<sp/>*)gmallocn(lineDashLength,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lineDash,<sp/>lineDashA,<sp/>lineDashLength<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDash<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>lineDashPhase<sp/>=<sp/>lineDashPhaseA;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setSoftMask(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*softMaskA)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleteSoftMask)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>softMask;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>softMask<sp/>=<sp/>softMaskA;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>deleteSoftMask<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplashState::setTransfer(Guchar<sp/>*red,<sp/>Guchar<sp/>*green,<sp/>Guchar<sp/>*blue,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>*gray)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferC[i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferR[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferM[i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferG[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferY[i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferB[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>cmykTransferK[i]<sp/>=<sp/>255<sp/>-<sp/>grayTransfer[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceNTransfer[0][i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferR[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceNTransfer[1][i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferG[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceNTransfer[2][i]<sp/>=<sp/>255<sp/>-<sp/>rgbTransferB[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceNTransfer[3][i]<sp/>=<sp/>255<sp/>-<sp/>grayTransfer[255<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferR,<sp/>red,<sp/>256);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferG,<sp/>green,<sp/>256);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>memcpy(rgbTransferB,<sp/>blue,<sp/>256);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>memcpy(grayTransfer,<sp/>gray,<sp/>256);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/SplashState.cc"/>
  </compounddef>
</doxygen>
