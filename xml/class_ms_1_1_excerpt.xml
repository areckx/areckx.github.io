<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_excerpt" kind="class" language="C++" prot="public">
    <compoundname>Ms::Excerpt</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_ms_1_1_excerpt_1af85b33e43a09c08e93810b4f99a77903" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Ms::Score</ref></type>
        <definition>Ms::Score Ms::Excerpt::partScore</definition>
        <argsstring></argsstring>
        <name>partScore</name>
        <read>partScore</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="35" column="1" bodyfile="libmscore/excerpt.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_excerpt_1ade369c4e241c5cd0a8b8f92998fe9430" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QString</type>
        <definition>QString Ms::Excerpt::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <read>title</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="35" column="1" bodyfile="libmscore/excerpt.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_excerpt_1a6cc3dca7aaa37a090bfd7e5cd0ffa907" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
        <definition>MasterScore* Ms::Excerpt::_oscore</definition>
        <argsstring></argsstring>
        <name>_oscore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="39" column="1" bodyfile="libmscore/excerpt.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_excerpt_1a71d6b8becc625989586ecb642c5f365f" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
        <definition>Score* Ms::Excerpt::_partScore</definition>
        <argsstring></argsstring>
        <name>_partScore</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="41" column="1" bodyfile="libmscore/excerpt.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_excerpt_1ac6e1ccc6a08e0f055461651292cf4f6e" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Excerpt::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="42" column="1" bodyfile="libmscore/excerpt.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_excerpt_1aae8a9041f7e44b2012ebeb690dd212ea" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> * &gt;</type>
        <definition>QList&lt;Part*&gt; Ms::Excerpt::_parts</definition>
        <argsstring></argsstring>
        <name>_parts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="43" column="1" bodyfile="libmscore/excerpt.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_excerpt_1a8c2143078a338bd7a8d790f5aa028220" prot="private" static="no" mutable="no">
        <type>QMultiMap&lt; int, int &gt;</type>
        <definition>QMultiMap&lt;int, int&gt; Ms::Excerpt::_tracks</definition>
        <argsstring></argsstring>
        <name>_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="44" column="1" bodyfile="libmscore/excerpt.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a750d7a3aca8566a6f6cf0485bb9d6ace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::Excerpt::Excerpt</definition>
        <argsstring>(MasterScore *s=0)</argsstring>
        <name>Excerpt</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
          <declname>s</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="47" column="1" bodyfile="libmscore/excerpt.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a4396fdf230f4563b6c61e67650be49ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> * &gt; &amp;</type>
        <definition>QList&lt;Part*&gt;&amp; Ms::Excerpt::parts</definition>
        <argsstring>()</argsstring>
        <name>parts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="49" column="1" bodyfile="libmscore/excerpt.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a3a81ea4f8b917ff661e329d163ddda52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::setParts</definition>
        <argsstring>(const QList&lt; Part *&gt; &amp;p)</argsstring>
        <name>setParts</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *&gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="50" column="1" bodyfile="libmscore/excerpt.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1ad51403bea37a2e9ab3e1da1a48c5d661" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QMultiMap&lt; int, int &gt; &amp;</type>
        <definition>QMultiMap&lt;int, int&gt;&amp; Ms::Excerpt::tracks</definition>
        <argsstring>()</argsstring>
        <name>tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="53" column="1" bodyfile="libmscore/excerpt.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a0f7af4fec67d932ea725902c7ebf9108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::setTracks</definition>
        <argsstring>(const QMultiMap&lt; int, int &gt; &amp;t)</argsstring>
        <name>setTracks</name>
        <param>
          <type>const QMultiMap&lt; int, int &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="54" column="1" bodyfile="libmscore/excerpt.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a75a65f7f39bae14bcc016a9906f0beb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
        <definition>MasterScore* Ms::Excerpt::oscore</definition>
        <argsstring>() const</argsstring>
        <name>oscore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="56" column="1" bodyfile="libmscore/excerpt.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1acd4a10308e373f0d721cfe7caa2b49b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
        <definition>Score* Ms::Excerpt::partScore</definition>
        <argsstring>() const</argsstring>
        <name>partScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="57" column="1" bodyfile="libmscore/excerpt.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a0eabdd8062b4b252570df4a797f1c611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::setPartScore</definition>
        <argsstring>(Score *s)</argsstring>
        <name>setPartScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="58" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="1187" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a94a4951ab2ed99ed891ca086d15f2f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::read</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="60" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="52" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a49099809fe18f0a02f122a869a57d2b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Excerpt::operator!=</definition>
        <argsstring>(const Excerpt &amp;) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="62" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="78" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a72fbb0b5840da2ca4dab21362b35276c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Excerpt::operator==</definition>
        <argsstring>(const Excerpt &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="63" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="95" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a889b2cd3e65d3edf0672f691ac56e8cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Excerpt::title</definition>
        <argsstring>() const</argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="65" column="1" bodyfile="libmscore/excerpt.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a9f2233c7f65d1cfb12f8627006b66417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::setTitle</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>setTitle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="66" column="1" bodyfile="libmscore/excerpt.h" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a3285b9252a8366a27adbe16384010aea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> * &gt;</type>
        <definition>QList&lt; Excerpt * &gt; Ms::Excerpt::createAllExcerpt</definition>
        <argsstring>(MasterScore *score)</argsstring>
        <name>createAllExcerpt</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="68" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="1140" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1ac491f6cf0d2f8e686e5e21412e8f4c43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Excerpt::createName</definition>
        <argsstring>(const QString &amp;partName, QList&lt; Excerpt *&gt; &amp;)</argsstring>
        <name>createName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>partName</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> *&gt; &amp;</type>
          <defname>excerptList</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="69" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="1162" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1aca9a4917c3083e4a0d1bd41841e270ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::createExcerpt</definition>
        <argsstring>(Excerpt *)</argsstring>
        <name>createExcerpt</name>
        <param>
          <type><ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> *</type>
          <defname>excerpt</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="70" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="121" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a5d78906d9789b2cabef3cc857ea340a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::cloneStaves</definition>
        <argsstring>(Score *oscore, Score *score, const QList&lt; int &gt; &amp;map, QMultiMap&lt; int, int &gt; &amp;allTracks)</argsstring>
        <name>cloneStaves</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>oscore</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <param>
          <type>const QList&lt; int &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>QMultiMap&lt; int, int &gt; &amp;</type>
          <declname>allTracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="71" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="406" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1a8a1a0502343de780074b3c6b0a50fdcd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::cloneStaff</definition>
        <argsstring>(Staff *ostaff, Staff *nstaff)</argsstring>
        <name>cloneStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>ostaff</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>nstaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="72" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="789" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_excerpt_1ac44cea8974631df566d8f2c6f9c3bd74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Excerpt::cloneStaff2</definition>
        <argsstring>(Staff *ostaff, Staff *nstaff, int stick, int etick)</argsstring>
        <name>cloneStaff2</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>ostaff</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>nstaff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>etick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/excerpt.h" line="73" column="1" bodyfile="libmscore/excerpt.cpp" bodystart="968" bodyend="1134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4668">
        <label>QObject</label>
      </node>
      <node id="4667">
        <label>Ms::Excerpt</label>
        <link refid="class_ms_1_1_excerpt"/>
        <childnode refid="4668" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4670">
        <label>QObject</label>
      </node>
      <node id="4669">
        <label>Ms::Excerpt</label>
        <link refid="class_ms_1_1_excerpt"/>
        <childnode refid="4670" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libmscore/excerpt.h" line="34" column="1" bodyfile="libmscore/excerpt.h" bodystart="34" bodyend="74"/>
    <listofallmembers>
      <member refid="class_ms_1_1_excerpt_1a6cc3dca7aaa37a090bfd7e5cd0ffa907" prot="private" virt="non-virtual"><scope>Ms::Excerpt</scope><name>_oscore</name></member>
      <member refid="class_ms_1_1_excerpt_1aae8a9041f7e44b2012ebeb690dd212ea" prot="private" virt="non-virtual"><scope>Ms::Excerpt</scope><name>_parts</name></member>
      <member refid="class_ms_1_1_excerpt_1a71d6b8becc625989586ecb642c5f365f" prot="private" virt="non-virtual"><scope>Ms::Excerpt</scope><name>_partScore</name></member>
      <member refid="class_ms_1_1_excerpt_1ac6e1ccc6a08e0f055461651292cf4f6e" prot="private" virt="non-virtual"><scope>Ms::Excerpt</scope><name>_title</name></member>
      <member refid="class_ms_1_1_excerpt_1a8c2143078a338bd7a8d790f5aa028220" prot="private" virt="non-virtual"><scope>Ms::Excerpt</scope><name>_tracks</name></member>
      <member refid="class_ms_1_1_excerpt_1a8a1a0502343de780074b3c6b0a50fdcd" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>cloneStaff</name></member>
      <member refid="class_ms_1_1_excerpt_1ac44cea8974631df566d8f2c6f9c3bd74" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>cloneStaff2</name></member>
      <member refid="class_ms_1_1_excerpt_1a5d78906d9789b2cabef3cc857ea340a8" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>cloneStaves</name></member>
      <member refid="class_ms_1_1_excerpt_1a3285b9252a8366a27adbe16384010aea" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>createAllExcerpt</name></member>
      <member refid="class_ms_1_1_excerpt_1aca9a4917c3083e4a0d1bd41841e270ef" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>createExcerpt</name></member>
      <member refid="class_ms_1_1_excerpt_1ac491f6cf0d2f8e686e5e21412e8f4c43" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>createName</name></member>
      <member refid="class_ms_1_1_excerpt_1a750d7a3aca8566a6f6cf0485bb9d6ace" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>Excerpt</name></member>
      <member refid="class_ms_1_1_excerpt_1a49099809fe18f0a02f122a869a57d2b6" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>operator!=</name></member>
      <member refid="class_ms_1_1_excerpt_1a72fbb0b5840da2ca4dab21362b35276c" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>operator==</name></member>
      <member refid="class_ms_1_1_excerpt_1a75a65f7f39bae14bcc016a9906f0beb0" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>oscore</name></member>
      <member refid="class_ms_1_1_excerpt_1a4396fdf230f4563b6c61e67650be49ee" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>parts</name></member>
      <member refid="class_ms_1_1_excerpt_1af85b33e43a09c08e93810b4f99a77903" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>partScore</name></member>
      <member refid="class_ms_1_1_excerpt_1acd4a10308e373f0d721cfe7caa2b49b5" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>partScore</name></member>
      <member refid="class_ms_1_1_excerpt_1a94a4951ab2ed99ed891ca086d15f2f7e" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>read</name></member>
      <member refid="class_ms_1_1_excerpt_1a3a81ea4f8b917ff661e329d163ddda52" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>setParts</name></member>
      <member refid="class_ms_1_1_excerpt_1a0eabdd8062b4b252570df4a797f1c611" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>setPartScore</name></member>
      <member refid="class_ms_1_1_excerpt_1a9f2233c7f65d1cfb12f8627006b66417" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>setTitle</name></member>
      <member refid="class_ms_1_1_excerpt_1a0f7af4fec67d932ea725902c7ebf9108" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>setTracks</name></member>
      <member refid="class_ms_1_1_excerpt_1ade369c4e241c5cd0a8b8f92998fe9430" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>title</name></member>
      <member refid="class_ms_1_1_excerpt_1a889b2cd3e65d3edf0672f691ac56e8cb" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>title</name></member>
      <member refid="class_ms_1_1_excerpt_1ad51403bea37a2e9ab3e1da1a48c5d661" prot="public" virt="non-virtual"><scope>Ms::Excerpt</scope><name>tracks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
