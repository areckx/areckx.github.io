<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_ms_1_1_midi_clef" kind="namespace" language="C++">
    <compoundname>Ms::MidiClef</compoundname>
    <innerclass refid="class_ms_1_1_midi_clef_1_1_average_pitch" prot="public">Ms::MidiClef::AveragePitch</innerclass>
    <innerclass refid="class_ms_1_1_midi_clef_1_1_min_max_pitch" prot="public">Ms::MidiClef::MinMaxPitch</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="importmidi__clef_8cpp_1afa740df0915870a969a72189a7ae5c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiClef::clefMidPitch</definition>
        <argsstring>()</argsstring>
        <name>clefMidPitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="87" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a9c9e6ea61d328f4188505a64ab0d48c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClefType</type>
        <definition>ClefType Ms::MidiClef::clefTypeFromAveragePitch</definition>
        <argsstring>(int averagePitch)</argsstring>
        <name>clefTypeFromAveragePitch</name>
        <param>
          <type>int</type>
          <declname>averagePitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="93" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1ad96dd8df4bcf73fd5e2a5fe0b5912015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiClef::createClef</definition>
        <argsstring>(ClefType clefType, Staff *staff, int tick, bool isSmall=false)</argsstring>
        <name>createClef</name>
        <param>
          <type>ClefType</type>
          <declname>clefType</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSmall</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="102" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="102" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a80575a0e30a13bae31eea8ef28b6636a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_midi_clef_1_1_average_pitch" kindref="compound">AveragePitch</ref></type>
        <definition>AveragePitch Ms::MidiClef::findAverageSegPitch</definition>
        <argsstring>(const Segment *seg, int strack)</argsstring>
        <name>findAverageSegPitch</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="121" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="121" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1ae7589503bb3acf8d5da059e9128adbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_midi_clef_1_1_min_max_pitch" kindref="compound">MinMaxPitch</ref></type>
        <definition>MinMaxPitch Ms::MidiClef::findMinMaxSegPitch</definition>
        <argsstring>(const Segment *seg, int strack)</argsstring>
        <name>findMinMaxSegPitch</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="136" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="136" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1ae40e763d7b5adf8ec7bf9c485503b9f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiClef::findPitchPenaltyForClef</definition>
        <argsstring>(int pitch, int clefIndex)</argsstring>
        <name>findPitchPenaltyForClef</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clefIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="185" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="185" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a6e8559dc50c51172230c3d191b0251eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; ElementType, <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &gt;</type>
        <definition>std::pair&lt;ElementType, ReducedFraction&gt; Ms::MidiClef::findChordRest</definition>
        <argsstring>(const Segment *seg, int strack)</argsstring>
        <name>findChordRest</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="223" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="223" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1ad83f6081b82ebfea2c1f93b4c6093a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiClef::findClefChangePenalty</definition>
        <argsstring>(int pos, int clefIndex, const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;trebleBassPath, const Segment *segment, const Staff *staff)</argsstring>
        <name>findClefChangePenalty</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clefIndex</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;</type>
          <declname>trebleBassPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="243" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="243" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a8b777004f3ac561e008f10eca7076756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClefType</type>
        <definition>ClefType Ms::MidiClef::clefFromIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>clefFromIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="322" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a9a5c0843565535a6e2ca5f791a978d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiClef::makeDynamicProgrammingStep</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt; &amp;penalties, std::vector&lt; std::vector&lt; int &gt;&gt; &amp;optimalPaths, int pos, MidiTie::TieStateMachine::State tieState, const MinMaxPitch &amp;minMaxPitch, const Segment *seg, const Staff *staff)</argsstring>
        <name>makeDynamicProgrammingStep</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt; &amp;</type>
          <declname>penalties</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt; &amp;</type>
          <declname>optimalPaths</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>MidiTie::TieStateMachine::State</type>
          <declname>tieState</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_clef_1_1_min_max_pitch" kindref="compound">MinMaxPitch</ref> &amp;</type>
          <declname>minMaxPitch</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="327" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="327" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a9545b127f3c24616c34279b463871ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiClef::createClefs</definition>
        <argsstring>(Staff *staff, const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;optimalPaths, int lastClef, const std::vector&lt; Segment *&gt; &amp;segments)</argsstring>
        <name>createClefs</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;</type>
          <declname>optimalPaths</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastClef</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *&gt; &amp;</type>
          <declname>segments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="373" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="373" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a874ee86bbc5516b2b0cc2ee8282aeec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiClef::createMainClefFromAveragePitch</definition>
        <argsstring>(Staff *staff, int strack)</argsstring>
        <name>createMainClefFromAveragePitch</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="399" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="399" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a9cba397224733ddd4ad09fbc0c319c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiClef::hasGFclefs</definition>
        <argsstring>(const InstrumentTemplate *templ)</argsstring>
        <name>hasGFclefs</name>
        <param>
          <type>const <ref refid="class_ms_1_1_instrument_template" kindref="compound">InstrumentTemplate</ref> *</type>
          <declname>templ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="410" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="410" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__clef_8cpp_1a7bc9fd40233613f7111410773de615ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiClef::createClefs</definition>
        <argsstring>(Staff *staff, int indexOfOperation, bool isDrumTrack)</argsstring>
        <name>createClefs</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexOfOperation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isDrumTrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_clef.cpp" line="432" column="1" bodyfile="mscore/importmidi/importmidi_clef.cpp" bodystart="432" bodyend="486"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/importmidi/importmidi_clef.cpp" line="39" column="1"/>
  </compounddef>
</doxygen>
