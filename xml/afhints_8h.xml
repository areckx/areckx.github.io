<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="afhints_8h" kind="file" language="C++">
    <compoundname>afhints.h</compoundname>
    <includes refid="aftypes_8h" local="yes">aftypes.h</includes>
    <includedby refid="aflatin_8h" local="yes">thirdparty/freetype/src/autofit/aflatin.h</includedby>
    <includedby refid="afcjk_8h" local="yes">thirdparty/freetype/src/autofit/afcjk.h</includedby>
    <includedby refid="afdummy_8c" local="yes">thirdparty/freetype/src/autofit/afdummy.c</includedby>
    <includedby refid="afindic_8h" local="yes">thirdparty/freetype/src/autofit/afindic.h</includedby>
    <includedby refid="afhints_8c" local="yes">thirdparty/freetype/src/autofit/afhints.c</includedby>
    <includedby refid="aflatin2_8h" local="yes">thirdparty/freetype/src/autofit/aflatin2.h</includedby>
    <includedby refid="afloader_8h" local="yes">thirdparty/freetype/src/autofit/afloader.h</includedby>
    <includedby refid="afloader_8c" local="yes">thirdparty/freetype/src/autofit/afloader.c</includedby>
    <includedby refid="afwarp_8h" local="yes">thirdparty/freetype/src/autofit/afwarp.h</includedby>
    <incdepgraph>
      <node id="77925">
        <label>aflatin.h</label>
        <link refid="aflatin_8h_source"/>
        <childnode refid="77919" relation="include">
        </childnode>
      </node>
      <node id="77930">
        <label>afstyles.h</label>
        <link refid="afstyles_8h_source"/>
      </node>
      <node id="77924">
        <label>afdummy.h</label>
        <link refid="afdummy_8h_source"/>
        <childnode refid="77920" relation="include">
        </childnode>
      </node>
      <node id="77920">
        <label>aftypes.h</label>
        <link refid="aftypes_8h_source"/>
        <childnode refid="77921" relation="include">
        </childnode>
        <childnode refid="77922" relation="include">
        </childnode>
        <childnode refid="77923" relation="include">
        </childnode>
        <childnode refid="77928" relation="include">
        </childnode>
        <childnode refid="77929" relation="include">
        </childnode>
        <childnode refid="77930" relation="include">
        </childnode>
      </node>
      <node id="77919">
        <label>thirdparty/freetype/src/autofit/afhints.h</label>
        <link refid="afhints_8h"/>
        <childnode refid="77920" relation="include">
        </childnode>
      </node>
      <node id="77926">
        <label>afcjk.h</label>
        <link refid="afcjk_8h_source"/>
        <childnode refid="77919" relation="include">
        </childnode>
        <childnode refid="77925" relation="include">
        </childnode>
      </node>
      <node id="77921">
        <label>ft2build.h</label>
      </node>
      <node id="77929">
        <label>afcover.h</label>
        <link refid="afcover_8h_source"/>
      </node>
      <node id="77923">
        <label>afwrtsys.h</label>
        <link refid="afwrtsys_8h_source"/>
        <childnode refid="77924" relation="include">
        </childnode>
        <childnode refid="77925" relation="include">
        </childnode>
        <childnode refid="77926" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
      </node>
      <node id="77927">
        <label>afindic.h</label>
        <link refid="afindic_8h_source"/>
        <childnode refid="77919" relation="include">
        </childnode>
      </node>
      <node id="77928">
        <label>afscript.h</label>
        <link refid="afscript_8h_source"/>
      </node>
      <node id="77922">
        <label>afblue.h</label>
        <link refid="afblue_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="77932">
        <label>thirdparty/freetype/src/autofit/aflatin.h</label>
        <link refid="aflatin_8h_source"/>
        <childnode refid="77933" relation="include">
        </childnode>
        <childnode refid="77935" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
        <childnode refid="77953" relation="include">
        </childnode>
        <childnode refid="77942" relation="include">
        </childnode>
        <childnode refid="77943" relation="include">
        </childnode>
      </node>
      <node id="77946">
        <label>thirdparty/freetype/src/autofit/afmodule.c</label>
        <link refid="afmodule_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77947">
        <label>thirdparty/freetype/src/autofit/afpic.c</label>
        <link refid="afpic_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77950">
        <label>thirdparty/freetype/src/autofit/afdummy.c</label>
        <link refid="afdummy_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77949">
        <label>thirdparty/freetype/src/autofit/afdummy.h</label>
        <link refid="afdummy_8h_source"/>
        <childnode refid="77950" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="77944">
        <label>thirdparty/freetype/src/autofit/afloader.c</label>
        <link refid="afloader_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77945">
        <label>thirdparty/freetype/src/autofit/afloader.h</label>
        <link refid="afloader_8h_source"/>
        <childnode refid="77944" relation="include">
        </childnode>
        <childnode refid="77946" relation="include">
        </childnode>
      </node>
      <node id="77938">
        <label>thirdparty/freetype/src/autofit/afangles.c</label>
        <link refid="afangles_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77937">
        <label>thirdparty/freetype/src/autofit/aftypes.h</label>
        <link refid="aftypes_8h_source"/>
        <childnode refid="77938" relation="include">
        </childnode>
        <childnode refid="77939" relation="include">
        </childnode>
        <childnode refid="77940" relation="include">
        </childnode>
        <childnode refid="77931" relation="include">
        </childnode>
        <childnode refid="77949" relation="include">
        </childnode>
        <childnode refid="77951" relation="include">
        </childnode>
        <childnode refid="77953" relation="include">
        </childnode>
        <childnode refid="77948" relation="include">
        </childnode>
      </node>
      <node id="77955">
        <label>thirdparty/freetype/src/autofit/afhints.c</label>
        <link refid="afhints_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77931">
        <label>thirdparty/freetype/src/autofit/afhints.h</label>
        <link refid="afhints_8h"/>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="77935" relation="include">
        </childnode>
        <childnode refid="77950" relation="include">
        </childnode>
        <childnode refid="77954" relation="include">
        </childnode>
        <childnode refid="77955" relation="include">
        </childnode>
        <childnode refid="77956" relation="include">
        </childnode>
        <childnode refid="77945" relation="include">
        </childnode>
        <childnode refid="77944" relation="include">
        </childnode>
        <childnode refid="77957" relation="include">
        </childnode>
      </node>
      <node id="77943">
        <label>thirdparty/freetype/src/autofit/aflatin2.c</label>
        <link refid="aflatin2_8c_source"/>
      </node>
      <node id="77948">
        <label>thirdparty/freetype/src/autofit/hbshim.c</label>
        <link refid="hbshim_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77956">
        <label>thirdparty/freetype/src/autofit/aflatin2.h</label>
        <link refid="aflatin2_8h_source"/>
        <childnode refid="77943" relation="include">
        </childnode>
      </node>
      <node id="77933">
        <label>thirdparty/freetype/src/autofit/afcjk.c</label>
        <link refid="afcjk_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77935">
        <label>thirdparty/freetype/src/autofit/afcjk.h</label>
        <link refid="afcjk_8h_source"/>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="77941">
        <label>thirdparty/freetype/src/autofit/afglobal.c</label>
        <link refid="afglobal_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77940">
        <label>thirdparty/freetype/src/autofit/afglobal.h</label>
        <link refid="afglobal_8h_source"/>
        <childnode refid="77933" relation="include">
        </childnode>
        <childnode refid="77941" relation="include">
        </childnode>
        <childnode refid="77942" relation="include">
        </childnode>
        <childnode refid="77943" relation="include">
        </childnode>
        <childnode refid="77944" relation="include">
        </childnode>
        <childnode refid="77945" relation="include">
        </childnode>
        <childnode refid="77946" relation="include">
        </childnode>
        <childnode refid="77947" relation="include">
        </childnode>
        <childnode refid="77948" relation="include">
        </childnode>
      </node>
      <node id="77934">
        <label>thirdparty/freetype/src/autofit/autofit.c</label>
        <link refid="autofit_8c_source"/>
      </node>
      <node id="77936">
        <label>thirdparty/freetype/src/autofit/afwrtsys.h</label>
        <link refid="afwrtsys_8h_source"/>
        <childnode refid="77937" relation="include">
        </childnode>
        <childnode refid="77941" relation="include">
        </childnode>
      </node>
      <node id="77958">
        <label>thirdparty/freetype/src/autofit/afwarp.c</label>
        <link refid="afwarp_8c_source"/>
      </node>
      <node id="77957">
        <label>thirdparty/freetype/src/autofit/afwarp.h</label>
        <link refid="afwarp_8h_source"/>
        <childnode refid="77958" relation="include">
        </childnode>
      </node>
      <node id="77953">
        <label>thirdparty/freetype/src/autofit/afindic.c</label>
        <link refid="afindic_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77954">
        <label>thirdparty/freetype/src/autofit/afindic.h</label>
        <link refid="afindic_8h_source"/>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="77939">
        <label>thirdparty/freetype/src/autofit/afblue.c</label>
        <link refid="afblue_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77952">
        <label>thirdparty/freetype/src/autofit/afranges.c</label>
        <link refid="afranges_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="77951">
        <label>thirdparty/freetype/src/autofit/afranges.h</label>
        <link refid="afranges_8h_source"/>
        <childnode refid="77941" relation="include">
        </childnode>
        <childnode refid="77952" relation="include">
        </childnode>
      </node>
      <node id="77942">
        <label>thirdparty/freetype/src/autofit/aflatin.c</label>
        <link refid="aflatin_8c_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_f___point_rec__" prot="public">AF_PointRec_</innerclass>
    <innerclass refid="struct_a_f___segment_rec__" prot="public">AF_SegmentRec_</innerclass>
    <innerclass refid="struct_a_f___edge_rec__" prot="public">AF_EdgeRec_</innerclass>
    <innerclass refid="struct_a_f___axis_hints_rec__" prot="public">AF_AxisHintsRec_</innerclass>
    <innerclass refid="struct_a_f___glyph_hints_rec__" prot="public">AF_GlyphHintsRec_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="afglobal_8c_1a58cbff90c66c50badd071e89bf73a5a2" prot="public" static="no">
        <name>__AFHINTS_H__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="20" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a4c405d5083df1badbac973f4461a6cd9" prot="public" static="no">
        <name>xxAF_SORT_SEGMENTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a900678b547e31fdad93eba9beaf6d1fb" prot="public" static="no">
        <name>AF_FLAG_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="210" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1aa827b6464cd1f082b0d27e0e69f7032a" prot="public" static="no">
        <name>AF_FLAG_CONIC</name>
        <initializer>( 1U &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="213" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1ab6cc65b293a58d1853ca998fde6ac295" prot="public" static="no">
        <name>AF_FLAG_CUBIC</name>
        <initializer>( 1U &lt;&lt; 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="214" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1ac68076397ecfe2597426aa83966c458d" prot="public" static="no">
        <name>AF_FLAG_CONTROL</name>
        <initializer>( AF_FLAG_CONIC | AF_FLAG_CUBIC )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="215" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1aa7994bad72a7735cc36a04b0fc526942" prot="public" static="no">
        <name>AF_FLAG_TOUCH_X</name>
        <initializer>( 1U &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="218" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a14aacbf55736f5eb6f68cf6b943689cc" prot="public" static="no">
        <name>AF_FLAG_TOUCH_Y</name>
        <initializer>( 1U &lt;&lt; 3 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="219" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1accbf3cd421f9e0489390424f3813ad29" prot="public" static="no">
        <name>AF_FLAG_WEAK_INTERPOLATION</name>
        <initializer>( 1U &lt;&lt; 4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="222" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a9c0e0c030e30cf54db1acbbc335d8cc6" prot="public" static="no">
        <name>AF_EDGE_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="226" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a34c2f3332494d58e764122594fdf4b62" prot="public" static="no">
        <name>AF_EDGE_ROUND</name>
        <initializer>( 1U &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="227" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a7c8d1af7e0ba6919e67ee2ab00d4d868" prot="public" static="no">
        <name>AF_EDGE_SERIF</name>
        <initializer>( 1U &lt;&lt; 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="228" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1aa2d79b003fe1e4e704250e3e464d07d8" prot="public" static="no">
        <name>AF_EDGE_DONE</name>
        <initializer>( 1U &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="229" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a94e905ef97778a7efc0fd3c178dff1df" prot="public" static="no">
        <name>AF_EDGE_NEUTRAL</name>
        <initializer>( 1U &lt;&lt; 3 ) /* edge aligns to a neutral blue zone */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="230" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1aa3bf93848f5bb050aa10ff300d15f7be" prot="public" static="no">
        <name>AF_SEGMENTS_EMBEDDED</name>
        <initializer>18   /* number of embedded segments   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="300" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a11811ae6efa733c193cf75da13aff374" prot="public" static="no">
        <name>AF_EDGES_EMBEDDED</name>
        <initializer>12   /* number of embedded edges      */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="301" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1af26c2836edfc8c6c68d0defa86ed0cd4" prot="public" static="no">
        <name>AF_POINTS_EMBEDDED</name>
        <initializer>96   /* number of embedded points   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="329" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a4614f1350432ead1edc59762e59cf2f5" prot="public" static="no">
        <name>AF_CONTOURS_EMBEDDED</name>
        <initializer>8   /* number of embedded contours */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="330" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a806237be275ab54161744b4b9d80c030" prot="public" static="no">
        <name>AF_HINTS_TEST_SCALER</name>
        <param><defname>h</defname></param>
        <param><defname>f</defname></param>
        <initializer>( (h)-&gt;scaler_flags &amp; (f) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="371" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1ac21796cca6b2852a9a9e3db5a77bce2f" prot="public" static="no">
        <name>AF_HINTS_TEST_OTHER</name>
        <param><defname>h</defname></param>
        <param><defname>f</defname></param>
        <initializer>( (h)-&gt;other_flags  &amp; (f) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="372" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a55d606a7921dacba6f130fde7904f3fb" prot="public" static="no">
        <name>AF_HINTS_DO_HORIZONTAL</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_HORIZONTAL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="389" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1acd903b03a2447601ac31953c0d1391ca" prot="public" static="no">
        <name>AF_HINTS_DO_VERTICAL</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_VERTICAL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="392" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a0fd0399c4eb8c78d76838bc399231f99" prot="public" static="no">
        <name>AF_HINTS_DO_BLUES</name>
        <param><defname>h</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="395" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1ad67f418c7ead8bbbd19003849631c892" prot="public" static="no">
        <name>AF_HINTS_DO_ADVANCE</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_ADVANCE )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="400" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a4620ab40cf6b63aa25553d276e78d08f" prot="public" static="no">
        <name>AF_HINTS_DO_WARP</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_WARPER )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="403" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a445e6eb7e8e1db0f62de0ed90e50abdd" prot="public" static="no">
        <name>AF_SEGMENT_LEN</name>
        <param><defname>seg</defname></param>
        <initializer>( (seg)-&gt;max_coord - (seg)-&gt;min_coord )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="466" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afglobal_8c_1a296ba70129a40b6e919269b64c325d98" prot="public" static="no">
        <name>AF_SEGMENT_DIST</name>
        <param><defname>seg1</defname></param>
        <param><defname>seg2</defname></param>
        <initializer>( ( (seg1)-&gt;pos &gt; (seg2)-&gt;pos )   \
                                           ? (seg1)-&gt;pos - (seg2)-&gt;pos   \
                                           : (seg2)-&gt;pos - (seg1)-&gt;pos )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="468" column="9"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a4c405d5083df1badbac973f4461a6cd9" prot="public" static="no">
        <name>xxAF_SORT_SEGMENTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="24" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a900678b547e31fdad93eba9beaf6d1fb" prot="public" static="no">
        <name>AF_FLAG_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="210" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1aa827b6464cd1f082b0d27e0e69f7032a" prot="public" static="no">
        <name>AF_FLAG_CONIC</name>
        <initializer>( 1U &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="213" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1ab6cc65b293a58d1853ca998fde6ac295" prot="public" static="no">
        <name>AF_FLAG_CUBIC</name>
        <initializer>( 1U &lt;&lt; 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="214" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1ac68076397ecfe2597426aa83966c458d" prot="public" static="no">
        <name>AF_FLAG_CONTROL</name>
        <initializer>( AF_FLAG_CONIC | AF_FLAG_CUBIC )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="215" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1aa7994bad72a7735cc36a04b0fc526942" prot="public" static="no">
        <name>AF_FLAG_TOUCH_X</name>
        <initializer>( 1U &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="218" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a14aacbf55736f5eb6f68cf6b943689cc" prot="public" static="no">
        <name>AF_FLAG_TOUCH_Y</name>
        <initializer>( 1U &lt;&lt; 3 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="219" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1accbf3cd421f9e0489390424f3813ad29" prot="public" static="no">
        <name>AF_FLAG_WEAK_INTERPOLATION</name>
        <initializer>( 1U &lt;&lt; 4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="222" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a9c0e0c030e30cf54db1acbbc335d8cc6" prot="public" static="no">
        <name>AF_EDGE_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="226" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a34c2f3332494d58e764122594fdf4b62" prot="public" static="no">
        <name>AF_EDGE_ROUND</name>
        <initializer>( 1U &lt;&lt; 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="227" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a7c8d1af7e0ba6919e67ee2ab00d4d868" prot="public" static="no">
        <name>AF_EDGE_SERIF</name>
        <initializer>( 1U &lt;&lt; 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="228" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1aa2d79b003fe1e4e704250e3e464d07d8" prot="public" static="no">
        <name>AF_EDGE_DONE</name>
        <initializer>( 1U &lt;&lt; 2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="229" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a94e905ef97778a7efc0fd3c178dff1df" prot="public" static="no">
        <name>AF_EDGE_NEUTRAL</name>
        <initializer>( 1U &lt;&lt; 3 ) /* edge aligns to a neutral blue zone */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="230" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1aa3bf93848f5bb050aa10ff300d15f7be" prot="public" static="no">
        <name>AF_SEGMENTS_EMBEDDED</name>
        <initializer>18   /* number of embedded segments   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="300" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a11811ae6efa733c193cf75da13aff374" prot="public" static="no">
        <name>AF_EDGES_EMBEDDED</name>
        <initializer>12   /* number of embedded edges      */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="301" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1af26c2836edfc8c6c68d0defa86ed0cd4" prot="public" static="no">
        <name>AF_POINTS_EMBEDDED</name>
        <initializer>96   /* number of embedded points   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="329" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a4614f1350432ead1edc59762e59cf2f5" prot="public" static="no">
        <name>AF_CONTOURS_EMBEDDED</name>
        <initializer>8   /* number of embedded contours */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="330" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a806237be275ab54161744b4b9d80c030" prot="public" static="no">
        <name>AF_HINTS_TEST_SCALER</name>
        <param><defname>h</defname></param>
        <param><defname>f</defname></param>
        <initializer>( (h)-&gt;scaler_flags &amp; (f) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="371" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1ac21796cca6b2852a9a9e3db5a77bce2f" prot="public" static="no">
        <name>AF_HINTS_TEST_OTHER</name>
        <param><defname>h</defname></param>
        <param><defname>f</defname></param>
        <initializer>( (h)-&gt;other_flags  &amp; (f) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="372" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a55d606a7921dacba6f130fde7904f3fb" prot="public" static="no">
        <name>AF_HINTS_DO_HORIZONTAL</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_HORIZONTAL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="389" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1acd903b03a2447601ac31953c0d1391ca" prot="public" static="no">
        <name>AF_HINTS_DO_VERTICAL</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_VERTICAL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="392" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a0fd0399c4eb8c78d76838bc399231f99" prot="public" static="no">
        <name>AF_HINTS_DO_BLUES</name>
        <param><defname>h</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="395" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1ad67f418c7ead8bbbd19003849631c892" prot="public" static="no">
        <name>AF_HINTS_DO_ADVANCE</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_ADVANCE )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="400" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a4620ab40cf6b63aa25553d276e78d08f" prot="public" static="no">
        <name>AF_HINTS_DO_WARP</name>
        <param><defname>h</defname></param>
        <initializer>!AF_HINTS_TEST_SCALER( h, AF_SCALER_FLAG_NO_WARPER )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="403" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a445e6eb7e8e1db0f62de0ed90e50abdd" prot="public" static="no">
        <name>AF_SEGMENT_LEN</name>
        <param><defname>seg</defname></param>
        <initializer>( (seg)-&gt;max_coord - (seg)-&gt;min_coord )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="466" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="afhints_8h_1a296ba70129a40b6e919269b64c325d98" prot="public" static="no">
        <name>AF_SEGMENT_DIST</name>
        <param><defname>seg1</defname></param>
        <param><defname>seg2</defname></param>
        <initializer>( ( (seg1)-&gt;pos &gt; (seg2)-&gt;pos )   \
                                           ? (seg1)-&gt;pos - (seg2)-&gt;pos   \
                                           : (seg2)-&gt;pos - (seg1)-&gt;pos )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="468" column="9" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="afhints_8h_1a5f8184f30ac4a73bab7c720c7a962e7d" prot="public" static="no">
        <name>AF_Dimension_</name>
        <enumvalue id="afhints_8h_1a5f8184f30ac4a73bab7c720c7a962e7da009437e0fce5aa1a6bb9c6398bc5ca33" prot="public">
          <name>AF_DIMENSION_HORZ</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1a5f8184f30ac4a73bab7c720c7a962e7da9c155f811daf156cf4d23afe561fd8de" prot="public">
          <name>AF_DIMENSION_VERT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1a5f8184f30ac4a73bab7c720c7a962e7da9b0a2476820acd253fff9d77a41cfd58" prot="public">
          <name>AF_DIMENSION_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="34" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359b" prot="public" static="no">
        <name>AF_Direction_</name>
        <enumvalue id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359bae9eaf66e10b3c610bb378ad5b590b7e4" prot="public">
          <name>AF_DIR_NONE</name>
          <initializer>=  4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359ba68c88f8cef93b92cfcd85b03c89c9b68" prot="public">
          <name>AF_DIR_RIGHT</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359badfb4620530b55f5398829c50581573f4" prot="public">
          <name>AF_DIR_LEFT</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359ba9bbde3948af9ea443336a23e9df5e7b0" prot="public">
          <name>AF_DIR_UP</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="afhints_8h_1aadb1c8b8ae5c826cf493ec8c58d6359ba75f40021b137cf834e0772ed42d585a5" prot="public">
          <name>AF_DIR_DOWN</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="48" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="47" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="afhints_8h_1a8b4e7c99095ceea05159cb3000a77549" prot="public" static="no">
        <type>FT_BEGIN_HEADER enum AF_Dimension_</type>
        <definition>typedef FT_BEGIN_HEADER enum AF_Dimension_  AF_Dimension</definition>
        <argsstring></argsstring>
        <name>AF_Dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a55aeea8a2bac31353c89ac3f6762a3ac" prot="public" static="no">
        <type>enum AF_Direction_</type>
        <definition>typedef enum AF_Direction_  AF_Direction</definition>
        <argsstring></argsstring>
        <name>AF_Direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a4ea6cda4c640474edd882188cf180136" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec_</ref> *</type>
        <definition>typedef struct AF_PointRec_* AF_Point</definition>
        <argsstring></argsstring>
        <name>AF_Point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="233" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a6d215e331f5e59fe06beefb2f9a4ca19" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec_</ref> *</type>
        <definition>typedef struct AF_SegmentRec_* AF_Segment</definition>
        <argsstring></argsstring>
        <name>AF_Segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="234" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1ae7ed9a954b58fee013f9691c5a41625f" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec_</ref> *</type>
        <definition>typedef struct AF_EdgeRec_* AF_Edge</definition>
        <argsstring></argsstring>
        <name>AF_Edge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="235" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a8fe66bfb02ed991ef42988957dd9b41f" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec_</ref></type>
        <definition>typedef struct AF_PointRec_  AF_PointRec</definition>
        <argsstring></argsstring>
        <name>AF_PointRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a7ee57d68cbaac04ff81f9c2d16d47d29" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec_</ref></type>
        <definition>typedef struct AF_SegmentRec_  AF_SegmentRec</definition>
        <argsstring></argsstring>
        <name>AF_SegmentRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a52c7977c269859e74a65dc37a9a58945" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec_</ref></type>
        <definition>typedef struct AF_EdgeRec_  AF_EdgeRec</definition>
        <argsstring></argsstring>
        <name>AF_EdgeRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1ab87d85a54bd58daa2ce70bc20d22020e" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHintsRec_</ref></type>
        <definition>typedef struct AF_AxisHintsRec_  AF_AxisHintsRec</definition>
        <argsstring></argsstring>
        <name>AF_AxisHintsRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a2ed9e9528ea094b2e496fa2193b5e500" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHintsRec_</ref> *</type>
        <definition>typedef struct AF_AxisHintsRec_ * AF_AxisHints</definition>
        <argsstring></argsstring>
        <name>AF_AxisHints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="afhints_8h_1a927dddd15d9fb26c2e2456ef604658aa" prot="public" static="no">
        <type>struct <ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHintsRec_</ref></type>
        <definition>typedef struct AF_GlyphHintsRec_  AF_GlyphHintsRec</definition>
        <argsstring></argsstring>
        <name>AF_GlyphHintsRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="368" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="afhints_8h_1a28396c3f96da9c7c2c0858ad7ab12f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_direction_compute</definition>
        <argsstring>(FT_Pos dx, FT_Pos dy)</argsstring>
        <name>af_direction_compute</name>
        <param>
          <type>FT_Pos</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>FT_Pos</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="409" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="479" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a86b9eae72c03a7cb836afd7fdce93f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_axis_hints_new_segment</definition>
        <argsstring>(AF_AxisHints axis, FT_Memory memory, AF_Segment *asegment)</argsstring>
        <name>af_axis_hints_new_segment</name>
        <param>
          <type><ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHints</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <param>
          <type><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_Segment</ref> *</type>
          <declname>asegment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="414" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="38" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a90d0a3e15ea06d239c96b95ffbd5ae91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_axis_hints_new_edge</definition>
        <argsstring>(AF_AxisHints axis, FT_Int fpos, AF_Direction dir, FT_Memory memory, AF_Edge *edge)</argsstring>
        <name>af_axis_hints_new_edge</name>
        <param>
          <type><ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHints</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>FT_Int</type>
          <declname>fpos</declname>
        </param>
        <param>
          <type>AF_Direction</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <param>
          <type><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_Edge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="419" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="99" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1ace807c9b560d65c19019337cec1cb25f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_init</definition>
        <argsstring>(AF_GlyphHints hints, FT_Memory memory)</argsstring>
        <name>af_glyph_hints_init</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="426" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="528" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a83137fdc08525cb1cdbedd2a6c1dbc01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_rescale</definition>
        <argsstring>(AF_GlyphHints hints, AF_StyleMetrics metrics)</argsstring>
        <name>af_glyph_hints_rescale</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type><ref refid="struct_a_f___style_metrics_rec__" kindref="compound">AF_StyleMetrics</ref></type>
          <declname>metrics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="430" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="586" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a8a6d51fb4ccbf90913b144ebe45969fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_reload</definition>
        <argsstring>(AF_GlyphHints hints, FT_Outline *outline)</argsstring>
        <name>af_glyph_hints_reload</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="434" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="598" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a7d36c83f2d45da57f2714b33d3359581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_save</definition>
        <argsstring>(AF_GlyphHints hints, FT_Outline *outline)</argsstring>
        <name>af_glyph_hints_save</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="438" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="996" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a28c420f98645951e4dbcf7d88dfcfa19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_align_edge_points</definition>
        <argsstring>(AF_GlyphHints hints, AF_Dimension dim)</argsstring>
        <name>af_glyph_hints_align_edge_points</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type>AF_Dimension</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="442" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="1031" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1ab9f947dd580194ccead8641a5fcbbdc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_align_strong_points</definition>
        <argsstring>(AF_GlyphHints hints, AF_Dimension dim)</argsstring>
        <name>af_glyph_hints_align_strong_points</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type>AF_Dimension</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="446" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="1106" bodyend="1247"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1abff73ba9f7ba216798390a82133d1557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_align_weak_points</definition>
        <argsstring>(AF_GlyphHints hints, AF_Dimension dim)</argsstring>
        <name>af_glyph_hints_align_weak_points</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <param>
          <type>AF_Dimension</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="450" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="1357" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="afhints_8h_1a1c3771a9e91d7a6371277e17941b4bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>af_glyph_hints_done</definition>
        <argsstring>(AF_GlyphHints hints)</argsstring>
        <name>af_glyph_hints_done</name>
        <param>
          <type><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref></type>
          <declname>hints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/autofit/afhints.h" line="462" column="1" bodyfile="thirdparty/freetype/src/autofit/afhints.c" bodystart="538" bodyend="580"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>afhints.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Auto-fitter<sp/>hinting<sp/>routines<sp/>(specification).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2003-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AFHINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AFHINTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;aftypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>xxAF_SORT_SEGMENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>The<sp/>definition<sp/>of<sp/>outline<sp/>glyph<sp/>hints.<sp/><sp/>These<sp/>are<sp/>shared<sp/>by<sp/>all</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>writing<sp/>system<sp/>analysis<sp/>routines<sp/>(until<sp/>now).</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>AF_Dimension_</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIMENSION_HORZ<sp/>=<sp/>0,<sp/><sp/></highlight><highlight class="comment">/*<sp/>x<sp/>coordinates,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i.e.,<sp/>vertical<sp/>segments<sp/>&amp;<sp/>edges<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIMENSION_VERT<sp/>=<sp/>1,<sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>coordinates,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i.e.,<sp/>horizontal<sp/>segments<sp/>&amp;<sp/>edges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIMENSION_MAX<sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>remove<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}<sp/>AF_Dimension;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>hint<sp/>directions<sp/>--<sp/>the<sp/>values<sp/>are<sp/>computed<sp/>so<sp/>that<sp/>two<sp/>vectors<sp/>are<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>opposite<sp/>directions<sp/>iff<sp/>`dir1<sp/>+<sp/>dir2<sp/>==<sp/>0&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>AF_Direction_</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIR_NONE<sp/><sp/>=<sp/><sp/>4,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIR_RIGHT<sp/>=<sp/><sp/>1,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIR_LEFT<sp/><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIR_UP<sp/><sp/><sp/><sp/>=<sp/><sp/>2,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_DIR_DOWN<sp/><sp/>=<sp/>-2</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/>AF_Direction;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>The<sp/>following<sp/>explanations<sp/>are<sp/>mostly<sp/>taken<sp/>from<sp/>the<sp/>article</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Real-Time<sp/>Grid<sp/>Fitting<sp/>of<sp/>Typographic<sp/>Outlines</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>by<sp/>David<sp/>Turner<sp/>and<sp/>Werner<sp/>Lemberg</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>http://www.tug.org/TUGboat/Articles/tb24-3/lemberg.pdf</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>with<sp/>appropriate<sp/>updates.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Segments</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`af_{cjk,latin,...}_hints_compute_segments&apos;<sp/>are<sp/>the<sp/>functions<sp/>to</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>find<sp/>segments<sp/>in<sp/>an<sp/>outline.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>A<sp/>segment<sp/>is<sp/>a<sp/>series<sp/>of<sp/>at<sp/>least<sp/>two<sp/>consecutive<sp/>points<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>approximately<sp/>aligned<sp/>along<sp/>a<sp/>coordinate<sp/>axis.<sp/><sp/>The<sp/>analysis<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>so<sp/>is<sp/>specific<sp/>to<sp/>a<sp/>writing<sp/>system.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Edges</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`af_{cjk,latin,...}_hints_compute_edges&apos;<sp/>are<sp/>the<sp/>functions<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>edges.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>As<sp/>soon<sp/>as<sp/>segments<sp/>are<sp/>defined,<sp/>the<sp/>auto-hinter<sp/>groups<sp/>them<sp/>into</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>edges.<sp/><sp/>An<sp/>edge<sp/>corresponds<sp/>to<sp/>a<sp/>single<sp/>position<sp/>on<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>dimension<sp/>that<sp/>collects<sp/>one<sp/>or<sp/>more<sp/>segments<sp/>(allowing<sp/>for<sp/>a<sp/>small</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>threshold).</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>As<sp/>an<sp/>example,<sp/>the<sp/>`latin&apos;<sp/>writing<sp/>system<sp/>first<sp/>tries<sp/>to<sp/>grid-fit</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>edges,<sp/>then<sp/>to<sp/>align<sp/>segments<sp/>on<sp/>the<sp/>edges<sp/>unless<sp/>it<sp/>detects<sp/>that</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>they<sp/>form<sp/>a<sp/>serif.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+------&lt;-----+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+-----&lt;------+</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/><sp/><sp/><sp/><sp/><sp/>G<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------------&gt;------------------+</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Stems</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Stems<sp/>are<sp/>detected<sp/>by<sp/>`af_{cjk,latin,...}_hint_edges&apos;.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Segments<sp/>need<sp/>to<sp/>be<sp/>`linked&apos;<sp/>to<sp/>other<sp/>ones<sp/>in<sp/>order<sp/>to<sp/>detect<sp/>stems.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>A<sp/>stem<sp/>is<sp/>made<sp/>of<sp/>two<sp/>segments<sp/>that<sp/>face<sp/>each<sp/>other<sp/>in<sp/>opposite</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>directions<sp/>and<sp/>that<sp/>are<sp/>sufficiently<sp/>close<sp/>to<sp/>each<sp/>other.<sp/><sp/>Using</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>vocabulary<sp/>from<sp/>the<sp/>TrueType<sp/>specification,<sp/>stem<sp/>segments<sp/>form<sp/>a</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`black<sp/>distance&apos;.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>In<sp/>the<sp/>above<sp/>ASCII<sp/>drawing,<sp/>the<sp/>horizontal<sp/>segments<sp/>are<sp/>BC,<sp/>DE,<sp/>and</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>FG;<sp/>the<sp/>vertical<sp/>segments<sp/>are<sp/>AB,<sp/>CD,<sp/>EF,<sp/>and<sp/>GH.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Each<sp/>segment<sp/>has<sp/>at<sp/>most<sp/>one<sp/>`best&apos;<sp/>candidate<sp/>to<sp/>form<sp/>a<sp/>black</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>distance,<sp/>or<sp/>no<sp/>candidate<sp/>at<sp/>all.<sp/><sp/>Notice<sp/>that<sp/>two<sp/>distinct<sp/>segments</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>can<sp/>have<sp/>the<sp/>same<sp/>candidate,<sp/>which<sp/>frequently<sp/>means<sp/>a<sp/>serif.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>A<sp/>stem<sp/>is<sp/>recognized<sp/>by<sp/>the<sp/>following<sp/>condition:</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>segment_1<sp/>=<sp/>segment_2<sp/>&amp;&amp;<sp/>best<sp/>segment_2<sp/>=<sp/>segment_1</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>The<sp/>best<sp/>candidate<sp/>is<sp/>stored<sp/>in<sp/>field<sp/>`link&apos;<sp/>in<sp/>structure</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`AF_Segment&apos;.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>In<sp/>the<sp/>above<sp/>ASCII<sp/>drawing,<sp/>the<sp/>best<sp/>candidate<sp/>for<sp/>both<sp/>AB<sp/>and<sp/>CD<sp/>is</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>GH,<sp/>while<sp/>the<sp/>best<sp/>candidate<sp/>for<sp/>GH<sp/>is<sp/>AB.<sp/><sp/>Similarly,<sp/>the<sp/>best</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>candidate<sp/>for<sp/>EF<sp/>and<sp/>GH<sp/>is<sp/>AB,<sp/>while<sp/>the<sp/>best<sp/>candidate<sp/>for<sp/>AB<sp/>is</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>GH.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>The<sp/>detection<sp/>and<sp/>handling<sp/>of<sp/>stems<sp/>is<sp/>dependent<sp/>on<sp/>the<sp/>writing</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>system.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Serifs</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Serifs<sp/>are<sp/>detected<sp/>by<sp/>`af_{cjk,latin,...}_hint_edges&apos;.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>In<sp/>comparison<sp/>to<sp/>a<sp/>stem,<sp/>a<sp/>serif<sp/>(as<sp/>handled<sp/>by<sp/>the<sp/>auto-hinter</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>module<sp/>that<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>`latin&apos;<sp/>writing<sp/>system)<sp/>has</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>segment_1<sp/>=<sp/>segment_2<sp/>&amp;&amp;<sp/>best<sp/>segment_2<sp/>!=<sp/>segment_1</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>where<sp/>segment_1<sp/>corresponds<sp/>to<sp/>the<sp/>serif<sp/>segment<sp/>(CD<sp/>and<sp/>EF<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>above<sp/>ASCII<sp/>drawing).</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>The<sp/>best<sp/>candidate<sp/>is<sp/>stored<sp/>in<sp/>field<sp/>`serif&apos;<sp/>in<sp/>structure</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`AF_Segment&apos;<sp/>(and<sp/>`link&apos;<sp/>is<sp/>set<sp/>to<sp/>NULL).</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Touched<sp/>points</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>A<sp/>point<sp/>is<sp/>called<sp/>`touched&apos;<sp/>if<sp/>it<sp/>has<sp/>been<sp/>processed<sp/>somehow<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>auto-hinter.<sp/><sp/>It<sp/>basically<sp/>means<sp/>that<sp/>it<sp/>shouldn&apos;t<sp/>be<sp/>moved<sp/>again</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>(or<sp/>moved<sp/>only<sp/>under<sp/>certain<sp/>constraints<sp/>to<sp/>preserve<sp/>the<sp/>already</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>applied<sp/>processing).</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Flat<sp/>and<sp/>round<sp/>segments</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Segments<sp/>are<sp/>`round&apos;<sp/>or<sp/>`flat&apos;,<sp/>depending<sp/>on<sp/>the<sp/>series<sp/>of<sp/>points</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>that<sp/>define<sp/>them.<sp/><sp/>A<sp/>segment<sp/>is<sp/>round<sp/>if<sp/>the<sp/>next<sp/>and<sp/>previous<sp/>point</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>of<sp/>an<sp/>extremum<sp/>(which<sp/>can<sp/>be<sp/>either<sp/>a<sp/>single<sp/>point<sp/>or<sp/>sequence<sp/>of</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>points)<sp/>are<sp/>both<sp/>conic<sp/>or<sp/>cubic<sp/>control<sp/>points.<sp/><sp/>Otherwise,<sp/>a</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>segment<sp/>with<sp/>an<sp/>extremum<sp/>is<sp/>flat.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Strong<sp/>Points</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Experience<sp/>has<sp/>shown<sp/>that<sp/>points<sp/>not<sp/>part<sp/>of<sp/>an<sp/>edge<sp/>need<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>interpolated<sp/>linearly<sp/>between<sp/>their<sp/>two<sp/>closest<sp/>edges,<sp/>even<sp/>if<sp/>these</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>are<sp/>not<sp/>part<sp/>of<sp/>the<sp/>contour<sp/>of<sp/>those<sp/>particular<sp/>points.<sp/><sp/>Typical</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>candidates<sp/>for<sp/>this<sp/>are</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>-<sp/>angle<sp/>points<sp/>(i.e.,<sp/>points<sp/>where<sp/>the<sp/>`in&apos;<sp/>and<sp/>`out&apos;<sp/>direction</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>differ<sp/>greatly)</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>-<sp/>inflection<sp/>points<sp/>(i.e.,<sp/>where<sp/>the<sp/>`in&apos;<sp/>and<sp/>`out&apos;<sp/>angles<sp/>are<sp/>the</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>same,<sp/>but<sp/>the<sp/>curvature<sp/>changes<sp/>sign)<sp/>[currently,<sp/>such<sp/>points</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>aren&apos;t<sp/>handled<sp/>specially<sp/>in<sp/>the<sp/>auto-hinter]</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`af_glyph_hints_align_strong_points&apos;<sp/>is<sp/>the<sp/>function<sp/>that<sp/>takes</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>care<sp/>of<sp/>such<sp/>situations;<sp/>it<sp/>is<sp/>equivalent<sp/>to<sp/>the<sp/>TrueType<sp/>`IP&apos;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>hinting<sp/>instruction.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Weak<sp/>Points</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Other<sp/>points<sp/>in<sp/>the<sp/>outline<sp/>must<sp/>be<sp/>interpolated<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>coordinates<sp/>of<sp/>their<sp/>previous<sp/>and<sp/>next<sp/>unfitted<sp/>contour<sp/>neighbours.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>These<sp/>are<sp/>called<sp/>`weak<sp/>points&apos;<sp/>and<sp/>are<sp/>touched<sp/>by<sp/>the<sp/>function</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>`af_glyph_hints_align_weak_points&apos;,<sp/>equivalent<sp/>to<sp/>the<sp/>TrueType<sp/>`IUP&apos;</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>hinting<sp/>instruction.<sp/><sp/>Typical<sp/>candidates<sp/>are<sp/>control<sp/>points<sp/>and</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>points<sp/>on<sp/>the<sp/>contour<sp/>without<sp/>a<sp/>major<sp/>direction.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>The<sp/>major<sp/>effect<sp/>is<sp/>to<sp/>reduce<sp/>possible<sp/>distortion<sp/>caused<sp/>by</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>alignment<sp/>of<sp/>edges<sp/>and<sp/>strong<sp/>points,<sp/>thus<sp/>weak<sp/>points<sp/>are<sp/>processed</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>after<sp/>strong<sp/>points.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>hint<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_NONE<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>type<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_CONIC<sp/><sp/><sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_CUBIC<sp/><sp/><sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_CONTROL<sp/><sp/>(<sp/>AF_FLAG_CONIC<sp/>|<sp/>AF_FLAG_CUBIC<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>touch<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_TOUCH_X<sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>2<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_TOUCH_Y<sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>3<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>candidates<sp/>for<sp/>weak<sp/>interpolation<sp/>have<sp/>this<sp/>flag<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_FLAG_WEAK_INTERPOLATION<sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>4<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>edge<sp/>hint<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGE_NORMAL<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGE_ROUND<sp/><sp/><sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGE_SERIF<sp/><sp/><sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGE_DONE<sp/><sp/><sp/><sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>2<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGE_NEUTRAL<sp/><sp/>(<sp/>1U<sp/>&lt;&lt;<sp/>3<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>edge<sp/>aligns<sp/>to<sp/>a<sp/>neutral<sp/>blue<sp/>zone<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec_</ref>*<sp/><sp/><sp/><sp/><ref refid="struct_a_f___point_rec__" kindref="compound">AF_Point</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec_</ref>*<sp/><sp/><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_Segment</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec_</ref>*<sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_Edge</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="struct_a_f___point_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec_</ref></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UShort<sp/><sp/>flags;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>flags<sp/>used<sp/>by<sp/>hinter<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Char<sp/><sp/><sp/><sp/>in_dir;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>direction<sp/>of<sp/>inwards<sp/>vector<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Char<sp/><sp/><sp/><sp/>out_dir;<sp/><sp/></highlight><highlight class="comment">/*<sp/>direction<sp/>of<sp/>outwards<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/>ox,<sp/>oy;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original,<sp/>scaled<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/>fx,<sp/>fy;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original,<sp/>unscaled<sp/>position<sp/>(in<sp/>font<sp/>units)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/>x,<sp/>y;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/>u,<sp/>v;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>(x,y)<sp/>or<sp/>(y,x)<sp/>depending<sp/>on<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/>next;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>point<sp/>in<sp/>contour<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/>prev;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>previous<sp/>point<sp/>in<sp/>contour<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="struct_a_f___segment_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec_</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>edge/segment<sp/>flags<sp/>for<sp/>this<sp/>segment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Char<sp/><sp/><sp/><sp/><sp/>dir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>segment<sp/>direction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>position<sp/>of<sp/>segment<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>min_coord;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minimum<sp/>coordinate<sp/>of<sp/>segment<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>max_coord;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>coordinate<sp/>of<sp/>segment<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>height;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>hinted<sp/>segment<sp/>height<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Edge<sp/><sp/><sp/><sp/><sp/>edge;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>segment&apos;s<sp/>parent<sp/>edge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/>edge_next;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>link<sp/>to<sp/>next<sp/>segment<sp/>in<sp/>parent<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/>link;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(stem)<sp/>link<sp/>segment<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/>serif;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>primary<sp/>segment<sp/>for<sp/>serifs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/>num_linked;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>linked<sp/>segments<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/>score;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>during<sp/>stem<sp/>matching<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>during<sp/>stem<sp/>matching<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/><sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>point<sp/>in<sp/>edge<sp/>segment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/><sp/>last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>point<sp/>in<sp/>edge<sp/>segment<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="struct_a_f___edge_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec_</ref></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>fpos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original,<sp/>unscaled<sp/>position<sp/>(in<sp/>font<sp/>units)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/>opos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original,<sp/>scaled<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/>pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/><sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>edge<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Char<sp/><sp/><sp/><sp/><sp/>dir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>edge<sp/>direction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/>scale;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>speed<sp/>up<sp/>interpolation<sp/>between<sp/>edges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Width<sp/><sp/><sp/><sp/>blue_edge;<sp/><sp/></highlight><highlight class="comment">/*<sp/>non-NULL<sp/>if<sp/>this<sp/>is<sp/>a<sp/>blue<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Edge<sp/><sp/><sp/><sp/><sp/>link;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>link<sp/>edge<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Edge<sp/><sp/><sp/><sp/><sp/>serif;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>primary<sp/>edge<sp/>for<sp/>serifs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Short<sp/><sp/><sp/><sp/>num_linked;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>linked<sp/>edges<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/>score;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>during<sp/>stem<sp/>matching<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/>first;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>segment<sp/>in<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/>last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>segment<sp/>in<sp/>edge<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_SEGMENTS_EMBEDDED<sp/><sp/>18<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>embedded<sp/>segments<sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_EDGES_EMBEDDED<sp/><sp/><sp/><sp/><sp/>12<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>embedded<sp/>edges<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="struct_a_f___axis_hints_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHintsRec_</ref></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>used<sp/>segments<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_segments;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>allocated<sp/>segments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/><sp/><sp/>segments;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>segments<sp/>array<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AF_SORT_SEGMENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid_segments;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_edges;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>used<sp/>edges<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_edges;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>allocated<sp/>edges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Edge<sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>edges<sp/>array<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Direction<sp/><sp/>major_dir;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>either<sp/>vertical<sp/>or<sp/>horizontal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>two<sp/>arrays<sp/>to<sp/>avoid<sp/>allocation<sp/>penalty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_f___segment_rec__" kindref="compound">AF_SegmentRec</ref><sp/><sp/>segments[AF_SEGMENTS_EMBEDDED];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_f___edge_rec__" kindref="compound">AF_EdgeRec</ref><sp/><sp/><sp/><sp/><sp/>edges[AF_EDGES_EMBEDDED];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>embedded;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHintsRec</ref>,<sp/>*<ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHints</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_POINTS_EMBEDDED<sp/><sp/><sp/><sp/><sp/>96<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>embedded<sp/>points<sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_CONTOURS_EMBEDDED<sp/><sp/><sp/><sp/>8<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>embedded<sp/>contours<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="struct_a_f___glyph_hints_rec__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHintsRec_</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_scale;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_delta;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_scale;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_delta;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_points;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>allocated<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_points;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>used<sp/>points<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>points<sp/>array<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_contours;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>allocated<sp/>contours<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_contours;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>used<sp/>contours<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>AF_Point*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contours;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>contours<sp/>array<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_f___axis_hints_rec__" kindref="compound">AF_AxisHintsRec</ref><sp/><sp/>axis[AF_DIMENSION_MAX];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaler_flags;<sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>of<sp/>scaler<sp/>flags<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UInt32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_flags;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>for<sp/>style-specific<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>implementations<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_f___style_metrics_rec__" kindref="compound">AF_StyleMetrics</ref><sp/><sp/>metrics;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin_delta;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>warping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax_delta;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Two<sp/>arrays<sp/>to<sp/>avoid<sp/>allocation<sp/>penalty.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>`embedded&apos;<sp/>structure<sp/>must<sp/>be<sp/>the<sp/>last<sp/>element!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AF_Point<sp/><sp/><sp/><sp/><sp/><sp/><sp/>contours[AF_CONTOURS_EMBEDDED];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_f___point_rec__" kindref="compound">AF_PointRec</ref><sp/><sp/><sp/><sp/>points[AF_POINTS_EMBEDDED];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>embedded;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHintsRec</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_TEST_SCALER(<sp/>h,<sp/>f<sp/>)<sp/><sp/>(<sp/>(h)-&gt;scaler_flags<sp/>&amp;<sp/>(f)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_TEST_OTHER(<sp/>h,<sp/>f<sp/>)<sp/><sp/><sp/>(<sp/>(h)-&gt;other_flags<sp/><sp/>&amp;<sp/>(f)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_DEBUG_AUTOFIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_HORIZONTAL(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!_af_debug_disable_horz_hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_HORIZONTAL<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_VERTICAL(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!_af_debug_disable_vert_hints<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_VERTICAL<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_BLUES(<sp/>h<sp/>)<sp/><sp/>(<sp/>!_af_debug_disable_blue_hints<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!FT_DEBUG_AUTOFIT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_HORIZONTAL(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_HORIZONTAL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_VERTICAL(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_VERTICAL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_BLUES(<sp/>h<sp/>)<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!FT_DEBUG_AUTOFIT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_ADVANCE(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_ADVANCE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_HINTS_DO_WARP(<sp/>h<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!AF_HINTS_TEST_SCALER(<sp/>h,<sp/>AF_SCALER_FLAG_NO_WARPER<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>AF_Direction<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>af_direction_compute(<sp/>FT_Pos<sp/><sp/>dx,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/>dy<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>af_axis_hints_new_segment(<sp/>AF_AxisHints<sp/><sp/>axis,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/>memory,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Segment<sp/><sp/><sp/>*asegment<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Error)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>af_axis_hints_new_edge(<sp/>AF_AxisHints<sp/><sp/>axis,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpos,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Direction<sp/><sp/>dir,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/>memory,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Edge<sp/><sp/><sp/><sp/><sp/><sp/>*edge<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>af_glyph_hints_init(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>af_glyph_hints_rescale(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_f___style_metrics_rec__" kindref="compound">AF_StyleMetrics</ref><sp/><sp/>metrics<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>af_glyph_hints_reload(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>af_glyph_hints_save(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/><sp/><sp/>outline<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>af_glyph_hints_align_edge_points(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Dimension<sp/><sp/><sp/>dim<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>af_glyph_hints_align_strong_points(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Dimension<sp/><sp/><sp/>dim<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>af_glyph_hints_align_weak_points(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Dimension<sp/><sp/><sp/>dim<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AF_CONFIG_OPTION_USE_WARPER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>af_glyph_hints_scale_dim(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_Dimension<sp/><sp/><sp/>dim,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>FT_LOCAL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>af_glyph_hints_done(<sp/><ref refid="struct_a_f___glyph_hints_rec__" kindref="compound">AF_GlyphHints</ref><sp/><sp/>hints<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_SEGMENT_LEN(<sp/>seg<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(seg)-&gt;max_coord<sp/>-<sp/>(seg)-&gt;min_coord<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_SEGMENT_DIST(<sp/>seg1,<sp/>seg2<sp/>)<sp/><sp/>(<sp/>(<sp/>(seg1)-&gt;pos<sp/>&gt;<sp/>(seg2)-&gt;pos<sp/>)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(seg1)-&gt;pos<sp/>-<sp/>(seg2)-&gt;pos<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(seg2)-&gt;pos<sp/>-<sp/>(seg1)-&gt;pos<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__AFHINTS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/autofit/afhints.h"/>
  </compounddef>
</doxygen>
