<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_gfx_color_space" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>GfxColorSpace</compoundname>
    <derivedcompoundref refid="class_gfx_cal_gray_color_space" prot="public" virt="non-virtual">GfxCalGrayColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_cal_r_g_b_color_space" prot="public" virt="non-virtual">GfxCalRGBColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_device_c_m_y_k_color_space" prot="public" virt="non-virtual">GfxDeviceCMYKColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_device_gray_color_space" prot="public" virt="non-virtual">GfxDeviceGrayColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_device_n_color_space" prot="public" virt="non-virtual">GfxDeviceNColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_device_r_g_b_color_space" prot="public" virt="non-virtual">GfxDeviceRGBColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_i_c_c_based_color_space" prot="public" virt="non-virtual">GfxICCBasedColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_indexed_color_space" prot="public" virt="non-virtual">GfxIndexedColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_lab_color_space" prot="public" virt="non-virtual">GfxLabColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_pattern_color_space" prot="public" virt="non-virtual">GfxPatternColorSpace</derivedcompoundref>
    <derivedcompoundref refid="class_gfx_separation_color_space" prot="public" virt="non-virtual">GfxSeparationColorSpace</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gfx_color_space_1a98d9d81b6aed7ad9d9164ef834478e66" prot="protected" static="no" mutable="no">
        <type>Guint</type>
        <definition>Guint GfxColorSpace::overprintMask</definition>
        <argsstring></argsstring>
        <name>overprintMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="279" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gfx_color_space_1abb58f49030532ce0472969de9aeb94aa" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* GfxColorSpace::mapping</definition>
        <argsstring></argsstring>
        <name>mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="280" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gfx_color_space_1ab3e7357f0fcc95a97e0ae03739a7927d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfxColorSpace::GfxColorSpace</definition>
        <argsstring>()</argsstring>
        <name>GfxColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="211" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a5ce3223b6e798e6ef6ed1633e93fb79d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>GfxColorSpace::~GfxColorSpace</definition>
        <argsstring>()</argsstring>
        <name>~GfxColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="212" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="300" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1ab9b445e9acc594640393e17e27e4cf5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref> *</type>
        <definition>virtual GfxColorSpace* GfxColorSpace::copy</definition>
        <argsstring>()=0</argsstring>
        <name>copy</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1adee0d9ef073f1c391a0ca2b19fa33e7f">copy</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1af4476610ca369c23133e649eaec19378">copy</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a17c7299d917d8ed91eb6b85daf6680b4">copy</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a1dbb7d8437a68cc7e319dcfea711bab5">copy</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1ae210b4f2d41c9d1d6f9f5a31eabe4493">copy</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a9b90d88fc169e5ce0a5ab6b34f438b22">copy</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1af987e873e4e794c80d18cf4c5854fdf7">copy</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a0c253c6edbb4829a7c677badcd01692e">copy</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1a9e64ba9cb51a723c7e28890b288c617d">copy</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1af8ff35e2da17e50a2c1b5a005894a514">copy</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a817b809c749ad1d1b2ae27838aea1dc5">copy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a4559405ac922360f73a0d06ce05ca623" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>GfxColorSpaceMode</type>
        <definition>virtual GfxColorSpaceMode GfxColorSpace::getMode</definition>
        <argsstring>()=0</argsstring>
        <name>getMode</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a8ae50db650775633e9a906f2ac2b080b">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1af74e306e093a2cfb64df766cdb74cf34">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a7e30334da11f114a4f713b21413f27d1">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a3aad8028f747bc308226fe7e39e78710">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a3071f91cbd2dd4ccefc4de88c9ab9984">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1aba196ae6f26474b81ef5b11be09fd590">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1abb18423155bf1a79e3cc1d27e1115b40">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a697375769129862cd9b3a49bb1d21842">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1ae5b14fb601ae41d69aa712bbc1cb0b11">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1a89da42ed65b889016d92494c111dea12">getMode</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a4070f8f0a751013b79d3cc118598656f">getMode</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a76c3d1987b9328cfeeab349dfb8eddaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getGray</definition>
        <argsstring>(GfxColor *color, GfxGray *gray)=0</argsstring>
        <name>getGray</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1af598e5135251003e03d975f4d7295784">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1a55710d2f07647271ac1916ab23a5804c">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a81324cfce1ad3fb98460a73d934c4db3">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a3cec40915acf38b2f01442029d3bd6d3">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1afa707ac339d0cae5886f3adeec4aa846">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a76a0364e86d1ad44670c61356936601e">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1ae2a27d2dc8209db8add9504b69f1a581">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1aadf56a1d6818a4cc7a4e9615cc2c8a2b">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1aa730b3dac8b1c8a34928c73a2cd4901c">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1aaa10ad7da921aeb21b41150487135eef">getGray</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a8e9a858f9f5bb41842d201836fa48192">getGray</reimplementedby>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type>GfxGray *</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a75622e2b5bdc720d5a13af5abeb9d93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getRGB</definition>
        <argsstring>(GfxColor *color, GfxRGB *rgb)=0</argsstring>
        <name>getRGB</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a5039e9e8ea3ba8c3bee36be269750451">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1a9999a94d452e31f8bcb538ed5375e42d">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1abbab8078bf5d31fd422ddbb76b5a2a44">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a35933db498933fc0421d7afccb3f9f9b">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a789850aa9218239d82aae763448a627c">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a600d37a598eee78fe56f2ad44092b4ac">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1ad1c13e401dab2bd903efaa0f21633fa0">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a1b10ad710475142cb83d96cccaed3d59">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1a0737b1ce0c12177d22df344a1808f2fc">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1a5ddd22ce1e97a73e47734d7c73c94bc2">getRGB</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a1d3c46ea07421e298d5a33d69a67cb0d">getRGB</reimplementedby>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref> *</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1af7bf579a6b33d40f3581224a32358c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getCMYK</definition>
        <argsstring>(GfxColor *color, GfxCMYK *cmyk)=0</argsstring>
        <name>getCMYK</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1ae6e3f5a1919f7f54badf9e7b1f6b523f">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1a6ac09e1faaf368aaf12d39694fdef0c2">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a22d28b3bb8a59db28b6160f63d9f89e1">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a4a013c9cb6ca204c1ec6104c0fb2278b">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1ac4ab18ab713115b1f61e229ea0054870">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a74c17bb02a14117fc9faffa6512a3bea">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a0178171845cb335ff175449a3e7de9e4">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1afa87c76031f695d13d06989d5f1a0bef">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1ad95e766715bcd9b1bd5ac892e5f184ca">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1ad5d90338e4daf2c0bd148607b248555d">getCMYK</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a01978a4a92d36514096010cbd08b2bc9">getCMYK</reimplementedby>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_c_m_y_k" kindref="compound">GfxCMYK</ref> *</type>
          <declname>cmyk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a4fe08463045871f547c67e0ba6a26ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getDeviceN</definition>
        <argsstring>(GfxColor *color, GfxColor *deviceN)=0</argsstring>
        <name>getDeviceN</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a73d8b44f978ca49ff84a10a389fee501">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1a3131a13e7f21998f661d95c8eb4e6e81">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a4d83af2eb8a9d0815a59508996acb6c6">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a8f02d2c217210f4f0b4ebaecab29e625">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a7152c6476985215ca5e6217e06d62909">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a2605179c957d10226485179de77233d1">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a2ea4cd4c2d62ebdb70e5c812cf1e3aff">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1ac4b0c111dbe3eddcf235496857eecfcd">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1a799005bdbaf1be7353d91f2e978c1497">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1a2fd6659d41db710a32772df08d7383e8">getDeviceN</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a0174bdddfae4cd21a5b05fa271f52ea6">getDeviceN</reimplementedby>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>deviceN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1acfdfc1b540710b4c27c5694fd4379724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getGrayLine</definition>
        <argsstring>(Guchar *, Guchar *, int)</argsstring>
        <name>getGrayLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a8a047bd676b4cd6032b61d778c93d979">getGrayLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1ae33640b0e1c2c2a6ecbd4f132565381b">getGrayLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="224" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a733db66f1648133353926534f6df9a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getRGBLine</definition>
        <argsstring>(Guchar *, unsigned int *, int)</argsstring>
        <name>getRGBLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1ab68ed4be68f9c410411202dc568c7290">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1aed850dbaa4062e3b2d7789384549ee4a">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a66536bb19fd50a149aa7a67cebe1f09e">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a786606dbe6c2c1d9f0b6b3fb4cf4949d">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1af43aebc73a577de47104e477b44d0070">getRGBLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>unsigned int *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="225" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1acb4b06db7af47cfba3799b505b64a216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getRGBLine</definition>
        <argsstring>(Guchar *, Guchar *, int)</argsstring>
        <name>getRGBLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a1caa0bbbcbfd8d2078ec518de28f45a1">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1ab996257195c279f6c921a40fcea0f117">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a0d9498381bd5d3be44e726f9bd38252e">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a565a0cce5c1464f8524c7825936a45ef">getRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a9743b573567f824305a935be0e3a7239">getRGBLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="226" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a39b4b676e836a008a85d221c6ad6224f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getRGBXLine</definition>
        <argsstring>(Guchar *, Guchar *, int)</argsstring>
        <name>getRGBXLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1ab027764e5175a24f785c7c86f5bdbbfc">getRGBXLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1aac2b92f89d84e3033baa28ea7dbccb67">getRGBXLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1ab68ac825845c064c501b42ec0eba0879">getRGBXLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a359335460a6e7da26efc82f47df8a32e">getRGBXLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1af0e85b96e97a8814f4782729ac99ae0d">getRGBXLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="227" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a910dcaca94d45162d45fa4fc3e39e050" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getCMYKLine</definition>
        <argsstring>(Guchar *, Guchar *, int)</argsstring>
        <name>getCMYKLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a2ed0a9d52f1c3c38dd3eb0eb7d061ed3">getCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a73009b552b45053ea75d3af19003095c">getCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a886fd594eb5ff4553f89c504ed138765">getCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1addb67edfbc30c0b8204a238d3e7f0595">getCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1acafae2124ad0cf991a7d196494e1a6d0">getCMYKLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="228" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1ac202e5c3f35019f469e31c24f8629902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getDeviceNLine</definition>
        <argsstring>(Guchar *, Guchar *, int)</argsstring>
        <name>getDeviceNLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a8236cdfeb38e36c114ef0aaf34bb9475">getDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1aab8b6369a020869936b62cdb21b6e2f8">getDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a6b5d979fda3a3cfaf01b1b5a86dd588b">getDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1ac85eeae99df2a17e468458a107e4b3f0">getDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1ae864820544eb1f6b14d477717a4b54ba">getDeviceNLine</reimplementedby>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>Guchar *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="229" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a858450091c4800d3b20f5ec00d3d7bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxColorSpace::createMapping</definition>
        <argsstring>(GooList *separationList, int maxSepComps)</argsstring>
        <name>createMapping</name>
        <reimplementedby refid="class_gfx_indexed_color_space_1a740065fe2797916b09cb6ed13e77d559">createMapping</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1ab1105db480f515921e695bdbfd167e74">createMapping</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1a64a73a9ec4cee654e8e4a33b61b82798">createMapping</reimplementedby>
        <param>
          <type><ref refid="class_goo_list" kindref="compound">GooList</ref> *</type>
          <declname>separationList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSepComps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="232" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="470" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a5dc3e2f45b27e18903355b372c91b7d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxColorSpace::useGetRGBLine</definition>
        <argsstring>()</argsstring>
        <name>useGetRGBLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1ac4fdd2338de95f2a487c635de748c905">useGetRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1ae51495df28ad70e9637e28a397bb0bfa">useGetRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1aca5267cbe1f3f5ff25540b1e874f1aac">useGetRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a74f3e8504a2878d4deadfb9bee7599ae">useGetRGBLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a81f48c04216a3b869c75c951f584b881">useGetRGBLine</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="235" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a1ce738aa5f5d2f1003722606131de666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxColorSpace::useGetGrayLine</definition>
        <argsstring>()</argsstring>
        <name>useGetGrayLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1af0f4f84d3f080638d0de80d25dd85f43">useGetGrayLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a042b0ea2007a7f1fb651bdc5da8b04e1">useGetGrayLine</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="237" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a658fcf572f3c594da1af8d761e347db2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxColorSpace::useGetCMYKLine</definition>
        <argsstring>()</argsstring>
        <name>useGetCMYKLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a90669c68c71b151a1b087883d00c71e3">useGetCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1ad280c59e843b5764c4174d4a50b4bca0">useGetCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a64f8c67d6815638a1a8da17b9c220005">useGetCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a0ed7bf6eb9aa4c96857ac35f7d844e6f">useGetCMYKLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a10fb509ee8a65aee8b7d2a5c1c26804f">useGetCMYKLine</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="239" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a05afe94a07e6aef98242e7d91ca321fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxColorSpace::useGetDeviceNLine</definition>
        <argsstring>()</argsstring>
        <name>useGetDeviceNLine</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a342c413581d40da1925afe51a50983ae">useGetDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1aa504a34e8ce16c4669dc970b08070f83">useGetDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1ac3b01006059a6ac4f1b878a66d349725">useGetDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1ab31b5e6e625f5a1064e1f48b15357abf">useGetDeviceNLine</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a335ed67acbfd0ecae921ac0e718e1bbd">useGetDeviceNLine</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="241" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a7c02497043112d539cb9fff80d59a149" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int GfxColorSpace::getNComps</definition>
        <argsstring>()=0</argsstring>
        <name>getNComps</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a92a8d91860f4c68682e6cc7ac6cb6674">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1a34f0e3280720a0c45ffcde5bf2111908">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a3eecf86dea0bf88bea603b2e3eaea74d">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1aeb75502b04b325124cf7deb2d7fa23c8">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a1e4bfb0380adc3ca0e22453102ef1e98">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a1de50a7fff7a259866d522cfbcf05285">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1ab6a5fa2bcc5a6f093cf1e34b8ce267f1">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a6493bb274d1c015e86a53d136403a7f2">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1add14941bfff704301722e7a0e6912132">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1ad8fb9718144d473a0b14a609ee758c4d">getNComps</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1ac97488be28b01f2085faaec704438f9a">getNComps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a46216c9497adc828d92c23b3ef3ec874" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GfxColorSpace::getDefaultColor</definition>
        <argsstring>(GfxColor *color)=0</argsstring>
        <name>getDefaultColor</name>
        <reimplementedby refid="class_gfx_device_gray_color_space_1a4055dc7cb3b60d010639cc4fd91107a1">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_cal_gray_color_space_1af4eebae9496509437464a19c016bf6b9">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_device_r_g_b_color_space_1a82c3504662893f754c3bba5580776129">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_cal_r_g_b_color_space_1a0740d87197e68c8d3aaf038d51bce6bd">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_device_c_m_y_k_color_space_1a8bd6fba90b50d4e2a2422bb3872f7a1c">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_lab_color_space_1a78c325add95ec3c258c17b926818295b">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a1939e715e71bc4f5f881c2b07ac84180">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a0fcc6fe702131335460a5e33c42f3c11">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_separation_color_space_1ae19a6e3ff800d3a8eb82e92d4d94a832">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1af264b9b4c17f815bd21b371b60aff93c">getDefaultColor</reimplementedby>
        <reimplementedby refid="class_gfx_pattern_color_space_1a1a03a3d37e3a9aaf2c45a388376ca1a8">getDefaultColor</reimplementedby>
        <param>
          <type><ref refid="struct_gfx_color" kindref="compound">GfxColor</ref> *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1ae6ef6bf8cc5350a86163d8c924c28259" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GfxColorSpace::getDefaultRanges</definition>
        <argsstring>(double *decodeLow, double *decodeRange, int maxImgPixel)</argsstring>
        <name>getDefaultRanges</name>
        <reimplementedby refid="class_gfx_lab_color_space_1a694f15514cf93ce44ba4d1af1ea39526">getDefaultRanges</reimplementedby>
        <reimplementedby refid="class_gfx_i_c_c_based_color_space_1a99583042467644238e8908c0a5f47b4c">getDefaultRanges</reimplementedby>
        <reimplementedby refid="class_gfx_indexed_color_space_1a77d57ba1ca5e70c6845ab24d29c6362c">getDefaultRanges</reimplementedby>
        <param>
          <type>double *</type>
          <declname>decodeLow</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>decodeRange</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxImgPixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="251" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="474" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a17f370ed734b51be5389a47c73f44a07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool GfxColorSpace::isNonMarking</definition>
        <argsstring>()</argsstring>
        <name>isNonMarking</name>
        <reimplementedby refid="class_gfx_separation_color_space_1a10a40d430b57e06836cef8babf41c8a9">isNonMarking</reimplementedby>
        <reimplementedby refid="class_gfx_device_n_color_space_1a6f6f480e49d3bcffec756fdeb4b1ad37">isNonMarking</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="256" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a1e2df22dd9f134c45e538c81817ecece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Guint</type>
        <definition>Guint GfxColorSpace::getOverprintMask</definition>
        <argsstring>()</argsstring>
        <name>getOverprintMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="259" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="259" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gfx_color_space_1a5148e906da19d9fb4f1ed8bc58aa9c69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref> *</type>
        <definition>GfxColorSpace * GfxColorSpace::parse</definition>
        <argsstring>(GfxResources *res, Object *csObj, OutputDev *out, GfxState *state, int recursion=0)</argsstring>
        <name>parse</name>
        <param>
          <type><ref refid="class_gfx_resources" kindref="compound">GfxResources</ref> *</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>csObj</declname>
        </param>
        <param>
          <type><ref refid="class_output_dev" kindref="compound">OutputDev</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_gfx_state" kindref="compound">GfxState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recursion</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="217" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="303" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1ae3246de274ca29e6b3f8c9518bcd7e7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GfxColorSpace::getNumColorSpaceModes</definition>
        <argsstring>()</argsstring>
        <name>getNumColorSpaceModes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="262" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_color_space_1a565e06b7691f78e2cb116c9ae86a75d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * GfxColorSpace::getColorSpaceModeName</definition>
        <argsstring>(int idx)</argsstring>
        <name>getColorSpaceModeName</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="265" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="488" bodyend="490"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6704">
        <label>GfxICCBasedColorSpace</label>
        <link refid="class_gfx_i_c_c_based_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6707">
        <label>GfxPatternColorSpace</label>
        <link refid="class_gfx_pattern_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6708">
        <label>GfxSeparationColorSpace</label>
        <link refid="class_gfx_separation_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6699">
        <label>GfxCalRGBColorSpace</label>
        <link refid="class_gfx_cal_r_g_b_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6698">
        <label>GfxCalGrayColorSpace</label>
        <link refid="class_gfx_cal_gray_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6697">
        <label>GfxColorSpace</label>
        <link refid="class_gfx_color_space"/>
      </node>
      <node id="6705">
        <label>GfxIndexedColorSpace</label>
        <link refid="class_gfx_indexed_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6706">
        <label>GfxLabColorSpace</label>
        <link refid="class_gfx_lab_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6703">
        <label>GfxDeviceRGBColorSpace</label>
        <link refid="class_gfx_device_r_g_b_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6702">
        <label>GfxDeviceNColorSpace</label>
        <link refid="class_gfx_device_n_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6701">
        <label>GfxDeviceGrayColorSpace</label>
        <link refid="class_gfx_device_gray_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6700">
        <label>GfxDeviceCMYKColorSpace</label>
        <link refid="class_gfx_device_c_m_y_k_color_space"/>
        <childnode refid="6697" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="thirdparty/poppler/poppler/GfxState.h" line="208" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="208" bodyend="281"/>
    <listofallmembers>
      <member refid="class_gfx_color_space_1ab9b445e9acc594640393e17e27e4cf5c" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>copy</name></member>
      <member refid="class_gfx_color_space_1a858450091c4800d3b20f5ec00d3d7bb2" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>createMapping</name></member>
      <member refid="class_gfx_color_space_1af7bf579a6b33d40f3581224a32358c1a" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getCMYK</name></member>
      <member refid="class_gfx_color_space_1a910dcaca94d45162d45fa4fc3e39e050" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getCMYKLine</name></member>
      <member refid="class_gfx_color_space_1a565e06b7691f78e2cb116c9ae86a75d8" prot="public" virt="non-virtual"><scope>GfxColorSpace</scope><name>getColorSpaceModeName</name></member>
      <member refid="class_gfx_color_space_1a46216c9497adc828d92c23b3ef3ec874" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getDefaultColor</name></member>
      <member refid="class_gfx_color_space_1ae6ef6bf8cc5350a86163d8c924c28259" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getDefaultRanges</name></member>
      <member refid="class_gfx_color_space_1a4fe08463045871f547c67e0ba6a26ceb" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getDeviceN</name></member>
      <member refid="class_gfx_color_space_1ac202e5c3f35019f469e31c24f8629902" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getDeviceNLine</name></member>
      <member refid="class_gfx_color_space_1a76c3d1987b9328cfeeab349dfb8eddaa" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getGray</name></member>
      <member refid="class_gfx_color_space_1acfdfc1b540710b4c27c5694fd4379724" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getGrayLine</name></member>
      <member refid="class_gfx_color_space_1a4559405ac922360f73a0d06ce05ca623" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getMode</name></member>
      <member refid="class_gfx_color_space_1a7c02497043112d539cb9fff80d59a149" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getNComps</name></member>
      <member refid="class_gfx_color_space_1ae3246de274ca29e6b3f8c9518bcd7e7a" prot="public" virt="non-virtual"><scope>GfxColorSpace</scope><name>getNumColorSpaceModes</name></member>
      <member refid="class_gfx_color_space_1a1e2df22dd9f134c45e538c81817ecece" prot="public" virt="non-virtual"><scope>GfxColorSpace</scope><name>getOverprintMask</name></member>
      <member refid="class_gfx_color_space_1a75622e2b5bdc720d5a13af5abeb9d93a" prot="public" virt="pure-virtual"><scope>GfxColorSpace</scope><name>getRGB</name></member>
      <member refid="class_gfx_color_space_1a733db66f1648133353926534f6df9a4b" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getRGBLine</name></member>
      <member refid="class_gfx_color_space_1acb4b06db7af47cfba3799b505b64a216" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getRGBLine</name></member>
      <member refid="class_gfx_color_space_1a39b4b676e836a008a85d221c6ad6224f" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>getRGBXLine</name></member>
      <member refid="class_gfx_color_space_1ab3e7357f0fcc95a97e0ae03739a7927d" prot="public" virt="non-virtual"><scope>GfxColorSpace</scope><name>GfxColorSpace</name></member>
      <member refid="class_gfx_color_space_1a17f370ed734b51be5389a47c73f44a07" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>isNonMarking</name></member>
      <member refid="class_gfx_color_space_1abb58f49030532ce0472969de9aeb94aa" prot="protected" virt="non-virtual"><scope>GfxColorSpace</scope><name>mapping</name></member>
      <member refid="class_gfx_color_space_1a98d9d81b6aed7ad9d9164ef834478e66" prot="protected" virt="non-virtual"><scope>GfxColorSpace</scope><name>overprintMask</name></member>
      <member refid="class_gfx_color_space_1a5148e906da19d9fb4f1ed8bc58aa9c69" prot="public" virt="non-virtual"><scope>GfxColorSpace</scope><name>parse</name></member>
      <member refid="class_gfx_color_space_1a658fcf572f3c594da1af8d761e347db2" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>useGetCMYKLine</name></member>
      <member refid="class_gfx_color_space_1a05afe94a07e6aef98242e7d91ca321fc" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>useGetDeviceNLine</name></member>
      <member refid="class_gfx_color_space_1a1ce738aa5f5d2f1003722606131de666" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>useGetGrayLine</name></member>
      <member refid="class_gfx_color_space_1a5dc3e2f45b27e18903355b372c91b7d3" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>useGetRGBLine</name></member>
      <member refid="class_gfx_color_space_1a5ce3223b6e798e6ef6ed1633e93fb79d" prot="public" virt="virtual"><scope>GfxColorSpace</scope><name>~GfxColorSpace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
