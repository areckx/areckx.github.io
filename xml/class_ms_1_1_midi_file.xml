<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_midi_file" kind="class" language="C++" prot="public">
    <compoundname>Ms::MidiFile</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1aa09dd0564c6df6f963d3e34c4f8e0388" prot="private" static="no" mutable="no">
        <type>QIODevice *</type>
        <definition>QIODevice* Ms::MidiFile::fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="71" column="1" bodyfile="midi/midifile.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1af035d823d4c864893618ca8fdb39b588" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_midi_track" kindref="compound">MidiTrack</ref> &gt;</type>
        <definition>QList&lt;MidiTrack&gt; Ms::MidiFile::_tracks</definition>
        <argsstring></argsstring>
        <name>_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="72" column="1" bodyfile="midi/midifile.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a3a177d5d1de419f4883191331ed7296e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiFile::_division</definition>
        <argsstring></argsstring>
        <name>_division</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="73" column="1" bodyfile="midi/midifile.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a78c2c191850f3201a6ba346c043eea72" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MidiFile::_isDivisionInTps</definition>
        <argsstring></argsstring>
        <name>_isDivisionInTps</name>
        <briefdescription>
<para>ticks per second, alternative - ticks per beat </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="74" column="1" bodyfile="midi/midifile.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a765ccb4d690382af57ccc98d39d0dae3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiFile::_format</definition>
        <argsstring></argsstring>
        <name>_format</name>
        <briefdescription>
<para>midi file format (0-2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="75" column="1" bodyfile="midi/midifile.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a31ea0241c71ea681ff428069e1f64820" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MidiFile::_noRunningStatus</definition>
        <argsstring></argsstring>
        <name>_noRunningStatus</name>
        <briefdescription>
<para>do not use running status on output </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="76" column="1" bodyfile="midi/midifile.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1ad9cc4814621221c7f5f129fb16d72287" prot="private" static="no" mutable="no">
        <type>MidiType</type>
        <definition>MidiType Ms::MidiFile::_midiType</definition>
        <argsstring></argsstring>
        <name>_midiType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="77" column="1" bodyfile="midi/midifile.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a4f04ccae380828cb1b07ad6496331e9f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiFile::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
<para>running status </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="80" column="1" bodyfile="midi/midifile.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a4d1103c6eee3a35f983fa70c94c6ca77" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiFile::sstatus</definition>
        <argsstring></argsstring>
        <name>sstatus</name>
        <briefdescription>
<para>running status (not reset after meta or sysex events) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="81" column="1" bodyfile="midi/midifile.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a5820663c7c514b6b98d38d97af917295" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiFile::click</definition>
        <argsstring></argsstring>
        <name>click</name>
        <briefdescription>
<para>current tick position in file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="82" column="1" bodyfile="midi/midifile.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_file_1a12fe47161c95bf8a85b473a04bb90057" prot="private" static="no" mutable="no">
        <type>qint64</type>
        <definition>qint64 Ms::MidiFile::curPos</definition>
        <argsstring></argsstring>
        <name>curPos</name>
        <briefdescription>
<para>current file byte position </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="83" column="1" bodyfile="midi/midifile.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_midi_file_1ac7676f0125a777321a391caed71bc4b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeEvent</definition>
        <argsstring>(const MidiEvent &amp;event)</argsstring>
        <name>writeEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="85" column="1" bodyfile="midi/midifile.cpp" bodystart="90" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a96c6082dae7dffc86ee0d173a700c14b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::write</definition>
        <argsstring>(const void *, qint64)</argsstring>
        <name>write</name>
        <param>
          <type>const void *</type>
          <defname>p</defname>
        </param>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="89" column="1" bodyfile="midi/midifile.cpp" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a70e964adc1025404111aaa47336a89a9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeShort</definition>
        <argsstring>(int)</argsstring>
        <name>writeShort</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="90" column="1" bodyfile="midi/midifile.cpp" bodystart="389" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a34977bbb6e6a998f577de3009c901301" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeLong</definition>
        <argsstring>(int)</argsstring>
        <name>writeLong</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="91" column="1" bodyfile="midi/midifile.cpp" bodystart="416" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a3e203435dc54b4c6523342469f23d9c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::writeTrack</definition>
        <argsstring>(const MidiTrack &amp;)</argsstring>
        <name>writeTrack</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_track" kindref="compound">MidiTrack</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="92" column="1" bodyfile="midi/midifile.cpp" bodystart="151" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a74a8d5c857a669a8fa7334bbf30c40e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::putvl</definition>
        <argsstring>(unsigned)</argsstring>
        <name>putvl</name>
        <param>
          <type>unsigned</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="93" column="1" bodyfile="midi/midifile.cpp" bodystart="463" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a9bdfb669e279e81d8d116ae59722b7ae" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::put</definition>
        <argsstring>(unsigned char c)</argsstring>
        <name>put</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="94" column="1" bodyfile="midi/midifile.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a5eeef9e557894cef8a8241925ce2b324" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeStatus</definition>
        <argsstring>(int type, int channel)</argsstring>
        <name>writeStatus</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="95" column="1" bodyfile="midi/midifile.cpp" bodystart="191" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1af1925aeaf05cc9a4577311db1b1114ae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::read</definition>
        <argsstring>(void *, qint64)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <defname>p</defname>
        </param>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="98" column="1" bodyfile="midi/midifile.cpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1ac7cc609e1b398dc33c42a8c902ac2608" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::getvl</definition>
        <argsstring>()</argsstring>
        <name>getvl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="99" column="1" bodyfile="midi/midifile.cpp" bodystart="443" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1aaf8046d0a5e8da4ad02f52fca895f3f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::readShort</definition>
        <argsstring>()</argsstring>
        <name>readShort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="100" column="1" bodyfile="midi/midifile.cpp" bodystart="373" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1aedd3144615cf104d0a05f82583b9a9de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::readLong</definition>
        <argsstring>()</argsstring>
        <name>readLong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="101" column="1" bodyfile="midi/midifile.cpp" bodystart="400" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1ab9b768146662abaf226240bd530c5f18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::readEvent</definition>
        <argsstring>(MidiEvent *)</argsstring>
        <name>readEvent</name>
        <param>
          <type><ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> *</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="102" column="1" bodyfile="midi/midifile.cpp" bodystart="509" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a3a125b39fb645a5576a97f889cceba30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::readTrack</definition>
        <argsstring>()</argsstring>
        <name>readTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="103" column="1" bodyfile="midi/midifile.cpp" bodystart="306" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1afe2f0f15effd198649ec822fa99888a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::skip</definition>
        <argsstring>(qint64)</argsstring>
        <name>skip</name>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="104" column="1" bodyfile="midi/midifile.cpp" bodystart="430" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1afce758349d5ab5fe853f8981c37e7142" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::resetRunningStatus</definition>
        <argsstring>()</argsstring>
        <name>resetRunningStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="106" column="1" bodyfile="midi/midifile.h" bodystart="106" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a989fec6d479c0ebf68ef72224e58e894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiFile::MidiFile</definition>
        <argsstring>()</argsstring>
        <name>MidiFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="109" column="1" bodyfile="midi/midifile.cpp" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a8a1ac2ced9288846596cd5b2d18abe87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::read</definition>
        <argsstring>(QIODevice *)</argsstring>
        <name>read</name>
        <param>
          <type>QIODevice *</type>
          <defname>in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="110" column="1" bodyfile="midi/midifile.cpp" bodystart="208" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a05ed269ba1eaa3070c82361869c77c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::write</definition>
        <argsstring>(QIODevice *)</argsstring>
        <name>write</name>
        <param>
          <type>QIODevice *</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="111" column="1" bodyfile="midi/midifile.cpp" bodystart="71" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1aff5a5492ba4e9c184c57f1a835378eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::readXml</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>readXml</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1af3e939f713ef81d7a229efc1f3c7dd74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_midi_track" kindref="compound">MidiTrack</ref> &gt; &amp;</type>
        <definition>QList&lt;MidiTrack&gt;&amp; Ms::MidiFile::tracks</definition>
        <argsstring>()</argsstring>
        <name>tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="114" column="1" bodyfile="midi/midifile.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a52dc03c711059c39f85901bbefaa54b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_midi_track" kindref="compound">MidiTrack</ref> &gt; &amp;</type>
        <definition>const QList&lt;MidiTrack&gt;&amp; Ms::MidiFile::tracks</definition>
        <argsstring>() const</argsstring>
        <name>tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="115" column="1" bodyfile="midi/midifile.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a616ff8d50202d4c26a5c4403b5dde85d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>MidiType</type>
        <definition>MidiType Ms::MidiFile::midiType</definition>
        <argsstring>() const</argsstring>
        <name>midiType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="117" column="1" bodyfile="midi/midifile.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a2d55555f246ac838e8bfee9604402fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::setMidiType</definition>
        <argsstring>(MidiType mt)</argsstring>
        <name>setMidiType</name>
        <param>
          <type>MidiType</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="118" column="1" bodyfile="midi/midifile.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a4c63895c1dca70765690569705d6f2bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiFile::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="120" column="1" bodyfile="midi/midifile.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a2002c0471d70546b2027c4c33e78db9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::setFormat</definition>
        <argsstring>(int fmt)</argsstring>
        <name>setFormat</name>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="121" column="1" bodyfile="midi/midifile.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1ab73c3e61cf9cdf9befc94fb81506668c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiFile::division</definition>
        <argsstring>() const</argsstring>
        <name>division</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="123" column="1" bodyfile="midi/midifile.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a280c23a9bf30974125594eb5770560ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiFile::isDivisionInTps</definition>
        <argsstring>() const</argsstring>
        <name>isDivisionInTps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="124" column="1" bodyfile="midi/midifile.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1a6dee730f0db37fc6c3fee033cf7fdf83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiFile::setDivision</definition>
        <argsstring>(int val)</argsstring>
        <name>setDivision</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="125" column="1" bodyfile="midi/midifile.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_file_1ac7260ada0482cb871dcdf63d398c82c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::separateChannel</definition>
        <argsstring>()</argsstring>
        <name>separateChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="126" column="1" bodyfile="midi/midifile.cpp" bodystart="874" bodyend="914"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="midi/midifile.h" line="70" column="1" bodyfile="midi/midifile.h" bodystart="70" bodyend="127"/>
    <listofallmembers>
      <member refid="class_ms_1_1_midi_file_1a3a177d5d1de419f4883191331ed7296e" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_division</name></member>
      <member refid="class_ms_1_1_midi_file_1a765ccb4d690382af57ccc98d39d0dae3" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_format</name></member>
      <member refid="class_ms_1_1_midi_file_1a78c2c191850f3201a6ba346c043eea72" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_isDivisionInTps</name></member>
      <member refid="class_ms_1_1_midi_file_1ad9cc4814621221c7f5f129fb16d72287" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_midiType</name></member>
      <member refid="class_ms_1_1_midi_file_1a31ea0241c71ea681ff428069e1f64820" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_noRunningStatus</name></member>
      <member refid="class_ms_1_1_midi_file_1af035d823d4c864893618ca8fdb39b588" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>_tracks</name></member>
      <member refid="class_ms_1_1_midi_file_1a5820663c7c514b6b98d38d97af917295" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>click</name></member>
      <member refid="class_ms_1_1_midi_file_1a12fe47161c95bf8a85b473a04bb90057" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>curPos</name></member>
      <member refid="class_ms_1_1_midi_file_1ab73c3e61cf9cdf9befc94fb81506668c" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>division</name></member>
      <member refid="class_ms_1_1_midi_file_1a4c63895c1dca70765690569705d6f2bf" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>format</name></member>
      <member refid="class_ms_1_1_midi_file_1aa09dd0564c6df6f963d3e34c4f8e0388" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>fp</name></member>
      <member refid="class_ms_1_1_midi_file_1ac7cc609e1b398dc33c42a8c902ac2608" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>getvl</name></member>
      <member refid="class_ms_1_1_midi_file_1a280c23a9bf30974125594eb5770560ff" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>isDivisionInTps</name></member>
      <member refid="class_ms_1_1_midi_file_1a989fec6d479c0ebf68ef72224e58e894" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>MidiFile</name></member>
      <member refid="class_ms_1_1_midi_file_1a616ff8d50202d4c26a5c4403b5dde85d" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>midiType</name></member>
      <member refid="class_ms_1_1_midi_file_1a9bdfb669e279e81d8d116ae59722b7ae" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>put</name></member>
      <member refid="class_ms_1_1_midi_file_1a74a8d5c857a669a8fa7334bbf30c40e5" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>putvl</name></member>
      <member refid="class_ms_1_1_midi_file_1af1925aeaf05cc9a4577311db1b1114ae" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>read</name></member>
      <member refid="class_ms_1_1_midi_file_1a8a1ac2ced9288846596cd5b2d18abe87" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>read</name></member>
      <member refid="class_ms_1_1_midi_file_1ab9b768146662abaf226240bd530c5f18" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>readEvent</name></member>
      <member refid="class_ms_1_1_midi_file_1aedd3144615cf104d0a05f82583b9a9de" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>readLong</name></member>
      <member refid="class_ms_1_1_midi_file_1aaf8046d0a5e8da4ad02f52fca895f3f5" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>readShort</name></member>
      <member refid="class_ms_1_1_midi_file_1a3a125b39fb645a5576a97f889cceba30" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>readTrack</name></member>
      <member refid="class_ms_1_1_midi_file_1aff5a5492ba4e9c184c57f1a835378eb9" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>readXml</name></member>
      <member refid="class_ms_1_1_midi_file_1afce758349d5ab5fe853f8981c37e7142" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>resetRunningStatus</name></member>
      <member refid="class_ms_1_1_midi_file_1ac7260ada0482cb871dcdf63d398c82c3" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>separateChannel</name></member>
      <member refid="class_ms_1_1_midi_file_1a6dee730f0db37fc6c3fee033cf7fdf83" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>setDivision</name></member>
      <member refid="class_ms_1_1_midi_file_1a2002c0471d70546b2027c4c33e78db9d" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>setFormat</name></member>
      <member refid="class_ms_1_1_midi_file_1a2d55555f246ac838e8bfee9604402fda" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>setMidiType</name></member>
      <member refid="class_ms_1_1_midi_file_1afe2f0f15effd198649ec822fa99888a6" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>skip</name></member>
      <member refid="class_ms_1_1_midi_file_1a4d1103c6eee3a35f983fa70c94c6ca77" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>sstatus</name></member>
      <member refid="class_ms_1_1_midi_file_1a4f04ccae380828cb1b07ad6496331e9f" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>status</name></member>
      <member refid="class_ms_1_1_midi_file_1af3e939f713ef81d7a229efc1f3c7dd74" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>tracks</name></member>
      <member refid="class_ms_1_1_midi_file_1a52dc03c711059c39f85901bbefaa54b2" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>tracks</name></member>
      <member refid="class_ms_1_1_midi_file_1a96c6082dae7dffc86ee0d173a700c14b" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>write</name></member>
      <member refid="class_ms_1_1_midi_file_1a05ed269ba1eaa3070c82361869c77c0d" prot="public" virt="non-virtual"><scope>Ms::MidiFile</scope><name>write</name></member>
      <member refid="class_ms_1_1_midi_file_1ac7676f0125a777321a391caed71bc4b8" prot="private" virt="non-virtual"><scope>Ms::MidiFile</scope><name>writeEvent</name></member>
      <member refid="class_ms_1_1_midi_file_1a34977bbb6e6a998f577de3009c901301" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>writeLong</name></member>
      <member refid="class_ms_1_1_midi_file_1a70e964adc1025404111aaa47336a89a9" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>writeShort</name></member>
      <member refid="class_ms_1_1_midi_file_1a5eeef9e557894cef8a8241925ce2b324" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>writeStatus</name></member>
      <member refid="class_ms_1_1_midi_file_1a3e203435dc54b4c6523342469f23d9c5" prot="protected" virt="non-virtual"><scope>Ms::MidiFile</scope><name>writeTrack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
