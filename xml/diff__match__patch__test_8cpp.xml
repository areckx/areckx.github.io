<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="diff__match__patch__test_8cpp" kind="file" language="C++">
    <compoundname>diff_match_patch_test.cpp</compoundname>
    <includes local="no">QtCore</includes>
    <includes refid="diff__match__patch_8h" local="yes">diff_match_patch.h</includes>
    <includes refid="diff__match__patch__test_8h" local="yes">diff_match_patch_test.h</includes>
    <incdepgraph>
      <node id="76310">
        <label>thirdparty/diff/diff_match_patch_test.cpp</label>
        <link refid="diff__match__patch__test_8cpp"/>
        <childnode refid="76311" relation="include">
        </childnode>
        <childnode refid="76312" relation="include">
        </childnode>
        <childnode refid="76314" relation="include">
        </childnode>
      </node>
      <node id="76311">
        <label>QtCore</label>
      </node>
      <node id="76313">
        <label>ctime</label>
      </node>
      <node id="76312">
        <label>diff_match_patch.h</label>
        <link refid="diff__match__patch_8h_source"/>
        <childnode refid="76313" relation="include">
        </childnode>
      </node>
      <node id="76314">
        <label>diff_match_patch_test.h</label>
        <link refid="diff__match__patch__test_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="diff__match__patch__test_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/diff/diff_match_patch_test.cpp" line="27" column="1" bodyfile="thirdparty/diff/diff_match_patch_test.cpp" bodystart="27" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Author:<sp/>fraser@google.com<sp/>(Neil<sp/>Fraser)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/>mikeslemmer@gmail.com<sp/>(Mike<sp/>Slemmer)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Diff<sp/>Match<sp/>and<sp/>Patch<sp/>--<sp/>Test<sp/>Harness</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>http://code.google.com/p/google-diff-match-patch/</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>known<sp/>to<sp/>compile<sp/>and<sp/>run<sp/>with<sp/>Qt<sp/>4.3<sp/>through<sp/>Qt<sp/>4.7.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;diff_match_patch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;diff_match_patch_test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classdiff__match__patch__test" kindref="compound">diff_match_patch_test</ref><sp/>dmp_test;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Starting<sp/>diff_match_patch<sp/>unit<sp/>tests.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>dmp_test.run_all_tests();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Done.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>Q_UNUSED(argc)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>Q_UNUSED(argv)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">diff_match_patch_test::diff_match_patch_test()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::run_all_tests()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>QTime<sp/>t;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>t.start();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCommonPrefix();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCommonSuffix();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCommonOverlap();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffHalfmatch();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffLinesToChars();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCharsToLines();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCleanupMerge();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCleanupSemanticLossless();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCleanupSemantic();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffCleanupEfficiency();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffPrettyHtml();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffText();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffDelta();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffXIndex();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffLevenshtein();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffBisect();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>testDiffMain();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>testMatchAlphabet();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>testMatchBitap();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>testMatchMain();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchObj();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchFromText();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchToText();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchAddContext();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchMake();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchSplitMax();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchAddPadding();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>testPatchApply();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;All<sp/>tests<sp/>passed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(QString<sp/>strCase)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Test<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Total<sp/>time:<sp/>%d<sp/>ms&quot;</highlight><highlight class="normal">,<sp/>t.elapsed());</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DIFF<sp/>TEST<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCommonPrefix()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>any<sp/>common<sp/>prefix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonPrefix:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a6139ad292f602b8b9295fe0c48709e31" kindref="member">diff_commonPrefix</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonPrefix:<sp/>Non-null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a6139ad292f602b8b9295fe0c48709e31" kindref="member">diff_commonPrefix</ref>(</highlight><highlight class="stringliteral">&quot;1234abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1234xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonPrefix:<sp/>Whole<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a6139ad292f602b8b9295fe0c48709e31" kindref="member">diff_commonPrefix</ref>(</highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1234xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCommonSuffix()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>any<sp/>common<sp/>suffix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonSuffix:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1aed765d65d9e6fb78de3725416a262586" kindref="member">diff_commonSuffix</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonSuffix:<sp/>Non-null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1aed765d65d9e6fb78de3725416a262586" kindref="member">diff_commonSuffix</ref>(</highlight><highlight class="stringliteral">&quot;abcdef1234&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz1234&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonSuffix:<sp/>Whole<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1aed765d65d9e6fb78de3725416a262586" kindref="member">diff_commonSuffix</ref>(</highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyz1234&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCommonOverlap()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>any<sp/>suffix/prefix<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonOverlap:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" kindref="member">diff_commonOverlap</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonOverlap:<sp/>Whole<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>dmp.<ref refid="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" kindref="member">diff_commonOverlap</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonOverlap:<sp/>No<sp/>overlap.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" kindref="member">diff_commonOverlap</ref>(</highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_commonOverlap:<sp/>Overlap.&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>dmp.<ref refid="classdiff__match__patch_1aa47c81e235ed1609fb915f03316d21dc" kindref="member">diff_commonOverlap</ref>(</highlight><highlight class="stringliteral">&quot;123456xxx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xxxabcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffHalfmatch()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>a<sp/>halfmatch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>dmp.Diff_Timeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>assertEmpty(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>No<sp/>match<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;1234567890&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>assertEmpty(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>No<sp/>match<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;12345&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;23&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Single<sp/>Match<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;12,90,a,z,345678&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;1234567890&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a345678z&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Single<sp/>Match<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;a,z,12,90,345678&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;a345678z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1234567890&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Single<sp/>Match<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;abc,z,1234,0,56789&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;abc56789z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1234567890&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Single<sp/>Match<sp/>#4.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;a,xyz,1,7890,23456&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;a23456xyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1234567890&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Multiple<sp/>Matches<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;12123,123121,a,z,1234123451234&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;121231234123451234123121&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a1234123451234z&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Multiple<sp/>Matches<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;,-=-=-=-=-=,x,,x-=-=-=-=-=-=-=&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;x-=-=-=-=-=-=-=-=-=-=-=-=&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xx-=-=-=-=-=-=-=&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Multiple<sp/>Matches<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;-=-=-=-=-=,,,y,-=-=-=-=-=-=-=y&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;-=-=-=-=-=-=-=-=-=-=-=-=y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-=-=-=-=-=-=-=yy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimal<sp/>diff<sp/>would<sp/>be<sp/>-q+x=H-i+e=lloHe+Hu=llo-Hew+y<sp/>not<sp/>-qHillo+x=HelloHe-w+Hulloy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Non-optimal<sp/>halfmatch.&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;qHillo,w,x,Hulloy,HelloHe&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;qHilloHelloHew&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xHelloHeHulloy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>dmp.Diff_Timeout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>assertEmpty(</highlight><highlight class="stringliteral">&quot;diff_halfMatch:<sp/>Optimal<sp/>no<sp/>halfmatch.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a34e2eabd2503e28eebe97a05dc3783dc" kindref="member">diff_halfMatch</ref>(</highlight><highlight class="stringliteral">&quot;qHilloHelloHew&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xHelloHeHulloy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffLinesToChars()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>lines<sp/>down<sp/>to<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>QStringList<sp/>tmpVector;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>QList&lt;QVariant&gt;<sp/>tmpVarList;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;alpha\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;beta\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString()<sp/>+<sp/>QChar((ushort)1)<sp/>+<sp/>QChar((ushort)2)<sp/>+<sp/>QChar((ushort)1));<sp/><sp/></highlight><highlight class="comment">//((&quot;\u0001\u0002\u0001&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString()<sp/>+<sp/>QChar((ushort)2)<sp/>+<sp/>QChar((ushort)1)<sp/>+<sp/>QChar((ushort)2));<sp/><sp/></highlight><highlight class="comment">//<sp/>((&quot;\u0002\u0001\u0002&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(tmpVector);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:&quot;</highlight><highlight class="normal">,<sp/>tmpVarList,<sp/>dmp.<ref refid="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" kindref="member">diff_linesToChars</ref>(</highlight><highlight class="stringliteral">&quot;alpha\nbeta\nalpha\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;beta\nalpha\nbeta\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>tmpVector.clear();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>tmpVarList.clear();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;alpha\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;beta\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString()<sp/>+<sp/>QChar((ushort)1)<sp/>+<sp/>QChar((ushort)2)<sp/>+<sp/>QChar((ushort)3)<sp/>+<sp/>QChar((ushort)3));<sp/><sp/></highlight><highlight class="comment">//<sp/>((&quot;\u0001\u0002\u0003\u0003&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(tmpVector);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:&quot;</highlight><highlight class="normal">,<sp/>tmpVarList,<sp/>dmp.<ref refid="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" kindref="member">diff_linesToChars</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alpha\r\nbeta\r\n\r\n\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>tmpVector.clear();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>tmpVarList.clear();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString()<sp/>+<sp/>QChar((ushort)1));<sp/><sp/></highlight><highlight class="comment">//<sp/>((&quot;\u0001&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString()<sp/>+<sp/>QChar((ushort)2));<sp/><sp/></highlight><highlight class="comment">//<sp/>((&quot;\u0002&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(tmpVector);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:&quot;</highlight><highlight class="normal">,<sp/>tmpVarList,<sp/>dmp.<ref refid="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" kindref="member">diff_linesToChars</ref>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>More<sp/>than<sp/>256<sp/>to<sp/>reveal<sp/>any<sp/>8-bit<sp/>limitations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>300;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>tmpVector.clear();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>tmpVarList.clear();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>QString<sp/>lines;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>QString<sp/>chars;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>1;<sp/>x<sp/>&lt;<sp/>n<sp/>+<sp/>1;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpVector.append(QString::number(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>+=<sp/>QString::number(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>chars<sp/>+=<sp/>QChar(static_cast&lt;ushort&gt;(x));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:<sp/>More<sp/>than<sp/>256<sp/>(setup).&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>tmpVector.size());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:<sp/>More<sp/>than<sp/>256<sp/>(setup).&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>chars.length());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>tmpVector.prepend(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(chars);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(QString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>tmpVarList<sp/>&lt;&lt;<sp/>QVariant::fromValue(tmpVector);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:<sp/>More<sp/>than<sp/>256.&quot;</highlight><highlight class="normal">,<sp/>tmpVarList,<sp/>dmp.<ref refid="classdiff__match__patch_1ab1f120b83d49948767de531ab2a4e15a" kindref="member">diff_linesToChars</ref>(lines,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCharsToLines()<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>that<sp/>Diff<sp/>equality<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>assertTrue(</highlight><highlight class="stringliteral">&quot;diff_charsToLines:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_charsToLines:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>chars<sp/>up<sp/>to<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>diffs<sp/>&lt;&lt;<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/>QString()<sp/>+<sp/>QChar((ushort)1)<sp/>+<sp/>QChar((ushort)2)<sp/>+<sp/>QChar((ushort)1));<sp/><sp/></highlight><highlight class="comment">//<sp/>(&quot;\u0001\u0002\u0001&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>diffs<sp/>&lt;&lt;<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/>QString()<sp/>+<sp/>QChar((ushort)2)<sp/>+<sp/>QChar((ushort)1)<sp/>+<sp/>QChar((ushort)2));<sp/><sp/></highlight><highlight class="comment">//<sp/>(&quot;\u0002\u0001\u0002&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>QStringList<sp/>tmpVector;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;alpha\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>tmpVector.append(</highlight><highlight class="stringliteral">&quot;beta\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>dmp.diff_charsToLines(diffs,<sp/>tmpVector);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_charsToLines:&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;alpha\nbeta\nalpha\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;beta\nalpha\nbeta\n&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>More<sp/>than<sp/>256<sp/>to<sp/>reveal<sp/>any<sp/>8-bit<sp/>limitations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>300;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>tmpVector.clear();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>QList&lt;QVariant&gt;<sp/>tmpVarList;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>QString<sp/>lines;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>QString<sp/>chars;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>1;<sp/>x<sp/>&lt;<sp/>n<sp/>+<sp/>1;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpVector.append(QString::number(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>+=<sp/>QString::number(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>chars<sp/>+=<sp/>QChar(static_cast&lt;ushort&gt;(x));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:<sp/>More<sp/>than<sp/>256<sp/>(setup).&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>tmpVector.size());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_linesToChars:<sp/>More<sp/>than<sp/>256<sp/>(setup).&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>chars.length());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>tmpVector.prepend(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/>chars));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>dmp.diff_charsToLines(diffs,<sp/>tmpVector);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_charsToLines:<sp/>More<sp/>than<sp/>256.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/>lines)),<sp/>diffs);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCleanupMerge()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>a<sp/>messy<sp/>diff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffList(),<sp/>diffs);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>No<sp/>change<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Merge<sp/>equalities.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Merge<sp/>deletions.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Merge<sp/>insertions.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Merge<sp/>interweave.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;bd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;ef&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;dc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Prefix<sp/>and<sp/>suffix<sp/>detection.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;dc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Prefix<sp/>and<sp/>suffix<sp/>detection<sp/>with<sp/>equalities.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xa&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;cy&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Slide<sp/>edit<sp/>left.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Slide<sp/>edit<sp/>right.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;ca&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Slide<sp/>edit<sp/>left<sp/>recursive.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;acx&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ca&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1ad64d391bc3f34cad326f869eedb748f9" kindref="member">diff_cleanupMerge</ref>(diffs);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupMerge:<sp/>Slide<sp/>edit<sp/>right<sp/>recursive.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xca&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cba&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCleanupSemanticLossless()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Slide<sp/>diffs<sp/>to<sp/>match<sp/>logical<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffList(),<sp/>diffs);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;AAA\r\n\r\nBBB&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;\r\nDDD\r\n\r\nBBB&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;\r\nEEE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemanticLossless:<sp/>Blank<sp/>lines.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;AAA\r\n\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;BBB\r\nDDD\r\n\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;BBB\r\nEEE&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;AAA\r\nBBB&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>DDD\r\nBBB&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>EEE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemanticLossless:<sp/>Line<sp/>boundaries.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;AAA\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;BBB<sp/>DDD\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;BBB<sp/>EEE&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ow<sp/>and<sp/>the<sp/>c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;at.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Word<sp/>boundaries.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;cow<sp/>and<sp/>the<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;cat.&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The-c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ow-and-the-c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;at.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Alphanumeric<sp/>boundaries.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The-&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;cow-and-the-&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;cat.&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;ax&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Hitting<sp/>the<sp/>start.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;aax&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xa&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afd96870070c1dc460d1c261fa3f0f485" kindref="member">diff_cleanupSemanticLossless</ref>(diffs);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Hitting<sp/>the<sp/>end.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xaa&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCleanupSemantic()<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>semantically<sp/>trivial<sp/>equalities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffList(),<sp/>diffs);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>No<sp/>elimination<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ABC&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;wxyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>No<sp/>elimination<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ABC&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;wxyz&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Simple<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Backpass<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;cdfg&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Multiple<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;AB_AB&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1A2_1A2&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ow<sp/>and<sp/>the<sp/>c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;at.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Word<sp/>boundaries.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cow<sp/>and<sp/>the<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;cat.&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abcxx&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;xxdef&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Overlap<sp/>elimination<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;def&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abcxx&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;xxdef&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ABCXX&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;XXDEF&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a1150e91652b023e8893555f737ac9894" kindref="member">diff_cleanupSemantic</ref>(diffs);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupSemantic:<sp/>Overlap<sp/>elimination<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;def&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ABC&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;XX&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;DEF&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffCleanupEfficiency()<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>operationally<sp/>trivial<sp/>equalities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>dmp.Diff_EditCost<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffList(),<sp/>diffs);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;wxyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>No<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;wxyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>Four-edit<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abxyzcd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12xyz34&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>Three-edit<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;xcd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12x34&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xy&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;56&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>Backpass<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abxyzcd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12xy34z56&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>dmp.Diff_EditCost<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;wxyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;34&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a41df9d26471d7d9f4ca085ab9f5da945" kindref="member">diff_cleanupEfficiency</ref>(diffs);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_cleanupEfficiency:<sp/>High<sp/>cost<sp/>elimination.&quot;</highlight><highlight class="normal">,<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abwxyzcd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;12wxyz34&quot;</highlight><highlight class="normal">)),<sp/>diffs);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>dmp.Diff_EditCost<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffPrettyHtml()<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pretty<sp/>print.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;&lt;B&gt;b&lt;/B&gt;&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;c&amp;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_prettyHtml:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;span&gt;a&amp;para;&lt;br&gt;&lt;/span&gt;&lt;del<sp/>style=\&quot;background:#ffe6e6;\&quot;&gt;&amp;lt;B&amp;gt;b&amp;lt;/B&amp;gt;&lt;/del&gt;&lt;ins<sp/>style=\&quot;background:#e6ffe6;\&quot;&gt;c&amp;amp;d&lt;/ins&gt;&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a3eeaf8a99e5d6f53e8994128d64f57f1" kindref="member">diff_prettyHtml</ref>(diffs));</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffText()<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>source<sp/>and<sp/>destination<sp/>texts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;jump&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ed&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>over<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;the&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lazy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_text1:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jumps<sp/>over<sp/>the<sp/>lazy&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a6a1995ece702b50091f3883518864ea7" kindref="member">diff_text1</ref>(diffs));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_text2:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jumped<sp/>over<sp/>a<sp/>lazy&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d3e1424496704a7e1d1f7995d465f20" kindref="member">diff_text2</ref>(diffs));</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffDelta()<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>diff<sp/>into<sp/>delta<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;jump&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ed&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>over<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;the&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lazy&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;old<sp/>dog&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>QString<sp/>text1<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a6a1995ece702b50091f3883518864ea7" kindref="member">diff_text1</ref>(diffs);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_text1:<sp/>Base<sp/>text.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jumps<sp/>over<sp/>the<sp/>lazy&quot;</highlight><highlight class="normal">,<sp/>text1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>QString<sp/>delta<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acc6b4e2d43c1be99c291049810bfc654" kindref="member">diff_toDelta</ref>(diffs);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_toDelta:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;=4\t-1\t+ed\t=6\t-3\t+a\t=5\t+old<sp/>dog&quot;</highlight><highlight class="normal">,<sp/>delta);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>delta<sp/>string<sp/>into<sp/>a<sp/>diff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_fromDelta:<sp/>Normal.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" kindref="member">diff_fromDelta</ref>(text1,<sp/>delta));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>error<sp/>(19<sp/>&lt;<sp/>20).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" kindref="member">diff_fromDelta</ref>(text1<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>delta);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;diff_fromDelta:<sp/>Too<sp/>long.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(QString<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>error<sp/>(19<sp/>&gt;<sp/>18).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" kindref="member">diff_fromDelta</ref>(text1.mid(1),<sp/>delta);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;diff_fromDelta:<sp/>Too<sp/>short.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(QString<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>error<sp/>(%c3%xy<sp/>invalid<sp/>Unicode).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>test<sp/>does<sp/>not<sp/>work<sp/>because<sp/>QUrl::fromPercentEncoding(&quot;%xy&quot;)<sp/>-&gt;<sp/>&quot;?&quot;</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>dmp.diff_fromDelta(&quot;&quot;,<sp/>&quot;+%c3%xy&quot;);</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/>assertFalse(&quot;diff_fromDelta:<sp/>Invalid<sp/>character.&quot;,<sp/>true);</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/>}<sp/>catch<sp/>(QString<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Exception<sp/>expected.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>deltas<sp/>with<sp/>special<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0680<sp/>\000<sp/>\t<sp/>%&quot;</highlight><highlight class="normal">,<sp/>7)),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0681<sp/>\001<sp/>\n<sp/>^&quot;</highlight><highlight class="normal">,<sp/>7)),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0682<sp/>\002<sp/>\\<sp/>|&quot;</highlight><highlight class="normal">,<sp/>7)));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>text1<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a6a1995ece702b50091f3883518864ea7" kindref="member">diff_text1</ref>(diffs);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_text1:<sp/>Unicode<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0680<sp/>\000<sp/>\t<sp/>%\u0681<sp/>\001<sp/>\n<sp/>^&quot;</highlight><highlight class="normal">,<sp/>14),<sp/>text1);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>delta<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acc6b4e2d43c1be99c291049810bfc654" kindref="member">diff_toDelta</ref>(diffs);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_toDelta:<sp/>Unicode.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;=7\t-7\t+%DA%82<sp/>%02<sp/>%5C<sp/>%7C&quot;</highlight><highlight class="normal">,<sp/>delta);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_fromDelta:<sp/>Unicode.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" kindref="member">diff_fromDelta</ref>(text1,<sp/>delta));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>pool<sp/>of<sp/>unchanged<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;A-Z<sp/>a-z<sp/>0-9<sp/>-<sp/>_<sp/>.<sp/>!<sp/>~<sp/>*<sp/>&apos;<sp/>(<sp/>)<sp/>;<sp/>/<sp/>?<sp/>:<sp/>@<sp/>&amp;<sp/>=<sp/>+<sp/>$<sp/>,<sp/>#<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>QString<sp/>text2<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a9d3e1424496704a7e1d1f7995d465f20" kindref="member">diff_text2</ref>(diffs);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_text2:<sp/>Unchanged<sp/>characters.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A-Z<sp/>a-z<sp/>0-9<sp/>-<sp/>_<sp/>.<sp/>!<sp/>~<sp/>*<sp/>\&apos;<sp/>(<sp/>)<sp/>;<sp/>/<sp/>?<sp/>:<sp/>@<sp/>&amp;<sp/>=<sp/>+<sp/>$<sp/>,<sp/>#<sp/>&quot;</highlight><highlight class="normal">,<sp/>text2);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>delta<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acc6b4e2d43c1be99c291049810bfc654" kindref="member">diff_toDelta</ref>(diffs);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_toDelta:<sp/>Unchanged<sp/>characters.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+A-Z<sp/>a-z<sp/>0-9<sp/>-<sp/>_<sp/>.<sp/>!<sp/>~<sp/>*<sp/>\&apos;<sp/>(<sp/>)<sp/>;<sp/>/<sp/>?<sp/>:<sp/>@<sp/>&amp;<sp/>=<sp/>+<sp/>$<sp/>,<sp/>#<sp/>&quot;</highlight><highlight class="normal">,<sp/>delta);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>delta<sp/>string<sp/>into<sp/>a<sp/>diff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_fromDelta:<sp/>Unchanged<sp/>characters.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a70e244439ed3261a2a2c2ce092c45bc0" kindref="member">diff_fromDelta</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>delta));</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffXIndex()<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>a<sp/>location<sp/>in<sp/>text1<sp/>to<sp/>text2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_xIndex:<sp/>Translation<sp/>on<sp/>equality.&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>dmp.<ref refid="classdiff__match__patch_1a91474da17c89bab2ca34efa207fe85b4" kindref="member">diff_xIndex</ref>(diffs,<sp/>2));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_xIndex:<sp/>Translation<sp/>on<sp/>deletion.&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>dmp.<ref refid="classdiff__match__patch_1a91474da17c89bab2ca34efa207fe85b4" kindref="member">diff_xIndex</ref>(diffs,<sp/>3));</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffLevenshtein()<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_levenshtein:<sp/>Trailing<sp/>equality.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a5183e0300c4fbe6b993cae9844f57c11" kindref="member">diff_levenshtein</ref>(diffs));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_levenshtein:<sp/>Leading<sp/>equality.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a5183e0300c4fbe6b993cae9844f57c11" kindref="member">diff_levenshtein</ref>(diffs));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_levenshtein:<sp/>Middle<sp/>equality.&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>dmp.<ref refid="classdiff__match__patch_1a5183e0300c4fbe6b993cae9844f57c11" kindref="member">diff_levenshtein</ref>(diffs));</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffBisect()<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>QString<sp/>a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>QString<sp/>b<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>resulting<sp/>diff<sp/>hasn&apos;t<sp/>been<sp/>normalized,<sp/>it<sp/>would<sp/>be<sp/>ok<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>insertion<sp/>and<sp/>deletion<sp/>pairs<sp/>are<sp/>swapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>order<sp/>changes,<sp/>tweak<sp/>this<sp/>test<sp/>as<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_bisect:<sp/>Normal.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a10f6b81afc589a091a74d00d58ec1a5a" kindref="member">diff_bisect</ref>(a,<sp/>b,<sp/>std::numeric_limits&lt;clock_t&gt;::max()));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;cat&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_bisect:<sp/>Timeout.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a10f6b81afc589a091a74d00d58ec1a5a" kindref="member">diff_bisect</ref>(a,<sp/>b,<sp/>0));</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testDiffMain()<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>trivial<sp/>diff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>diffList();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Equality.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>insertion.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ab123c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;bc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>deletion.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;a123bc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;456&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Two<sp/>insertions.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a123b456c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;456&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Two<sp/>deletions.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;a123b456c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>real<sp/>diff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>off<sp/>the<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>dmp.Diff_Timeout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>case<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;s<sp/>are<sp/>a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;lso&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fruit.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>case<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;Apples<sp/>are<sp/>a<sp/>fruit.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Bananas<sp/>are<sp/>also<sp/>fruit.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0680&quot;</highlight><highlight class="normal">,<sp/>1)),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\000&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>case<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;ax\t&quot;</highlight><highlight class="normal">,<sp/>QString::fromWCharArray((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>L</highlight><highlight class="stringliteral">&quot;\u0680x\000&quot;</highlight><highlight class="normal">,<sp/>3),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;xab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Overlap<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;1ayb2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abxab&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;xaxcx&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Overlap<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;abcy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xaxcxabc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;bcd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;efghijklmnopqrs&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;EFGHIJKLMNOefg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Overlap<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;ABCDa=bcd=efghijklmnopqrsEFGHIJKLMNOefg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a-bcd-efghijklmnopqrs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;nd&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[[Pennsylvania]]&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>[[New&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Large<sp/>equality.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(</highlight><highlight class="stringliteral">&quot;a<sp/>[[Pennsylvania]]<sp/>and<sp/>[[New&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>[[Pennsylvania]]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>dmp.Diff_Timeout<sp/>=<sp/>0.1f;<sp/><sp/></highlight><highlight class="comment">//<sp/>100ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>may<sp/>&apos;fail&apos;<sp/>on<sp/>extremely<sp/>fast<sp/>computers.<sp/><sp/>If<sp/>so,<sp/>just<sp/>increase<sp/>the<sp/>text<sp/>lengths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>QString<sp/>a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;`Twas<sp/>brillig,<sp/>and<sp/>the<sp/>slithy<sp/>toves\nDid<sp/>gyre<sp/>and<sp/>gimble<sp/>in<sp/>the<sp/>wabe:\nAll<sp/>mimsy<sp/>were<sp/>the<sp/>borogoves,\nAnd<sp/>the<sp/>mome<sp/>raths<sp/>outgrabe.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>QString<sp/>b<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>the<sp/>very<sp/>model<sp/>of<sp/>a<sp/>modern<sp/>major<sp/>general,\nI&apos;ve<sp/>information<sp/>vegetable,<sp/>animal,<sp/>and<sp/>mineral,\nI<sp/>know<sp/>the<sp/>kings<sp/>of<sp/>England,<sp/>and<sp/>I<sp/>quote<sp/>the<sp/>fights<sp/>historical,\nFrom<sp/>Marathon<sp/>to<sp/>Waterloo,<sp/>in<sp/>order<sp/>categorical.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>text<sp/>lengths<sp/>by<sp/>1024<sp/>times<sp/>to<sp/>ensure<sp/>a<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>10;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a<sp/>+<sp/>a;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>b<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>clock_t<sp/>startTime<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>clock_t<sp/>endTime<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>that<sp/>we<sp/>took<sp/>at<sp/>least<sp/>the<sp/>timeout<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>assertTrue(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Timeout<sp/>min.&quot;</highlight><highlight class="normal">,<sp/>dmp.Diff_Timeout<sp/>*<sp/>CLOCKS_PER_SEC<sp/>&lt;=<sp/>endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>that<sp/>we<sp/>didn&apos;t<sp/>take<sp/>forever<sp/>(be<sp/>forgiving).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Theoretically<sp/>this<sp/>test<sp/>could<sp/>fail<sp/>very<sp/>occasionally<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OS<sp/>task<sp/>swaps<sp/>or<sp/>locks<sp/>up<sp/>for<sp/>a<sp/>second<sp/>at<sp/>the<sp/>wrong<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Java<sp/>seems<sp/>to<sp/>overrun<sp/>by<sp/>~80%<sp/>(compared<sp/>with<sp/>10%<sp/>for<sp/>other<sp/>languages).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>use<sp/>an<sp/>upper<sp/>limit<sp/>of<sp/>0.5s<sp/>instead<sp/>of<sp/>0.2s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>assertTrue(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Timeout<sp/>max.&quot;</highlight><highlight class="normal">,<sp/>dmp.Diff_Timeout<sp/>*<sp/>CLOCKS_PER_SEC<sp/>*<sp/>2<sp/>&gt;<sp/>endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>dmp.Diff_Timeout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>the<sp/>linemode<sp/>speedup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>long<sp/>to<sp/>pass<sp/>the<sp/>100<sp/>char<sp/>cutoff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\nabcdefghij\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Simple<sp/>line-mode.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Single<sp/>line-mode.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;abcdefghij\n1234567890\n1234567890\n1234567890\nabcdefghij\n1234567890\n1234567890\n1234567890\nabcdefghij\n1234567890\n1234567890\n1234567890\nabcdefghij\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>QStringList<sp/>texts_linemode<sp/>=<sp/>diff_rebuildtexts(dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>QStringList<sp/>texts_textmode<sp/>=<sp/>diff_rebuildtexts(dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(a,<sp/>b,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Overlap<sp/>line-mode.&quot;</highlight><highlight class="normal">,<sp/>texts_textmode,<sp/>texts_linemode);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>null<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;diff_main:<sp/>Null<sp/>inputs.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MATCH<sp/>TEST<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testMatchAlphabet()<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>bitmasks<sp/>for<sp/>Bitap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>QMap&lt;QChar,<sp/>int&gt;<sp/>bitmask;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_alphabet:<sp/>Unique.&quot;</highlight><highlight class="normal">,<sp/>bitmask,<sp/>dmp.<ref refid="classdiff__match__patch_1a106c32e9978fc36cafe6f1bc8f81bf8d" kindref="member">match_alphabet</ref>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>bitmask<sp/>=<sp/>QMap&lt;QChar,<sp/>int&gt;();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>37);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>18);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>bitmask.insert(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>8);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_alphabet:<sp/>Duplicates.&quot;</highlight><highlight class="normal">,<sp/>bitmask,<sp/>dmp.<ref refid="classdiff__match__patch_1a106c32e9978fc36cafe6f1bc8f81bf8d" kindref="member">match_alphabet</ref>(</highlight><highlight class="stringliteral">&quot;abcaba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testMatchBitap()<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bitap<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Exact<sp/>match<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fgh&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Exact<sp/>match<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fgh&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Fuzzy<sp/>match<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;efxhi&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Fuzzy<sp/>match<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cdefxyhijk&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Fuzzy<sp/>match<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bxy&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Overflow.&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;123456789xx0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3456789x0&quot;</highlight><highlight class="normal">,<sp/>2));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Before<sp/>start<sp/>match.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xxabc&quot;</highlight><highlight class="normal">,<sp/>4));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Beyond<sp/>end<sp/>match.&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defyy&quot;</highlight><highlight class="normal">,<sp/>4));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Oversized<sp/>pattern.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcdefy&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.4f;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Threshold<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;efxyhi&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.3f;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Threshold<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;efxyhi&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Threshold<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bcdef&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Multiple<sp/>select<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdexyzabcde&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abccde&quot;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Multiple<sp/>select<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdexyzabcde&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abccde&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>10;<sp/><sp/></highlight><highlight class="comment">//<sp/>Strict<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Distance<sp/>test<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefg&quot;</highlight><highlight class="normal">,<sp/>24));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Distance<sp/>test<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdxxefg&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>1000;<sp/><sp/></highlight><highlight class="comment">//<sp/>Loose<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_bitap:<sp/>Distance<sp/>test<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1a9d8ebaab2f4cd4fb2ab01a3110c56b86" kindref="member">match_bitap</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefg&quot;</highlight><highlight class="normal">,<sp/>24));</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testMatchMain()<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Full<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Equality.&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/>1000));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Null<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Null<sp/>pattern.&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Exact<sp/>match.&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(</highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;de&quot;</highlight><highlight class="normal">,<sp/>3));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.7f;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Complex<sp/>match.&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(</highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>the<sp/>very<sp/>model<sp/>of<sp/>a<sp/>modern<sp/>major<sp/>general.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>that<sp/>berry<sp/>&quot;</highlight><highlight class="normal">,<sp/>5));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>null<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1aab1a27bfbb05e041a969617bf6594c23" kindref="member">match_main</ref>(NULL,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;match_main:<sp/>Null<sp/>inputs.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PATCH<sp/>TEST<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchObj()<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Patch<sp/>Object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="class_patch" kindref="compound">Patch</ref><sp/>p;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>p.start1<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>p.start2<sp/>=<sp/>21;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>p.length1<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>p.length2<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>p.diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;jump&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;ed&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>over<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;the&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(EQUAL,<sp/></highlight><highlight class="stringliteral">&quot;\nlaz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>QString<sp/>strp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-21,18<sp/>+22,17<sp/>@@\n<sp/>jump\n-s\n+ed\n<sp/><sp/>over<sp/>\n-the\n+a\n<sp/>%0Alaz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;Patch:<sp/>toString.&quot;</highlight><highlight class="normal">,<sp/>strp,<sp/>p.<ref refid="class_patch_1a53799d5296a89879d88f76c8f10602e7" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchFromText()<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>assertTrue(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#0.&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).isEmpty());</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>QString<sp/>strp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-21,18<sp/>+22,17<sp/>@@\n<sp/>jump\n-s\n+ed\n<sp/><sp/>over<sp/>\n-the\n+a\n<sp/>%0Alaz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>strp,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(strp).value(0).toString());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1<sp/>+1<sp/>@@\n-a\n+b\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-1<sp/>+1<sp/>@@\n-a\n+b\n&quot;</highlight><highlight class="normal">).value(0).toString());</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,3<sp/>+0,0<sp/>@@\n-abc\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-1,3<sp/>+0,0<sp/>@@\n-abc\n&quot;</highlight><highlight class="normal">).value(0).toString());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#4.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-0,0<sp/>+1,3<sp/>@@\n+abc\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-0,0<sp/>+1,3<sp/>@@\n+abc\n&quot;</highlight><highlight class="normal">).value(0).toString());</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;Bad\nPatch\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>#5.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(QString<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchToText()<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>QString<sp/>strp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-21,18<sp/>+22,17<sp/>@@\n<sp/>jump\n-s\n+ed\n<sp/><sp/>over<sp/>\n-the\n+a\n<sp/><sp/>laz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>QList&lt;Patch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(strp);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_toText:<sp/>Single&quot;</highlight><highlight class="normal">,<sp/>strp,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>strp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,9<sp/>+1,9<sp/>@@\n-f\n+F\n<sp/>oo+fooba\n@@<sp/>-7,9<sp/>+7,9<sp/>@@\n<sp/>obar\n-,\n+.\n<sp/><sp/>tes\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(strp);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_toText:<sp/>Dual&quot;</highlight><highlight class="normal">,<sp/>strp,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchAddContext()<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>dmp.Patch_Margin<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="class_patch" kindref="compound">Patch</ref><sp/>p;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-21,4<sp/>+21,10<sp/>@@\n-jump\n+somersault\n&quot;</highlight><highlight class="normal">).value(0);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" kindref="member">patch_addContext</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addContext:<sp/>Simple<sp/>case.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-17,12<sp/>+17,18<sp/>@@\n<sp/>fox<sp/>\n-jump\n+somersault\n<sp/>s<sp/>ov\n&quot;</highlight><highlight class="normal">,<sp/>p.<ref refid="class_patch_1a53799d5296a89879d88f76c8f10602e7" kindref="member">toString</ref>());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-21,4<sp/>+21,10<sp/>@@\n-jump\n+somersault\n&quot;</highlight><highlight class="normal">).value(0);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" kindref="member">patch_addContext</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addContext:<sp/>Not<sp/>enough<sp/>trailing<sp/>context.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-17,10<sp/>+17,16<sp/>@@\n<sp/>fox<sp/>\n-jump\n+somersault\n<sp/>s.\n&quot;</highlight><highlight class="normal">,<sp/>p.toString());</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-3<sp/>+3,2<sp/>@@\n-e\n+at\n&quot;</highlight><highlight class="normal">).value(0);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" kindref="member">patch_addContext</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addContext:<sp/>Not<sp/>enough<sp/>leading<sp/>context.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,7<sp/>+1,8<sp/>@@\n<sp/>Th\n-e\n+at\n<sp/><sp/>qui\n&quot;</highlight><highlight class="normal">,<sp/>p.toString());</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-3<sp/>+3,2<sp/>@@\n-e\n+at\n&quot;</highlight><highlight class="normal">).value(0);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a330cc0e446453f69d18a90ba9887c7db" kindref="member">patch_addContext</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps.<sp/><sp/>The<sp/>quick<sp/>brown<sp/>fox<sp/>crashes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addContext:<sp/>Ambiguity.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,27<sp/>+1,28<sp/>@@\n<sp/>Th\n-e\n+at\n<sp/><sp/>quick<sp/>brown<sp/>fox<sp/>jumps.<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>p.toString());</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchMake()<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>QList&lt;Patch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Null<sp/>case&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>QString<sp/>text1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>QString<sp/>text2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>quick<sp/>brown<sp/>fox<sp/>jumped<sp/>over<sp/>a<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>QString<sp/>expectedPatch<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,8<sp/>+1,7<sp/>@@\n<sp/>Th\n-at\n+e\n<sp/><sp/>qui\n@@<sp/>-21,17<sp/>+21,18<sp/>@@\n<sp/>jump\n-ed\n+s\n<sp/><sp/>over<sp/>\n-a\n+the\n<sp/><sp/>laz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>patch<sp/>must<sp/>be<sp/>&quot;-21,17<sp/>+21,18&quot;,<sp/>not<sp/>&quot;-22,17<sp/>+21,18&quot;<sp/>due<sp/>to<sp/>rolling<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(text2,<sp/>text1);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Text2+Text1<sp/>inputs&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>expectedPatch<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,11<sp/>+1,12<sp/>@@\n<sp/>Th\n-e\n+at\n<sp/><sp/>quick<sp/>b\n@@<sp/>-22,18<sp/>+22,17<sp/>@@\n<sp/>jump\n-s\n+ed\n<sp/><sp/>over<sp/>\n-the\n+a\n<sp/><sp/>laz\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(text1,<sp/>text2);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Text1+Text2<sp/>inputs&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>diffs<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1a82fe78383b2fddf542fe83e057252e53" kindref="member">diff_main</ref>(text1,<sp/>text2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(diffs);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Diff<sp/>input&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(text1,<sp/>diffs);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Text1+Diff<sp/>inputs&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(text1,<sp/>text2,<sp/>diffs);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Text1+Text2+Diff<sp/>inputs<sp/>(deprecated)&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;`1234567890-=[]\\;&apos;,./&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_toText:<sp/>Character<sp/>encoding.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,21<sp/>+1,21<sp/>@@\n-%601234567890-=%5B%5D%5C;&apos;,./\n+~!@#$%25%5E&amp;*()_+%7B%7D%7C:%22%3C%3E?\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>diffs<sp/>=<sp/>diffList(<ref refid="class_diff" kindref="compound">Diff</ref>(DELETE,<sp/></highlight><highlight class="stringliteral">&quot;`1234567890-=[]\\;&apos;,./&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_diff" kindref="compound">Diff</ref>(INSERT,<sp/></highlight><highlight class="stringliteral">&quot;~!@#$%^&amp;*()_+{}|:\&quot;&lt;&gt;?&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_fromText:<sp/>Character<sp/>decoding.&quot;</highlight><highlight class="normal">,<sp/>diffs,<sp/>dmp.<ref refid="classdiff__match__patch_1a2d3d6460ce369b1f506a2c5d6b3fdee9" kindref="member">patch_fromText</ref>(</highlight><highlight class="stringliteral">&quot;@@<sp/>-1,21<sp/>+1,21<sp/>@@\n-%601234567890-=%5B%5D%5C;&apos;,./\n+~!@#$%25%5E&amp;*()_+%7B%7D%7C:%22%3C%3E?\n&quot;</highlight><highlight class="normal">).value(0).diffs);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>text1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>100;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>text1<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>text2<sp/>=<sp/>text1<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>expectedPatch<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-573,28<sp/>+573,31<sp/>@@\n<sp/>cdefabcdefabcdefabcdefabcdef\n+123\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(text1,<sp/>text2);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Long<sp/>string<sp/>with<sp/>repeats.&quot;</highlight><highlight class="normal">,<sp/>expectedPatch,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>null<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>assertFalse(</highlight><highlight class="stringliteral">&quot;patch_make:<sp/>Null<sp/>inputs.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchSplitMax()<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>Match_MaxBits<sp/>is<sp/>32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>QList&lt;Patch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz01234567890&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XabXcdXefXghXijXklXmnXopXqrXstXuvXwxXyzX01X23X45X67X89X0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" kindref="member">patch_splitMax</ref>(patches);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_splitMax:<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,32<sp/>+1,46<sp/>@@\n+X\n<sp/>ab\n+X\n<sp/>cd\n+X\n<sp/>ef\n+X\n<sp/>gh\n+X\n<sp/>ij\n+X\n<sp/>kl\n+X\n<sp/>mn\n+X\n<sp/>op\n+X\n<sp/>qr\n+X\n<sp/>st\n+X\n<sp/>uv\n+X\n<sp/>wx\n+X\n<sp/>yz\n+X\n<sp/>012345\n@@<sp/>-25,13<sp/>+39,18<sp/>@@\n<sp/>zX01\n+X\n<sp/>23\n+X\n<sp/>45\n+X\n<sp/>67\n+X\n<sp/>89\n+X\n<sp/>0\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;abcdef1234567890123456789012345678901234567890123456789012345678901234567890uvwxyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefuvwxyz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>QString<sp/>oldToText<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" kindref="member">patch_splitMax</ref>(patches);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_splitMax:<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>oldToText,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;1234567890123456789012345678901234567890123456789012345678901234567890&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" kindref="member">patch_splitMax</ref>(patches);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_splitMax:<sp/>#3.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,32<sp/>+1,4<sp/>@@\n-1234567890123456789012345678\n<sp/>9012\n@@<sp/>-29,32<sp/>+1,4<sp/>@@\n-9012345678901234567890123456\n<sp/>7890\n@@<sp/>-57,14<sp/>+1,3<sp/>@@\n-78901234567890\n+abc\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghij<sp/>,<sp/>h<sp/>:<sp/>0<sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdefghij<sp/>,<sp/>h<sp/>:<sp/>0<sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdefghij<sp/>,<sp/>h<sp/>:<sp/>0<sp/>,<sp/>t<sp/>:<sp/>1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefghij<sp/>,<sp/>h<sp/>:<sp/>1<sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdefghij<sp/>,<sp/>h<sp/>:<sp/>1<sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdefghij<sp/>,<sp/>h<sp/>:<sp/>0<sp/>,<sp/>t<sp/>:<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a8b026488adde70dcc268fc50d170f4e3" kindref="member">patch_splitMax</ref>(patches);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_splitMax:<sp/>#4.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-2,32<sp/>+2,32<sp/>@@\n<sp/>bcdefghij<sp/>,<sp/>h<sp/>:<sp/>\n-0\n+1\n<sp/><sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdef\n@@<sp/>-29,32<sp/>+29,32<sp/>@@\n<sp/>bcdefghij<sp/>,<sp/>h<sp/>:<sp/>\n-0\n+1\n<sp/><sp/>,<sp/>t<sp/>:<sp/>1<sp/>abcdef\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchAddPadding()<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>QList&lt;Patch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>full.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-0,0<sp/>+1,4<sp/>@@\n+test\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a03d8b23bf20cbfc3e454aad38ff366d8" kindref="member">patch_addPadding</ref>(patches);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>full.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,8<sp/>+1,12<sp/>@@\n<sp/>%01%02%03%04\n+test\n<sp/>%01%02%03%04\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XtestY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>partial.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,2<sp/>+1,6<sp/>@@\n<sp/>X\n+test\n<sp/>Y\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a03d8b23bf20cbfc3e454aad38ff366d8" kindref="member">patch_addPadding</ref>(patches);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>partial.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-2,8<sp/>+2,12<sp/>@@\n<sp/>%02%03%04X\n+test\n<sp/>Y%01%02%03\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;XXXXYYYY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XXXXtestYYYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>none.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-1,8<sp/>+1,12<sp/>@@\n<sp/>XXXX\n+test\n<sp/>YYYY\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1a03d8b23bf20cbfc3e454aad38ff366d8" kindref="member">patch_addPadding</ref>(patches);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_addPadding:<sp/>Both<sp/>edges<sp/>none.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;@@<sp/>-5,8<sp/>+5,12<sp/>@@\n<sp/>XXXX\n+test\n<sp/>YYYY\n&quot;</highlight><highlight class="normal">,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::testPatchApply()<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>dmp.Patch_DeleteThreshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>QList&lt;Patch&gt;<sp/>patches;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>QPair&lt;QString,<sp/>QVector&lt;bool&gt;<sp/>&gt;<sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;Hello<sp/>world.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>QVector&lt;bool&gt;<sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>QString<sp/>resultStr<sp/>=<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1\t%2&quot;</highlight><highlight class="normal">).arg(results.first).arg(boolArray.count());</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Null<sp/>case.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hello<sp/>world.\t0&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>quick<sp/>brown<sp/>fox<sp/>jumped<sp/>over<sp/>a<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Exact<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>quick<sp/>brown<sp/>fox<sp/>jumped<sp/>over<sp/>a<sp/>lazy<sp/>dog.\ttrue\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>red<sp/>rabbit<sp/>jumps<sp/>over<sp/>the<sp/>tired<sp/>tiger.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Partial<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;That<sp/>quick<sp/>red<sp/>rabbit<sp/>jumped<sp/>over<sp/>a<sp/>tired<sp/>tiger.\ttrue\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>the<sp/>very<sp/>model<sp/>of<sp/>a<sp/>modern<sp/>major<sp/>general.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Failed<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>am<sp/>the<sp/>very<sp/>model<sp/>of<sp/>a<sp/>modern<sp/>major<sp/>general.\tfalse\tfalse&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;x1234567890123456789012345678901234567890123456789012345678901234567890y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;x123456789012345678901234567890-----++++++++++-----123456789012345678901234567890y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Big<sp/>delete,<sp/>small<sp/>change.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcy\ttrue\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;x1234567890123456789012345678901234567890123456789012345678901234567890y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;x12345678901234567890---------------++++++++++---------------12345678901234567890y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Big<sp/>delete,<sp/>large<sp/>change<sp/>1.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabc12345678901234567890---------------++++++++++---------------12345678901234567890y\tfalse\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>dmp.Patch_DeleteThreshold<sp/>=<sp/>0.6f;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;x1234567890123456789012345678901234567890123456789012345678901234567890y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;x12345678901234567890---------------++++++++++---------------12345678901234567890y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Big<sp/>delete,<sp/>large<sp/>change<sp/>2.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xabcy\ttrue\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>dmp.Patch_DeleteThreshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz--------------------1234567890&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcXXXXXXXXXXdefghijklmnopqrstuvwxyz--------------------1234567YYYYYYYYYY890&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ--------------------1234567890&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Compensate<sp/>for<sp/>failed<sp/>patch.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ--------------------1234567YYYYYYYYYY890\tfalse\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>dmp.Match_Threshold<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>dmp.Match_Distance<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>QString<sp/>patchStr<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>No<sp/>side<sp/>effects.&quot;</highlight><highlight class="normal">,<sp/>patchStr,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Woof&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>patchStr<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>quick<sp/>brown<sp/>fox<sp/>jumps<sp/>over<sp/>the<sp/>lazy<sp/>dog.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>No<sp/>side<sp/>effects<sp/>with<sp/>major<sp/>delete.&quot;</highlight><highlight class="normal">,<sp/>patchStr,<sp/>dmp.<ref refid="classdiff__match__patch_1ab23a8022e207c5aa2fd2ee7dad604341" kindref="member">patch_toText</ref>(patches));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Edge<sp/>exact<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XtestY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Near<sp/>edge<sp/>exact<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XtestY\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>patches<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1afb9335ec40ffb7b74a822a1210d90e19" kindref="member">patch_make</ref>(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y123&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>results<sp/>=<sp/>dmp.<ref refid="classdiff__match__patch_1acbdd755dfb40abc85760b4f8fbcdc98f" kindref="member">patch_apply</ref>(patches,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>boolArray<sp/>=<sp/>results.second;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>resultStr<sp/>=<sp/>results.first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>(boolArray[0]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>assertEquals(</highlight><highlight class="stringliteral">&quot;patch_apply:<sp/>Edge<sp/>partial<sp/>match.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x123\ttrue&quot;</highlight><highlight class="normal">,<sp/>resultStr);</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1<sp/>!=<sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%d\nActual:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase),<sp/>n1,<sp/>n2);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;s2)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>!=<sp/>s2)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(strCase),<sp/>qPrintable(s1),<sp/>qPrintable(s2));</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>&amp;d1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>&amp;d2)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>!=<sp/>d2)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase),</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(d1.<ref refid="class_diff_1aeb7f4b886cc284169435173d53e71a0c" kindref="member">toString</ref>()),<sp/>qPrintable(d2.<ref refid="class_diff_1aeb7f4b886cc284169435173d53e71a0c" kindref="member">toString</ref>()));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Diff&gt;<sp/>&amp;list1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Diff&gt;<sp/>&amp;list2)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list1.count()<sp/>==<sp/>list2.count())<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<ref refid="class_diff" kindref="compound">Diff</ref><sp/>d1,<sp/>list1)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d2<sp/>=<sp/>list2.value(i);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>!=<sp/>d2)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fail)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>human<sp/>readable<sp/>description<sp/>of<sp/>both<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>listString1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<ref refid="class_diff" kindref="compound">Diff</ref><sp/>d1,<sp/>list1)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/>d1.<ref refid="class_diff_1aeb7f4b886cc284169435173d53e71a0c" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>listString2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<ref refid="class_diff" kindref="compound">Diff</ref><sp/>d2,<sp/>list2)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/>d2.<ref refid="class_diff_1aeb7f4b886cc284169435173d53e71a0c" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(strCase),<sp/>qPrintable(listString1),<sp/>qPrintable(listString2));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QVariant&gt;<sp/>&amp;list1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QVariant&gt;<sp/>&amp;list2)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list1.count()<sp/>==<sp/>list2.count())<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(QVariant<sp/>q1,<sp/>list1)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVariant<sp/>q2<sp/>=<sp/>list2.value(i);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q1<sp/>!=<sp/>q2)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>fail<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fail)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>human<sp/>readable<sp/>description<sp/>of<sp/>both<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>listString1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(QVariant<sp/>q1,<sp/>list1)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/>q1.toString();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>listString1<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>listString2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(QVariant<sp/>q2,<sp/>list2)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/>q2.toString();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>listString2<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(strCase),<sp/>qPrintable(listString1),<sp/>qPrintable(listString2));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;var1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;var2)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var1<sp/>!=<sp/>var2)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase),</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(var1.toString()),<sp/>qPrintable(var2.toString()));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;QChar,<sp/>int&gt;<sp/>&amp;m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;QChar,<sp/>int&gt;<sp/>&amp;m2)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>QMapIterator&lt;QChar,<sp/>int&gt;<sp/>i1(m1),<sp/>i2(m2);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i1.hasNext()<sp/>&amp;&amp;<sp/>i2.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>i1.next();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>i2.next();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1.key()<sp/>!=<sp/>i2.key()<sp/>||<sp/>i1.value()<sp/>!=<sp/>i2.value())<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>(%c,<sp/>%d)\nActual:<sp/>(%c,<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase),</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1.key().toLatin1(),<sp/>i1.value(),<sp/>i2.key().toLatin1(),<sp/>i2.value());</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>i1.next();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>(%c,<sp/>%d)\nActual:<sp/>none&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(strCase),<sp/>i1.key().toLatin1(),<sp/>i1.value());</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i2.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>i2.next();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>none\nActual:<sp/>(%c,<sp/>%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(strCase),<sp/>i2.key().toLatin1(),<sp/>i2.value());</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEquals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;list1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;list2)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list1<sp/>!=<sp/>list2)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>%s\nActual:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase),</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(list1.join(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)),<sp/>qPrintable(list2.join(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertTrue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>true\nActual:<sp/>false&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertFalse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>FAIL\nExpected:<sp/>false\nActual:<sp/>true&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;%s<sp/>OK&quot;</highlight><highlight class="normal">,<sp/>qPrintable(strCase));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>two<sp/>texts<sp/>which<sp/>made<sp/>up<sp/>the<sp/>diff<sp/>originally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal">QStringList<sp/>diff_match_patch_test::diff_rebuildtexts(QList&lt;Diff&gt;<sp/>diffs)<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>QStringList<sp/>text;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>text<sp/>&lt;&lt;<sp/>QString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_diff" kindref="compound">Diff</ref><sp/>myDiff,<sp/>diffs)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myDiff.operation<sp/>!=<sp/>INSERT)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text[0]<sp/>+=<sp/>myDiff.text;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myDiff.operation<sp/>!=<sp/>DELETE)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text[1]<sp/>+=<sp/>myDiff.text;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff_match_patch_test::assertEmpty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;strCase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;list)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>strCase;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>function<sp/>for<sp/>quickly<sp/>building<sp/>lists<sp/>of<sp/>diffs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">QList&lt;Diff&gt;<sp/>diff_match_patch_test::diffList(<ref refid="class_diff" kindref="compound">Diff</ref><sp/>d1,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d2,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d3,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d4,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d5,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d6,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d7,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d8,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d9,<sp/><ref refid="class_diff" kindref="compound">Diff</ref><sp/>d10)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Diff(INSERT,<sp/>NULL)<sp/>is<sp/>invalid<sp/>and<sp/>thus<sp/>is<sp/>used<sp/>as<sp/>the<sp/>default<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>QList&lt;Diff&gt;<sp/>listRet;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d1.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d1;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d2.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d2;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d3.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d3.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d3;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d4.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d4.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d4;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d5.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d5.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d5;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d6.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d6.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d6;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d7.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d7.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d7;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d8.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d8.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d8;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d9.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d9.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d9;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d10.operation<sp/>==<sp/>INSERT<sp/>&amp;&amp;<sp/>d10.text<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>listRet<sp/>&lt;&lt;<sp/>d10;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listRet;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1173"><highlight class="comment">Compile<sp/>instructions<sp/>for<sp/>MinGW<sp/>and<sp/>QT4<sp/>on<sp/>Windows:</highlight></codeline>
<codeline lineno="1174"><highlight class="comment">qmake<sp/>-project</highlight></codeline>
<codeline lineno="1175"><highlight class="comment">qmake</highlight></codeline>
<codeline lineno="1176"><highlight class="comment">mingw32-make</highlight></codeline>
<codeline lineno="1177"><highlight class="comment">g++<sp/>-o<sp/>diff_match_patch_test<sp/>debug\diff_match_patch_test.o<sp/>debug\diff_match_patch.o<sp/>\qt4\lib\libQtCore4.a</highlight></codeline>
<codeline lineno="1178"><highlight class="comment">diff_match_patch_test.exe</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"></highlight></codeline>
<codeline lineno="1180"><highlight class="comment">Compile<sp/>insructions<sp/>for<sp/>OS<sp/>X:</highlight></codeline>
<codeline lineno="1181"><highlight class="comment">qmake<sp/>-spec<sp/>macx-g++</highlight></codeline>
<codeline lineno="1182"><highlight class="comment">make</highlight></codeline>
<codeline lineno="1183"><highlight class="comment">./diff_match_patch</highlight></codeline>
<codeline lineno="1184"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/diff/diff_match_patch_test.cpp"/>
  </compounddef>
</doxygen>
