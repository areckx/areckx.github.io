<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dsa_8h" kind="file" language="C++">
    <compoundname>dsa.h</compoundname>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="crypto_8h" local="no">openssl/crypto.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includes refid="bn_8h" local="no">openssl/bn.h</includes>
    <includes refid="dh_8h" local="no">openssl/dh.h</includes>
    <includedby refid="engine_8h" local="no">thirdparty/openssl/include/openssl/engine.h</includedby>
    <includedby refid="ts_8h" local="no">thirdparty/openssl/include/openssl/ts.h</includedby>
    <includedby refid="x509_8h" local="no">thirdparty/openssl/include/openssl/x509.h</includedby>
    <incdepgraph>
      <node id="82569">
        <label>stdarg.h</label>
      </node>
      <node id="82574">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82577">
        <label>stdint.h</label>
      </node>
      <node id="82571">
        <label>stdlib.h</label>
      </node>
      <node id="82567">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82565" relation="include">
        </childnode>
        <childnode refid="82568" relation="include">
        </childnode>
        <childnode refid="82569" relation="include">
        </childnode>
        <childnode refid="82570" relation="include">
        </childnode>
        <childnode refid="82577" relation="include">
        </childnode>
      </node>
      <node id="82572">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82578">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82565" relation="include">
        </childnode>
        <childnode refid="82568" relation="include">
        </childnode>
        <childnode refid="82575" relation="include">
        </childnode>
        <childnode refid="82570" relation="include">
        </childnode>
      </node>
      <node id="82564">
        <label>thirdparty/openssl/include/openssl/dsa.h</label>
        <link refid="dsa_8h"/>
        <childnode refid="82565" relation="include">
        </childnode>
        <childnode refid="82567" relation="include">
        </childnode>
        <childnode refid="82570" relation="include">
        </childnode>
        <childnode refid="82575" relation="include">
        </childnode>
        <childnode refid="82578" relation="include">
        </childnode>
        <childnode refid="82579" relation="include">
        </childnode>
      </node>
      <node id="82576">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82565" relation="include">
        </childnode>
      </node>
      <node id="82573">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82572" relation="include">
        </childnode>
      </node>
      <node id="82566">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82565">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82566" relation="include">
        </childnode>
      </node>
      <node id="82568">
        <label>stdio.h</label>
      </node>
      <node id="82575">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82565" relation="include">
        </childnode>
      </node>
      <node id="82570">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82571" relation="include">
        </childnode>
        <childnode refid="82565" relation="include">
        </childnode>
        <childnode refid="82568" relation="include">
        </childnode>
        <childnode refid="82572" relation="include">
        </childnode>
        <childnode refid="82573" relation="include">
        </childnode>
        <childnode refid="82574" relation="include">
        </childnode>
        <childnode refid="82575" relation="include">
        </childnode>
        <childnode refid="82576" relation="include">
        </childnode>
      </node>
      <node id="82579">
        <label>openssl/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="82565" relation="include">
        </childnode>
        <childnode refid="82567" relation="include">
        </childnode>
        <childnode refid="82575" relation="include">
        </childnode>
        <childnode refid="82578" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="82581">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h_source"/>
      </node>
      <node id="82582">
        <label>thirdparty/openssl/include/openssl/ts.h</label>
        <link refid="ts_8h_source"/>
      </node>
      <node id="82585">
        <label>thirdparty/poppler/poppler/SignatureHandler.h</label>
        <link refid="_signature_handler_8h_source"/>
        <childnode refid="82586" relation="include">
        </childnode>
      </node>
      <node id="82589">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="82591">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="82590" relation="include">
        </childnode>
      </node>
      <node id="82583">
        <label>thirdparty/openssl/include/openssl/x509.h</label>
        <link refid="x509_8h_source"/>
        <childnode refid="82584" relation="include">
        </childnode>
        <childnode refid="82581" relation="include">
        </childnode>
        <childnode refid="82587" relation="include">
        </childnode>
        <childnode refid="82588" relation="include">
        </childnode>
        <childnode refid="82592" relation="include">
        </childnode>
        <childnode refid="82590" relation="include">
        </childnode>
        <childnode refid="82582" relation="include">
        </childnode>
        <childnode refid="82593" relation="include">
        </childnode>
        <childnode refid="82594" relation="include">
        </childnode>
      </node>
      <node id="82580">
        <label>thirdparty/openssl/include/openssl/dsa.h</label>
        <link refid="dsa_8h"/>
        <childnode refid="82581" relation="include">
        </childnode>
        <childnode refid="82582" relation="include">
        </childnode>
        <childnode refid="82583" relation="include">
        </childnode>
      </node>
      <node id="82593">
        <label>thirdparty/openssl/include/openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="82583" relation="include">
        </childnode>
      </node>
      <node id="82588">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h_source"/>
        <childnode refid="82589" relation="include">
        </childnode>
        <childnode refid="82590" relation="include">
        </childnode>
      </node>
      <node id="82584">
        <label>thirdparty/openssl/include/openssl/cms.h</label>
        <link refid="cms_8h_source"/>
        <childnode refid="82585" relation="include">
        </childnode>
      </node>
      <node id="82590">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="82589" relation="include">
        </childnode>
        <childnode refid="82591" relation="include">
        </childnode>
      </node>
      <node id="82586">
        <label>thirdparty/poppler/poppler/SignatureHandler.cc</label>
        <link refid="_signature_handler_8cc_source"/>
      </node>
      <node id="82594">
        <label>thirdparty/openssl/include/openssl/x509v3.h</label>
        <link refid="x509v3_8h_source"/>
        <childnode refid="82587" relation="include">
        </childnode>
        <childnode refid="82582" relation="include">
        </childnode>
      </node>
      <node id="82592">
        <label>thirdparty/openssl/include/openssl/pkcs12.h</label>
        <link refid="pkcs12_8h_source"/>
      </node>
      <node id="82587">
        <label>thirdparty/openssl/include/openssl/ocsp.h</label>
        <link refid="ocsp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_s_a___s_i_g__st" prot="public">DSA_SIG_st</innerclass>
    <innerclass refid="structdsa__method" prot="public">dsa_method</innerclass>
    <innerclass refid="structdsa__st" prot="public">dsa_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dsa_8h_1abccaa4e655b263793a9819c9c65425b0" prot="public" static="no">
        <name>OPENSSL_DSA_MAX_MODULUS_BITS</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="88" column="10" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1af3380e445e4298bd8e86c0e08269b07f" prot="public" static="no">
        <name>DSA_FLAG_CACHE_MONT_P</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="91" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ab88e7370d3c73024a9463a3a522c7a7e" prot="public" static="no">
        <name>DSA_FLAG_NO_EXP_CONSTTIME</name>
        <initializer>0x02 /* new with 0.9.7h; the built-in DSA
                                              * implementation now uses constant time
                                              * modular exponentiation for secret exponents
                                              * by default. This flag causes the
                                              * faster variable sliding window method to
                                              * be used for all exponents.
                                              */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="98" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aa2054828c28ab5d76ffd012943118ddd" prot="public" static="no">
        <name>DSA_FLAG_FIPS_METHOD</name>
        <initializer>0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="106" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aae12dfab550971af38dfa55bf7021e94" prot="public" static="no">
        <name>DSA_FLAG_NON_FIPS_ALLOW</name>
        <initializer>0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="113" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a1433b6f6ff93d054905c9a2aec0f2309" prot="public" static="no">
        <name>d2i_DSAparams_fp</name>
        <param><defname>fp</defname></param>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="structdsa__st" kindref="compound">DSA</ref> *)ASN1_d2i_fp((char *(*)())DSA_new, \
		(char *(*)())d2i_DSAparams,(fp),(unsigned char **)(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="183" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a287ff298ac9beb77cf9367897d7150f2" prot="public" static="no">
        <name>i2d_DSAparams_fp</name>
        <param><defname>fp</defname></param>
        <param><defname>x</defname></param>
        <initializer>ASN1_i2d_fp(i2d_DSAparams,(fp), \
		(unsigned char *)(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="185" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1afd03b5152491ec93ba095972d14b242c" prot="public" static="no">
        <name>d2i_DSAparams_bio</name>
        <param><defname>bp</defname></param>
        <param><defname>x</defname></param>
        <initializer>ASN1_d2i_bio_of(<ref refid="structdsa__st" kindref="compound">DSA</ref>,DSA_new,d2i_DSAparams,bp,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="187" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a0c57d7eed63dc17254330c8d7f9057be" prot="public" static="no">
        <name>i2d_DSAparams_bio</name>
        <param><defname>bp</defname></param>
        <param><defname>x</defname></param>
        <initializer>ASN1_i2d_bio_of_const(<ref refid="structdsa__st" kindref="compound">DSA</ref>,i2d_DSAparams,bp,x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="188" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a21c5a2e2f8ba866514471ecfaa49cc3f" prot="public" static="no">
        <name>DSS_prime_checks</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="255" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a98a56d13ecd2b6eb4682daf91bf9fa72" prot="public" static="no">
        <name>DSA_is_prime</name>
        <param><defname>n</defname></param>
        <param><defname>callback</defname></param>
        <param><defname>cb_arg</defname></param>
        <initializer>BN_is_prime(n, DSS_prime_checks, callback, NULL, cb_arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="258" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1af8b9236151a5eb2d428cc260eb48a18a" prot="public" static="no">
        <name>EVP_PKEY_CTX_set_dsa_paramgen_bits</name>
        <param><defname>ctx</defname></param>
        <param><defname>nbits</defname></param>
        <initializer>EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, \
				EVP_PKEY_CTRL_DSA_PARAMGEN_BITS, nbits, NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="267" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a4f01faada3ddd1eefe49075728b1e42f" prot="public" static="no">
        <name>EVP_PKEY_CTRL_DSA_PARAMGEN_BITS</name>
        <initializer>(EVP_PKEY_ALG_CTRL + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="271" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a58be4a9167a6e37d31ed493acb86915d" prot="public" static="no">
        <name>EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS</name>
        <initializer>(EVP_PKEY_ALG_CTRL + 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="272" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aca2c0222ad88967688f06497df329244" prot="public" static="no">
        <name>EVP_PKEY_CTRL_DSA_PARAMGEN_MD</name>
        <initializer>(EVP_PKEY_ALG_CTRL + 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="273" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aa069a81201ae106169dd9e47a4d37839" prot="public" static="no">
        <name>DSA_F_D2I_DSA_SIG</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="284" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aa319f588020e5314d470b2348c0d51b0" prot="public" static="no">
        <name>DSA_F_DO_DSA_PRINT</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="285" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ac14c268e8f4e757ff086cc725d29bd53" prot="public" static="no">
        <name>DSA_F_DSAPARAMS_PRINT</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="286" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a4bcae4fcf5c10153b93107e609cfbfc8" prot="public" static="no">
        <name>DSA_F_DSAPARAMS_PRINT_FP</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="287" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a04a49eaf8b828521fdefb925f7f830c3" prot="public" static="no">
        <name>DSA_F_DSA_DO_SIGN</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="288" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a1de453ea033d88953a4c43e63e9e1f02" prot="public" static="no">
        <name>DSA_F_DSA_DO_VERIFY</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="289" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a990964516d4bdffb803f17a93badd92c" prot="public" static="no">
        <name>DSA_F_DSA_GENERATE_KEY</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="290" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a60406df8fff29d84507d2be1054f974f" prot="public" static="no">
        <name>DSA_F_DSA_GENERATE_PARAMETERS_EX</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="291" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a39a80929da5f7d4e4d666a55b3292cef" prot="public" static="no">
        <name>DSA_F_DSA_NEW_METHOD</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="292" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a0234c1d25dd365b39626bc441d34b8b8" prot="public" static="no">
        <name>DSA_F_DSA_PARAM_DECODE</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="293" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aa68569957184c7453510b3432cfc1224" prot="public" static="no">
        <name>DSA_F_DSA_PRINT_FP</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="294" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a60f35cfd819ea7fb953af947d6de64fe" prot="public" static="no">
        <name>DSA_F_DSA_PRIV_DECODE</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="295" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a0831dc42a8aff2dc31f6e90e454ae86e" prot="public" static="no">
        <name>DSA_F_DSA_PRIV_ENCODE</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="296" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a990cd8452707f01187ee27dfea8a3a53" prot="public" static="no">
        <name>DSA_F_DSA_PUB_DECODE</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="297" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a1c1554289156a66e77155249ccdb46e5" prot="public" static="no">
        <name>DSA_F_DSA_PUB_ENCODE</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="298" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a382197eefaf89aeb39b12030b20e6cfa" prot="public" static="no">
        <name>DSA_F_DSA_SIGN</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="299" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a496889334c2b3a6588330ea03ba31f16" prot="public" static="no">
        <name>DSA_F_DSA_SIGN_SETUP</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="300" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a9904aabe7d9ab711689d8cb81278e9de" prot="public" static="no">
        <name>DSA_F_DSA_SIG_NEW</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="301" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a939a417e7ced39b1ce28e6aa647ac894" prot="public" static="no">
        <name>DSA_F_DSA_SIG_PRINT</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="302" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a181742eb7fa7c808721dc24fc579ae14" prot="public" static="no">
        <name>DSA_F_DSA_VERIFY</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="303" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a53a3787a5504521094b0cd5bb0aa415b" prot="public" static="no">
        <name>DSA_F_I2D_DSA_SIG</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="304" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1abff368f93c5d422abaec9187895a3a07" prot="public" static="no">
        <name>DSA_F_OLD_DSA_PRIV_DECODE</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="305" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a83c6d05688b99cb8e33486542f8f7940" prot="public" static="no">
        <name>DSA_F_PKEY_DSA_CTRL</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="306" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a056dc9ced2b8c4cb54c160af5d36560c" prot="public" static="no">
        <name>DSA_F_PKEY_DSA_KEYGEN</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="307" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1aa389b069546f534061a63f0ba7752516" prot="public" static="no">
        <name>DSA_F_SIG_CB</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="308" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a5d67ba862cf74ca9b0366effd4ca7dd7" prot="public" static="no">
        <name>DSA_R_BAD_Q_VALUE</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="311" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a5c1ed567df06d0631baeaa035183d694" prot="public" static="no">
        <name>DSA_R_BN_DECODE_ERROR</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="312" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1af65e2519ea713c7db2c762820cd85a0e" prot="public" static="no">
        <name>DSA_R_BN_ERROR</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="313" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1afad2fb3fd26d9ab0b73ed22dfedce81c" prot="public" static="no">
        <name>DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="314" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a34410ff2130ad19b2799dce3acdfcf99" prot="public" static="no">
        <name>DSA_R_DECODE_ERROR</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="315" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a76ef9f81f8dbfe85a6ad2cee143f0f0c" prot="public" static="no">
        <name>DSA_R_INVALID_DIGEST_TYPE</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="316" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a9cbbbbf99d37a37e865cc65240977d0a" prot="public" static="no">
        <name>DSA_R_MISSING_PARAMETERS</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="317" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ada07e7eb1b32e2fdbd556ffec73162d8" prot="public" static="no">
        <name>DSA_R_MODULUS_TOO_LARGE</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="318" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ae172e8d2d6974590748c70a2a046b547" prot="public" static="no">
        <name>DSA_R_NEED_NEW_SETUP_VALUES</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="319" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ac77ad36d5fde45e73fd7e34028a4aa63" prot="public" static="no">
        <name>DSA_R_NON_FIPS_DSA_METHOD</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="320" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1ac921db2c8e289df031236dc4b0523ccc" prot="public" static="no">
        <name>DSA_R_NO_PARAMETERS_SET</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="321" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dsa_8h_1a82aa049b610f7ce8b23f24a6d6b44295" prot="public" static="no">
        <name>DSA_R_PARAMETER_ENCODING_ERROR</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="322" column="9" bodyfile="thirdparty/openssl/include/openssl/dsa.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dsa_8h_1a48a9879e7bbc21af161fb409c679f3c8" prot="public" static="no">
        <type>struct <ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG_st</ref></type>
        <definition>typedef struct DSA_SIG_st  DSA_SIG</definition>
        <argsstring></argsstring>
        <name>DSA_SIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dsa_8h_1a7fa41acf3564b4db437982048b5d12d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* DSAparams_dup</definition>
        <argsstring>(DSA *x)</argsstring>
        <name>DSAparams_dup</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a3e990304f0e3352221ece928641b3884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
        <definition>DSA_SIG* DSA_SIG_new</definition>
        <argsstring>(void)</argsstring>
        <name>DSA_SIG_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a73818b0f70c3a29c8d5e121f4f22d8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DSA_SIG_free</definition>
        <argsstring>(DSA_SIG *a)</argsstring>
        <name>DSA_SIG_free</name>
        <param>
          <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a1bbf5ed4e41d94634bdb81ff015100da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSA_SIG</definition>
        <argsstring>(const DSA_SIG *a, unsigned char **pp)</argsstring>
        <name>i2d_DSA_SIG</name>
        <param>
          <type>const <ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1afa9a8ee9e54938d2e3a69169d4e269ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
        <definition>DSA_SIG* d2i_DSA_SIG</definition>
        <argsstring>(DSA_SIG **v, const unsigned char **pp, long length)</argsstring>
        <name>d2i_DSA_SIG</name>
        <param>
          <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> **</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a59d1f86b1472da39a4d52e72ebd2c9ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
        <definition>DSA_SIG* DSA_do_sign</definition>
        <argsstring>(const unsigned char *dgst, int dlen, DSA *dsa)</argsstring>
        <name>DSA_do_sign</name>
        <param>
          <type>const unsigned char *</type>
          <declname>dgst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dlen</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a04e2f7c156d9288b61cbc6b07f8f090b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_do_verify</definition>
        <argsstring>(const unsigned char *dgst, int dgst_len, DSA_SIG *sig, DSA *dsa)</argsstring>
        <name>DSA_do_verify</name>
        <param>
          <type>const unsigned char *</type>
          <declname>dgst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dgst_len</declname>
        </param>
        <param>
          <type><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref> *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a16c1930470d7c1978694e4cb17cef8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
        <definition>const DSA_METHOD* DSA_OpenSSL</definition>
        <argsstring>(void)</argsstring>
        <name>DSA_OpenSSL</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a3881226504ffcf49622122fbdf38cf56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DSA_set_default_method</definition>
        <argsstring>(const DSA_METHOD *)</argsstring>
        <name>DSA_set_default_method</name>
        <param>
          <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a54151e5918c7361481c59e6b53643133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
        <definition>const DSA_METHOD* DSA_get_default_method</definition>
        <argsstring>(void)</argsstring>
        <name>DSA_get_default_method</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ab98489686607d58c24d61f55ea72905c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_set_method</definition>
        <argsstring>(DSA *dsa, const DSA_METHOD *)</argsstring>
        <name>DSA_set_method</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a17f81623b8a2b2c8764bba24a0f5be42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* DSA_new</definition>
        <argsstring>(void)</argsstring>
        <name>DSA_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a7089430cae14b585dc321b39df3397e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* DSA_new_method</definition>
        <argsstring>(ENGINE *engine)</argsstring>
        <name>DSA_new_method</name>
        <param>
          <type>ENGINE *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ad51e900810bf7c590bff806a6bd51318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DSA_free</definition>
        <argsstring>(DSA *r)</argsstring>
        <name>DSA_free</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a6033427235b8c282f93a84d3f4c24eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_up_ref</definition>
        <argsstring>(DSA *r)</argsstring>
        <name>DSA_up_ref</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a382b026d71a4ba2ce7c04cbd747c4e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_size</definition>
        <argsstring>(const DSA *)</argsstring>
        <name>DSA_size</name>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a73ff9f0f7d5bdc6b47e64ad81f1f3f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_sign_setup</definition>
        <argsstring>(DSA *dsa, BN_CTX *ctx_in, BIGNUM **kinvp, BIGNUM **rp)</argsstring>
        <name>DSA_sign_setup</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <param>
          <type>BN_CTX *</type>
          <declname>ctx_in</declname>
        </param>
        <param>
          <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> **</type>
          <declname>kinvp</declname>
        </param>
        <param>
          <type><ref refid="structbignum__st" kindref="compound">BIGNUM</ref> **</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1af26f58566f1d6fc429d383734082c895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_sign</definition>
        <argsstring>(int type, const unsigned char *dgst, int dlen, unsigned char *sig, unsigned int *siglen, DSA *dsa)</argsstring>
        <name>DSA_sign</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>dgst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dlen</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>siglen</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a2a74830213478255c08bbd77cff3ba1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_verify</definition>
        <argsstring>(int type, const unsigned char *dgst, int dgst_len, const unsigned char *sigbuf, int siglen, DSA *dsa)</argsstring>
        <name>DSA_verify</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>dgst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dgst_len</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>sigbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>siglen</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1aed1900f2cf505649abad77ba445e4c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_get_ex_new_index</definition>
        <argsstring>(long argl, void *argp, CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func)</argsstring>
        <name>DSA_get_ex_new_index</name>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <param>
          <type>CRYPTO_EX_new *</type>
          <declname>new_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_dup *</type>
          <declname>dup_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_free *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ac58311ca79e06de914348dbb6a1fd355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_set_ex_data</definition>
        <argsstring>(DSA *d, int idx, void *arg)</argsstring>
        <name>DSA_set_ex_data</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a848b91575e51b611738571340cc80f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DSA_get_ex_data</definition>
        <argsstring>(DSA *d, int idx)</argsstring>
        <name>DSA_get_ex_data</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a009a35614de790de38a244ffb464aff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSAPublicKey</definition>
        <argsstring>(DSA **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_DSAPublicKey</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a3ac229d8519650d42df55bf1f5253ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSAPrivateKey</definition>
        <argsstring>(DSA **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_DSAPrivateKey</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a1f8a7e418db7d056ddcb970ca030690a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSAparams</definition>
        <argsstring>(DSA **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_DSAparams</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ad316087a504c9eac0bdeaae78126847e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* DSA_generate_parameters</definition>
        <argsstring>(int bits, unsigned char *seed, int seed_len, int *counter_ret, unsigned long *h_ret, void(*callback)(int, int, void *), void *cb_arg)</argsstring>
        <name>DSA_generate_parameters</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>counter_ret</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>h_ret</declname>
        </param>
        <param>
          <type>void(*)(int, int, void *)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cb_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a5d717113f02311d5cc2d92250f1c78de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_generate_parameters_ex</definition>
        <argsstring>(DSA *dsa, int bits, const unsigned char *seed, int seed_len, int *counter_ret, unsigned long *h_ret, BN_GENCB *cb)</argsstring>
        <name>DSA_generate_parameters_ex</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>counter_ret</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>h_ret</declname>
        </param>
        <param>
          <type><ref refid="structbn__gencb__st" kindref="compound">BN_GENCB</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a91e8682364f7c26a4d78a2307f59a8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_generate_key</definition>
        <argsstring>(DSA *a)</argsstring>
        <name>DSA_generate_key</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a91d3708247c8ef9d8c18f0c105486588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSAPublicKey</definition>
        <argsstring>(const DSA *a, unsigned char **pp)</argsstring>
        <name>i2d_DSAPublicKey</name>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a07a340da5e6e03f51a3b4003f17cdf9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSAPrivateKey</definition>
        <argsstring>(const DSA *a, unsigned char **pp)</argsstring>
        <name>i2d_DSAPrivateKey</name>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ae5117966b82c6c41d7ced1b7f81dd2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSAparams</definition>
        <argsstring>(const DSA *a, unsigned char **pp)</argsstring>
        <name>i2d_DSAparams</name>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a74ed448cd3ab16282c9f61498d48523f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSAparams_print</definition>
        <argsstring>(BIO *bp, const DSA *x)</argsstring>
        <name>DSAparams_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1aae664dff71d4f18a968ce02bee323753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_print</definition>
        <argsstring>(BIO *bp, const DSA *x, int off)</argsstring>
        <name>DSA_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a5354246ac84e1042d324613355058ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSAparams_print_fp</definition>
        <argsstring>(FILE *fp, const DSA *x)</argsstring>
        <name>DSAparams_print_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1ac6bcd4b4560c0675449ee4144525be80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DSA_print_fp</definition>
        <argsstring>(FILE *bp, const DSA *x, int off)</argsstring>
        <name>DSA_print_fp</name>
        <param>
          <type>FILE *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1a3207c38e22b2bd6115dbbdb0fe05d036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdh__st" kindref="compound">DH</ref> *</type>
        <definition>DH* DSA_dup_DH</definition>
        <argsstring>(const DSA *r)</argsstring>
        <name>DSA_dup_DH</name>
        <param>
          <type>const <ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dsa_8h_1aef506532ced0d1756117b16e50db854f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_DSA_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_DSA_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/dsa.h" line="279" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/dsa/dsa.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>The<sp/>DSS<sp/>routines<sp/>are<sp/>based<sp/>on<sp/>patches<sp/>supplied<sp/>by</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Steven<sp/>Schoch<sp/>&lt;schoch@sheba.arc.nasa.gov&gt;.<sp/><sp/>He<sp/>basically<sp/>did<sp/>the</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>work<sp/>and<sp/>I<sp/>have<sp/>just<sp/>tweaked<sp/>them<sp/>a<sp/>little<sp/>to<sp/>fit<sp/>into<sp/>my</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>stylistic<sp/>vision<sp/>for<sp/>SSLeay<sp/>:-)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_DSA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_DSA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>DSA<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/crypto.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;openssl/dh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_DSA_MAX_MODULUS_BITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>OPENSSL_DSA_MAX_MODULUS_BITS<sp/><sp/><sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_FLAG_CACHE_MONT_P<sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_FLAG_NO_EXP_CONSTTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02<sp/></highlight><highlight class="comment">/*<sp/>new<sp/>with<sp/>0.9.7h;<sp/>the<sp/>built-in<sp/>DSA</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>implementation<sp/>now<sp/>uses<sp/>constant<sp/>time</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modular<sp/>exponentiation<sp/>for<sp/>secret<sp/>exponents</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>default.<sp/>This<sp/>flag<sp/>causes<sp/>the</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>faster<sp/>variable<sp/>sliding<sp/>window<sp/>method<sp/>to</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>used<sp/>for<sp/>all<sp/>exponents.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>flag<sp/>is<sp/>set<sp/>the<sp/>DSA<sp/>method<sp/>is<sp/>FIPS<sp/>compliant<sp/>and<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>in<sp/>FIPS<sp/>mode.<sp/>This<sp/>is<sp/>set<sp/>in<sp/>the<sp/>validated<sp/>module<sp/>method.<sp/>If<sp/>an</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>application<sp/>sets<sp/>this<sp/>flag<sp/>in<sp/>its<sp/>own<sp/>methods<sp/>it<sp/>is<sp/>its<sp/>reposibility</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>to<sp/>ensure<sp/>the<sp/>result<sp/>is<sp/>compliant.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_FLAG_FIPS_METHOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>flag<sp/>is<sp/>set<sp/>the<sp/>operations<sp/>normally<sp/>disabled<sp/>in<sp/>FIPS<sp/>mode<sp/>are</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>permitted<sp/>it<sp/>is<sp/>then<sp/>the<sp/>applications<sp/>responsibility<sp/>to<sp/>ensure<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>usage<sp/>is<sp/>compliant.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_FLAG_NON_FIPS_ALLOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Already<sp/>defined<sp/>in<sp/>ossl_typ.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>typedef<sp/>struct<sp/>dsa_st<sp/>DSA;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>typedef<sp/>struct<sp/>dsa_method<sp/>DSA_METHOD;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_d_s_a___s_i_g__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG_st</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*r;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*s;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structdsa__method" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsa__method" kindref="compound">dsa_method</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*<sp/>(*dsa_do_sign)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dlen,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dsa_sign_setup)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/>BN_CTX<sp/>*ctx_in,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>**kinvp,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>**rp);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dsa_do_verify)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dgst_len,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*sig,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dsa_mod_exp)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*rr,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*a1,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*p1,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*a2,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*p2,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*m,<sp/>BN_CTX<sp/>*ctx,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbn__mont__ctx__st" kindref="compound">BN_MONT_CTX</ref><sp/>*in_mont);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*bn_mod_exp)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*r,<sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*p,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*m,<sp/>BN_CTX<sp/>*ctx,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbn__mont__ctx__st" kindref="compound">BN_MONT_CTX</ref><sp/>*m_ctx);<sp/></highlight><highlight class="comment">/*<sp/>Can<sp/>be<sp/>null<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*init)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*finish)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*app_data;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>non-NULL,<sp/>it<sp/>is<sp/>used<sp/>to<sp/>generate<sp/>DSA<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dsa_paramgen)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_len,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*counter_ret,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*h_ret,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbn__gencb__st" kindref="compound">BN_GENCB</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>non-NULL,<sp/>it<sp/>is<sp/>used<sp/>to<sp/>generate<sp/>DSA<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*dsa_keygen)(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structdsa__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsa__st" kindref="compound">dsa_st</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>first<sp/>variable<sp/>is<sp/>used<sp/>to<sp/>pick<sp/>up<sp/>errors<sp/>where</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>DSA<sp/>is<sp/>passed<sp/>instead<sp/>of<sp/>of<sp/>a<sp/>EVP_PKEY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write_params;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*p;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*q;<sp/><sp/></highlight><highlight class="comment">/*<sp/>==<sp/>20<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*g;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*pub_key;<sp/><sp/></highlight><highlight class="comment">/*<sp/>y<sp/>public<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*priv_key;<sp/></highlight><highlight class="comment">/*<sp/>x<sp/>private<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*kinv;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Signing<sp/>pre-calc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>*r;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Signing<sp/>pre-calc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normally<sp/>used<sp/>to<sp/>cache<sp/>montgomery<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbn__mont__ctx__st" kindref="compound">BN_MONT_CTX</ref><sp/>*method_mont_p;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcrypto__ex__data__st" kindref="compound">CRYPTO_EX_DATA</ref><sp/>ex_data;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*meth;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>functional<sp/>reference<sp/>if<sp/>&apos;meth&apos;<sp/>is<sp/>ENGINE-provided<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ENGINE<sp/>*engine;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>d2i_DSAparams_fp(fp,x)<sp/>(DSA<sp/>*)ASN1_d2i_fp((char<sp/>*(*)())DSA_new,<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(char<sp/>*(*)())d2i_DSAparams,(fp),(unsigned<sp/>char<sp/>**)(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i2d_DSAparams_fp(fp,x)<sp/>ASN1_i2d_fp(i2d_DSAparams,(fp),<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>char<sp/>*)(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>d2i_DSAparams_bio(bp,x)<sp/>ASN1_d2i_bio_of(DSA,DSA_new,d2i_DSAparams,bp,x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i2d_DSAparams_bio(bp,x)<sp/>ASN1_i2d_bio_of_const(DSA,i2d_DSAparams,bp,x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*DSAparams_dup(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*x);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*<sp/>DSA_SIG_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DSA_SIG_free(<ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*a);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSA_SIG(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*<sp/>d2i_DSA_SIG(<ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>**v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*<sp/>DSA_do_sign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dlen,<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_do_verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dgst_len,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_s_a___s_i_g__st" kindref="compound">DSA_SIG</ref><sp/>*sig,<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*DSA_OpenSSL(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DSA_set_default_method(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*DSA_get_default_method(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_set_method(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__method" kindref="compound">DSA_METHOD</ref><sp/>*);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>DSA_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>DSA_new_method(ENGINE<sp/>*engine);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DSA_free<sp/>(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*r);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;up&quot;<sp/>the<sp/>DSA<sp/>object&apos;s<sp/>reference<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_up_ref(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*r);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>4<sp/>return<sp/>-1<sp/>on<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_sign_setup(<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,BN_CTX<sp/>*ctx_in,<ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>**kinvp,<ref refid="structbignum__st" kindref="compound">BIGNUM</ref><sp/>**rp);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_sign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dlen,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sig,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*siglen,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_verify(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dgst,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dgst_len,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sigbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>siglen,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_get_ex_new_index(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp,<sp/>CRYPTO_EX_new<sp/>*new_func,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_EX_dup<sp/>*dup_func,<sp/>CRYPTO_EX_free<sp/>*free_func);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_set_ex_data(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*DSA_get_ex_data(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>d2i_DSAPublicKey(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>d2i_DSAPrivateKey(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>d2i_DSAparams(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/>DSA_generate_parameters(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seed,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_len,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*counter_ret,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*h_ret,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*callback)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!defined(OPENSSL_NO_DEPRECATED)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>New<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_generate_parameters_ex(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*seed,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_len,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*counter_ret,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*h_ret,<sp/><ref refid="structbn__gencb__st" kindref="compound">BN_GENCB</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_generate_key(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*a);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSAPublicKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_DSAPrivateKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSAparams(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSAparams_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*x);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSAparams_print_fp(FILE<sp/>*fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*x);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DSA_print_fp(FILE<sp/>*bp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSS_prime_checks<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Primality<sp/>test<sp/>according<sp/>to<sp/>FIPS<sp/>PUB<sp/>186[-1],<sp/>Appendix<sp/>2.1:</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>50<sp/>rounds<sp/>of<sp/>Rabin-Miller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_is_prime(n,<sp/>callback,<sp/>cb_arg)<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BN_is_prime(n,<sp/>DSS_prime_checks,<sp/>callback,<sp/>NULL,<sp/>cb_arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Convert<sp/>DSA<sp/>structure<sp/>(key<sp/>or<sp/>just<sp/>parameters)<sp/>into<sp/>DH<sp/>structure</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>(be<sp/>careful<sp/>to<sp/>avoid<sp/>small<sp/>subgroup<sp/>attacks<sp/>when<sp/>using<sp/>this!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="structdh__st" kindref="compound">DH</ref><sp/>*DSA_dup_DH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*r);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVP_PKEY_CTX_set_dsa_paramgen_bits(ctx,<sp/>nbits)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EVP_PKEY_CTX_ctrl(ctx,<sp/>EVP_PKEY_DSA,<sp/>EVP_PKEY_OP_PARAMGEN,<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EVP_PKEY_CTRL_DSA_PARAMGEN_BITS,<sp/>nbits,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVP_PKEY_CTRL_DSA_PARAMGEN_BITS<sp/><sp/><sp/><sp/><sp/>(EVP_PKEY_ALG_CTRL<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS<sp/><sp/><sp/>(EVP_PKEY_ALG_CTRL<sp/>+<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVP_PKEY_CTRL_DSA_PARAMGEN_MD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EVP_PKEY_ALG_CTRL<sp/>+<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_DSA_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>DSA<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_D2I_DSA_SIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DO_DSA_PRINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSAPARAMS_PRINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSAPARAMS_PRINT_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_DO_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_DO_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_GENERATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_GENERATE_PARAMETERS_EX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_NEW_METHOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PARAM_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PRINT_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PRIV_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PRIV_ENCODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PUB_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_PUB_ENCODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_SIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_SIGN_SETUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_SIG_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_SIG_PRINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_DSA_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_I2D_DSA_SIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_OLD_DSA_PRIV_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_PKEY_DSA_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_PKEY_DSA_KEYGEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_F_SIG_CB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_BAD_Q_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_BN_DECODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_BN_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_DECODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_INVALID_DIGEST_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_MISSING_PARAMETERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_MODULUS_TOO_LARGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_NEED_NEW_SETUP_VALUES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_NON_FIPS_DSA_METHOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_NO_PARAMETERS_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSA_R_PARAMETER_ENCODING_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/dsa.h"/>
  </compounddef>
</doxygen>
