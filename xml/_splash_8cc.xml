<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_8cc" kind="file" language="C++">
    <compoundname>Splash.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="gmem_8h" local="yes">goo/gmem.h</includes>
    <includes refid="_goo_likely_8h" local="yes">goo/GooLikely.h</includes>
    <includes refid="_goo_list_8h" local="yes">goo/GooList.h</includes>
    <includes refid="_error_8h" local="yes">poppler/Error.h</includes>
    <includes refid="_splash_error_codes_8h" local="yes">SplashErrorCodes.h</includes>
    <includes refid="_splash_math_8h" local="yes">SplashMath.h</includes>
    <includes refid="_splash_bitmap_8h" local="yes">SplashBitmap.h</includes>
    <includes refid="_splash_state_8h" local="yes">SplashState.h</includes>
    <includes refid="_splash_path_8h" local="yes">SplashPath.h</includes>
    <includes refid="_splash_x_path_8h" local="yes">SplashXPath.h</includes>
    <includes refid="_splash_x_path_scanner_8h" local="yes">SplashXPathScanner.h</includes>
    <includes refid="_splash_pattern_8h" local="yes">SplashPattern.h</includes>
    <includes refid="_splash_screen_8h" local="yes">SplashScreen.h</includes>
    <includes refid="_splash_font_8h" local="yes">SplashFont.h</includes>
    <includes refid="_splash_glyph_bitmap_8h" local="yes">SplashGlyphBitmap.h</includes>
    <includes refid="_splash_8h" local="yes">Splash.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="92333">
        <label>stdarg.h</label>
      </node>
      <node id="92349">
        <label>SplashState.h</label>
        <link refid="_splash_state_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92347">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92340" relation="include">
        </childnode>
        <childnode refid="92341" relation="include">
        </childnode>
      </node>
      <node id="92324">
        <label>assert.h</label>
      </node>
      <node id="92335">
        <label>SplashErrorCodes.h</label>
        <link refid="_splash_error_codes_8h_source"/>
      </node>
      <node id="92354">
        <label>SplashScreen.h</label>
        <link refid="_splash_screen_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
        <childnode refid="92321" relation="include">
        </childnode>
      </node>
      <node id="92339">
        <label>poppler/GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92340" relation="include">
        </childnode>
        <childnode refid="92347" relation="include">
        </childnode>
        <childnode refid="92324" relation="include">
        </childnode>
        <childnode refid="92348" relation="include">
        </childnode>
      </node>
      <node id="92350">
        <label>SplashPath.h</label>
        <link refid="_splash_path_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92321">
        <label>stdlib.h</label>
      </node>
      <node id="92326">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="92327" relation="include">
        </childnode>
        <childnode refid="92328" relation="include">
        </childnode>
      </node>
      <node id="92355">
        <label>SplashFont.h</label>
        <link refid="_splash_font_8h_source"/>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92337" relation="include">
        </childnode>
        <childnode refid="92356" relation="include">
        </childnode>
      </node>
      <node id="92342">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92340" relation="include">
        </childnode>
        <childnode refid="92343" relation="include">
        </childnode>
      </node>
      <node id="92348">
        <label>map</label>
      </node>
      <node id="92332">
        <label>poppler/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="92333" relation="include">
        </childnode>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92334" relation="include">
        </childnode>
      </node>
      <node id="92330">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="92331" relation="include">
        </childnode>
      </node>
      <node id="92345">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92340" relation="include">
        </childnode>
        <childnode refid="92343" relation="include">
        </childnode>
      </node>
      <node id="92359">
        <label>stddef.h</label>
      </node>
      <node id="92319">
        <label>thirdparty/poppler/splash/Splash.cc</label>
        <link refid="_splash_8cc"/>
        <childnode refid="92320" relation="include">
        </childnode>
        <childnode refid="92321" relation="include">
        </childnode>
        <childnode refid="92322" relation="include">
        </childnode>
        <childnode refid="92323" relation="include">
        </childnode>
        <childnode refid="92324" relation="include">
        </childnode>
        <childnode refid="92325" relation="include">
        </childnode>
        <childnode refid="92326" relation="include">
        </childnode>
        <childnode refid="92329" relation="include">
        </childnode>
        <childnode refid="92330" relation="include">
        </childnode>
        <childnode refid="92332" relation="include">
        </childnode>
        <childnode refid="92335" relation="include">
        </childnode>
        <childnode refid="92336" relation="include">
        </childnode>
        <childnode refid="92338" relation="include">
        </childnode>
        <childnode refid="92349" relation="include">
        </childnode>
        <childnode refid="92350" relation="include">
        </childnode>
        <childnode refid="92351" relation="include">
        </childnode>
        <childnode refid="92352" relation="include">
        </childnode>
        <childnode refid="92353" relation="include">
        </childnode>
        <childnode refid="92354" relation="include">
        </childnode>
        <childnode refid="92355" relation="include">
        </childnode>
        <childnode refid="92357" relation="include">
        </childnode>
        <childnode refid="92358" relation="include">
        </childnode>
        <childnode refid="92360" relation="include">
        </childnode>
      </node>
      <node id="92323">
        <label>limits.h</label>
      </node>
      <node id="92328">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92327" relation="include">
        </childnode>
      </node>
      <node id="92329">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="92346">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92327" relation="include">
        </childnode>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92340" relation="include">
        </childnode>
        <childnode refid="92343" relation="include">
        </childnode>
      </node>
      <node id="92344">
        <label>pthread.h</label>
      </node>
      <node id="92352">
        <label>SplashXPathScanner.h</label>
        <link refid="_splash_x_path_scanner_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92322">
        <label>string.h</label>
      </node>
      <node id="92358">
        <label>Splash.h</label>
        <link refid="_splash_8h_source"/>
        <childnode refid="92359" relation="include">
        </childnode>
        <childnode refid="92337" relation="include">
        </childnode>
        <childnode refid="92356" relation="include">
        </childnode>
        <childnode refid="92353" relation="include">
        </childnode>
      </node>
      <node id="92334">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="92323" relation="include">
        </childnode>
        <childnode refid="92333" relation="include">
        </childnode>
        <childnode refid="92321" relation="include">
        </childnode>
        <childnode refid="92331" relation="include">
        </childnode>
      </node>
      <node id="92340">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="92341" relation="include">
        </childnode>
        <childnode refid="92327" relation="include">
        </childnode>
        <childnode refid="92322" relation="include">
        </childnode>
        <childnode refid="92331" relation="include">
        </childnode>
        <childnode refid="92326" relation="include">
        </childnode>
        <childnode refid="92334" relation="include">
        </childnode>
        <childnode refid="92329" relation="include">
        </childnode>
        <childnode refid="92332" relation="include">
        </childnode>
        <childnode refid="92342" relation="include">
        </childnode>
        <childnode refid="92345" relation="include">
        </childnode>
        <childnode refid="92346" relation="include">
        </childnode>
      </node>
      <node id="92336">
        <label>SplashMath.h</label>
        <link refid="_splash_math_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
        <childnode refid="92325" relation="include">
        </childnode>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92338">
        <label>SplashBitmap.h</label>
        <link refid="_splash_bitmap_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
        <childnode refid="92339" relation="include">
        </childnode>
        <childnode refid="92327" relation="include">
        </childnode>
      </node>
      <node id="92356">
        <label>SplashClip.h</label>
        <link refid="_splash_clip_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
        <childnode refid="92336" relation="include">
        </childnode>
        <childnode refid="92352" relation="include">
        </childnode>
      </node>
      <node id="92357">
        <label>SplashGlyphBitmap.h</label>
        <link refid="_splash_glyph_bitmap_8h_source"/>
        <childnode refid="92331" relation="include">
        </childnode>
      </node>
      <node id="92325">
        <label>math.h</label>
      </node>
      <node id="92353">
        <label>SplashPattern.h</label>
        <link refid="_splash_pattern_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92343">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="92344" relation="include">
        </childnode>
      </node>
      <node id="92337">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92331" relation="include">
        </childnode>
      </node>
      <node id="92331">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92328" relation="include">
        </childnode>
      </node>
      <node id="92351">
        <label>SplashXPath.h</label>
        <link refid="_splash_x_path_8h_source"/>
        <childnode refid="92337" relation="include">
        </childnode>
      </node>
      <node id="92341">
        <label>set</label>
      </node>
      <node id="92320">
        <label>config.h</label>
      </node>
      <node id="92360">
        <label>algorithm</label>
      </node>
      <node id="92327">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_image_section" prot="public">ImageSection</innerclass>
    <innerclass refid="struct_splash_pipe" prot="public">SplashPipe</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_splash_8cc_1a931cd7211addcb105ab54c347a915941" prot="public" static="no">
        <name>splashAAGamma</name>
        <initializer>1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="59" column="9" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_splash_8cc_1a3c4c037d00692701963249b2cc91b67c" prot="public" static="no">
        <name>bezierCircle</name>
        <initializer>((SplashCoord)0.55228475)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="63" column="9" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_splash_8cc_1a143ae37c135a360695e1554410d16f65" prot="public" static="no">
        <name>bezierCircle2</name>
        <initializer>((SplashCoord)(0.5 * 0.55228475))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="64" column="9" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_splash_8cc_1aa1d4c0c3764145b0a23cbc5eda3a9af3" prot="public" static="no">
        <name>splashPipeMaxStages</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="124" column="9" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_splash_8cc_1a34242ac1e909080690a9282414d46688" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Guchar</type>
        <definition>static Guchar div255</definition>
        <argsstring>(int x)</argsstring>
        <name>div255</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="67" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1ad32565519ae6420999bd4954092b3ef0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Guchar</type>
        <definition>static Guchar clip255</definition>
        <argsstring>(int x)</argsstring>
        <name>clip255</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="72" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a808367f02acb937862a97f043218a189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Guswap</definition>
        <argsstring>(T &amp;a, T &amp;b)</argsstring>
        <name>Guswap</name>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="77" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a66037585dcc062fb92dd38364b1d18ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int imgCoordMungeLower</definition>
        <argsstring>(SplashCoord x)</argsstring>
        <name>imgCoordMungeLower</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="94" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a06d01c4da5e375b6dffa431e96d59f42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int imgCoordMungeUpper</definition>
        <argsstring>(SplashCoord x)</argsstring>
        <name>imgCoordMungeUpper</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="97" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1ad58f801cec4c52235cfa34048c249d63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int imgCoordMungeLowerC</definition>
        <argsstring>(SplashCoord x, GBool glyphMode)</argsstring>
        <name>imgCoordMungeLowerC</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>glyphMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="100" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a899e0ee3819cdb225ddedfa6273985bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int imgCoordMungeUpperC</definition>
        <argsstring>(SplashCoord x, GBool glyphMode)</argsstring>
        <name>imgCoordMungeUpperC</name>
        <param>
          <type>SplashCoord</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>glyphMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="103" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a360fce648c52015d9897c570422337fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void blendXor</definition>
        <argsstring>(SplashColorPtr src, SplashColorPtr dest, SplashColorPtr blend, SplashColorMode cm)</argsstring>
        <name>blendXor</name>
        <param>
          <type>SplashColorPtr</type>
          <declname>src</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>SplashColorPtr</type>
          <declname>blend</declname>
        </param>
        <param>
          <type>SplashColorMode</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="209" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a514ec6761d61e5d7dd24a94e426fc804" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>static GBool isImageInterpolationRequired</definition>
        <argsstring>(int srcWidth, int srcHeight, int scaledWidth, int scaledHeight, GBool interpolate)</argsstring>
        <name>isImageInterpolationRequired</name>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledHeight</declname>
        </param>
        <param>
          <type>GBool</type>
          <declname>interpolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="4136" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4136" bodyend="4147"/>
      </memberdef>
      <memberdef kind="function" id="_splash_8cc_1a0102c6b176df1b21f92cedd21fce505f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void expandRow</definition>
        <argsstring>(Guchar *srcBuf, Guchar *dstBuf, int srcWidth, int scaledWidth, int nComps)</argsstring>
        <name>expandRow</name>
        <param>
          <type>Guchar *</type>
          <declname>srcBuf</declname>
        </param>
        <param>
          <type>Guchar *</type>
          <declname>dstBuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scaledWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nComps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/Splash.cc" line="4890" column="1" bodyfile="thirdparty/poppler/splash/Splash.cc" bodystart="4890" bodyend="4911"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Splash.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005-2016<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Marco<sp/>Pesenti<sp/>Gritti<sp/>&lt;mpg@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010-2016<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Christian<sp/>Feuersänger<sp/>&lt;cfeuersaenger@googlemail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011-2013,<sp/>2015<sp/>William<sp/>Bader<sp/>&lt;williambader@hotmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Markus<sp/>Trippelsdorf<sp/>&lt;markus@trippelsdorf.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Matthias<sp/>Kramm<sp/>&lt;kramm@quiss.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooLikely.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/GooList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler/Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashErrorCodes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashMath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashBitmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashPath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashXPath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashXPathScanner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashPattern.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashScreen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashFont.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashGlyphBitmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Splash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>splashAAGamma<sp/>1.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>of<sp/>Bezier<sp/>control<sp/>point<sp/>from<sp/>center<sp/>for<sp/>circle<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=<sp/>(4<sp/>*<sp/>(sqrt(2)<sp/>-<sp/>1)<sp/>/<sp/>3)<sp/>*<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bezierCircle<sp/>((SplashCoord)0.55228475)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bezierCircle2<sp/>((SplashCoord)(0.5<sp/>*<sp/>0.55228475))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Divide<sp/>a<sp/>16-bit<sp/>value<sp/>(in<sp/>[0,<sp/>255*255])<sp/>by<sp/>255,<sp/>returning<sp/>an<sp/>8-bit<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guchar<sp/>div255(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Guchar)((x<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>+<sp/>0x80)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clip<sp/>x<sp/>to<sp/>lie<sp/>in<sp/>[0,<sp/>255].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guchar<sp/>clip255(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&lt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>x<sp/>&gt;<sp/>255<sp/>?<sp/>255<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Guswap(<sp/>T&amp;a,<sp/>T&amp;b<sp/>)<sp/>{<sp/>T<sp/>tmp<sp/>=<sp/>a;<sp/>a=b;<sp/>b=tmp;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>PDF<sp/>spec<sp/>says<sp/>that<sp/>all<sp/>pixels<sp/>whose<sp/>*centers*<sp/>lie<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>target<sp/>region<sp/>get<sp/>painted,<sp/>so<sp/>we<sp/>want<sp/>to<sp/>round<sp/>n+0.5<sp/>down<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>n.<sp/><sp/>But<sp/>this<sp/>causes<sp/>problems,<sp/>e.g.,<sp/>with<sp/>PDF<sp/>files<sp/>that<sp/>fill<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectangle<sp/>with<sp/>black<sp/>and<sp/>then<sp/>draw<sp/>an<sp/>image<sp/>to<sp/>the<sp/>exact<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectangle,<sp/>so<sp/>we<sp/>instead<sp/>use<sp/>the<sp/>fill<sp/>scan<sp/>conversion<sp/>rule.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>the<sp/>correct<sp/>rule<sp/>works<sp/>better<sp/>for<sp/>glyphs,<sp/>so<sp/>we<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provide<sp/>that<sp/>option<sp/>in<sp/>fillImageMask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeLower(SplashCoord<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashCeil(x<sp/>+<sp/>0.5)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeUpper(SplashCoord<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashCeil(x<sp/>+<sp/>0.5)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeLower(SplashCoord<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashFloor(x);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeUpper(SplashCoord<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashFloor(x)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeLowerC(SplashCoord<sp/>x,<sp/>GBool<sp/>glyphMode)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glyphMode<sp/>?<sp/>(splashCeil(x<sp/>+<sp/>0.5)<sp/>-<sp/>1)<sp/>:<sp/>splashFloor(x);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imgCoordMungeUpperC(SplashCoord<sp/>x,<sp/>GBool<sp/>glyphMode)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glyphMode<sp/>?<sp/>(splashCeil(x<sp/>+<sp/>0.5)<sp/>-<sp/>1)<sp/>:<sp/>(splashFloor(x)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>drawImage<sp/>and<sp/>fillImageMask<sp/>to<sp/>divide<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>quadrilateral<sp/>into<sp/>sections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="struct_image_section" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_image_section" kindref="compound">ImageSection</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/>y1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>y<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ia0,<sp/>ia1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>indices<sp/>for<sp/>edge<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib0,<sp/>ib1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>indices<sp/>for<sp/>edge<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xa0,<sp/>ya0,<sp/>xa1,<sp/>ya1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>dxdya;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>of<sp/>edge<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xb0,<sp/>yb0,<sp/>xb1,<sp/>yb1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>dxdyb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>of<sp/>edge<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashPipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>splashPipeMaxStages<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_splash_pipe" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*pattern;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>alpha<sp/>and<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>Guchar<sp/>aInput;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>GBool<sp/>usesShape;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>cSrc;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cSrcVal;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-isolated<sp/>group<sp/>alpha0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>Guchar<sp/>*alpha0Ptr;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>knockout<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>GBool<sp/>knockout;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>Guchar<sp/>knockoutOpacity;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>soft<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>softMaskPtr;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>destination<sp/>alpha<sp/>and<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>destColorPtr;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destColorMask;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>Guchar<sp/>shape;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>alpha<sp/>and<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>GBool<sp/>noTransparency;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>SplashPipeResultColorCtrl<sp/>resultColorCtrl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-isolated<sp/>group<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>GBool<sp/>nonIsolatedGroup;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&quot;run&quot;<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>void<sp/>(<ref refid="class_splash" kindref="compound">Splash</ref>::*run)(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">SplashPipeResultColorCtrl<sp/>Splash::pipeResultColorNoAlphaBlend[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendMono,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendMono,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendRGB,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendRGB,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendRGB</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendCMYK,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>splashPipeResultColorNoAlphaBlendDeviceN</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">SplashPipeResultColorCtrl<sp/>Splash::pipeResultColorAlphaNoBlend[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendMono,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendMono,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendRGB,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendRGB,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendRGB</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendCMYK,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaNoBlendDeviceN</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">SplashPipeResultColorCtrl<sp/>Splash::pipeResultColorAlphaBlend[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendMono,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendMono,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendRGB,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendRGB,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendRGB</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendCMYK,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>splashPipeResultColorAlphaBlendDeviceN</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>blendXor(SplashColorPtr<sp/>src,<sp/>SplashColorPtr<sp/>dest,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorPtr<sp/>blend,<sp/>SplashColorMode<sp/>cm)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>splashColorModeNComps[cm];<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>blend[i]<sp/>=<sp/>src[i]<sp/>^<sp/>dest[i];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modified<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::clearModRegion()<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>modXMin<sp/>=<sp/>bitmap-&gt;getWidth();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>modYMin<sp/>=<sp/>bitmap-&gt;getHeight();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>modXMax<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>modYMax<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::updateModX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>modXMin)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>modXMin<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>modXMax)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>modXMax<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::updateModY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>modYMin)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>modYMin<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>modYMax)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>modYMax<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeInit(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*pattern,<sp/>SplashColorPtr<sp/>cSrc,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>aInput,<sp/>GBool<sp/>usesShape,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>nonIsolatedGroup,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>knockout,<sp/>Guchar<sp/>knockoutOpacity)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>pipeSetXY(pipe,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>pipe-&gt;pattern<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern-&gt;isStatic())<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pattern-&gt;getColor(x,<sp/>y,<sp/>pipe-&gt;cSrcVal);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;pattern<sp/>=<sp/>pattern;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;cSrc<sp/>=<sp/>pipe-&gt;cSrcVal;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;cSrc<sp/>=<sp/>cSrc;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>pipe-&gt;aInput<sp/>=<sp/>aInput;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>pipe-&gt;usesShape<sp/>=<sp/>usesShape;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>pipe-&gt;shape<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>knockout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>pipe-&gt;knockout<sp/>=<sp/>knockout;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>pipe-&gt;knockoutOpacity<sp/>=<sp/>knockoutOpacity;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aInput<sp/>==<sp/>255<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;<sp/>!usesShape<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!state-&gt;inNonIsolatedGroup<sp/>&amp;&amp;<sp/>!nonIsolatedGroup)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;noTransparency<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;noTransparency<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;noTransparency)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>!state-&gt;blendFunc<sp/>case<sp/>is<sp/>handled<sp/>separately<sp/>in<sp/>pipeRun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;resultColorCtrl<sp/>=<sp/>pipeResultColorNoAlphaBlend[bitmap-&gt;mode];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state-&gt;blendFunc)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;resultColorCtrl<sp/>=<sp/>pipeResultColorAlphaNoBlend[bitmap-&gt;mode];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;resultColorCtrl<sp/>=<sp/>pipeResultColorAlphaBlend[bitmap-&gt;mode];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-isolated<sp/>group<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>pipe-&gt;nonIsolatedGroup<sp/>=<sp/>nonIsolatedGroup;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>the<sp/>&apos;run&apos;<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRun;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeMono1<sp/>&amp;&amp;<sp/>!pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleMono1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeMono8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleMono8;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeRGB8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleRGB8;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeXBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleXBGR8;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleBGR8;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeCMYK8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleCMYK8;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunSimpleDeviceN8;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;usesShape<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(state-&gt;inNonIsolatedGroup<sp/>&amp;&amp;<sp/>alpha0Bitmap-&gt;alpha)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!state-&gt;blendFunc<sp/>&amp;&amp;<sp/>!pipe-&gt;nonIsolatedGroup)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeMono1<sp/>&amp;&amp;<sp/>!pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAAMono1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeMono8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAAMono8;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeRGB8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAARGB8;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeXBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAAXBGR8;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAABGR8;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeCMYK8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAACMYK8;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;run<sp/>=<sp/>&amp;Splash::pipeRunAADeviceN8;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>general<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRun(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alphaI,<sp/>alphaIm1,<sp/>alpha0,<sp/>aResult;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cSrcNonIso,<sp/>cDest,<sp/>cBlend;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>cSrc;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0,<sp/>cResult1,<sp/>cResult2,<sp/>cResult3;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp,<sp/>mask;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult[SPOT_NCOMPS+4];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>pattern:<sp/>handled<sp/>in<sp/>pipeInit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>color:<sp/>handled<sp/>in<sp/>pipeInit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dynamic<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;pattern)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pipe-&gt;pattern-&gt;getColor(pipe-&gt;x,<sp/>pipe-&gt;y,<sp/>pipe-&gt;cSrcVal))<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(pipe);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeCMYK8<sp/>||<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;fillOverprint<sp/>&amp;&amp;<sp/>state-&gt;overprintMode<sp/>&amp;&amp;<sp/>pipe-&gt;pattern-&gt;isCMYK())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>mask<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;cSrcVal[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>~1;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;cSrcVal[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>~2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;cSrcVal[2]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>~4;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;cSrcVal[3]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>~8;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;overprintMask<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;screen-&gt;test(pipe-&gt;x,<sp/>pipe-&gt;y,<sp/>cResult0))<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>|=<sp/>pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>&amp;=<sp/>~pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pipe-&gt;destColorMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;grayTransfer[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[0]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[0]<sp/>+<sp/>state-&gt;cmykTransferC[pipe-&gt;cSrc[0]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferC[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[1]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[1]<sp/>+<sp/>state-&gt;cmykTransferM[pipe-&gt;cSrc[1]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferM[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[2]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[2]<sp/>+<sp/>state-&gt;cmykTransferY[pipe-&gt;cSrc[2]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferY[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[3]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[3]<sp/>+<sp/>state-&gt;cmykTransferK[pipe-&gt;cSrc[3]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferK[pipe-&gt;cSrc[3]];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS<sp/>+<sp/>4;<sp/>cp<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][pipe-&gt;cSrc[cp]];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>Guchar<sp/>*destColorPtr;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;shape<sp/>&amp;&amp;<sp/>state-&gt;blendFunc<sp/>&amp;&amp;<sp/>pipe-&gt;knockout<sp/>&amp;&amp;<sp/>alpha0Bitmap<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>=<sp/>alpha0Bitmap-&gt;data<sp/>+<sp/>(alpha0Y+pipe-&gt;y)*alpha0Bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>+=<sp/>(alpha0X+pipe-&gt;x)<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>+=<sp/>(alpha0X+pipe-&gt;x);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>+=<sp/>(alpha0X+pipe-&gt;x)<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>+=<sp/>(alpha0X+pipe-&gt;x)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>+=<sp/>(alpha0X+pipe-&gt;x)<sp/>*<sp/>(SPOT_NCOMPS<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destColorPtr<sp/>=<sp/>pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>(*destColorPtr<sp/>&amp;<sp/>pipe-&gt;destColorMask)<sp/>?<sp/>0xff<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>*destColorPtr;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>destColorPtr[0];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[1]<sp/>=<sp/>destColorPtr[1];</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[2]<sp/>=<sp/>destColorPtr[2];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>destColorPtr[2];</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[1]<sp/>=<sp/>destColorPtr[1];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[2]<sp/>=<sp/>destColorPtr[0];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>destColorPtr[2];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[1]<sp/>=<sp/>destColorPtr[1];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[2]<sp/>=<sp/>destColorPtr[0];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[0]<sp/>=<sp/>destColorPtr[0];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[1]<sp/>=<sp/>destColorPtr[1];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[2]<sp/>=<sp/>destColorPtr[2];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cDest[3]<sp/>=<sp/>destColorPtr[3];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS<sp/>+<sp/>4;<sp/>cp++)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cDest[cp]<sp/>=<sp/>destColorPtr[cp];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;softMask)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;usesShape)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>aSrc<sp/>=<sp/>div255(div255(pipe-&gt;aInput<sp/>*<sp/>*pipe-&gt;softMaskPtr++)<sp/>*</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>*pipe-&gt;softMaskPtr++);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;usesShape)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>=<sp/>pipe-&gt;aInput;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>non-isolated<sp/>group<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;nonIsolatedGroup)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>path<sp/>is<sp/>only<sp/>used<sp/>when<sp/>Splash::composite()<sp/>is<sp/>called<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>composite<sp/>a<sp/>non-isolated<sp/>group<sp/>onto<sp/>the<sp/>backdrop.<sp/><sp/>In<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case,<sp/>pipe-&gt;shape<sp/>is<sp/>the<sp/>source<sp/>(group)<sp/>alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;shape<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>value<sp/>will<sp/>be<sp/>multiplied<sp/>by<sp/>zero<sp/>later,<sp/>so<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matter<sp/>what<sp/>we<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>cSrc<sp/>=<sp/>pipe-&gt;cSrc;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(aDest<sp/>*<sp/>255)<sp/>/<sp/>pipe-&gt;shape<sp/>-<sp/>aDest;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS<sp/>+<sp/>4;<sp/>cp++)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[cp]<sp/>=<sp/>clip255(pipe-&gt;cSrc[cp]<sp/>+</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pipe-&gt;cSrc[cp]<sp/>-<sp/>cDest[cp])<sp/>*<sp/>t)<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>4;<sp/>cp++)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[cp]<sp/>=<sp/>clip255(pipe-&gt;cSrc[cp]<sp/>+</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pipe-&gt;cSrc[cp]<sp/>-<sp/>cDest[cp])<sp/>*<sp/>t)<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[2]<sp/>=<sp/>clip255(pipe-&gt;cSrc[2]<sp/>+</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pipe-&gt;cSrc[2]<sp/>-<sp/>cDest[2])<sp/>*<sp/>t)<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[1]<sp/>=<sp/>clip255(pipe-&gt;cSrc[1]<sp/>+</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pipe-&gt;cSrc[1]<sp/>-<sp/>cDest[1])<sp/>*<sp/>t)<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cSrcNonIso[0]<sp/>=<sp/>clip255(pipe-&gt;cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pipe-&gt;cSrc[0]<sp/>-<sp/>cDest[0])<sp/>*<sp/>t)<sp/>/<sp/>255);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>cSrc<sp/>=<sp/>cSrcNonIso;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>knockout:<sp/>remove<sp/>backdrop<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;knockout<sp/>&amp;&amp;<sp/>pipe-&gt;shape<sp/>&gt;=<sp/>pipe-&gt;knockoutOpacity)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cSrc<sp/>=<sp/>pipe-&gt;cSrc;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>blend<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;blendFunc)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>4;<sp/>k<sp/>&lt;<sp/>4<sp/>+<sp/>SPOT_NCOMPS;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cBlend[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*state-&gt;blendFunc)(cSrc,<sp/>cDest,<sp/>cBlend,<sp/>bitmap-&gt;mode);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;noTransparency)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alphaI<sp/>=<sp/>alphaIm1<sp/>=<sp/>aResult<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alphaI<sp/>=<sp/>alpha_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alphaIm1<sp/>=<sp/>alpha_(i-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;alpha0Ptr)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha0<sp/>=<sp/>*pipe-&gt;alpha0Ptr++;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaI<sp/>=<sp/>aResult<sp/>+<sp/>alpha0<sp/>-<sp/>div255(aResult<sp/>*<sp/>alpha0);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaIm1<sp/>=<sp/>alpha0<sp/>+<sp/>aDest<sp/>-<sp/>div255(alpha0<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaI<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaIm1<sp/>=<sp/>aDest;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>cResult1<sp/>=<sp/>cResult2<sp/>=<sp/>cResult3<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pipe-&gt;resultColorCtrl)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorNoAlphaBlendMono:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[0])];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorNoAlphaBlendRGB:</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[0])];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[1]<sp/>+</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[1])];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[2]<sp/>+</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[2])];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorNoAlphaBlendCMYK:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;cmykTransferC[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[0])];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;cmykTransferM[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[1]<sp/>+</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[1])];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;cmykTransferY[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[2]<sp/>+</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[2])];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>state-&gt;cmykTransferK[div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[3]<sp/>+</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[3])];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorNoAlphaBlendDeviceN:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][div255((255<sp/>-<sp/>aDest)<sp/>*<sp/>cSrc[cp]<sp/>+</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDest<sp/>*<sp/>cBlend[cp])];</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaNoBlendMono:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[0])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaNoBlendRGB:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[0])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[1])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[2])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaNoBlendCMYK:</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;cmykTransferC[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[0])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;cmykTransferM[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[1])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;cmykTransferY[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[2])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>state-&gt;cmykTransferK[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[3]<sp/>+</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[3])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaNoBlendDeviceN:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[cp]<sp/>+</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>cSrc[cp])<sp/>/<sp/>alphaI];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaBlendMono:</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[0])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaBlendRGB:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[0])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[1]<sp/>+</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[1])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[2]<sp/>+</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[2])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaBlendCMYK:</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;cmykTransferC[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[0]<sp/>+</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[0])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;cmykTransferM[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[1]<sp/>+</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[1])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;cmykTransferY[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[2]<sp/>+</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[2])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>state-&gt;cmykTransferK[((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[3]<sp/>+</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[3]<sp/>+</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[3])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashPipeResultColorAlphaBlendDeviceN:</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alphaI<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][((alphaI<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[cp]<sp/>+</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>((255<sp/>-<sp/>alphaIm1)<sp/>*<sp/>cSrc[cp]<sp/>+</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaIm1<sp/>*<sp/>cBlend[cp])<sp/>/<sp/>255)<sp/>/</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphaI];</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;screen-&gt;test(pipe-&gt;x,<sp/>pipe-&gt;y,<sp/>cResult0))<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>|=<sp/>pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>&amp;=<sp/>~pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pipe-&gt;destColorMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[0]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[0]<sp/>+<sp/>cResult0,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult0;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[1]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[1]<sp/>+<sp/>cResult1,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult1;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[2]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[2]<sp/>+<sp/>cResult2,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult2;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[3]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[3]<sp/>+<sp/>cResult3,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult3;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[cp]<sp/>=<sp/>cResult[cp];</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=1;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeMono1<sp/>&amp;&amp;<sp/>!pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleMono1(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;screen-&gt;test(pipe-&gt;x,<sp/>pipe-&gt;y,<sp/>cResult0))<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>|=<sp/>pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>&amp;=<sp/>~pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pipe-&gt;destColorMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeMono8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleMono8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;grayTransfer[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeRGB8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleRGB8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeXBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleXBGR8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleBGR8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferB[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferG[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>state-&gt;rgbTransferR[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeCMYK8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleCMYK8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[0]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[0]<sp/>+<sp/>state-&gt;cmykTransferC[pipe-&gt;cSrc[0]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferC[pipe-&gt;cSrc[0]];</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[1]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[1]<sp/>+<sp/>state-&gt;cmykTransferM[pipe-&gt;cSrc[1]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferM[pipe-&gt;cSrc[1]];</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[2]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[2]<sp/>+<sp/>state-&gt;cmykTransferY[pipe-&gt;cSrc[2]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferY[pipe-&gt;cSrc[2]];</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[3]<sp/>=<sp/>(state-&gt;overprintAdditive)<sp/>?<sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[3]<sp/>+<sp/>state-&gt;cmykTransferK[pipe-&gt;cSrc[3]],<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;cmykTransferK[pipe-&gt;cSrc[3]];</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunSimpleDeviceN8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][pipe-&gt;cSrc[cp]];</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeMono1<sp/>&amp;&amp;<sp/>!pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAAMono1(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>(*pipe-&gt;destColorPtr<sp/>&amp;<sp/>pipe-&gt;destColorMask)<sp/>?<sp/>0xff<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>aDest<sp/>=<sp/>alpha2<sp/>=<sp/>aResult<sp/>=<sp/>0xff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[(Guchar)div255((0xff<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])];</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;screen-&gt;test(pipe-&gt;x,<sp/>pipe-&gt;y,<sp/>cResult0))<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>|=<sp/>pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>*pipe-&gt;destColorPtr<sp/>&amp;=<sp/>~pipe-&gt;destColorMask;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pipe-&gt;destColorMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeMono8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAAMono8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>*pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;grayTransfer[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeRGB8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAARGB8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0,<sp/>cResult1,<sp/>cResult2;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>pipe-&gt;destColorPtr[0];</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>cDest[1]<sp/>=<sp/>pipe-&gt;destColorPtr[1];</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>cDest[2]<sp/>=<sp/>pipe-&gt;destColorPtr[2];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[1])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[2])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeXBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAAXBGR8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0,<sp/>cResult1,<sp/>cResult2;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>pipe-&gt;destColorPtr[2];</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>cDest[1]<sp/>=<sp/>pipe-&gt;destColorPtr[1];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>cDest[2]<sp/>=<sp/>pipe-&gt;destColorPtr[0];</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[1])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[2])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeBGR8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAABGR8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0,<sp/>cResult1,<sp/>cResult2;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>pipe-&gt;destColorPtr[2];</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>cDest[1]<sp/>=<sp/>pipe-&gt;destColorPtr[1];</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>cDest[2]<sp/>=<sp/>pipe-&gt;destColorPtr[0];</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;rgbTransferR[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;rgbTransferG[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[1])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;rgbTransferB[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[2])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult2;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult1;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>*pipe-&gt;destColorPtr++<sp/>=<sp/>cResult0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeCMYK8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAACMYK8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult0,<sp/>cResult1,<sp/>cResult2,<sp/>cResult3;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>cDest[0]<sp/>=<sp/>pipe-&gt;destColorPtr[0];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>cDest[1]<sp/>=<sp/>pipe-&gt;destColorPtr[1];</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>cDest[2]<sp/>=<sp/>pipe-&gt;destColorPtr[2];</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>cDest[3]<sp/>=<sp/>pipe-&gt;destColorPtr[3];</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult0<sp/>=<sp/>state-&gt;cmykTransferC[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[0]<sp/>+</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[0])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult1<sp/>=<sp/>state-&gt;cmykTransferM[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[1]<sp/>+</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[1])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult2<sp/>=<sp/>state-&gt;cmykTransferY[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[2]<sp/>+</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[2])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>cResult3<sp/>=<sp/>state-&gt;cmykTransferK[(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[3]<sp/>+</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[3])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[0]<sp/>=<sp/>(state-&gt;overprintAdditive<sp/>&amp;&amp;<sp/>pipe-&gt;shape<sp/>!=<sp/>0)<sp/>?<sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[0]<sp/>+<sp/>cResult0,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult0;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[1]<sp/>=<sp/>(state-&gt;overprintAdditive<sp/>&amp;&amp;<sp/>pipe-&gt;shape<sp/>!=<sp/>0)<sp/>?<sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[1]<sp/>+<sp/>cResult1,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult1;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[2]<sp/>=<sp/>(state-&gt;overprintAdditive<sp/>&amp;&amp;<sp/>pipe-&gt;shape<sp/>!=<sp/>0)<sp/>?<sp/></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[2]<sp/>+<sp/>cResult2,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult2;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[3]<sp/>=<sp/>(state-&gt;overprintAdditive<sp/>&amp;&amp;<sp/>pipe-&gt;shape<sp/>!=<sp/>0)<sp/>?<sp/></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;int&gt;(pipe-&gt;destColorPtr[3]<sp/>+<sp/>cResult3,<sp/>255)<sp/>:</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cResult3;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;pattern<sp/>&amp;&amp;<sp/>!pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;softMask<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pipe-&gt;usesShape<sp/>&amp;&amp;<sp/>!pipe-&gt;alpha0Ptr<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!pipe-&gt;nonIsolatedGroup<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap-&gt;mode<sp/>==<sp/>splashModeDeviceN8<sp/>&amp;&amp;<sp/>pipe-&gt;destAlphaPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeRunAADeviceN8(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>Guchar<sp/>aSrc,<sp/>aDest,<sp/>alpha2,<sp/>aResult;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cDest;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>Guchar<sp/>cResult[SPOT_NCOMPS+4];</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp,<sp/>mask;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>read<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp=0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>cDest[cp]<sp/>=<sp/>pipe-&gt;destColorPtr[cp];</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>aDest<sp/>=<sp/>*pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>source<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>aSrc<sp/>=<sp/>div255(pipe-&gt;aInput<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>alpha<sp/>and<sp/>non-isolated<sp/>group<sp/>element<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>aResult<sp/>=<sp/>aSrc<sp/>+<sp/>aDest<sp/>-<sp/>div255(aSrc<sp/>*<sp/>aDest);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>alpha2<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>result<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp=0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp=0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cResult[cp]<sp/>=<sp/>state-&gt;deviceNTransfer[cp][(Guchar)(((alpha2<sp/>-<sp/>aSrc)<sp/>*<sp/>cDest[cp]<sp/>+</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aSrc<sp/>*<sp/>pipe-&gt;cSrc[cp])<sp/>/<sp/>alpha2)];</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----<sp/>write<sp/>destination<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp=0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;overprintMask<sp/>&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr[cp]<sp/>=<sp/>cResult[cp];</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>*pipe-&gt;destAlphaPtr++<sp/>=<sp/>aResult;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeSetXY(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>pipe-&gt;x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>pipe-&gt;y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;softMask)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;softMaskPtr<sp/>=</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state-&gt;softMask-&gt;data[y<sp/>*<sp/>state-&gt;softMask-&gt;rowSize<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>3)];</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80<sp/>&gt;&gt;<sp/>(x<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>3<sp/>*<sp/>x];</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>x];</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>x];</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>(SPOT_NCOMPS<sp/>+<sp/>4)<sp/>*<sp/>x];</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destAlphaPtr<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destAlphaPtr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;inNonIsolatedGroup<sp/>&amp;&amp;<sp/>alpha0Bitmap-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;alpha0Ptr<sp/>=</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alpha0Bitmap-&gt;alpha[(alpha0Y<sp/>+<sp/>y)<sp/>*<sp/>alpha0Bitmap-&gt;width<sp/>+</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(alpha0X<sp/>+<sp/>x)];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;alpha0Ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::pipeIncX(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe)<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>++pipe-&gt;x;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;softMask)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;softMaskPtr;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pipe-&gt;destColorMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;destColorMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destColorPtr;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;destColorPtr<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;destAlphaPtr)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;destAlphaPtr;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe-&gt;alpha0Ptr)<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>++pipe-&gt;alpha0Ptr;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::drawPixel(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>GBool<sp/>noClip)<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(y<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noClip<sp/>||<sp/>state-&gt;clip-&gt;test(x,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(pipe,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>(this-&gt;*pipe-&gt;run)(pipe);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(x);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(y);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::drawAAPixelInit()<sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>aaBufY<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::drawAAPixel(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitCount4[16]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>1,<sp/>2,<sp/>2,<sp/>3,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>p;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>t;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;=<sp/>bitmap-&gt;width<sp/>||</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>&lt;<sp/>state-&gt;clip-&gt;getYMinI()<sp/>||<sp/>y<sp/>&gt;<sp/>state-&gt;clip-&gt;getYMaxI())<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>aaBuf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>!=<sp/>aaBufY)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(aaBuf-&gt;getDataPtr(),<sp/>0xff,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aaBuf-&gt;getRowSize()<sp/>*<sp/>aaBuf-&gt;getHeight());</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>bitmap-&gt;width<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;clip-&gt;clipAALine(aaBuf,<sp/>&amp;x0,<sp/>&amp;x1,<sp/>y);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>aaBufY<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>shape<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>(x<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>bitCount4[*p<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>bitCount4[p[w]<sp/>&amp;<sp/>0x0f]<sp/>+</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitCount4[p[2*w]<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>bitCount4[p[3*w]<sp/>&amp;<sp/>0x0f];</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>bitCount4[*p<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>bitCount4[p[w]<sp/>&gt;&gt;<sp/>4]<sp/>+</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitCount4[p[2*w]<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>bitCount4[p[3*w]<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>splashAASize;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>splashAASize;<sp/>++xx)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>yy<sp/>*<sp/>aaBuf-&gt;getRowSize()<sp/>+</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((x<sp/>*<sp/>splashAASize<sp/>+<sp/>xx)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(*p<sp/>&gt;&gt;<sp/>(7<sp/>-<sp/>((x<sp/>*<sp/>splashAASize<sp/>+<sp/>xx)<sp/>&amp;<sp/>7)))<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(pipe,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe-&gt;shape<sp/>=<sp/>div255(aaGamma[t]<sp/>*<sp/>pipe-&gt;shape);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>(this-&gt;*pipe-&gt;run)(pipe);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(x);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(y);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::drawSpan(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>noClip)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noClip)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(pipe,<sp/>x0,<sp/>y);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;=<sp/>x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe-&gt;run)(pipe);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(x0);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(x1);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(y);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>state-&gt;clip-&gt;getXMinI())<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>state-&gt;clip-&gt;getXMinI();</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>state-&gt;clip-&gt;getXMaxI())<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>state-&gt;clip-&gt;getXMaxI();</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(pipe,<sp/>x0,<sp/>y);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;=<sp/>x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(x,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>(this-&gt;*pipe-&gt;run)(pipe);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(x);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(y);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeIncX(pipe);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::drawAALine(<ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>*pipe,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>GBool<sp/>adjustLine,<sp/>Guchar<sp/>lineOpacity)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitCount4[16]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>1,<sp/>2,<sp/>2,<sp/>3,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>p;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx,<sp/>yy,<sp/>t;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/>p0<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>(x0<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>p1<sp/>=<sp/>p0<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>p2<sp/>=<sp/>p1<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>p3<sp/>=<sp/>p2<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>pipeSetXY(pipe,<sp/>x0,<sp/>y);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;=<sp/>x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>shape<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>bitCount4[*p0<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>bitCount4[*p1<sp/>&amp;<sp/>0x0f]<sp/>+</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitCount4[*p2<sp/>&amp;<sp/>0x0f]<sp/>+<sp/>bitCount4[*p3<sp/>&amp;<sp/>0x0f];</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p0;<sp/>++p1;<sp/>++p2;<sp/>++p3;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>bitCount4[*p0<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>bitCount4[*p1<sp/>&gt;&gt;<sp/>4]<sp/>+</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitCount4[*p2<sp/>&gt;&gt;<sp/>4]<sp/>+<sp/>bitCount4[*p3<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/>splashAASize;<sp/>++yy)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/>splashAASize;<sp/>++xx)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>yy<sp/>*<sp/>aaBuf-&gt;getRowSize()<sp/>+</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x<sp/>*<sp/>splashAASize<sp/>+<sp/>xx)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(*p<sp/>&gt;&gt;<sp/>(7<sp/>-<sp/>((x<sp/>*<sp/>splashAASize<sp/>+<sp/>xx)<sp/>&amp;<sp/>7)))<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe-&gt;shape<sp/>=<sp/>(adjustLine)<sp/>?<sp/>div255((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>lineOpacity<sp/>*<sp/>(double)aaGamma[t])<sp/>:<sp/>(double)aaGamma[t];</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe-&gt;run)(pipe);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(x);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(y);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(pipe);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>a<sp/>point<sp/>from<sp/>user<sp/>space<sp/>to<sp/>device<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::transform(SplashCoord<sp/>*matrix,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>xi,<sp/>SplashCoord<sp/>yi,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*xo,<sp/>SplashCoord<sp/>*yo)<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>m[0]<sp/>m[1]<sp/>0<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[xo<sp/>yo<sp/>1]<sp/>=<sp/>[xi<sp/>yi<sp/>1]<sp/>*<sp/><sp/>[<sp/>m[2]<sp/>m[3]<sp/>0<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>m[4]<sp/>m[5]<sp/>1<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>*xo<sp/>=<sp/>xi<sp/>*<sp/>matrix[0]<sp/>+<sp/>yi<sp/>*<sp/>matrix[2]<sp/>+<sp/>matrix[4];</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>*yo<sp/>=<sp/>xi<sp/>*<sp/>matrix[1]<sp/>+<sp/>yi<sp/>*<sp/>matrix[3]<sp/>+<sp/>matrix[5];</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Splash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal">Splash::Splash(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*bitmapA,<sp/>GBool<sp/>vectorAntialiasA,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_splash_screen_params" kindref="compound">SplashScreenParams</ref><sp/>*screenParams)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>bitmapA;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>vectorAntialias<sp/>=<sp/>vectorAntialiasA;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>inShading<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_state" kindref="compound">SplashState</ref>(bitmap-&gt;width,<sp/>bitmap-&gt;height,<sp/>vectorAntialias,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenParams);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>aaBuf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>(splashAASize<sp/>*<sp/>bitmap-&gt;width,<sp/>splashAASize,</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>splashModeMono1,<sp/>gFalse);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>splashAASize<sp/>*<sp/>splashAASize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aaGamma[i]<sp/>=<sp/>(Guchar)splashRound(</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashPow((SplashCoord)i<sp/>/</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SplashCoord)(splashAASize<sp/>*<sp/>splashAASize),</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashAAGamma)<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>aaBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>minLineWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>thinLineMode<sp/>=<sp/>splashThinLineDefault;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>clearModRegion();</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>debugMode<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>alpha0Bitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal">Splash::Splash(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*bitmapA,<sp/>GBool<sp/>vectorAntialiasA,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>*screenA)<sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>bitmap<sp/>=<sp/>bitmapA;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>inShading<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>vectorAntialias<sp/>=<sp/>vectorAntialiasA;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_state" kindref="compound">SplashState</ref>(bitmap-&gt;width,<sp/>bitmap-&gt;height,<sp/>vectorAntialias,</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenA);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>aaBuf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>(splashAASize<sp/>*<sp/>bitmap-&gt;width,<sp/>splashAASize,</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>splashModeMono1,<sp/>gFalse);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>splashAASize<sp/>*<sp/>splashAASize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aaGamma[i]<sp/>=<sp/>(Guchar)splashRound(</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashPow((SplashCoord)i<sp/>/</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SplashCoord)(splashAASize<sp/>*<sp/>splashAASize),</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashAAGamma)<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>aaBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>minLineWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>thinLineMode<sp/>=<sp/>splashThinLineDefault;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/>clearModRegion();</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>debugMode<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>alpha0Bitmap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal">Splash::~Splash()<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>restoreState();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>aaBuf;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>state<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal">SplashCoord<sp/>*Splash::getMatrix()<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;matrix;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*Splash::getStrokePattern()<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;strokePattern;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*Splash::getFillPattern()<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;fillPattern;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>*Splash::getScreen()<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;screen;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal">SplashBlendFunc<sp/>Splash::getBlendFunc()<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;blendFunc;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal">SplashCoord<sp/>Splash::getStrokeAlpha()<sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;strokeAlpha;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal">SplashCoord<sp/>Splash::getFillAlpha()<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;fillAlpha;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal">SplashCoord<sp/>Splash::getLineWidth()<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineWidth;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Splash::getLineCap()<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineCap;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Splash::getLineJoin()<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineJoin;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal">SplashCoord<sp/>Splash::getMiterLimit()<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;miterLimit;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal">SplashCoord<sp/>Splash::getFlatness()<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;flatness;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal">SplashCoord<sp/>*Splash::getLineDash()<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineDash;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Splash::getLineDashLength()<sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineDashLength;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal">SplashCoord<sp/>Splash::getLineDashPhase()<sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;lineDashPhase;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal">GBool<sp/>Splash::getStrokeAdjust()<sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;strokeAdjust;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><ref refid="class_splash_clip" kindref="compound">SplashClip</ref><sp/>*Splash::getClip()<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;clip;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*Splash::getSoftMask()<sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;softMask;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal">GBool<sp/>Splash::getInNonIsolatedGroup()<sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;inNonIsolatedGroup;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="comment">//<sp/>state<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setMatrix(SplashCoord<sp/>*matrix)<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>memcpy(state-&gt;matrix,<sp/>matrix,<sp/>6<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SplashCoord));</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setStrokePattern(<ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*strokePattern)<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>state-&gt;setStrokePattern(strokePattern);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setFillPattern(<ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*fillPattern)<sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>state-&gt;setFillPattern(fillPattern);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setScreen(<ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>*screen)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>state-&gt;setScreen(screen);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setBlendFunc(SplashBlendFunc<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>state-&gt;blendFunc<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setStrokeAlpha(SplashCoord<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>state-&gt;strokeAlpha<sp/>=<sp/>(state-&gt;multiplyPatternAlpha)<sp/>?<sp/>alpha<sp/>*<sp/><sp/>state-&gt;patternStrokeAlpha<sp/>:<sp/>alpha;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setFillAlpha(SplashCoord<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/>state-&gt;fillAlpha<sp/>=<sp/>(state-&gt;multiplyPatternAlpha)<sp/>?<sp/>alpha<sp/>*<sp/><sp/>state-&gt;patternFillAlpha<sp/>:<sp/>alpha;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setPatternAlpha(SplashCoord<sp/>strokeAlpha,<sp/>SplashCoord<sp/>fillAlpha)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>state-&gt;patternStrokeAlpha<sp/>=<sp/>strokeAlpha;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/>state-&gt;patternFillAlpha<sp/>=<sp/>fillAlpha;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>state-&gt;multiplyPatternAlpha<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::clearPatternAlpha()<sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>state-&gt;patternStrokeAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>state-&gt;patternFillAlpha<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>state-&gt;multiplyPatternAlpha<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setFillOverprint(GBool<sp/>fop)<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>state-&gt;fillOverprint<sp/>=<sp/>fop;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setStrokeOverprint(GBool<sp/>gop)<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>state-&gt;strokeOverprint<sp/>=<sp/>gop;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setOverprintMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opm)<sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/>state-&gt;overprintMode<sp/>=<sp/>opm;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setLineWidth(SplashCoord<sp/>lineWidth)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/>state-&gt;lineWidth<sp/>=<sp/>lineWidth;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setLineCap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCap)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>state-&gt;lineCap<sp/>=<sp/>lineCap;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setLineJoin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineJoin)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>state-&gt;lineJoin<sp/>=<sp/>lineJoin;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setMiterLimit(SplashCoord<sp/>miterLimit)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>state-&gt;miterLimit<sp/>=<sp/>miterLimit;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setFlatness(SplashCoord<sp/>flatness)<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flatness<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;flatness<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;flatness<sp/>=<sp/>flatness;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setLineDash(SplashCoord<sp/>*lineDash,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDashLength,</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>lineDashPhase)<sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>state-&gt;setLineDash(lineDash,<sp/>lineDashLength,<sp/>lineDashPhase);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setStrokeAdjust(GBool<sp/>strokeAdjust)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>state-&gt;strokeAdjust<sp/>=<sp/>strokeAdjust;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::clipResetToRect(SplashCoord<sp/>x0,<sp/>SplashCoord<sp/>y0,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>state-&gt;clip-&gt;resetToRect(x0,<sp/>y0,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal">SplashError<sp/>Splash::clipToRect(SplashCoord<sp/>x0,<sp/>SplashCoord<sp/>y0,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;clip-&gt;clipToRect(x0,<sp/>y0,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal">SplashError<sp/>Splash::clipToPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>GBool<sp/>eo)<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;clip-&gt;clipToPath(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness,<sp/>eo);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setSoftMask(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*softMask)<sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>state-&gt;setSoftMask(softMask);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setInNonIsolatedGroup(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*alpha0BitmapA,</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha0XA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha0YA)<sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/>alpha0Bitmap<sp/>=<sp/>alpha0BitmapA;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>alpha0X<sp/>=<sp/>alpha0XA;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>alpha0Y<sp/>=<sp/>alpha0YA;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>state-&gt;inNonIsolatedGroup<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setTransfer(Guchar<sp/>*red,<sp/>Guchar<sp/>*green,<sp/>Guchar<sp/>*blue,</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>*gray)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>state-&gt;setTransfer(red,<sp/>green,<sp/>blue,<sp/>gray);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::setOverprintMask(Guint<sp/>overprintMask,<sp/>GBool<sp/>additive)<sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/>state-&gt;overprintMask<sp/>=<sp/>overprintMask;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>state-&gt;overprintAdditive<sp/>=<sp/>additive;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>state<sp/>save/restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::saveState()<sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><ref refid="class_splash_state" kindref="compound">SplashState</ref><sp/>*newState;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>newState<sp/>=<sp/>state-&gt;copy();</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/>newState-&gt;next<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/>newState;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal">SplashError<sp/>Splash::restoreState()<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><ref refid="class_splash_state" kindref="compound">SplashState</ref><sp/>*oldState;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrNoSave;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>oldState<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/>state-&gt;next;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>oldState;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>drawing<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::clear(SplashColorPtr<sp/><ref refid="structcolor" kindref="compound">color</ref>,<sp/>Guchar<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>row,<sp/>p;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>Guchar<sp/>mono;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>mono<sp/>=<sp/>(color[0]<sp/>&amp;<sp/>0x80)<sp/>?<sp/>0xff<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mono,<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>mono,<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0],<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>color[0],<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color[0]<sp/>==<sp/>color[1]<sp/>&amp;&amp;<sp/>color[1]<sp/>==<sp/>color[2])<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0],<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>color[0],<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>bitmap-&gt;data;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>+=<sp/>bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color[0]<sp/>==<sp/>color[1]<sp/>&amp;&amp;<sp/>color[1]<sp/>==<sp/>color[2])<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0],<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>color[0],<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>bitmap-&gt;data;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>+=<sp/>bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color[0]<sp/>==<sp/>color[1]<sp/>&amp;&amp;<sp/>color[1]<sp/>==<sp/>color[2])<sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0],<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>color[0],<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>bitmap-&gt;data;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>+=<sp/>bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color[0]<sp/>==<sp/>color[1]<sp/>&amp;&amp;<sp/>color[1]<sp/>==<sp/>color[2]<sp/>&amp;&amp;<sp/>color[2]<sp/>==<sp/>color[3])<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;rowSize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data<sp/>+<sp/>bitmap-&gt;rowSize<sp/>*<sp/>(bitmap-&gt;height<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0],<sp/>-bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;data,<sp/>color[0],<sp/>bitmap-&gt;rowSize<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>bitmap-&gt;data;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[3];</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>+=<sp/>bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>=<sp/>bitmap-&gt;data;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>color[cp];</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>+=<sp/>bitmap-&gt;rowSize;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bitmap-&gt;alpha,<sp/>alpha,<sp/>bitmap-&gt;width<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>updateModX(0);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>updateModY(0);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>updateModX(bitmap-&gt;width<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>updateModY(bitmap-&gt;height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal">SplashError<sp/>Splash::stroke(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path2,<sp/>*dPath;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>d1,<sp/>d2,<sp/>t1,<sp/>t2,<sp/>w;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMode)<sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;stroke<sp/>[dash:%d]<sp/>[width:%.2f]:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;lineDashLength,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)state-&gt;lineWidth);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>dumpPath(path);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>splashClipAllOutside;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrEmptyPath;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>path2<sp/>=<sp/>flattenPath(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineDashLength<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>dPath<sp/>=<sp/>makeDashedPath(path2);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>path2;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>path2<sp/>=<sp/>dPath;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path2-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>path2;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrEmptyPath;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>a<sp/>unit<sp/>square,<sp/>and<sp/>take<sp/>the<sp/>half<sp/>the<sp/>max<sp/>of<sp/>the<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>diagonals;<sp/>the<sp/>product<sp/>of<sp/>this<sp/>number<sp/>and<sp/>the<sp/>line<sp/>width<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(approximate)<sp/>transformed<sp/>line<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>t1<sp/>=<sp/>state-&gt;matrix[0]<sp/>+<sp/>state-&gt;matrix[2];</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>t2<sp/>=<sp/>state-&gt;matrix[1]<sp/>+<sp/>state-&gt;matrix[3];</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>d1<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>+<sp/>t2<sp/>*<sp/>t2;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>t1<sp/>=<sp/>state-&gt;matrix[0]<sp/>-<sp/>state-&gt;matrix[2];</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>t2<sp/>=<sp/>state-&gt;matrix[1]<sp/>-<sp/>state-&gt;matrix[3];</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>d2<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>+<sp/>t2<sp/>*<sp/>t2;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2<sp/>&gt;<sp/>d1)<sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>d2;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>d1<sp/>*=<sp/>0.5;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d1<sp/>*<sp/>state-&gt;lineWidth<sp/>*<sp/>state-&gt;lineWidth<sp/>&lt;<sp/>minLineWidth<sp/>*<sp/>minLineWidth)<sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>minLineWidth<sp/>/<sp/>splashSqrt(d1);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>strokeWide(path2,<sp/>w);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode<sp/>==<sp/>splashModeMono1)<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>gets<sp/>close<sp/>to<sp/>Adobe&apos;s<sp/>behavior<sp/>in<sp/>mono<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>*<sp/>state-&gt;lineWidth<sp/>&lt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strokeNarrow(path2);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strokeWide(path2,<sp/>state-&gt;lineWidth);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineWidth<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strokeNarrow(path2);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strokeWide(path2,<sp/>state-&gt;lineWidth);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>path2;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::strokeNarrow(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_x_path_seg" kindref="compound">SplashXPathSeg</ref><sp/>*seg;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>y0,<sp/>y1,<sp/>xa,<sp/>xb,<sp/>y;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>dxdy;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClipRes[3];</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>nClipRes[0]<sp/>=<sp/>nClipRes[1]<sp/>=<sp/>nClipRes[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>xPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref>(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>0,<sp/>state-&gt;strokePattern,<sp/>NULL,</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;strokeAlpha<sp/>*<sp/>255),</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gFalse,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>seg<sp/>=<sp/>xPath-&gt;segs;<sp/>i<sp/>&lt;<sp/>xPath-&gt;length;<sp/>++i,<sp/>++seg)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;y0<sp/>&lt;=<sp/>seg-&gt;y1)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>splashFloor(seg-&gt;y0);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>splashFloor(seg-&gt;y1);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>splashFloor(seg-&gt;x0);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>splashFloor(seg-&gt;x1);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>splashFloor(seg-&gt;y1);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>splashFloor(seg-&gt;y0);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>splashFloor(seg-&gt;x1);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>splashFloor(seg-&gt;x0);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0<sp/>&lt;=<sp/>x1<sp/>?<sp/>x0<sp/>:<sp/>x1,<sp/>y0,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>&lt;=<sp/>x1<sp/>?<sp/>x1<sp/>:<sp/>x0,<sp/>y1))</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;=<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y0,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x1,<sp/>x0,<sp/>y0,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>dxdy<sp/>=<sp/>seg-&gt;dxdy;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&lt;<sp/>state-&gt;clip-&gt;getYMinI())<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>state-&gt;clip-&gt;getYMinI();</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>splashFloor(seg-&gt;x0<sp/>+<sp/>((SplashCoord)y0<sp/>-<sp/>seg-&gt;y0)<sp/>*<sp/>dxdy);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;<sp/>state-&gt;clip-&gt;getYMaxI())<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>state-&gt;clip-&gt;getYMaxI();</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>splashFloor(seg-&gt;x0<sp/>+<sp/>((SplashCoord)y1<sp/>-<sp/>seg-&gt;y0)<sp/>*<sp/>dxdy);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;=<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;=<sp/>y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>splashFloor(seg-&gt;x0<sp/>+</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>1<sp/>-<sp/>seg-&gt;y0)<sp/>*<sp/>dxdy);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>x1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>==<sp/>xb)<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawPixel(&amp;pipe,<sp/>xa,<sp/>y,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>xa,<sp/>xb<sp/>-<sp/>1,<sp/>y,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>xb;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;=<sp/>y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>splashFloor(seg-&gt;x0<sp/>+</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>1<sp/>-<sp/>seg-&gt;y0)<sp/>*<sp/>dxdy);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>x1<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>==<sp/>xb)<sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawPixel(&amp;pipe,<sp/>xa,<sp/>y,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>xb<sp/>+<sp/>1,<sp/>xa,<sp/>y,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>xb;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>++nClipRes[clipRes];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nClipRes[splashClipPartial]<sp/>||</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(nClipRes[splashClipAllInside]<sp/>&amp;&amp;<sp/>nClipRes[splashClipAllOutside]))<sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nClipRes[splashClipAllInside])<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>splashClipAllInside;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>splashClipAllOutside;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xPath;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::strokeWide(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>SplashCoord<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path2;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>path2<sp/>=<sp/>makeStrokePath(path,<sp/>w,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>fillWithPattern(path2,<sp/>gFalse,<sp/>state-&gt;strokePattern,<sp/>state-&gt;strokeAlpha);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>path2;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*Splash::flattenPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>SplashCoord<sp/>*matrix,</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>flatness)<sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*fPath;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>flatness2;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>Guchar<sp/>flag;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>fPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref>();</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>flatness2<sp/>=<sp/>flatness;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>flatness2<sp/>=<sp/>flatness<sp/>*<sp/>flatness;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>path-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>path-&gt;flags[i];</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>&amp;<sp/>splashPathFirst)<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPath-&gt;moveTo(path-&gt;pts[i].x,<sp/>path-&gt;pts[i].y);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>&amp;<sp/>splashPathCurve)<sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>flattenCurve(path-&gt;pts[i-1].x,<sp/>path-&gt;pts[i-1].y,</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;pts[i<sp/><sp/>].x,<sp/>path-&gt;pts[i<sp/><sp/>].y,</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;pts[i+1].x,<sp/>path-&gt;pts[i+1].y,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;pts[i+2].x,<sp/>path-&gt;pts[i+2].y,</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix,<sp/>flatness2,<sp/>fPath);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>fPath-&gt;lineTo(path-&gt;pts[i].x,<sp/>path-&gt;pts[i].y);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;flags[i-1]<sp/>&amp;<sp/>splashPathClosed)<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>fPath-&gt;close();</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fPath;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::flattenCurve(SplashCoord<sp/>x0,<sp/>SplashCoord<sp/>y0,</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x1,<sp/>SplashCoord<sp/>y1,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x2,<sp/>SplashCoord<sp/>y2,</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>x3,<sp/>SplashCoord<sp/>y3,</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*matrix,<sp/>SplashCoord<sp/>flatness2,</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*fPath)<sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>cx[splashMaxCurveSplits<sp/>+<sp/>1][3];</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>cy[splashMaxCurveSplits<sp/>+<sp/>1][3];</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cNext[splashMaxCurveSplits<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xl0,<sp/>xl1,<sp/>xl2,<sp/>xr0,<sp/>xr1,<sp/>xr2,<sp/>xr3,<sp/>xx1,<sp/>xx2,<sp/>xh;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>yl0,<sp/>yl1,<sp/>yl2,<sp/>yr0,<sp/>yr1,<sp/>yr2,<sp/>yr3,<sp/>yy1,<sp/>yy2,<sp/>yh;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>dx,<sp/>dy,<sp/>mx,<sp/>my,<sp/>tx,<sp/>ty,<sp/>d1,<sp/>d2;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1,<sp/>p2,<sp/>p3;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>p1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>p2<sp/>=<sp/>splashMaxCurveSplits;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>cx[p1][0]<sp/>=<sp/>x0;<sp/><sp/>cy[p1][0]<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>cx[p1][1]<sp/>=<sp/>x1;<sp/><sp/>cy[p1][1]<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/>cx[p1][2]<sp/>=<sp/>x2;<sp/><sp/>cy[p1][2]<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/>cx[p2][0]<sp/>=<sp/>x3;<sp/><sp/>cy[p2][0]<sp/>=<sp/>y3;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/>cNext[p1]<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p1<sp/>&lt;<sp/>splashMaxCurveSplits)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>next<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>xl0<sp/>=<sp/>cx[p1][0];<sp/><sp/>yl0<sp/>=<sp/>cy[p1][0];</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>xx1<sp/>=<sp/>cx[p1][1];<sp/><sp/>yy1<sp/>=<sp/>cy[p1][1];</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>xx2<sp/>=<sp/>cx[p1][2];<sp/><sp/>yy2<sp/>=<sp/>cy[p1][2];</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>cNext[p1];</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>xr3<sp/>=<sp/>cx[p2][0];<sp/><sp/>yr3<sp/>=<sp/>cy[p2][0];</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>distances<sp/>(in<sp/>device<sp/>space)<sp/>from<sp/>the<sp/>control<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>midpoint<sp/>of<sp/>the<sp/>straight<sp/>line<sp/>(this<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>hack,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>it&apos;s<sp/>much<sp/>faster<sp/>than<sp/>computing<sp/>the<sp/>actual<sp/>distances<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>transform(matrix,<sp/>(xl0<sp/>+<sp/>xr3)<sp/>*<sp/>0.5,<sp/>(yl0<sp/>+<sp/>yr3)<sp/>*<sp/>0.5,<sp/>&amp;mx,<sp/>&amp;my);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>transform(matrix,<sp/>xx1,<sp/>yy1,<sp/>&amp;tx,<sp/>&amp;ty);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>splashDist(tx,<sp/>ty,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>tx<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>ty<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>dx*dx<sp/>+<sp/>dy*dy;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>transform(matrix,<sp/>xx2,<sp/>yy2,<sp/>&amp;tx,<sp/>&amp;ty);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>splashDist(tx,<sp/>ty,<sp/>mx,<sp/>my);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>tx<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>ty<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>dx*dx<sp/>+<sp/>dy*dy;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>curve<sp/>is<sp/>flat<sp/>enough,<sp/>or<sp/>no<sp/>more<sp/>subdivisions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowed,<sp/>add<sp/>the<sp/>straight<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p2<sp/>-<sp/>p1<sp/>==<sp/>1<sp/>||<sp/>(d1<sp/>&lt;=<sp/>flatness2<sp/>&amp;&amp;<sp/>d2<sp/>&lt;=<sp/>flatness2))<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPath-&gt;lineTo(xr3,<sp/>yr3);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>subdivide<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl1<sp/>=<sp/>splashAvg(xl0,<sp/>xx1);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yl1<sp/>=<sp/>splashAvg(yl0,<sp/>yy1);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xh<sp/>=<sp/>splashAvg(xx1,<sp/>xx2);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yh<sp/>=<sp/>splashAvg(yy1,<sp/>yy2);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xl2<sp/>=<sp/>splashAvg(xl1,<sp/>xh);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yl2<sp/>=<sp/>splashAvg(yl1,<sp/>yh);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr2<sp/>=<sp/>splashAvg(xx2,<sp/>xr3);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr2<sp/>=<sp/>splashAvg(yy2,<sp/>yr3);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr1<sp/>=<sp/>splashAvg(xh,<sp/>xr2);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr1<sp/>=<sp/>splashAvg(yh,<sp/>yr2);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xr0<sp/>=<sp/>splashAvg(xl2,<sp/>xr1);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr0<sp/>=<sp/>splashAvg(yl2,<sp/>yr1);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>new<sp/>subdivision<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/>(p1<sp/>+<sp/>p2)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx[p1][1]<sp/>=<sp/>xl1;<sp/><sp/>cy[p1][1]<sp/>=<sp/>yl1;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx[p1][2]<sp/>=<sp/>xl2;<sp/><sp/>cy[p1][2]<sp/>=<sp/>yl2;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cNext[p1]<sp/>=<sp/>p3;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx[p3][0]<sp/>=<sp/>xr0;<sp/><sp/>cy[p3][0]<sp/>=<sp/>yr0;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx[p3][1]<sp/>=<sp/>xr1;<sp/><sp/>cy[p3][1]<sp/>=<sp/>yr1;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx[p3][2]<sp/>=<sp/>xr2;<sp/><sp/>cy[p3][2]<sp/>=<sp/>yr2;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cNext[p3]<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*Splash::makeDashedPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*dPath;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>lineDashTotal;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>lineDashStartPhase,<sp/>lineDashDist,<sp/>segLen;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>xa,<sp/>ya;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>GBool<sp/>lineDashStartOn,<sp/>lineDashOn,<sp/>newPath;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDashStartIdx,<sp/>lineDashIdx;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>lineDashTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>state-&gt;lineDashLength;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashTotal<sp/>+=<sp/>state-&gt;lineDash[i];</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Acrobat<sp/>simply<sp/>draws<sp/>nothing<sp/>if<sp/>the<sp/>dash<sp/>array<sp/>is<sp/>[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashTotal<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref>();</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>lineDashStartPhase<sp/>=<sp/>state-&gt;lineDashPhase;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>splashFloor(lineDashStartPhase<sp/>/<sp/>lineDashTotal);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/>lineDashStartPhase<sp/>-=<sp/>(SplashCoord)i<sp/>*<sp/>lineDashTotal;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>lineDashStartOn<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>lineDashStartIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashStartPhase<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lineDashStartIdx<sp/>&lt;<sp/>state-&gt;lineDashLength<sp/>&amp;&amp;<sp/>lineDashStartPhase<sp/>&gt;=<sp/>state-&gt;lineDash[lineDashStartIdx])<sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashStartOn<sp/>=<sp/>!lineDashStartOn;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashStartPhase<sp/>-=<sp/>state-&gt;lineDash[lineDashStartIdx];</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++lineDashStartIdx;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(lineDashStartIdx<sp/>==<sp/>state-&gt;lineDashLength))<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref>();</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>dPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref>();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>each<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>path-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>end<sp/>of<sp/>the<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>j<sp/>&lt;<sp/>path-&gt;length<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>!(path-&gt;flags[j]<sp/>&amp;<sp/>splashPathLast);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>++j)<sp/>;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>dash<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashOn<sp/>=<sp/>lineDashStartOn;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashIdx<sp/>=<sp/>lineDashStartIdx;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>lineDashDist<sp/>=<sp/>state-&gt;lineDash[lineDashIdx]<sp/>-<sp/>lineDashStartPhase;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>each<sp/>segment<sp/>of<sp/>the<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>newPath<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>i;<sp/>k<sp/>&lt;<sp/>j;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>path-&gt;pts[k].x;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>path-&gt;pts[k].y;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>path-&gt;pts[k+1].x;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>path-&gt;pts[k+1].y;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segLen<sp/>=<sp/>splashDist(x0,<sp/>y0,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(segLen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashDist<sp/>&gt;=<sp/>segLen)<sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashOn)<sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPath)<sp/>{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;moveTo(x0,<sp/>y0);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPath<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;lineTo(x1,<sp/>y1);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashDist<sp/>-=<sp/>segLen;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>x0<sp/>+<sp/>(lineDashDist<sp/>/<sp/>segLen)<sp/>*<sp/>(x1<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ya<sp/>=<sp/>y0<sp/>+<sp/>(lineDashDist<sp/>/<sp/>segLen)<sp/>*<sp/>(y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashOn)<sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPath)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;moveTo(x0,<sp/>y0);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPath<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;lineTo(xa,<sp/>ya);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>xa;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>ya;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segLen<sp/>-=<sp/>lineDashDist;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashDist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>next<sp/>entry<sp/>in<sp/>the<sp/>dash<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineDashDist<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashOn<sp/>=<sp/>!lineDashOn;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++lineDashIdx<sp/>==<sp/>state-&gt;lineDashLength)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineDashIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineDashDist<sp/>=<sp/>state-&gt;lineDash[lineDashIdx];</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newPath<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dPath-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>allSame<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>allSame<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>path-&gt;length<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>allSame<sp/>=<sp/>path-&gt;pts[i].x<sp/>==<sp/>path-&gt;pts[i<sp/>+<sp/>1].x<sp/>&amp;&amp;<sp/>path-&gt;pts[i].y<sp/>==<sp/>path-&gt;pts[i<sp/>+<sp/>1].y;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allSame)<sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>path-&gt;pts[0].x;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>path-&gt;pts[0].y;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;moveTo(x0,<sp/>y0);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dPath-&gt;lineTo(x0,<sp/>y0);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dPath;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal">SplashError<sp/>Splash::fill(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>GBool<sp/>eo)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMode)<sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fill<sp/>[eo:%d]:\n&quot;</highlight><highlight class="normal">,<sp/>eo);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>dumpPath(path);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fillWithPattern(path,<sp/>eo,<sp/>state-&gt;fillPattern,<sp/>state-&gt;fillAlpha);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::getBBoxFP(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>SplashCoord<sp/>*xMinA,<sp/>SplashCoord<sp/>*yMinA,</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*xMaxA,<sp/>SplashCoord<sp/>*yMaxA)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xMinFP,<sp/>yMinFP,<sp/>xMaxFP,<sp/>yMaxFP,<sp/>tx,<sp/>ty;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>compiler<sp/>happy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>xMinFP<sp/>=<sp/>xMaxFP<sp/>=<sp/>yMinFP<sp/>=<sp/>yMaxFP<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>transform(state-&gt;matrix,<sp/>path-&gt;pts[i].x,<sp/>path-&gt;pts[i].y,<sp/>&amp;tx,<sp/>&amp;ty);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMinFP<sp/>=<sp/>xMaxFP<sp/>=<sp/>tx;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMinFP<sp/>=<sp/>yMaxFP<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx<sp/>&lt;<sp/>xMinFP)<sp/>xMinFP<sp/>=<sp/>tx;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx<sp/>&gt;<sp/>xMaxFP)<sp/>xMaxFP<sp/>=<sp/>tx;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty<sp/>&lt;<sp/>yMinFP)<sp/>yMinFP<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty<sp/>&gt;<sp/>yMaxFP)<sp/>yMaxFP<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>*xMinA<sp/>=<sp/>xMinFP;</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>*yMinA<sp/>=<sp/>yMinFP;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/>*xMaxA<sp/>=<sp/>xMaxFP;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/>*yMaxA<sp/>=<sp/>yMaxFP;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal">SplashError<sp/>Splash::fillWithPattern(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>GBool<sp/>eo,</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*pattern,</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref><sp/>*scanner;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI,<sp/>x0,<sp/>x1,<sp/>y;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes,<sp/>clipRes2;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>GBool<sp/>adjustLine<sp/>=<sp/>gFalse;<sp/></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linePosI<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrEmptyPath;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathAllOutside(path))<sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>splashClipAllOutside;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>stroke<sp/>adjustment<sp/>hints<sp/>for<sp/>filled<sp/>rectangles<sp/>--<sp/>this<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>applies<sp/>to<sp/>paths<sp/>that<sp/>consist<sp/>of<sp/>a<sp/>single<sp/>subpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>appears<sp/>to<sp/>match<sp/>Acrobat&apos;s<sp/>behavior)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;strokeAdjust<sp/>&amp;&amp;<sp/>!path-&gt;hints)<sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>path-&gt;getLength();</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>4<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>!(path-&gt;flags[0]<sp/>&amp;<sp/>splashPathClosed)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>!(path-&gt;flags[1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>!(path-&gt;flags[2]<sp/>&amp;<sp/>splashPathLast))<sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;close(gTrue);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;addStrokeAdjustHint(0,<sp/>2,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;addStrokeAdjustHint(1,<sp/>3,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>5<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[0]<sp/>&amp;<sp/>splashPathClosed)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(path-&gt;flags[1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(path-&gt;flags[2]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(path-&gt;flags[3]<sp/>&amp;<sp/>splashPathLast))<sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;addStrokeAdjustHint(0,<sp/>2,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;addStrokeAdjustHint(1,<sp/>3,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thinLineMode<sp/>!=<sp/>splashThinLineDefault)<sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;getXMinI()<sp/>==<sp/>state-&gt;clip-&gt;getXMaxI())<sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linePosI<sp/>=<sp/>state-&gt;clip-&gt;getXMinI();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustLine<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;getXMinI()<sp/>==<sp/>state-&gt;clip-&gt;getXMaxI()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustLine<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linePosI<sp/>=<sp/>splashFloor(state-&gt;clip-&gt;getXMin()<sp/>+<sp/>state-&gt;lineWidth);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;getYMinI()<sp/>==<sp/>state-&gt;clip-&gt;getYMaxI())<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linePosI<sp/>=<sp/>state-&gt;clip-&gt;getYMinI();</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustLine<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;getYMinI()<sp/>==<sp/>state-&gt;clip-&gt;getYMaxI()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustLine<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linePosI<sp/>=<sp/>splashFloor(state-&gt;clip-&gt;getYMin()<sp/>+<sp/>state-&gt;lineWidth);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>xPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref>(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness,<sp/>gTrue,<sp/></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustLine,<sp/>linePosI);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>!inShading)<sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/>xPath-&gt;aaScale();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>xPath-&gt;sort();</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>yMinI<sp/>=<sp/>state-&gt;clip-&gt;getYMinI();</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/>yMaxI<sp/>=<sp/>state-&gt;clip-&gt;getYMaxI();</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>!inShading)<sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>yMinI<sp/>=<sp/>yMinI<sp/>*<sp/>splashAASize;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>yMaxI<sp/>=<sp/>(yMaxI<sp/>+<sp/>1)<sp/>*<sp/>splashAASize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/>scanner<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref>(xPath,<sp/>eo,<sp/>yMinI,<sp/>yMaxI);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>min<sp/>and<sp/>max<sp/>x<sp/>and<sp/>y<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>!inShading)<sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner-&gt;getBBoxAA(&amp;xMinI,<sp/>&amp;yMinI,<sp/>&amp;xMaxI,<sp/>&amp;yMaxI);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner-&gt;getBBox(&amp;xMinI,<sp/>&amp;yMinI,<sp/>&amp;xMaxI,<sp/>&amp;yMaxI);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eo<sp/>&amp;&amp;<sp/>(yMinI<sp/>==<sp/>yMaxI<sp/>||<sp/>xMinI<sp/>==<sp/>xMaxI)<sp/>&amp;&amp;<sp/>thinLineMode<sp/>!=<sp/>splashThinLineDefault)<sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>SplashCoord<sp/>delta,<sp/>xMinFP,<sp/>yMinFP,<sp/>xMaxFP,<sp/>yMaxFP;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>getBBoxFP(path,<sp/>&amp;xMinFP,<sp/>&amp;yMinFP,<sp/>&amp;xMaxFP,<sp/>&amp;yMaxFP);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(yMinI<sp/>==<sp/>yMaxI)<sp/>?<sp/>yMaxFP<sp/>-<sp/>yMinFP<sp/>:<sp/>xMaxFP<sp/>-<sp/>xMinFP;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&lt;<sp/>0.2)<sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>splashClipAllOutside;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scanner;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xPath;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI))</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanner-&gt;hasPartialClip())<sp/>{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>yMinI,<sp/>pattern,<sp/>NULL,<sp/>(Guchar)splashRound(alpha<sp/>*<sp/>255),</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectorAntialias<sp/>&amp;&amp;<sp/>!inShading,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>spans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>!inShading)<sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>yMinI;<sp/>y<sp/>&lt;=<sp/>yMaxI;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner-&gt;renderAALine(aaBuf,<sp/>&amp;x0,<sp/>&amp;x1,<sp/>y,<sp/>thinLineMode<sp/>!=<sp/>splashThinLineDefault<sp/>&amp;&amp;<sp/>xMinI<sp/>==<sp/>xMaxI);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;clip-&gt;clipAALine(aaBuf,<sp/>&amp;x0,<sp/>&amp;x1,<sp/>y,<sp/>thinLineMode<sp/>!=<sp/>splashThinLineDefault<sp/>&amp;&amp;<sp/>xMinI<sp/>==<sp/>xMaxI);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>Guchar<sp/>lineShape<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>adjustLine<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thinLineMode<sp/>==<sp/>splashThinLineShape<sp/>&amp;&amp;<sp/>(xMinI<sp/>==<sp/>xMaxI<sp/>||<sp/>yMinI<sp/>==<sp/>yMaxI))<sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>line<sp/>shape<sp/>for<sp/>thin<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>mx,<sp/>my,<sp/>delta;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transform(state-&gt;matrix,<sp/>0,<sp/>0,<sp/>&amp;mx,<sp/>&amp;my);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transform(state-&gt;matrix,<sp/>state-&gt;lineWidth,<sp/>0,<sp/>&amp;delta,<sp/>&amp;my);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustLine<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineShape<sp/>=<sp/>clip255((delta<sp/>-<sp/>mx)<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAALine(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>adjustLine,<sp/>lineShape);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>yMinI;<sp/>y<sp/>&lt;=<sp/>yMaxI;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(scanner-&gt;getNextSpan(y,<sp/>&amp;x0,<sp/>&amp;x1))<sp/>{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>gTrue);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>the<sp/>x<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>state-&gt;clip-&gt;getXMinI())<sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>state-&gt;clip-&gt;getXMinI();</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>state-&gt;clip-&gt;getXMaxI())<sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>state-&gt;clip-&gt;getXMaxI();</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>state-&gt;clip-&gt;testSpan(x0,<sp/>x1,<sp/>y);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>clipRes2<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scanner;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xPath;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal">GBool<sp/>Splash::pathAllOutside(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xMin1,<sp/>yMin1,<sp/>xMax1,<sp/>yMax1;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xMin2,<sp/>yMin2,<sp/>xMax2,<sp/>yMax2;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>xMin1<sp/>=<sp/>xMax1<sp/>=<sp/>path-&gt;pts[0].x;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>yMin1<sp/>=<sp/>yMax1<sp/>=<sp/>path-&gt;pts[0].y;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;pts[i].x<sp/>&lt;<sp/>xMin1)<sp/>{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMin1<sp/>=<sp/>path-&gt;pts[i].x;</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;pts[i].x<sp/>&gt;<sp/>xMax1)<sp/>{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMax1<sp/>=<sp/>path-&gt;pts[i].x;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;pts[i].y<sp/>&lt;<sp/>yMin1)<sp/>{</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMin1<sp/>=<sp/>path-&gt;pts[i].y;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;pts[i].y<sp/>&gt;<sp/>yMax1)<sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMax1<sp/>=<sp/>path-&gt;pts[i].y;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>xMin1,<sp/>yMin1,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>xMin2<sp/>=<sp/>xMax2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>yMin2<sp/>=<sp/>yMax2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>xMin1,<sp/>yMax1,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>xMin2)<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>xMin2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>xMax2)<sp/>{</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>xMax2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>yMin2)<sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>yMin2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>yMax2)<sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>yMax2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>xMax1,<sp/>yMin1,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>xMin2)<sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>xMin2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>xMax2)<sp/>{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>xMax2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>yMin2)<sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>yMin2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>yMax2)<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>yMax2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>xMax1,<sp/>yMax1,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>xMin2)<sp/>{</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>xMin2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>xMax2)<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>xMax2<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>yMin2)<sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>yMin2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>yMax2)<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>yMax2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/>xMinI<sp/>=<sp/>splashFloor(xMin2);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>yMinI<sp/>=<sp/>splashFloor(yMin2);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/>xMaxI<sp/>=<sp/>splashFloor(xMax2);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>yMaxI<sp/>=<sp/>splashFloor(yMax2);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;clip-&gt;testRect(xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI)<sp/>==</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashClipAllOutside;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal">SplashError<sp/>Splash::xorFill(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>GBool<sp/>eo)<sp/>{</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref><sp/>*scanner;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI,<sp/>x0,<sp/>x1,<sp/>y;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes,<sp/>clipRes2;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/>SplashBlendFunc<sp/>origBlendFunc;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrEmptyPath;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>xPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref>(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness,<sp/>gTrue);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>xPath-&gt;sort();</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>scanner<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref>(xPath,<sp/>eo,<sp/>state-&gt;clip-&gt;getYMinI(),</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;clip-&gt;getYMaxI());</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>min<sp/>and<sp/>max<sp/>x<sp/>and<sp/>y<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/>scanner-&gt;getBBox(&amp;xMinI,<sp/>&amp;yMinI,<sp/>&amp;xMaxI,<sp/>&amp;yMaxI);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI))</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanner-&gt;hasPartialClip())<sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>origBlendFunc<sp/>=<sp/>state-&gt;blendFunc;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;blendFunc<sp/>=<sp/>&amp;blendXor;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>yMinI,<sp/>state-&gt;fillPattern,<sp/>NULL,<sp/>255,<sp/>gFalse,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>spans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>yMinI;<sp/>y<sp/>&lt;=<sp/>yMaxI;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(scanner-&gt;getNextSpan(y,<sp/>&amp;x0,<sp/>&amp;x1))<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>gTrue);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>the<sp/>x<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>state-&gt;clip-&gt;getXMinI())<sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>state-&gt;clip-&gt;getXMinI();</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>state-&gt;clip-&gt;getXMaxI())<sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>state-&gt;clip-&gt;getXMaxI();</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>state-&gt;clip-&gt;testSpan(x0,<sp/>x1,<sp/>y);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>clipRes2<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;blendFunc<sp/>=<sp/>origBlendFunc;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scanner;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xPath;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal">SplashError<sp/>Splash::fillChar(SplashCoord<sp/>x,<sp/>SplashCoord<sp/>y,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="class_splash_font" kindref="compound">SplashFont</ref><sp/>*<ref refid="structfont" kindref="compound">font</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref><sp/>glyph;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xt,<sp/>yt;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>xFrac,<sp/>yFrac;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMode)<sp/>{</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fillChar:<sp/>x=%.2f<sp/>y=%.2f<sp/>c=%3d=0x%02x=&apos;%c&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)y,<sp/>c,<sp/>c,<sp/>c);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>x,<sp/>y,<sp/>&amp;xt,<sp/>&amp;yt);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>x0<sp/>=<sp/>splashFloor(xt);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>xFrac<sp/>=<sp/>splashFloor((xt<sp/>-<sp/>x0)<sp/>*<sp/>splashFontFraction);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>y0<sp/>=<sp/>splashFloor(yt);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/>yFrac<sp/>=<sp/>splashFloor((yt<sp/>-<sp/>y0)<sp/>*<sp/>splashFontFraction);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font-&gt;getGlyph(c,<sp/>xFrac,<sp/>yFrac,<sp/>&amp;glyph,<sp/>x0,<sp/>y0,<sp/>state-&gt;clip,<sp/>&amp;clipRes))<sp/>{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrNoGlyph;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>fillGlyph2(x0,<sp/>y0,<sp/>&amp;glyph,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph.freeData)<sp/>{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>gfree(glyph.data);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::fillGlyph(SplashCoord<sp/>x,<sp/>SplashCoord<sp/>y,</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref><sp/>*glyph)<sp/>{</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>xt,<sp/>yt;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>y0;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/>transform(state-&gt;matrix,<sp/>x,<sp/>y,<sp/>&amp;xt,<sp/>&amp;yt);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/>x0<sp/>=<sp/>splashFloor(xt);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/>y0<sp/>=<sp/>splashFloor(yt);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0<sp/>-<sp/>glyph-&gt;x,</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>-<sp/>glyph-&gt;y,</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>-<sp/>glyph-&gt;x<sp/>+<sp/>glyph-&gt;w<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>-<sp/>glyph-&gt;y<sp/>+<sp/>glyph-&gt;h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>fillGlyph2(x0,<sp/>y0,<sp/>glyph,<sp/>clipRes<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::fillGlyph2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref><sp/>*glyph,<sp/>GBool<sp/>noClip)<sp/>{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha0;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/>Guchar<sp/>alpha;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/>y1,<sp/>xx,<sp/>xx1,<sp/>yy;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>glyph-&gt;data;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart<sp/>=<sp/>x0<sp/>-<sp/>glyph-&gt;x;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yStart<sp/>=<sp/>y0<sp/>-<sp/>glyph-&gt;y;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xxLimit<sp/>=<sp/>glyph-&gt;w;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyLimit<sp/>=<sp/>glyph-&gt;h;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xShift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yStart<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(glyph-&gt;aa<sp/>?<sp/>glyph-&gt;w<sp/>:<sp/>splashCeil(glyph-&gt;w<sp/>/<sp/>8.0))<sp/>*<sp/>-yStart;<sp/></highlight><highlight class="comment">//<sp/>move<sp/>p<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>first<sp/>painted<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>yyLimit<sp/>+=<sp/>yStart;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>yStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xStart<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph-&gt;aa)<sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>-xStart;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(-xStart)<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xShift<sp/>=<sp/>(-xStart)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>xxLimit<sp/>+=<sp/>xStart;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>xStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xxLimit<sp/>+<sp/>xStart<sp/>&gt;=<sp/>bitmap-&gt;width)<sp/>xxLimit<sp/>=<sp/>bitmap-&gt;width<sp/>-<sp/>xStart;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yyLimit<sp/>+<sp/>yStart<sp/>&gt;=<sp/>bitmap-&gt;height)<sp/>yyLimit<sp/>=<sp/>bitmap-&gt;height<sp/>-<sp/>yStart;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noClip)<sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph-&gt;aa)<sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xStart,<sp/>yStart,</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fillPattern,<sp/>NULL,<sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0,<sp/>y1<sp/>=<sp/>yStart;<sp/>yy<sp/>&lt;<sp/>yyLimit;<sp/>++yy,<sp/>++y1)<sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xStart,<sp/>y1);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0,<sp/>x1<sp/>=<sp/>xStart;<sp/>xx<sp/>&lt;<sp/>xxLimit;<sp/>++xx,<sp/>++x1)<sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>p[xx];</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(x1);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(y1);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>glyph-&gt;w;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widthEight<sp/>=<sp/>splashCeil(glyph-&gt;w<sp/>/<sp/>8.0);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xStart,<sp/>yStart,</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fillPattern,<sp/>NULL,<sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gFalse,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0,<sp/>y1<sp/>=<sp/>yStart;<sp/>yy<sp/>&lt;<sp/>yyLimit;<sp/>++yy,<sp/>++y1)<sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xStart,<sp/>y1);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0,<sp/>x1<sp/>=<sp/>xStart;<sp/>xx<sp/>&lt;<sp/>xxLimit;<sp/>xx<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha0<sp/>=<sp/>(xShift<sp/>&gt;<sp/>0<sp/>?<sp/>(p[xx<sp/>/<sp/>8]<sp/>&lt;&lt;<sp/>xShift)<sp/>|<sp/>(p[xx<sp/>/<sp/>8<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>(8<sp/>-<sp/>xShift))<sp/>:<sp/>p[xx<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx1<sp/>=<sp/>0;<sp/>xx1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>xx<sp/>+<sp/>xx1<sp/>&lt;<sp/>xxLimit;<sp/>++xx1,<sp/>++x1)<sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha0<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(x1);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(y1);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>widthEight;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph-&gt;aa)<sp/>{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xStart,<sp/>yStart,</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fillPattern,<sp/>NULL,<sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0,<sp/>y1<sp/>=<sp/>yStart;<sp/>yy<sp/>&lt;<sp/>yyLimit;<sp/>++yy,<sp/>++y1)<sp/>{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xStart,<sp/>y1);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0,<sp/>x1<sp/>=<sp/>xStart;<sp/>xx<sp/>&lt;<sp/>xxLimit;<sp/>++xx,<sp/>++x1)<sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(x1,<sp/>y1))<sp/>{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>p[xx];</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(x1);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(y1);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>glyph-&gt;w;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widthEight<sp/>=<sp/>splashCeil(glyph-&gt;w<sp/>/<sp/>8.0);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xStart,<sp/>yStart,</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fillPattern,<sp/>NULL,<sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gFalse,<sp/>gFalse);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yy<sp/>=<sp/>0,<sp/>y1<sp/>=<sp/>yStart;<sp/>yy<sp/>&lt;<sp/>yyLimit;<sp/>++yy,<sp/>++y1)<sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xStart,<sp/>y1);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx<sp/>=<sp/>0,<sp/>x1<sp/>=<sp/>xStart;<sp/>xx<sp/>&lt;<sp/>xxLimit;<sp/>xx<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha0<sp/>=<sp/>(xShift<sp/>&gt;<sp/>0<sp/>?<sp/>(p[xx<sp/>/<sp/>8]<sp/>&lt;&lt;<sp/>xShift)<sp/>|<sp/>(p[xx<sp/>/<sp/>8<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>(8<sp/>-<sp/>xShift))<sp/>:<sp/>p[xx<sp/>/<sp/>8]);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xx1<sp/>=<sp/>0;<sp/>xx1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>xx<sp/>+<sp/>xx1<sp/>&lt;<sp/>xxLimit;<sp/>++xx1,<sp/>++x1)<sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(x1,<sp/>y1))<sp/>{</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha0<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(x1);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(y1);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha0<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>widthEight;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal">SplashError<sp/>Splash::fillImageMask(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/>SplashCoord<sp/>*mat,</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>glyphMode)<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*scaledMask;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>GBool<sp/>minorAxisZero;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>scaledWidth,<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMode)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fillImageMask:<sp/>w=%d<sp/>h=%d<sp/>mat=[%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w,<sp/>h,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[0],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[1],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[2],</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[3],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[4],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[5]);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>h<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrZeroImage;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>singular<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!splashCheckDet(mat[0],<sp/>mat[1],<sp/>mat[2],<sp/>mat[3],<sp/>0.000001))<sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrSingularMatrix;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/>minorAxisZero<sp/>=<sp/>mat[1]<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>mat[2]<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>minorAxisZero<sp/>&amp;&amp;<sp/>mat[3]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>imgCoordMungeLowerC(mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>imgCoordMungeLowerC(mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>imgCoordMungeUpperC(mat[0]<sp/>+<sp/>mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>imgCoordMungeUpperC(mat[3]<sp/>+<sp/>mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++x1;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++y1;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0,<sp/>y0,<sp/>x1<sp/>-<sp/>1,<sp/>y1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>x1<sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>y1<sp/>-<sp/>y0;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yp<sp/>=<sp/>h<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yp<sp/>&lt;<sp/>0<sp/>||<sp/>yp<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledMask<sp/>=<sp/>scaleMask(src,<sp/>srcData,<sp/>w,<sp/>h,<sp/>scaledWidth,<sp/>scaledHeight);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blitMask(scaledMask,<sp/>x0,<sp/>y0,<sp/>clipRes);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledMask;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>plus<sp/>vertical<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>minorAxisZero<sp/>&amp;&amp;<sp/>mat[3]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>imgCoordMungeLowerC(mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>imgCoordMungeLowerC(mat[3]<sp/>+<sp/>mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>imgCoordMungeUpperC(mat[0]<sp/>+<sp/>mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>imgCoordMungeUpperC(mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++x1;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++y1;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0,<sp/>y0,<sp/>x1<sp/>-<sp/>1,<sp/>y1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>x1<sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>y1<sp/>-<sp/>y0;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yp<sp/>=<sp/>h<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yp<sp/>&lt;<sp/>0<sp/>||<sp/>yp<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledMask<sp/>=<sp/>scaleMask(src,<sp/>srcData,<sp/>w,<sp/>h,<sp/>scaledWidth,<sp/>scaledHeight);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertFlipImage(scaledMask,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>1);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blitMask(scaledMask,<sp/>x0,<sp/>y0,<sp/>clipRes);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledMask;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/>arbitraryTransformMask(src,<sp/>srcData,<sp/>w,<sp/>h,<sp/>mat,<sp/>glyphMode);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::arbitraryTransformMask(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*mat,<sp/>GBool<sp/>glyphMode)<sp/>{</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*scaledMask;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes,<sp/>clipRes2;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/>scaledHeight,<sp/>t0,<sp/>t1;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>r00,<sp/>r01,<sp/>r10,<sp/>r11,<sp/>det,<sp/>ir00,<sp/>ir01,<sp/>ir10,<sp/>ir11;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>vx[4],<sp/>vy[4];</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><ref refid="struct_image_section" kindref="compound">ImageSection</ref><sp/>section[3];</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSections;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>xa,<sp/>xb,<sp/>x,<sp/>i,<sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>four<sp/>vertices<sp/>of<sp/>the<sp/>target<sp/>quadrilateral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>vx[0]<sp/>=<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[0]<sp/>=<sp/>mat[5];</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/>vx[1]<sp/>=<sp/>mat[2]<sp/>+<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[1]<sp/>=<sp/>mat[3]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/>vx[2]<sp/>=<sp/>mat[0]<sp/>+<sp/>mat[2]<sp/>+<sp/>mat[4];<sp/><sp/>vy[2]<sp/>=<sp/>mat[1]<sp/>+<sp/>mat[3]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/>vx[3]<sp/>=<sp/>mat[0]<sp/>+<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[3]<sp/>=<sp/>mat[1]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/>xMin<sp/>=<sp/>imgCoordMungeLowerC(vx[0],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/>xMax<sp/>=<sp/>imgCoordMungeUpperC(vx[0],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/>yMin<sp/>=<sp/>imgCoordMungeLowerC(vy[0],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>yMax<sp/>=<sp/>imgCoordMungeUpperC(vy[0],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeLowerC(vx[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>xMin)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMin<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpperC(vx[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>xMax)<sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMax<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeLowerC(vy[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>yMin)<sp/>{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMin<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpperC(vy[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>yMax)<sp/>{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMax<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xMin,<sp/>yMin,<sp/>xMax<sp/>-<sp/>1,<sp/>yMax<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>scale<sp/>factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpperC(mat[0]<sp/>+<sp/>mat[4],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpperC(mat[4],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[0]<sp/>+<sp/>mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[1]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpperC(mat[1]<sp/>+<sp/>mat[5],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpperC(mat[5],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[1]<sp/>+<sp/>mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>scaledWidth<sp/>=<sp/>t0<sp/>&gt;<sp/>t1<sp/>?<sp/>t0<sp/>:<sp/>t1;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[2]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpperC(mat[2]<sp/>+<sp/>mat[4],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpperC(mat[4],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[2]<sp/>+<sp/>mat[4],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[3]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpperC(mat[3]<sp/>+<sp/>mat[5],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpperC(mat[5],<sp/>glyphMode)<sp/>-</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgCoordMungeLowerC(mat[3]<sp/>+<sp/>mat[5],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>scaledHeight<sp/>=<sp/>t0<sp/>&gt;<sp/>t1<sp/>?<sp/>t0<sp/>:<sp/>t1;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledHeight<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>inverse<sp/>transform<sp/>(after<sp/>scaling)<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/>r00<sp/>=<sp/>mat[0]<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/>r01<sp/>=<sp/>mat[1]<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>r10<sp/>=<sp/>mat[2]<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/>r11<sp/>=<sp/>mat[3]<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>det<sp/>=<sp/>r00<sp/>*<sp/>r11<sp/>-<sp/>r01<sp/>*<sp/>r10;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(det)<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>caught<sp/>by<sp/>the<sp/>singular<sp/>matrix<sp/>check<sp/>in<sp/>fillImageMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>ir00<sp/>=<sp/>r11<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>ir01<sp/>=<sp/>-r01<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>ir10<sp/>=<sp/>-r10<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>ir11<sp/>=<sp/>r00<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>the<sp/>input<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>scaledMask<sp/>=<sp/>scaleMask(src,<sp/>srcData,<sp/>srcWidth,<sp/>srcHeight,</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledMask-&gt;data<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;scaledMask-&gt;data<sp/>is<sp/>NULL<sp/>in<sp/>Splash::arbitraryTransformMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledMask;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>the<sp/>three<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>(vy[2]<sp/>&lt;=<sp/>vy[3])<sp/>?<sp/>2<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[1]<sp/>&lt;=<sp/>vy[i])<sp/>{</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[0]<sp/>&lt;<sp/>vy[i]<sp/>||<sp/>(i<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>vy[0]<sp/>==<sp/>vy[i]))<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[i]<sp/>==<sp/>vy[(i+1)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y0<sp/>=<sp/>imgCoordMungeLowerC(vy[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y1<sp/>=<sp/>imgCoordMungeUpperC(vy[(i+2)<sp/>&amp;<sp/>3],<sp/>glyphMode)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[i]<sp/>&lt;<sp/>vx[(i+1)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>nSections<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y0<sp/>=<sp/>imgCoordMungeLowerC(vy[i],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>section[2].y1<sp/>=<sp/>imgCoordMungeUpperC(vy[(i+2)<sp/>&amp;<sp/>3],<sp/>glyphMode)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>section[0].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/>section[2].ia1<sp/>=<sp/>section[2].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>section[2].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>section[2].ib0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>section[2].ia0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>section[2].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vy[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[1].y0<sp/>=<sp/>imgCoordMungeLowerC(vy[(i+1)<sp/>&amp;<sp/>3],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[2].y0<sp/>=<sp/>imgCoordMungeUpperC(vy[(i+3)<sp/>&amp;<sp/>3],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[1].y0<sp/>=<sp/>imgCoordMungeLowerC(vy[(i+3)<sp/>&amp;<sp/>3],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[2].y0<sp/>=<sp/>imgCoordMungeUpperC(vy[(i+1)<sp/>&amp;<sp/>3],<sp/>glyphMode);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y1<sp/>=<sp/>section[1].y0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].y1<sp/>=<sp/>section[2].y0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/>nSections<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSections;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xa0<sp/>=<sp/>vx[section[i].ia0];</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].ya0<sp/>=<sp/>vy[section[i].ia0];</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xa1<sp/>=<sp/>vx[section[i].ia1];</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].ya1<sp/>=<sp/>vy[section[i].ia1];</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xb0<sp/>=<sp/>vx[section[i].ib0];</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].yb0<sp/>=<sp/>vy[section[i].ib0];</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xb1<sp/>=<sp/>vx[section[i].ib1];</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].yb1<sp/>=<sp/>vy[section[i].ib1];</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].dxdya<sp/>=<sp/>(section[i].xa1<sp/>-<sp/>section[i].xa0)<sp/>/</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(section[i].ya1<sp/>-<sp/>section[i].ya0);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].dxdyb<sp/>=<sp/>(section[i].xb1<sp/>-<sp/>section[i].xb0)<sp/>/</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(section[i].yb1<sp/>-<sp/>section[i].yb0);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>pixel<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>0,<sp/>state-&gt;fillPattern,<sp/>NULL,</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixelInit();</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSections<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section[0].y0<sp/>==<sp/>section[0].y1)<sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++section[0].y1;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>opClipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section[0].y0<sp/>==<sp/>section[2].y1)<sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++section[1].y1;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>opClipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>all<sp/>pixels<sp/>inside<sp/>the<sp/>target<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSections;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>section[i].y0;<sp/>y<sp/>&lt;=<sp/>section[i].y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>imgCoordMungeLowerC(section[i].xa0<sp/>+</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>section[i].ya0)<sp/>*</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section[i].dxdya,</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyphMode);</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>imgCoordMungeUpperC(section[i].xb0<sp/>+</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>section[i].yb0)<sp/>*</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section[i].dxdyb,</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyphMode);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(xa<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>==<sp/>xb)<sp/>{</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/>++xb;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>state-&gt;clip-&gt;testSpan(xa,<sp/>xb<sp/>-<sp/>1,<sp/>y);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>xa;<sp/>x<sp/>&lt;<sp/>xb;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>(x+0.5,<sp/>y+0.5)<sp/>back<sp/>to<sp/>the<sp/>scaled<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>splashFloor(((SplashCoord)x<sp/>+<sp/>0.5<sp/>-<sp/>mat[4])<sp/>*<sp/>ir00<sp/>+</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>mat[5])<sp/>*<sp/>ir10);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>splashFloor(((SplashCoord)x<sp/>+<sp/>0.5<sp/>-<sp/>mat[4])<sp/>*<sp/>ir01<sp/>+</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>mat[5])<sp/>*<sp/>ir11);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xx<sp/>should<sp/>always<sp/>be<sp/>within<sp/>bounds,<sp/>but<sp/>floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inaccuracy<sp/>can<sp/>cause<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>scaledWidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>scaledHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>scaledMask-&gt;data[yy<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx];</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>clipRes2<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawPixel(&amp;pipe,<sp/>x,<sp/>y,<sp/>clipRes2<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledMask;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale<sp/>an<sp/>image<sp/>mask<sp/>into<sp/>a<sp/>SplashBitmap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*Splash::scaleMask(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/>dest<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>(scaledWidth,<sp/>scaledHeight,<sp/>1,<sp/>splashModeMono8,</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gFalse);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledHeight<sp/>&lt;<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>&lt;<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMaskYdXd(src,<sp/>srcData,<sp/>srcWidth,<sp/>srcHeight,</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMaskYdXu(src,<sp/>srcData,<sp/>srcWidth,<sp/>srcHeight,</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>&lt;<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMaskYuXd(src,<sp/>srcData,<sp/>srcWidth,<sp/>srcHeight,</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMaskYuXu(src,<sp/>srcData,<sp/>srcWidth,<sp/>srcHeight,</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleMaskYdXd(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf;</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>Guint<sp/>*pixBuf;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/>Guint<sp/>pix;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx,<sp/>d,<sp/>d0,<sp/>d1;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>srcHeight<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>srcHeight<sp/>%<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>srcWidth<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>srcWidth<sp/>%<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/>pixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>destPtr<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>scaledHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>rows<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/>pixBuf[j]<sp/>+=<sp/>lineBuf[j];</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>(255<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(yStep<sp/>*<sp/>xp);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>(255<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(yStep<sp/>*<sp/>(xp<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d0;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>pixBuf[xx++];</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(255<sp/>*<sp/>pix)<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>(pix<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/>gfree(pixBuf);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleMaskYdXu(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>Guint<sp/>*pixBuf;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/>Guint<sp/>pix;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>d;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>destPtr<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destPtr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;dest-&gt;data<sp/>is<sp/>NULL<sp/>in<sp/>Splash::scaleMaskYdXu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>srcHeight<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>srcHeight<sp/>%<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>scaledWidth<sp/>/<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>scaledWidth<sp/>%<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>pixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>scaledHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>rows<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>pixBuf[j]<sp/>+=<sp/>lineBuf[j];</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(255<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>yStep;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>srcWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>pixBuf[x];</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(255<sp/>*<sp/>pix)<sp/>/<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>(pix<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/>gfree(pixBuf);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleMaskYuXd(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>Guint<sp/>pix;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr0,<sp/>*destPtr;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx,<sp/>d,<sp/>d0,<sp/>d1;</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>destPtr0<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destPtr0<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;dest-&gt;data<sp/>is<sp/>NULL<sp/>in<sp/>Splash::scaleMaskYuXd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>scaledHeight<sp/>/<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>scaledHeight<sp/>%<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>srcWidth<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>srcWidth<sp/>%<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>srcHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>row<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>(255<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>xp;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>(255<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(xp<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d0;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>lineBuf[xx++];</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(255<sp/>*<sp/>pix)<sp/>/<sp/>xStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>(pix<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr<sp/>=<sp/>(Guchar)pix;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleMaskYuXu(SplashImageMaskSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>Guint<sp/>pix;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr0,<sp/>*destPtr;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>destPtr0<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destPtr0<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;dest-&gt;data<sp/>is<sp/>NULL<sp/>in<sp/>Splash::scaleMaskYuXu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>scaledHeight<sp/>/<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>scaledHeight<sp/>%<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>scaledWidth<sp/>/<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>scaledWidth<sp/>%<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>srcHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>srcHeight;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>row<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>srcWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>srcWidth;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>lineBuf[x]<sp/>?<sp/>255<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>xStep;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="3612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::blitMask(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashClipResult<sp/>clipRes)<sp/>{</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>src-&gt;getWidth();</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>src-&gt;getHeight();</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>src-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;src-&gt;getDataPtr()<sp/>is<sp/>NULL<sp/>in<sp/>Splash::blitMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>clipRes<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>state-&gt;fillPattern,<sp/>NULL,</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixelInit();</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*p++;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>state-&gt;fillPattern,<sp/>NULL,</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p)<sp/>{</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>w<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>&amp;&amp;<sp/>state-&gt;clip-&gt;test(xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal">SplashError<sp/>Splash::drawImage(SplashImageSource<sp/>src,<sp/>SplashICCTransform<sp/>tf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/>GBool<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/>SplashCoord<sp/>*mat,<sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>tilingPattern)<sp/>{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*scaledImg;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/>GBool<sp/>minorAxisZero;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>scaledWidth,<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugMode)<sp/>{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;drawImage:<sp/>srcMode=%d<sp/>srcAlpha=%d<sp/>w=%d<sp/>h=%d<sp/>mat=[%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcMode,<sp/>srcAlpha,<sp/>w,<sp/>h,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[0],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[1],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[2],</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[3],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[4],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mat[5]);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>color<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>ok<sp/>=<sp/>gFalse;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>nComps<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeMono8;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeRGB8;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeXBGR8;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeBGR8;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeCMYK8;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>srcMode<sp/>==<sp/>splashModeDeviceN8;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/>nComps<sp/>=<sp/>SPOT_NCOMPS+4;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrModeMismatch;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>singular<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!splashCheckDet(mat[0],<sp/>mat[1],<sp/>mat[2],<sp/>mat[3],<sp/>0.000001))<sp/>{</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrSingularMatrix;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>minorAxisZero<sp/>=<sp/>mat[1]<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>mat[2]<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>minorAxisZero<sp/>&amp;&amp;<sp/>mat[3]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>imgCoordMungeLower(mat[4]);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>imgCoordMungeLower(mat[5]);</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>imgCoordMungeUpper(mat[0]<sp/>+<sp/>mat[4]);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>imgCoordMungeUpper(mat[3]<sp/>+<sp/>mat[5]);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++x1;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++y1;</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0,<sp/>y0,<sp/>x1<sp/>-<sp/>1,<sp/>y1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>x1<sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>y1<sp/>-<sp/>y0;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yp<sp/>=<sp/>h<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yp<sp/>&lt;<sp/>0<sp/>||<sp/>yp<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledImg<sp/>=<sp/>scaleImage(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,<sp/>w,<sp/>h,</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>interpolate,<sp/>tilingPattern);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledImg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(tf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tf)(srcData,<sp/>scaledImg);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blitImage(scaledImg,<sp/>srcAlpha,<sp/>x0,<sp/>y0,<sp/>clipRes);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledImg;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>plus<sp/>vertical<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>minorAxisZero<sp/>&amp;&amp;<sp/>mat[3]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>imgCoordMungeLower(mat[4]);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>imgCoordMungeLower(mat[3]<sp/>+<sp/>mat[5]);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>imgCoordMungeUpper(mat[0]<sp/>+<sp/>mat[4]);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>imgCoordMungeUpper(mat[5]);</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[4]<sp/>+<sp/>mat[0]<sp/>*<sp/>0.5<sp/>&lt;<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>--x0;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/>++x1;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[5]<sp/>+<sp/>mat[1]<sp/>*<sp/>0.5<sp/>&lt;<sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/>--y0;</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/>++y1;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(x0,<sp/>y0,<sp/>x1<sp/>-<sp/>1,<sp/>y1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>x1<sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>y1<sp/>-<sp/>y0;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yp<sp/>=<sp/>h<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yp<sp/>&lt;<sp/>0<sp/>||<sp/>yp<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledImg<sp/>=<sp/>scaleImage(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,<sp/>w,<sp/>h,</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledWidth,<sp/>scaledHeight,<sp/>interpolate,<sp/>tilingPattern);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledImg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(tf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tf)(srcData,<sp/>scaledImg);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertFlipImage(scaledImg,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>nComps);</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blitImage(scaledImg,<sp/>srcAlpha,<sp/>x0,<sp/>y0,<sp/>clipRes);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledImg;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arbitraryTransformImage(src,<sp/>tf,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w,<sp/>h,<sp/>mat,<sp/>interpolate,<sp/>tilingPattern);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal">SplashError<sp/>Splash::arbitraryTransformImage(SplashImageSource<sp/>src,<sp/>SplashICCTransform<sp/>tf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*mat,<sp/>GBool<sp/>interpolate,</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>tilingPattern)<sp/>{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*scaledImg;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes,<sp/>clipRes2;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>SplashColor<sp/>pixel;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/>scaledHeight,<sp/>t0,<sp/>t1,<sp/>th;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>r00,<sp/>r01,<sp/>r10,<sp/>r11,<sp/>det,<sp/>ir00,<sp/>ir01,<sp/>ir10,<sp/>ir11;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>vx[4],<sp/>vy[4];</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><ref refid="struct_image_section" kindref="compound">ImageSection</ref><sp/>section[3];</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSections;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>xa,<sp/>xb,<sp/>x,<sp/>i,<sp/>xx,<sp/>yy,<sp/>yp;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>four<sp/>vertices<sp/>of<sp/>the<sp/>target<sp/>quadrilateral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>vx[0]<sp/>=<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[0]<sp/>=<sp/>mat[5];</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>vx[1]<sp/>=<sp/>mat[2]<sp/>+<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[1]<sp/>=<sp/>mat[3]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/>vx[2]<sp/>=<sp/>mat[0]<sp/>+<sp/>mat[2]<sp/>+<sp/>mat[4];<sp/><sp/>vy[2]<sp/>=<sp/>mat[1]<sp/>+<sp/>mat[3]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>vx[3]<sp/>=<sp/>mat[0]<sp/>+<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[3]<sp/>=<sp/>mat[1]<sp/>+<sp/>mat[5];</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>xMin<sp/>=<sp/>imgCoordMungeLower(vx[0]);</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/>xMax<sp/>=<sp/>imgCoordMungeUpper(vx[0]);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>yMin<sp/>=<sp/>imgCoordMungeLower(vy[0]);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>yMax<sp/>=<sp/>imgCoordMungeUpper(vy[0]);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeLower(vx[i]);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>xMin)<sp/>{</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMin<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpper(vx[i]);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>xMax)<sp/>{</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xMax<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeLower(vy[i]);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>yMin)<sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMin<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpper(vy[i]);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>yMax)<sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMax<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax);</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>scale<sp/>factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(mat[0])<sp/>&gt;=<sp/>splashAbs(mat[1]))<sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>xMax<sp/>-<sp/>xMin;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>yMax<sp/>-<sp/>yMin;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>yMax<sp/>-<sp/>yMin;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>xMax<sp/>-<sp/>xMin;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledHeight<sp/>&lt;=<sp/>1<sp/>||<sp/>scaledWidth<sp/>&lt;=<sp/>1<sp/>||<sp/>tilingPattern)<sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[0]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpper(mat[0]<sp/>+<sp/>mat[4])<sp/>-<sp/>imgCoordMungeLower(mat[4]);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpper(mat[4])<sp/>-<sp/>imgCoordMungeLower(mat[0]<sp/>+<sp/>mat[4]);</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[1]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpper(mat[1]<sp/>+<sp/>mat[5])<sp/>-<sp/>imgCoordMungeLower(mat[5]);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpper(mat[5])<sp/>-<sp/>imgCoordMungeLower(mat[1]<sp/>+<sp/>mat[5]);</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>t0<sp/>&gt;<sp/>t1<sp/>?<sp/>t0<sp/>:<sp/>t1;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[2]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpper(mat[2]<sp/>+<sp/>mat[4])<sp/>-<sp/>imgCoordMungeLower(mat[4]);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(mat[1])<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>imgCoordMungeUpper(mat[2])<sp/>-<sp/>imgCoordMungeLower(mat[0]<sp/>*<sp/>mat[3]<sp/>/<sp/>mat[1]);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(th<sp/>&gt;<sp/>t0)<sp/>t0<sp/>=<sp/>th;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>imgCoordMungeUpper(mat[4])<sp/>-<sp/>imgCoordMungeLower(mat[2]<sp/>+<sp/>mat[4]);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(mat[1])<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>imgCoordMungeUpper(mat[0]<sp/>*<sp/>mat[3]<sp/>/<sp/>mat[1])<sp/>-<sp/>imgCoordMungeLower(mat[2]);</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(th<sp/>&gt;<sp/>t0)<sp/>t0<sp/>=<sp/>th;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mat[3]<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpper(mat[3]<sp/>+<sp/>mat[5])<sp/>-<sp/>imgCoordMungeLower(mat[5]);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(mat[0])<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>imgCoordMungeUpper(mat[3])<sp/>-<sp/>imgCoordMungeLower(mat[1]<sp/>*<sp/>mat[2]<sp/>/<sp/>mat[0]);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(th<sp/>&gt;<sp/>t1)<sp/>t1<sp/>=<sp/>th;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>imgCoordMungeUpper(mat[5])<sp/>-<sp/>imgCoordMungeLower(mat[3]<sp/>+<sp/>mat[5]);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(mat[0])<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>imgCoordMungeUpper(mat[1]<sp/>*<sp/>mat[2]<sp/>/<sp/>mat[0])<sp/>-<sp/>imgCoordMungeLower(mat[3]);</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(th<sp/>&gt;<sp/>t1)<sp/>t1<sp/>=<sp/>th;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>t0<sp/>&gt;<sp/>t1<sp/>?<sp/>t0<sp/>:<sp/>t1;</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledWidth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledHeight<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledHeight<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>inverse<sp/>transform<sp/>(after<sp/>scaling)<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/>r00<sp/>=<sp/>mat[0]<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>r01<sp/>=<sp/>mat[1]<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>r10<sp/>=<sp/>mat[2]<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>r11<sp/>=<sp/>mat[3]<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>det<sp/>=<sp/>r00<sp/>*<sp/>r11<sp/>-<sp/>r01<sp/>*<sp/>r10;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(det)<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>caught<sp/>by<sp/>the<sp/>singular<sp/>matrix<sp/>check<sp/>in<sp/>drawImage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>ir00<sp/>=<sp/>r11<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>ir01<sp/>=<sp/>-r01<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>ir10<sp/>=<sp/>-r10<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/>ir11<sp/>=<sp/>r00<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>the<sp/>input<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>srcHeight<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yp<sp/>&lt;<sp/>0<sp/>||<sp/>yp<sp/>&gt;<sp/>INT_MAX<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/>scaledImg<sp/>=<sp/>scaleImage(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>interpolate);</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledImg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrBadArg;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(tf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tf)(srcData,<sp/>scaledImg);</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>the<sp/>three<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[1]<sp/>&lt;<sp/>vy[i])<sp/>{</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[2]<sp/>&lt;<sp/>vy[i])<sp/>{</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[3]<sp/>&lt;<sp/>vy[i])<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>if<sp/>using<sp/>fixed<sp/>point,<sp/>0.000001<sp/>will<sp/>be<sp/>truncated<sp/>to<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>two<sp/>comparisons<sp/>must<sp/>be<sp/>&lt;=,<sp/>not<sp/>&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(vy[i]<sp/>-<sp/>vy[(i-1)<sp/>&amp;<sp/>3])<sp/>&lt;=<sp/>0.000001<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vy[(i-1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vy[(i+1)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(i-1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splashAbs(vy[i]<sp/>-<sp/>vy[(i+1)<sp/>&amp;<sp/>3])<sp/>&lt;=<sp/>0.000001)<sp/>{</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y0<sp/>=<sp/>imgCoordMungeLower(vy[i]);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y1<sp/>=<sp/>imgCoordMungeUpper(vy[(i+2)<sp/>&amp;<sp/>3])<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[i]<sp/>&lt;<sp/>vx[(i+1)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/>nSections<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y0<sp/>=<sp/>imgCoordMungeLower(vy[i]);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>section[2].y1<sp/>=<sp/>imgCoordMungeUpper(vy[(i+2)<sp/>&amp;<sp/>3])<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].ia0<sp/>=<sp/>section[0].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/>section[2].ia1<sp/>=<sp/>section[2].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>section[2].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>section[2].ib0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ia1<sp/>=<sp/>section[2].ia0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[0].ib1<sp/>=<sp/>section[2].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vy[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vy[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[1].y0<sp/>=<sp/>imgCoordMungeLower(vy[(i+1)<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[2].y0<sp/>=<sp/>imgCoordMungeUpper(vy[(i+3)<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[1].y0<sp/>=<sp/>imgCoordMungeLower(vy[(i+3)<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>section[2].y0<sp/>=<sp/>imgCoordMungeUpper(vy[(i+1)<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vx[(i+1)<sp/>&amp;<sp/>3]<sp/>&lt;<sp/>vx[(i+3)<sp/>&amp;<sp/>3])<sp/>{</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia0<sp/>=<sp/>(i+3)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ia1<sp/>=<sp/>(i+2)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib0<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].ib1<sp/>=<sp/>(i+1)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/>section[0].y1<sp/>=<sp/>section[1].y0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/>section[1].y1<sp/>=<sp/>section[2].y0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/>nSections<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSections;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xa0<sp/>=<sp/>vx[section[i].ia0];</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].ya0<sp/>=<sp/>vy[section[i].ia0];</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xa1<sp/>=<sp/>vx[section[i].ia1];</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].ya1<sp/>=<sp/>vy[section[i].ia1];</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xb0<sp/>=<sp/>vx[section[i].ib0];</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].yb0<sp/>=<sp/>vy[section[i].ib0];</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].xb1<sp/>=<sp/>vx[section[i].ib1];</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].yb1<sp/>=<sp/>vy[section[i].ib1];</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].dxdya<sp/>=<sp/>(section[i].xa1<sp/>-<sp/>section[i].xa0)<sp/>/</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(section[i].ya1<sp/>-<sp/>section[i].ya0);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/>section[i].dxdyb<sp/>=<sp/>(section[i].xb1<sp/>-<sp/>section[i].xb0)<sp/>/</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(section[i].yb1<sp/>-<sp/>section[i].yb0);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>pixel<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>0,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAlpha<sp/>||<sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>clipRes<sp/>!=<sp/>splashClipAllInside),</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gFalse);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixelInit();</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSections<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section[0].y0<sp/>==<sp/>section[0].y1)<sp/>{</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++section[0].y1;</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>opClipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section[0].y0<sp/>==<sp/>section[2].y1)<sp/>{</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++section[1].y1;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clipRes<sp/>=<sp/>opClipRes<sp/>=<sp/>splashClipPartial;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>all<sp/>pixels<sp/>inside<sp/>the<sp/>target<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nSections;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>section[i].y0;<sp/>y<sp/>&lt;=<sp/>section[i].y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>imgCoordMungeLower(section[i].xa0<sp/>+</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>section[i].ya0)<sp/>*</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section[i].dxdya);</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(xa<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>imgCoordMungeUpper(section[i].xb0<sp/>+</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>section[i].yb0)<sp/>*</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section[i].dxdyb);</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>narrow<sp/>images<sp/>cover<sp/>at<sp/>least<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>==<sp/>xb)<sp/>{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/>++xb;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>state-&gt;clip-&gt;testSpan(xa,<sp/>xb<sp/>-<sp/>1,<sp/>y);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>xa;<sp/>x<sp/>&lt;<sp/>xb;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>(x+0.5,<sp/>y+0.5)<sp/>back<sp/>to<sp/>the<sp/>scaled<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>splashFloor(((SplashCoord)x<sp/>+<sp/>0.5<sp/>-<sp/>mat[4])<sp/>*<sp/>ir00<sp/>+</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>mat[5])<sp/>*<sp/>ir10);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>splashFloor(((SplashCoord)x<sp/>+<sp/>0.5<sp/>-<sp/>mat[4])<sp/>*<sp/>ir01<sp/>+</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)y<sp/>+<sp/>0.5<sp/>-<sp/>mat[5])<sp/>*<sp/>ir11);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xx<sp/>should<sp/>always<sp/>be<sp/>within<sp/>bounds,<sp/>but<sp/>floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inaccuracy<sp/>can<sp/>cause<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>scaledWidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>scaledHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledImg-&gt;getPixel(xx,<sp/>yy,<sp/>pixel);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>scaledImg-&gt;alpha[yy<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx];</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>clipRes2<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawPixel(&amp;pipe,<sp/>x,<sp/>y,<sp/>clipRes2<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaledImg;</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>determine<sp/>if<sp/>a<sp/>scaled<sp/>image<sp/>requires<sp/>interpolation<sp/>based<sp/>on<sp/>the<sp/>scale<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>interpolate<sp/>flag<sp/>from<sp/>the<sp/>image<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GBool<sp/>isImageInterpolationRequired(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>interpolate)<sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interpolate)</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>scale<sp/>factor<sp/>is<sp/>&gt;=<sp/>400%<sp/>we<sp/>don&apos;t<sp/>interpolate.<sp/>See<sp/>bugs<sp/>#25268,<sp/>#9860<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>/<sp/>srcWidth<sp/>&gt;=<sp/>4<sp/>||<sp/>scaledHeight<sp/>/<sp/>srcHeight<sp/>&gt;=<sp/>4)</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale<sp/>an<sp/>image<sp/>into<sp/>a<sp/>SplashBitmap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*Splash::scaleImage(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,<sp/>GBool<sp/>interpolate,<sp/>GBool<sp/>tilingPattern)<sp/>{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/>dest<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>(scaledWidth,<sp/>scaledHeight,<sp/>1,<sp/>srcMode,<sp/>srcAlpha,<sp/>gTrue,<sp/>bitmap-&gt;getSeparationList());</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest-&gt;getDataPtr()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledHeight<sp/>&lt;<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>&lt;<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleImageYdXd(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleImageYdXu(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaledWidth<sp/>&lt;<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleImageYuXd(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tilingPattern<sp/>&amp;&amp;<sp/>isImageInterpolationRequired(srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>interpolate))<sp/>{</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleImageYuXuBilinear(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleImageYuXu(src,<sp/>srcData,<sp/>srcMode,<sp/>nComps,<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcWidth,<sp/>srcHeight,<sp/>scaledWidth,<sp/>scaledHeight,<sp/>dest);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleImageYdXd(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf,<sp/>*alphaLineBuf;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/>Guint<sp/>*pixBuf,<sp/>*alphaPixBuf;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>Guint<sp/>pix0,<sp/>pix1,<sp/>pix2;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/>Guint<sp/>pix3;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/>Guint<sp/>pix[SPOT_NCOMPS+4],<sp/>cp;</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/>Guint<sp/>alpha;</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr,<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx,<sp/>xxa,<sp/>d,<sp/>d0,<sp/>d1;</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>srcHeight<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>srcHeight<sp/>%<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>srcWidth<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>srcWidth<sp/>%<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmallocn(srcWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>pixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/>nComps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaPixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaPixBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>destPtr<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>destAlphaPtr<sp/>=<sp/>dest-&gt;alpha;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>scaledHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>rows<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/>nComps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(alphaPixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf,<sp/>alphaLineBuf);</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth<sp/>*<sp/>nComps;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/>pixBuf[j]<sp/>+=<sp/>lineBuf[j];</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alphaPixBuf[j]<sp/>+=<sp/>alphaLineBuf[j];</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(yStep<sp/>*<sp/>xp);</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(yStep<sp/>*<sp/>(xp<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>xxa<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d0;</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(srcMode)<sp/>{</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix0<sp/>+=<sp/>pixBuf[xx++];</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>(pix0<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix0;</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>pix1<sp/>=<sp/>pix2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix0<sp/>+=<sp/>pixBuf[xx];</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix1<sp/>+=<sp/>pixBuf[xx+1];</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix2<sp/>+=<sp/>pixBuf[xx+2];</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>(pix0<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/>pix1<sp/>=<sp/>(pix1<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/>pix2<sp/>=<sp/>(pix2<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix0;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix1;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix2;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>pix1<sp/>=<sp/>pix2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix0<sp/>+=<sp/>pixBuf[xx];</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix1<sp/>+=<sp/>pixBuf[xx+1];</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix2<sp/>+=<sp/>pixBuf[xx+2];</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>(pix0<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/>pix1<sp/>=<sp/>(pix1<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/>pix2<sp/>=<sp/>(pix2<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix2;</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix1;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix0;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)255;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>pix1<sp/>=<sp/>pix2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix0<sp/>+=<sp/>pixBuf[xx];</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix1<sp/>+=<sp/>pixBuf[xx+1];</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix2<sp/>+=<sp/>pixBuf[xx+2];</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>(pix0<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/>pix1<sp/>=<sp/>(pix1<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/>pix2<sp/>=<sp/>(pix2<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix2;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix1;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix0;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>pix1<sp/>=<sp/>pix2<sp/>=<sp/>pix3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix0<sp/>+=<sp/>pixBuf[xx];</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix1<sp/>+=<sp/>pixBuf[xx+1];</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix2<sp/>+=<sp/>pixBuf[xx+2];</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix3<sp/>+=<sp/>pixBuf[xx+3];</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/>pix0<sp/>=<sp/>(pix0<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/>pix1<sp/>=<sp/>(pix1<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>pix2<sp/>=<sp/>(pix2<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/>pix3<sp/>=<sp/>(pix3<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix0;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix1;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix2;</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix3;</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[cp]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)<sp/>{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix[cp]<sp/>+=<sp/>pixBuf[xx<sp/>+<sp/>cp];</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[cp]<sp/>=<sp/>(pix[cp]<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[cp];</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:<sp/></highlight><highlight class="comment">//<sp/>mono1<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i,<sp/>++xxa)<sp/>{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>+=<sp/>alphaPixBuf[xxa];</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>/<sp/>xStep<sp/>*<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>(alpha<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>*destAlphaPtr++<sp/>=<sp/>(Guchar)alpha;</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/>gfree(alphaPixBuf);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/>gfree(pixBuf);</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="4421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleImageYdXu(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf,<sp/>*alphaLineBuf;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/>Guint<sp/>*pixBuf,<sp/>*alphaPixBuf;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/>Guint<sp/>pix[splashMaxColorComps];</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>Guint<sp/>alpha;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr,<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>d;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>srcHeight<sp/>/<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>srcHeight<sp/>%<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>scaledWidth<sp/>/<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>scaledWidth<sp/>%<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmallocn(srcWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/>pixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/>nComps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaPixBuf<sp/>=<sp/>(Guint<sp/>*)gmallocn(srcWidth,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaPixBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/>destPtr<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/>destAlphaPtr<sp/>=<sp/>dest-&gt;alpha;</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>scaledHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>scaledHeight)<sp/>{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>scaledHeight;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>rows<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/>nComps<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(alphaPixBuf,<sp/>0,<sp/>srcWidth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf,<sp/>alphaLineBuf);</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth<sp/>*<sp/>nComps;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/>pixBuf[j]<sp/>+=<sp/>lineBuf[j];</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>srcWidth;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alphaPixBuf[j]<sp/>+=<sp/>alphaLineBuf[j];</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>yStep;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>srcWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixBuf[]<sp/>/<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[i]<sp/>=<sp/>(pixBuf[x<sp/>*<sp/>nComps<sp/>+<sp/>i]<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(srcMode)<sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:<sp/></highlight><highlight class="comment">//<sp/>mono1<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)255;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[3];</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[cp];</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"></highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alphaPixBuf[]<sp/>/<sp/>yStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>(alphaPixBuf[x]<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destAlphaPtr++<sp/>=<sp/>(Guchar)alpha;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/>gfree(alphaPixBuf);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf);</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/>gfree(pixBuf);</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleImageYuXd(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf,<sp/>*alphaLineBuf;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/>Guint<sp/>pix[splashMaxColorComps];</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/>Guint<sp/>alpha;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr0,<sp/>*destPtr,<sp/>*destAlphaPtr0,<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx,<sp/>xxa,<sp/>d,<sp/>d0,<sp/>d1;</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>scaledHeight<sp/>/<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>scaledHeight<sp/>%<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>srcWidth<sp/>/<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>srcWidth<sp/>%<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmallocn_checkoverflow(srcWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!lineBuf))</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"></highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/>destPtr0<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/>destAlphaPtr0<sp/>=<sp/>dest-&gt;alpha;</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>srcHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>row<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf,<sp/>alphaLineBuf);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>xp;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/>/<sp/>(xp<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>xxa<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>scaledWidth)<sp/>{</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d0;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nComps;<sp/>++j,<sp/>++xx)<sp/>{</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pix[j]<sp/>+=<sp/>lineBuf[xx];</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pix[]<sp/>/<sp/>xStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[i]<sp/>=<sp/>(pix[i]<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(srcMode)<sp/>{</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:<sp/></highlight><highlight class="comment">//<sp/>mono1<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)255;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[3];</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[cp];</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xStep;<sp/>++i,<sp/>++xxa)<sp/>{</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>+=<sp/>alphaLineBuf[xxa];</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>/<sp/>xStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>(alpha<sp/>*<sp/>d)<sp/>&gt;&gt;<sp/>23;</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destAlphaPtr<sp/>=<sp/>destAlphaPtr0<sp/>+<sp/>i<sp/>*<sp/>scaledWidth<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*destAlphaPtr<sp/>=<sp/>(Guchar)alpha;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destAlphaPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleImageYuXu(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf,<sp/>*alphaLineBuf;</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/>Guint<sp/>pix[splashMaxColorComps];</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>Guint<sp/>alpha;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr0,<sp/>*destPtr,<sp/>*destAlphaPtr0,<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp,<sp/>yq,<sp/>xp,<sp/>xq,<sp/>yt,<sp/>y,<sp/>yStep,<sp/>xt,<sp/>x,<sp/>xStep,<sp/>xx;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>y<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/>yp<sp/>=<sp/>scaledHeight<sp/>/<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/>yq<sp/>=<sp/>scaledHeight<sp/>%<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bresenham<sp/>parameters<sp/>for<sp/>x<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/>xp<sp/>=<sp/>scaledWidth<sp/>/<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/>xq<sp/>=<sp/>scaledWidth<sp/>%<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmallocn(srcWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth);</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/>yt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/>destPtr0<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>destAlphaPtr0<sp/>=<sp/>dest-&gt;alpha;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>srcHeight;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((yt<sp/>+=<sp/>yq)<sp/>&gt;=<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>-=<sp/>srcHeight;</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yStep<sp/>=<sp/>yp;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>row<sp/>from<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>lineBuf,<sp/>alphaLineBuf);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>srcWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>scale<sp/>Bresenham</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xt<sp/>+=<sp/>xq)<sp/>&gt;=<sp/>srcWidth)<sp/>{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>xt<sp/>-=<sp/>srcWidth;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/>xStep<sp/>=<sp/>xp;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[i]<sp/>=<sp/>lineBuf[x<sp/>*<sp/>nComps<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(srcMode)<sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:<sp/></highlight><highlight class="comment">//<sp/>mono1<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)255;</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[3];</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[cp];</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>alphaLineBuf[x];</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>yStep;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>xStep;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destAlphaPtr<sp/>=<sp/>destAlphaPtr0<sp/>+<sp/>i<sp/>*<sp/>scaledWidth<sp/>+<sp/>xx<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destAlphaPtr<sp/>=<sp/>(Guchar)alpha;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>+=<sp/>xStep;</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"></highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/>destPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destAlphaPtr0<sp/>+=<sp/>yStep<sp/>*<sp/>scaledWidth;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expand<sp/>source<sp/>row<sp/>to<sp/>scaledWidth<sp/>using<sp/>linear<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expandRow(Guchar<sp/>*srcBuf,<sp/>Guchar<sp/>*dstBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps)</highlight></codeline>
<codeline lineno="4891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xStep<sp/>=<sp/>(double)srcWidth/scaledWidth;</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xSrc<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xFrac,<sp/>xInt;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pad<sp/>the<sp/>source<sp/>with<sp/>an<sp/>extra<sp/>pixel<sp/>equal<sp/>to<sp/>the<sp/>last<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>when<sp/>xStep<sp/>is<sp/>inside<sp/>the<sp/>last<sp/>pixel<sp/>we<sp/>still<sp/>have<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>to<sp/>interpolate<sp/>between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>i++)</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/>srcBuf[srcWidth*nComps<sp/>+<sp/>i]<sp/>=<sp/>srcBuf[(srcWidth-1)*nComps<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"></highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/>xFrac<sp/>=<sp/>modf(xSrc,<sp/>&amp;xInt);</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(int)xInt;</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>nComps;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dstBuf[nComps*x<sp/>+<sp/>c]<sp/>=<sp/>srcBuf[nComps*p<sp/>+<sp/>c]*(1.0<sp/>-<sp/>xFrac)<sp/>+<sp/>srcBuf[nComps*(p+1)<sp/>+<sp/>c]*xFrac;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/>xSrc<sp/>+=<sp/>xStep;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale<sp/>up<sp/>image<sp/>using<sp/>bilinear<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::scaleImageYuXuBilinear(SplashImageSource<sp/>src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcData,</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashColorMode<sp/>srcMode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps,</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight,</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight,</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*dest)<sp/>{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/>Guchar<sp/>*srcBuf,<sp/>*lineBuf1,<sp/>*lineBuf2,<sp/>*alphaSrcBuf,<sp/>*alphaLineBuf1,<sp/>*alphaLineBuf2;</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/>Guint<sp/>pix[splashMaxColorComps];</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>Guchar<sp/>*destPtr0,<sp/>*destPtr,<sp/>*destAlphaPtr0,<sp/>*destAlphaPtr;</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcWidth<sp/>&lt;<sp/>1<sp/>||<sp/>srcHeight<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/>srcBuf<sp/>=<sp/>(Guchar<sp/>*)gmallocn(srcWidth+1,<sp/>nComps);<sp/></highlight><highlight class="comment">//<sp/>+<sp/>1<sp/>pixel<sp/>of<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/>lineBuf1<sp/>=<sp/>(Guchar<sp/>*)gmallocn(scaledWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/>lineBuf2<sp/>=<sp/>(Guchar<sp/>*)gmallocn(scaledWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaSrcBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(srcWidth+1);<sp/></highlight><highlight class="comment">//<sp/>+<sp/>1<sp/>pixel<sp/>of<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf1<sp/>=<sp/>(Guchar<sp/>*)gmalloc(scaledWidth);</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf2<sp/>=<sp/>(Guchar<sp/>*)gmalloc(scaledWidth);</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaSrcBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/>alphaLineBuf2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ySrc<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yStep<sp/>=<sp/>(double)srcHeight/scaledHeight;</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yFrac,<sp/>yInt;</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentSrcRow<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>(*src)(srcData,<sp/>srcBuf,<sp/>alphaSrcBuf);</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/>expandRow(srcBuf,<sp/>lineBuf2,<sp/>srcWidth,<sp/>scaledWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/>expandRow(alphaSrcBuf,<sp/>alphaLineBuf2,<sp/>srcWidth,<sp/>scaledWidth,<sp/>1);</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/>destPtr0<sp/>=<sp/>dest-&gt;data;</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/>destAlphaPtr0<sp/>=<sp/>dest-&gt;alpha;</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>scaledHeight;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/>yFrac<sp/>=<sp/>modf(ySrc,<sp/>&amp;yInt);</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)yInt<sp/>&gt;<sp/>currentSrcRow)<sp/>{</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentSrcRow++;</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>line2<sp/>data<sp/>to<sp/>line1<sp/>and<sp/>get<sp/>next<sp/>line2<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>line2<sp/>already<sp/>contains<sp/>the<sp/>last<sp/>source<sp/>row<sp/>we<sp/>don&apos;t<sp/>touch<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>effectively<sp/>adds<sp/>an<sp/>extra<sp/>row<sp/>of<sp/>padding<sp/>for<sp/>interpolating<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>source<sp/>row<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(lineBuf1,<sp/>lineBuf2,<sp/>scaledWidth<sp/>*<sp/>nComps);</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(alphaLineBuf1,<sp/>alphaLineBuf2,<sp/>scaledWidth);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentSrcRow<sp/>&lt;<sp/>srcHeight)<sp/>{</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*src)(srcData,<sp/>srcBuf,<sp/>alphaSrcBuf);</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandRow(srcBuf,<sp/>lineBuf2,<sp/>srcWidth,<sp/>scaledWidth,<sp/>nComps);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandRow(alphaSrcBuf,<sp/>alphaLineBuf2,<sp/>srcWidth,<sp/>scaledWidth,<sp/>1);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>row<sp/>y<sp/>using<sp/>linear<sp/>interpolation<sp/>on<sp/>lineBuf1<sp/>and<sp/>lineBuf2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>scaledWidth;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>final<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nComps;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/>pix[i]<sp/>=<sp/>lineBuf1[x*nComps<sp/>+<sp/>i]*(1.0<sp/>-<sp/>yFrac)<sp/>+<sp/>lineBuf2[x*nComps<sp/>+<sp/>i]*yFrac;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destPtr<sp/>=<sp/>destPtr0<sp/>+<sp/>(y<sp/>*<sp/>scaledWidth<sp/>+<sp/>x)<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(srcMode)<sp/>{</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:<sp/></highlight><highlight class="comment">//<sp/>mono1<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)255;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[0];</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[1];</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[2];</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[3];</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destPtr++<sp/>=<sp/>(Guchar)pix[cp];</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destAlphaPtr<sp/>=<sp/>destAlphaPtr0<sp/>+<sp/>y*scaledWidth<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*destAlphaPtr<sp/>=<sp/>alphaLineBuf1[x]*(1.0<sp/>-<sp/>yFrac)<sp/>+<sp/>alphaLineBuf2[x]*yFrac;</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"></highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/>ySrc<sp/>+=<sp/>yStep;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/>gfree(alphaSrcBuf);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf1);</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/>gfree(alphaLineBuf2);</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/>gfree(srcBuf);</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/>gfree(lineBuf1);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/>gfree(lineBuf2);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::vertFlipImage(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComps)<sp/>{</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/>Guchar<sp/>*lineBuf;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/>Guchar<sp/>*p0,<sp/>*p1;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(img-&gt;data<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;img-&gt;data<sp/>is<sp/>NULL<sp/>in<sp/>Splash::vertFlipImage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>width<sp/>*<sp/>nComps;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/>lineBuf<sp/>=<sp/>(Guchar<sp/>*)gmalloc(w);</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p0<sp/>=<sp/>img-&gt;data,<sp/>p1<sp/>=<sp/>img-&gt;data<sp/>+<sp/>(height<sp/>-<sp/>1)<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>&lt;<sp/>p1;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>+=<sp/>w,<sp/>p1<sp/>-=<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lineBuf,<sp/>p0,<sp/>w);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(p0,<sp/>p1,<sp/>w);</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(p1,<sp/>lineBuf,<sp/>w);</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p0<sp/>=<sp/>img-&gt;alpha,<sp/>p1<sp/>=<sp/>img-&gt;alpha<sp/>+<sp/>(height<sp/>-<sp/>1)<sp/>*<sp/>width;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>p0<sp/>&lt;<sp/>p1;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>p0<sp/>+=<sp/>width,<sp/>p1<sp/>-=<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(lineBuf,<sp/>p0,<sp/>width);</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p0,<sp/>p1,<sp/>width);</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p1,<sp/>lineBuf,<sp/>width);</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/>gfree(lineBuf);</highlight></codeline>
<codeline lineno="5064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"></highlight></codeline>
<codeline lineno="5066"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::blitImage(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest)<sp/>{</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xDest,<sp/>yDest,<sp/>xDest<sp/>+<sp/>src-&gt;getWidth()<sp/>-<sp/>1,<sp/>yDest<sp/>+<sp/>src-&gt;getHeight()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/>blitImage(src,<sp/>srcAlpha,<sp/>xDest,<sp/>yDest,<sp/>clipRes);</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::blitImage(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/>GBool<sp/>srcAlpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashClipResult<sp/>clipRes)<sp/>{</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/>SplashColor<sp/>pixel;</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/>Guchar<sp/>*ap;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h,<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>the<sp/>image<sp/>into<sp/>clipped<sp/>and<sp/>unclipped<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>src-&gt;getWidth();</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>src-&gt;getHeight();</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;getNumPaths())<sp/>{</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>y1<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x0<sp/>=<sp/>splashCeil(state-&gt;clip-&gt;getXMin())<sp/>-<sp/>xDest)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((y0<sp/>=<sp/>splashCeil(state-&gt;clip-&gt;getYMin())<sp/>-<sp/>yDest)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x1<sp/>=<sp/>splashFloor(state-&gt;clip-&gt;getXMax())<sp/>-<sp/>xDest)<sp/>&gt;<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((y1<sp/>=<sp/>splashFloor(state-&gt;clip-&gt;getYMax())<sp/>-<sp/>yDest)<sp/>&gt;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"></highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>unclipped<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>w<sp/>&amp;&amp;<sp/>y0<sp/>&lt;<sp/>h<sp/>&amp;&amp;<sp/>x0<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>y0<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest<sp/>+<sp/>x0,<sp/>yDest<sp/>+<sp/>y0,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>srcAlpha,<sp/>gFalse);</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;<sp/>y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest<sp/>+<sp/>x0,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>src-&gt;getAlphaPtr()<sp/>+<sp/>y<sp/>*<sp/>w<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;<sp/>x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(x,<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*ap++;</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;<sp/>y1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest<sp/>+<sp/>x0,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;<sp/>x1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(x,<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x0);</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y0);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y1<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>clipped<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/>blitImageClipped(src,<sp/>srcAlpha,<sp/>0,<sp/>0,<sp/>xDest,<sp/>yDest,<sp/>w,<sp/>y0);</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/>blitImageClipped(src,<sp/>srcAlpha,<sp/>0,<sp/>y1,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y1,<sp/>w,<sp/>h<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>y0<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/>blitImageClipped(src,<sp/>srcAlpha,<sp/>0,<sp/>y0,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y0,<sp/>x0,<sp/>y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>w<sp/>&amp;&amp;<sp/>y0<sp/>&lt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/>blitImageClipped(src,<sp/>srcAlpha,<sp/>x1,<sp/>y0,<sp/>xDest<sp/>+<sp/>x1,<sp/>yDest<sp/>+<sp/>y0,</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>-<sp/>x1,<sp/>y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::blitImageClipped(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/>GBool<sp/>srcAlpha,</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ySrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/>SplashColor<sp/>pixel;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/>Guchar<sp/>*ap;</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>gFalse);</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixelInit();</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>src-&gt;getAlphaPtr()<sp/>+<sp/>(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;getWidth()<sp/>+<sp/>xSrc;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*ap++;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>srcAlpha,<sp/>gFalse);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAlpha)<sp/>{</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>src-&gt;getAlphaPtr()<sp/>+<sp/>(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;getWidth()<sp/>+<sp/>xSrc;</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>*ap++;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ap;</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal">SplashError<sp/>Splash::composite(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ySrc,</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>noClip,<sp/>GBool<sp/>nonIsolated,</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>knockout,<sp/>SplashCoord<sp/>knockoutOpacity)<sp/>{</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/>SplashColor<sp/>pixel;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/>Guchar<sp/>alpha;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/>Guchar<sp/>*ap;</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;mode<sp/>!=<sp/>bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrModeMismatch;</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!bitmap-&gt;data))<sp/>{</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrZeroImage;</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(src-&gt;getSeparationList()-&gt;getLength()<sp/>&gt;<sp/>bitmap-&gt;getSeparationList()-&gt;getLength())<sp/>{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>bitmap-&gt;getSeparationList()-&gt;getLength();<sp/>x<sp/>&lt;<sp/>src-&gt;getSeparationList()-&gt;getLength();<sp/>x++)</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getSeparationList()-&gt;append(((<ref refid="class_gfx_separation_color_space" kindref="compound">GfxSeparationColorSpace</ref><sp/>*)src-&gt;getSeparationList()-&gt;get(x))-&gt;copy());</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gTrue,<sp/>nonIsolated,</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>knockout,<sp/>(Guchar)splashRound(knockoutOpacity<sp/>*<sp/>255));</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noClip)<sp/>{</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>src-&gt;getAlphaPtr()<sp/>+<sp/>(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;getWidth()<sp/>+<sp/>xSrc;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*ap++;</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>uses<sp/>shape<sp/>instead<sp/>of<sp/>alpha,<sp/>which<sp/>isn&apos;t<sp/>technically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct,<sp/>but<sp/>works<sp/>out<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>w<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest);</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>src-&gt;getAlphaPtr()<sp/>+<sp/>(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;getWidth()<sp/>+<sp/>xSrc;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*ap++;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>uses<sp/>shape<sp/>instead<sp/>of<sp/>alpha,<sp/>which<sp/>isn&apos;t<sp/>technically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct,<sp/>but<sp/>works<sp/>out<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipe.shape<sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>xDest,<sp/>yDest,<sp/>NULL,<sp/>pixel,</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>gFalse,<sp/>nonIsolated);</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noClip)<sp/>{</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest);</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>w<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest);</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeSetXY(&amp;pipe,<sp/>xDest,<sp/>yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;getPixel(xSrc<sp/>+<sp/>x,<sp/>ySrc<sp/>+<sp/>y,<sp/>pixel);</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;clip-&gt;test(xDest<sp/>+<sp/>x,<sp/>yDest<sp/>+<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;*pipe.run)(&amp;pipe);</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModX(xDest<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateModY(yDest<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeIncX(&amp;pipe);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="5323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::compositeBackground(SplashColorPtr<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>p;</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/>Guchar<sp/>*q;</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/>Guchar<sp/>alpha,<sp/>alpha1,<sp/>c,<sp/>color0,<sp/>color1,<sp/>color2;</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/>Guchar<sp/>color3;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/>Guchar<sp/>colorsp[SPOT_NCOMPS+4],<sp/>cp;</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>mask;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"></highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(bitmap-&gt;alpha<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;bitmap-&gt;alpha<sp/>is<sp/>NULL<sp/>in<sp/>Splash::compositeBackground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"></highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/>color0<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(*p<sp/>&amp;<sp/>mask)<sp/>?<sp/>0xff<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color0<sp/>+<sp/>alpha<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(mask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/>color0<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color0<sp/>+<sp/>alpha<sp/>*<sp/>p[0]);</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/>color0<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/>color1<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/>color2<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>color0;</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>color1;</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>color2;</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>255)</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color0<sp/>+<sp/>alpha<sp/>*<sp/>p[0]);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color1<sp/>+<sp/>alpha<sp/>*<sp/>p[1]);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color2<sp/>+<sp/>alpha<sp/>*<sp/>p[2]);</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/>color0<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/>color1<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/>color2<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>color0;</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>color1;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>color2;</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>255)</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color0<sp/>+<sp/>alpha<sp/>*<sp/>p[0]);</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color1<sp/>+<sp/>alpha<sp/>*<sp/>p[1]);</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color2<sp/>+<sp/>alpha<sp/>*<sp/>p[2]);</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/>color0<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/>color1<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/>color2<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/>color3<sp/>=<sp/>color[3];</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>color0;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>color1;</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>color2;</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>color3;</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>255)</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color0<sp/>+<sp/>alpha<sp/>*<sp/>p[0]);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color1<sp/>+<sp/>alpha<sp/>*<sp/>p[1]);</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color2<sp/>+<sp/>alpha<sp/>*<sp/>p[2]);</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>color3<sp/>+<sp/>alpha<sp/>*<sp/>p[3]);</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorsp[cp]<sp/>=<sp/>color[cp];</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>bitmap-&gt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[y<sp/>*<sp/>bitmap-&gt;rowSize];</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[y<sp/>*<sp/>bitmap-&gt;width];</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>bitmap-&gt;width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>*q++;</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[cp]<sp/>=<sp/>colorsp[cp];</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>!=<sp/>255)</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha1<sp/>=<sp/>255<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[cp]<sp/>=<sp/>div255(alpha1<sp/>*<sp/>colorsp[cp]<sp/>+<sp/>alpha<sp/>*<sp/>p[cp]);</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(SPOT_NCOMPS+4);</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/>memset(bitmap-&gt;alpha,<sp/>255,<sp/>bitmap-&gt;width<sp/>*<sp/>bitmap-&gt;height);</highlight></codeline>
<codeline lineno="5487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal">GBool<sp/>Splash::gouraudTriangleShadedFill(<ref refid="class_splash_gouraud_color" kindref="compound">SplashGouraudColor</ref><sp/>*shading)</highlight></codeline>
<codeline lineno="5490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xdbl[3]<sp/>=<sp/>{0.,<sp/>0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ydbl[3]<sp/>=<sp/>{0.,<sp/>0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>y[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xt=0.,<sp/>xa=0.,<sp/>yt=0.;</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ca=0.,<sp/>ct=0.;</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>triangle<sp/>interpolation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scanLimitMapL[2]<sp/>=<sp/>{0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scanLimitMapR[2]<sp/>=<sp/>{0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scanColorMapL[2]<sp/>=<sp/>{0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scanColorMapR[2]<sp/>=<sp/>{0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scanColorMap[2]<sp/>=<sp/>{0.,<sp/>0.};</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanEdgeL[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanEdgeR[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/>GBool<sp/>hasFurtherSegment<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanLineOff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmapOff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanLimitR<sp/>=<sp/>0,<sp/>scanLimitL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"></highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmapWidth<sp/>=<sp/>bitmap-&gt;getWidth();</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><ref refid="class_splash_clip" kindref="compound">SplashClip</ref>*<sp/>clip<sp/>=<sp/>getClip();</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*blitTarget<sp/>=<sp/>bitmap;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>bitmapData<sp/>=<sp/>bitmap-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmapOffLimit<sp/>=<sp/>bitmap-&gt;getHeight()<sp/>*<sp/>bitmap-&gt;getRowSize();</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>bitmapAlpha<sp/>=<sp/>bitmap-&gt;getAlphaPtr();</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>cur<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/>SplashCoord*<sp/>userToCanvasMatrix<sp/>=<sp/>getMatrix();</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/>SplashColorMode<sp/>bitmapMode<sp/>=<sp/>bitmap-&gt;getMode();</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/>GBool<sp/>hasAlpha<sp/>=<sp/>(bitmapAlpha<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowSize<sp/>=<sp/>bitmap-&gt;getRowSize();</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorComps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmapMode)<sp/>{</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=1;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=3;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=3;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=4;</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=4;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorComps=SPOT_NCOMPS+4;</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"></highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/>SplashColor<sp/>cSrcVal;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"></highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>0,<sp/>NULL,<sp/>cSrcVal,<sp/>(Guchar)splashRound(state-&gt;strokeAlpha<sp/>*<sp/>255),<sp/>gFalse,<sp/>gFalse);</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"></highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aaBuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;<sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>to<sp/>old<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/>drawAAPixelInit();</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>idea:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>If<sp/>pipe-&gt;noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>blit<sp/>directly<sp/>into<sp/>the<sp/>drawing<sp/>surface!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-&gt;<sp/>disable<sp/>alpha<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Otherwise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>blit<sp/>also<sp/>directly,<sp/>but<sp/>into<sp/>an<sp/>intermediate<sp/>surface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Afterwards,<sp/>blit<sp/>the<sp/>intermediate<sp/>surface<sp/>using<sp/>the<sp/>drawing<sp/>pipeline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>necessary<sp/>because<sp/>triangle<sp/>elements<sp/>can<sp/>be<sp/>on<sp/>top<sp/>of<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>other,<sp/>so<sp/>the<sp/>complete<sp/>shading<sp/>needs<sp/>to<sp/>be<sp/>drawn<sp/>before<sp/>opacity<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>the<sp/>final<sp/>step,<sp/>is<sp/>performed<sp/>using<sp/>a<sp/>SplashPipe:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>assign<sp/>the<sp/>actual<sp/>color<sp/>into<sp/>cSrcVal:<sp/>pipe<sp/>uses<sp/>cSrcVal<sp/>by<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>invoke<sp/>drawPixel(&amp;pipe,X,Y,bNoClip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/>GBool<sp/>bDirectBlit<sp/>=<sp/>vectorAntialias<sp/>?<sp/>gFalse<sp/>:<sp/>pipe.noTransparency<sp/>&amp;&amp;<sp/>!state-&gt;blendFunc;</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bDirectBlit)<sp/>{</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/>blitTarget<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>(bitmap-&gt;getWidth(),</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getHeight(),</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getRowPad(),</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getMode(),</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gTrue,</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap-&gt;getRowSize()<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmapData<sp/>=<sp/>blitTarget-&gt;getDataPtr();</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmapAlpha<sp/>=<sp/>blitTarget-&gt;getAlphaPtr();</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialisation<sp/>seems<sp/>to<sp/>be<sp/>necessary:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>bitmap-&gt;getWidth()<sp/>*<sp/>bitmap-&gt;getHeight();</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitmapAlpha[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/>hasAlpha<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shading-&gt;isParameterized())<sp/>{</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color[3];</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>colorinterp;</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>shading-&gt;getNTriangles();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shading-&gt;getTriangle(i,</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdbl<sp/>+<sp/>0,<sp/>ydbl<sp/>+<sp/>0,<sp/>color<sp/>+<sp/>0,</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdbl<sp/>+<sp/>1,<sp/>ydbl<sp/>+<sp/>1,<sp/>color<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdbl<sp/>+<sp/>2,<sp/>ydbl<sp/>+<sp/>2,<sp/>color<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>3;<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>xdbl[m]<sp/>*<sp/>(double)userToCanvasMatrix[0]<sp/>+<sp/>ydbl[m]<sp/>*<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)userToCanvasMatrix[2]<sp/>+<sp/>(double)userToCanvasMatrix[4];</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/>xdbl[m]<sp/>*<sp/>(double)userToCanvasMatrix[1]<sp/>+<sp/>ydbl[m]<sp/>*<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)userToCanvasMatrix[3]<sp/>+<sp/>(double)userToCanvasMatrix[5];</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdbl[m]<sp/>=<sp/>xt;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydbl[m]<sp/>=<sp/>yt;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>operate<sp/>on<sp/>scanlines<sp/>which<sp/>are<sp/>integer<sp/>offsets<sp/>into<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raster<sp/>image.<sp/>The<sp/>double<sp/>offsets<sp/>are<sp/>of<sp/>no<sp/>use<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[m]<sp/>=<sp/>splashRound(xt);</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[m]<sp/>=<sp/>splashRound(yt);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>according<sp/>to<sp/>y<sp/>coordinate<sp/>to<sp/>simplify<sp/>sweep<sp/>through<sp/>scanlines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INSERTION<sp/>SORT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[0]<sp/>&gt;<sp/>y[1])<sp/>{</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(x[0],<sp/>x[1]);</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(y[0],<sp/>y[1]);</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(color[0],<sp/>color[1]);</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>two<sp/>are<sp/>sorted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(y[0]<sp/>&lt;=<sp/>y[1]);</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[1]<sp/>&gt;<sp/>y[2])<sp/>{</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpX<sp/>=<sp/>x[2];</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmpY<sp/>=<sp/>y[2];</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpC<sp/>=<sp/>color[2];</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>x[1];<sp/>y[2]<sp/>=<sp/>y[1];<sp/>color[2]<sp/>=<sp/>color[1];</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"></highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[0]<sp/>&gt;<sp/>tmpY)<sp/>{</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>x[0];<sp/>y[1]<sp/>=<sp/>y[0];<sp/>color[1]<sp/>=<sp/>color[0];</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>tmpX;<sp/>y[0]<sp/>=<sp/>tmpY;<sp/>color[0]<sp/>=<sp/>tmpC;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>tmpX;<sp/>y[1]<sp/>=<sp/>tmpY;<sp/>color[1]<sp/>=<sp/>tmpC;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>three<sp/>are<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(y[0]<sp/>&lt;=<sp/>y[1]);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(y[1]<sp/>&lt;=<sp/>y[2]);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>here<sp/>is<sp/>det(<sp/>T<sp/>)<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>T<sp/>is<sp/>the<sp/>matrix<sp/>to<sp/>map<sp/>to<sp/>barycentric<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x[0]<sp/>-<sp/>x[2])<sp/>*<sp/>(y[1]<sp/>-<sp/>y[2])<sp/>-<sp/>(x[1]<sp/>-<sp/>x[2])<sp/>*<sp/>(y[0]<sp/>-<sp/>y[2])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>degenerate<sp/>triangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>here<sp/>initialises<sp/>the<sp/>scanline<sp/>generation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>start<sp/>with<sp/>low<sp/>Y<sp/>coordinates<sp/>and<sp/>sweep<sp/>up<sp/>to<sp/>the<sp/>large<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scanEdgeL[m]<sp/>in<sp/>{0,1,2}<sp/>m=0,1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scanEdgeR[m]<sp/>in<sp/>{0,1,2}<sp/>m=0,1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>the<sp/>two<sp/>edges<sp/>between<sp/>which<sp/>scanlines<sp/>are<sp/>(currently)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sweeped.<sp/>The<sp/>values<sp/>{0,1,2}<sp/>are<sp/>indices<sp/>into<sp/>&apos;x&apos;<sp/>and<sp/>&apos;y&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scanEdgeL[0]<sp/>=<sp/>0<sp/>means:<sp/>the<sp/>left<sp/>scan<sp/>edge<sp/>has<sp/>(x[0],y[0])<sp/>as<sp/>vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeR[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[0]<sp/>==<sp/>y[1])<sp/>{</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[1]<sp/>=<sp/>scanEdgeR[1]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[1]<sp/>=<sp/>1;<sp/>scanEdgeR[1]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(y[scanEdgeL[0]]<sp/>&lt;<sp/>y[scanEdgeL[1]]);</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(y[scanEdgeR[0]]<sp/>&lt;<sp/>y[scanEdgeR[1]]);</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"></highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok.<sp/>Now<sp/>prepare<sp/>the<sp/>linear<sp/>maps<sp/>which<sp/>map<sp/>the<sp/>y<sp/>coordinate<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>scanline<sp/>to<sp/>the<sp/>corresponding<sp/>LEFT<sp/>and<sp/>RIGHT<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>(which<sp/>define<sp/>the<sp/>scanline).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapL[0]<sp/>=<sp/>double(x[scanEdgeL[1]]<sp/>-<sp/>x[scanEdgeL[0]])<sp/>/<sp/>(y[scanEdgeL[1]]<sp/>-<sp/>y[scanEdgeL[0]]);</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapL[1]<sp/>=<sp/>x[scanEdgeL[0]]<sp/>-<sp/>y[scanEdgeL[0]]<sp/>*<sp/>scanLimitMapL[0];</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapR[0]<sp/>=<sp/>double(x[scanEdgeR[1]]<sp/>-<sp/>x[scanEdgeR[0]])<sp/>/<sp/>(y[scanEdgeR[1]]<sp/>-<sp/>y[scanEdgeR[0]]);</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapR[1]<sp/>=<sp/>x[scanEdgeR[0]]<sp/>-<sp/>y[scanEdgeR[0]]<sp/>*<sp/>scanLimitMapR[0];</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"></highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>y[1]<sp/>*<sp/>scanLimitMapL[0]<sp/>+<sp/>scanLimitMapL[1];</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>y[1]<sp/>*<sp/>scanLimitMapR[0]<sp/>+<sp/>scanLimitMapR[1];</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>&gt;<sp/>xt)<sp/>{</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>have<sp/>&quot;left&quot;<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>&quot;right&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exchange<sp/>sides!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(scanEdgeL[0],<sp/>scanEdgeR[0]);</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(scanEdgeL[1],<sp/>scanEdgeR[1]);</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(scanLimitMapL[0],<sp/>scanLimitMapR[0]);</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guswap(scanLimitMapL[1],<sp/>scanLimitMapR[1]);</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>I&apos;m<sp/>sure<sp/>there<sp/>is<sp/>a<sp/>more<sp/>efficient<sp/>way<sp/>to<sp/>check<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"></highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>game:<sp/>we<sp/>can<sp/>linearly<sp/>interpolate<sp/>the<sp/>color<sp/>based<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>y<sp/>coordinate<sp/>(that&apos;s<sp/>correct<sp/>for<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolation<sp/>due<sp/>to<sp/>linearity.<sp/>We<sp/>could<sp/>also<sp/>have<sp/>done<sp/>it<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barycentric<sp/>coordinates,<sp/>but<sp/>that&apos;s<sp/>slightly<sp/>more<sp/>involved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapL[0]<sp/>=<sp/>(color[scanEdgeL[1]]<sp/>-<sp/>color[scanEdgeL[0]])<sp/>/<sp/>(y[scanEdgeL[1]]<sp/>-<sp/>y[scanEdgeL[0]]);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapL[1]<sp/>=<sp/>color[scanEdgeL[0]]<sp/>-<sp/>y[scanEdgeL[0]]<sp/>*<sp/>scanColorMapL[0];</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapR[0]<sp/>=<sp/>(color[scanEdgeR[1]]<sp/>-<sp/>color[scanEdgeR[0]])<sp/>/<sp/>(y[scanEdgeR[1]]<sp/>-<sp/>y[scanEdgeR[0]]);</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapR[1]<sp/>=<sp/>color[scanEdgeR[0]]<sp/>-<sp/>y[scanEdgeR[0]]<sp/>*<sp/>scanColorMapR[0];</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hasFurtherSegment<sp/>=<sp/>(y[1]<sp/>&lt;<sp/>y[2]);</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanLineOff<sp/>=<sp/>y[0]<sp/>*<sp/>rowSize;</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"></highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y<sp/>=<sp/>y[0];<sp/>Y<sp/>&lt;=<sp/>y[2];<sp/>++Y,<sp/>scanLineOff<sp/>+=<sp/>rowSize)<sp/>{</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasFurtherSegment<sp/>&amp;&amp;<sp/>Y<sp/>==<sp/>y[1])<sp/>{</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SWEEP<sp/>EVENT:<sp/>we<sp/>encountered<sp/>the<sp/>next<sp/>segment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>to<sp/>next<sp/>segment,<sp/>either<sp/>at<sp/>left<sp/>end<sp/>or<sp/>at<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanEdgeL[1]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeL[1]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapL[0]<sp/>=<sp/>double(x[scanEdgeL[1]]<sp/>-<sp/>x[scanEdgeL[0]])<sp/>/<sp/>(y[scanEdgeL[1]]<sp/>-<sp/>y[scanEdgeL[0]]);</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapL[1]<sp/>=<sp/>x[scanEdgeL[0]]<sp/>-<sp/>y[scanEdgeL[0]]<sp/>*<sp/>scanLimitMapL[0];</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"></highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapL[0]<sp/>=<sp/>(color[scanEdgeL[1]]<sp/>-<sp/>color[scanEdgeL[0]])<sp/>/<sp/>(y[scanEdgeL[1]]<sp/>-<sp/>y[scanEdgeL[0]]);</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapL[1]<sp/>=<sp/>color[scanEdgeL[0]]<sp/>-<sp/>y[scanEdgeL[0]]<sp/>*<sp/>scanColorMapL[0];</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanEdgeR[1]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeR[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanEdgeR[1]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapR[0]<sp/>=<sp/>double(x[scanEdgeR[1]]<sp/>-<sp/>x[scanEdgeR[0]])<sp/>/<sp/>(y[scanEdgeR[1]]<sp/>-<sp/>y[scanEdgeR[0]]);</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitMapR[1]<sp/>=<sp/>x[scanEdgeR[0]]<sp/>-<sp/>y[scanEdgeR[0]]<sp/>*<sp/>scanLimitMapR[0];</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"></highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapR[0]<sp/>=<sp/>(color[scanEdgeR[1]]<sp/>-<sp/>color[scanEdgeR[0]])<sp/>/<sp/>(y[scanEdgeR[1]]<sp/>-<sp/>y[scanEdgeR[0]]);</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMapR[1]<sp/>=<sp/>color[scanEdgeR[0]]<sp/>-<sp/>y[scanEdgeR[0]]<sp/>*<sp/>scanColorMapR[0];</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>y[scanEdgeL[0]]<sp/><sp/>&lt;<sp/><sp/>y[scanEdgeL[1]]<sp/>);</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>y[scanEdgeR[0]]<sp/>&lt;<sp/><sp/>y[scanEdgeR[1]]<sp/>);</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasFurtherSegment<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"></highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/>Y;</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>yt<sp/>*<sp/>scanLimitMapL[0]<sp/>+<sp/>scanLimitMapL[1];</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>yt<sp/>*<sp/>scanLimitMapR[0]<sp/>+<sp/>scanLimitMapR[1];</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"></highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ca<sp/>=<sp/>yt<sp/>*<sp/>scanColorMapL[0]<sp/>+<sp/>scanColorMapL[1];</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>yt<sp/>*<sp/>scanColorMapR[0]<sp/>+<sp/>scanColorMapR[1];</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"></highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitL<sp/>=<sp/>splashRound(xa);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLimitR<sp/>=<sp/>splashRound(xt);</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok.<sp/>Now:<sp/>init<sp/>the<sp/>color<sp/>interpolation<sp/>depending<sp/>on<sp/>the<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>inside<sp/>of<sp/>the<sp/>current<sp/>scanline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMap[0]<sp/>=<sp/>(scanLimitR<sp/>==<sp/>scanLimitL)<sp/>?<sp/>0.<sp/>:<sp/>((ct<sp/>-<sp/>ca)<sp/>/<sp/>(scanLimitR<sp/>-<sp/>scanLimitL));</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanColorMap[1]<sp/>=<sp/>ca<sp/>-<sp/>scanLimitL<sp/>*<sp/>scanColorMap[0];</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"></highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handled<sp/>by<sp/>clipping:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(<sp/>scanLimitL<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scanLimitR<sp/>&lt;<sp/>bitmap-&gt;getWidth()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(scanLimitL<sp/>&lt;=<sp/>scanLimitR<sp/>||<sp/>abs(scanLimitL<sp/>-<sp/>scanLimitR)<sp/>&lt;=<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>rounding<sp/>inaccuracies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(scanLineOff<sp/>==<sp/>Y<sp/>*<sp/>rowSize);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"></highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorinterp<sp/>=<sp/>scanColorMap[0]<sp/>*<sp/>scanLimitL<sp/>+<sp/>scanColorMap[1];</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"></highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapOff<sp/>=<sp/>scanLineOff<sp/>+<sp/>scanLimitL<sp/>*<sp/>colorComps;</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X<sp/>=<sp/>scanLimitL;<sp/>X<sp/>&lt;=<sp/>scanLimitR<sp/>&amp;&amp;<sp/>bitmapOff<sp/>+<sp/>colorComps<sp/>&lt;=<sp/>bitmapOffLimit;<sp/>++X,<sp/>colorinterp<sp/>+=<sp/>scanColorMap[0],<sp/>bitmapOff<sp/>+=<sp/>colorComps)<sp/>{</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>:<sp/>standard<sp/>rectangular<sp/>clipping<sp/>can<sp/>be<sp/>done<sp/>for<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complete<sp/>scanline<sp/>which<sp/>is<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--&gt;<sp/>see<sp/>SplashClip<sp/>and<sp/>its<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;test(X,<sp/>Y))</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"></highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fabs(colorinterp<sp/>-<sp/>(scanColorMap[0]<sp/>*<sp/>X<sp/>+<sp/>scanColorMap[1]))<sp/>&lt;<sp/>1e-10);</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(bitmapOff<sp/>==<sp/>Y<sp/>*<sp/>rowSize<sp/>+<sp/>colorComps<sp/>*<sp/>X<sp/>&amp;&amp;<sp/>scanLineOff<sp/>==<sp/>Y<sp/>*<sp/>rowSize);</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"></highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shading-&gt;getParameterizedColor(colorinterp,<sp/>bitmapMode,<sp/>&amp;bitmapData[bitmapOff]);</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"></highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>shading<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>opacity<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>bDirectBlit<sp/>stuff,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above<sp/>for<sp/>comments<sp/>and<sp/>below<sp/>for<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasAlpha)</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapAlpha[Y<sp/>*<sp/>bitmapWidth<sp/>+<sp/>X]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bDirectBlit)<sp/>{</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blitTarget;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bDirectBlit)<sp/>{</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok.<sp/>Finalize<sp/>the<sp/>stuff<sp/>by<sp/>blitting<sp/>the<sp/>shading<sp/>into<sp/>the<sp/>final</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>geometry,<sp/>this<sp/>time<sp/>respecting<sp/>the<sp/>rendering<sp/>pipe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>W<sp/>=<sp/>blitTarget-&gt;getWidth();</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>blitTarget-&gt;getHeight();</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cSrcVal;</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X<sp/>=<sp/>0;<sp/>X<sp/>&lt;<sp/>W;<sp/>++X)<sp/>{</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y<sp/>=<sp/>0;<sp/>Y<sp/>&lt;<sp/>H;<sp/>++Y)<sp/>{</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bitmapAlpha[Y<sp/>*<sp/>bitmapWidth<sp/>+<sp/>X])</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>draw<sp/>only<sp/>parts<sp/>of<sp/>the<sp/>shading!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapOff<sp/>=<sp/>Y<sp/>*<sp/>rowSize<sp/>+<sp/>colorComps<sp/>*<sp/>X;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"></highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>colorComps;<sp/>++m)</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[m]<sp/>=<sp/>bitmapData[bitmapOff<sp/>+<sp/>m];</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawAAPixel(&amp;pipe,<sp/>X,<sp/>Y);</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawPixel(&amp;pipe,<sp/>X,<sp/>Y,<sp/>gTrue);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>clipping<sp/>-<sp/>has<sp/>already<sp/>been<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"></highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blitTarget;</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/>blitTarget<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"></highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"></highlight></codeline>
<codeline lineno="5807"><highlight class="normal">SplashError<sp/>Splash::blitTransparent(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xSrc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ySrc,</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/>SplashColorPtr<sp/>p,<sp/>sp;</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/>Guchar<sp/>*q;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>mask,<sp/>srcMask;</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;mode<sp/>!=<sp/>bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrModeMismatch;</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!bitmap-&gt;data))<sp/>{</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrZeroImage;</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(bitmap-&gt;mode)<sp/>{</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono1:</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>(xDest<sp/>&gt;&gt;<sp/>3)];</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0x80<sp/>&gt;&gt;<sp/>(xDest<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;rowSize<sp/>+<sp/>(xSrc<sp/>&gt;&gt;<sp/>3)];</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srcMask<sp/>=<sp/>0x80<sp/>&gt;&gt;<sp/>(xSrc<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sp<sp/>&amp;<sp/>srcMask)<sp/>{</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(mask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(srcMask<sp/>&gt;&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srcMask<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++sp;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeMono8:</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>xDest];</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>xSrc];</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeRGB8:</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeBGR8:</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>3<sp/>*<sp/>xDest];</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;rowSize<sp/>+<sp/>3<sp/>*<sp/>xSrc];</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeXBGR8:</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>xDest];</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>xSrc];</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/>sp++;</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPLASH_CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeCMYK8:</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>xDest];</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;rowSize<sp/>+<sp/>4<sp/>*<sp/>xSrc];</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashModeDeviceN8:</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;bitmap-&gt;data[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;rowSize<sp/>+<sp/>(SPOT_NCOMPS+4)<sp/>*<sp/>xDest];</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>&amp;src-&gt;data[(ySrc<sp/>+<sp/>y)<sp/>*<sp/>src-&gt;rowSize<sp/>+<sp/>(SPOT_NCOMPS+4)<sp/>*<sp/>xSrc];</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>w;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp=0;<sp/>cp<sp/>&lt;<sp/>SPOT_NCOMPS+4;<sp/>cp++)</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>*sp++;</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitmap-&gt;alpha)<sp/>{</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>h;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>&amp;bitmap-&gt;alpha[(yDest<sp/>+<sp/>y)<sp/>*<sp/>bitmap-&gt;width<sp/>+<sp/>xDest];</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(q,<sp/>0x00,<sp/>w);</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"></highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*Splash::makeStrokePath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>SplashCoord<sp/>w,</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>flatten)<sp/>{</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*pathIn,<sp/>*dashPath,<sp/>*pathOut;</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>d,<sp/>dx,<sp/>dy,<sp/>wdx,<sp/>wdy,<sp/>dxNext,<sp/>dyNext,<sp/>wdxNext,<sp/>wdyNext;</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>crossprod,<sp/>dotprod,<sp/>miter,<sp/>m;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/>GBool<sp/>first,<sp/>last,<sp/>closed,<sp/>hasangle;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subpathStart0,<sp/>subpathStart1,<sp/>seg,<sp/>i0,<sp/>i1,<sp/>j0,<sp/>j1,<sp/>k0,<sp/>k1;</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left0,<sp/>left1,<sp/>left2,<sp/>right0,<sp/>right1,<sp/>right2,<sp/>join0,<sp/>join1,<sp/>join2;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftFirst,<sp/>rightFirst,<sp/>firstPt;</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"></highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/>pathOut<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref>();</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"></highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathOut;</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flatten)<sp/>{</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/>pathIn<sp/>=<sp/>flattenPath(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness);</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineDashLength<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dashPath<sp/>=<sp/>makeDashedPath(pathIn);</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pathIn;</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathIn<sp/>=<sp/>dashPath;</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathIn-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pathIn;</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathOut;</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/>pathIn<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"></highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/>subpathStart0<sp/>=<sp/>subpathStart1<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/>seg<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/>closed<sp/>=<sp/>gFalse;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/>left0<sp/>=<sp/>left1<sp/>=<sp/>right0<sp/>=<sp/>right1<sp/>=<sp/>join0<sp/>=<sp/>join1<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/>leftFirst<sp/>=<sp/>rightFirst<sp/>=<sp/>firstPt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5951"><highlight class="normal"></highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/>i0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i1<sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(pathIn-&gt;flags[i1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i1<sp/>+<sp/>1<sp/>&lt;<sp/>pathIn-&gt;length<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i1+1].x<sp/>==<sp/>pathIn-&gt;pts[i1].x<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i1+1].y<sp/>==<sp/>pathIn-&gt;pts[i1].y;</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i1)<sp/>;</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i1<sp/>&lt;<sp/>pathIn-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((first<sp/>=<sp/>pathIn-&gt;flags[i0]<sp/>&amp;<sp/>splashPathFirst))<sp/>{</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subpathStart0<sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subpathStart1<sp/>=<sp/>i1;</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closed<sp/>=<sp/>pathIn-&gt;flags[i0]<sp/>&amp;<sp/>splashPathClosed;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/>j0<sp/>=<sp/>i1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j0<sp/>&lt;<sp/>pathIn-&gt;length)<sp/>{</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j1<sp/>=<sp/>j0;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(pathIn-&gt;flags[j1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1<sp/>+<sp/>1<sp/>&lt;<sp/>pathIn-&gt;length<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j1+1].x<sp/>==<sp/>pathIn-&gt;pts[j1].x<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j1+1].y<sp/>==<sp/>pathIn-&gt;pts[j1].y;</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j1)<sp/>;</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j1<sp/>=<sp/>j0;</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathIn-&gt;flags[i1]<sp/>&amp;<sp/>splashPathLast)<sp/>{</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&amp;&amp;<sp/>state-&gt;lineCap<sp/>==<sp/>splashLineCapRound)<sp/>{</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case:<sp/>zero-length<sp/>subpath<sp/>with<sp/>round<sp/>line<sp/>caps<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;moveTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y);</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x,</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y);</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x,</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;close();</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>j0;</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>j1;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>pathIn-&gt;flags[j1]<sp/>&amp;<sp/>splashPathLast;</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last)<sp/>{</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k0<sp/>=<sp/>subpathStart1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k0<sp/>=<sp/>j1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1<sp/>=<sp/>k0;</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>!(pathIn-&gt;flags[k1]<sp/>&amp;<sp/>splashPathLast)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1<sp/>+<sp/>1<sp/>&lt;<sp/>pathIn-&gt;length<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[k1+1].x<sp/>==<sp/>pathIn-&gt;pts[k1].x<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[k1+1].y<sp/>==<sp/>pathIn-&gt;pts[k1].y;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>++k1)<sp/>;</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"></highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>deltas<sp/>for<sp/>segment<sp/>(i1,<sp/>j0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>1/d<sp/>value<sp/>can<sp/>be<sp/>small,<sp/>which<sp/>introduces<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inaccuracies<sp/>in<sp/>fixed<sp/>point<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>splashDist(pathIn-&gt;pts[i1].x,<sp/>pathIn-&gt;pts[i1].y,</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x,<sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>(pathIn-&gt;pts[j0].x<sp/>-<sp/>pathIn-&gt;pts[i1].x)<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>(pathIn-&gt;pts[j0].y<sp/>-<sp/>pathIn-&gt;pts[i1].y)<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(SplashCoord)1<sp/>/<sp/>splashDist(pathIn-&gt;pts[i1].x,<sp/>pathIn-&gt;pts[i1].y,</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x,<sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>d<sp/>*<sp/>(pathIn-&gt;pts[j0].x<sp/>-<sp/>pathIn-&gt;pts[i1].x);</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>d<sp/>*<sp/>(pathIn-&gt;pts[j0].y<sp/>-<sp/>pathIn-&gt;pts[i1].y);</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/>wdx<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>w<sp/>*<sp/>dx;</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/>wdy<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>w<sp/>*<sp/>dy;</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>start<sp/>cap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;moveTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>wdy,<sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i0<sp/>==<sp/>subpathStart0)<sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstPt<sp/>=<sp/>pathOut-&gt;length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&amp;&amp;<sp/>!closed)<sp/>{</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state-&gt;lineCap)<sp/>{</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapButt:</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>wdy,<sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapRound:</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>wdy<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>wdx<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>-<sp/>wdx<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdy<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>-<sp/>wdx,</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdy);</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>wdx<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdy<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>+<sp/>wdy<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].x<sp/>+<sp/>wdy,</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapProjecting:</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>wdx<sp/>-<sp/>wdy,</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>+<sp/>wdx<sp/>-<sp/>wdy);</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[i0].x<sp/>-<sp/>wdx<sp/>+<sp/>wdy,</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx<sp/>-<sp/>wdy);</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>wdy,</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[i0].x<sp/>+<sp/>wdy,<sp/>pathIn-&gt;pts[i0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>left<sp/>side<sp/>of<sp/>the<sp/>segment<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/>left2<sp/>=<sp/>pathOut-&gt;length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdy,<sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>end<sp/>cap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>&amp;&amp;<sp/>!closed)<sp/>{</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state-&gt;lineCap)<sp/>{</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapButt:</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,<sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapRound:</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdy<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdx<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>+<sp/>wdx<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdy<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>+<sp/>wdx,</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdy);</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdx<sp/>-<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdy<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdx,</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx<sp/>+<sp/>bezierCircle<sp/>*<sp/>wdy,</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>splashLineCapProjecting:</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdy<sp/>+<sp/>wdx,</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdx<sp/>+<sp/>wdy);</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy<sp/>+<sp/>wdx,</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx<sp/>+<sp/>wdy);</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,<sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"></highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>segment<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(NB:<sp/>if<sp/>stroke<sp/>adjustment<sp/>is<sp/>enabled,<sp/>the<sp/>closepath<sp/>operation<sp/>MUST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>segment<sp/>because<sp/>this<sp/>segment<sp/>is<sp/>used<sp/>for<sp/>a<sp/>hint)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/>right2<sp/>=<sp/>pathOut-&gt;length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;close(state-&gt;strokeAdjust);</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"></highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/>join2<sp/>=<sp/>pathOut-&gt;length;</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!last<sp/>||<sp/>closed)<sp/>{</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>deltas<sp/>for<sp/>segment<sp/>(j1,<sp/>k0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_FIXEDPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>1/d<sp/>value<sp/>can<sp/>be<sp/>small,<sp/>which<sp/>introduces<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inaccuracies<sp/>in<sp/>fixed<sp/>point<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>splashDist(pathIn-&gt;pts[j1].x,<sp/>pathIn-&gt;pts[j1].y,</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[k0].x,<sp/>pathIn-&gt;pts[k0].y);</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dxNext<sp/>=<sp/>(pathIn-&gt;pts[k0].x<sp/>-<sp/>pathIn-&gt;pts[j1].x)<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dyNext<sp/>=<sp/>(pathIn-&gt;pts[k0].y<sp/>-<sp/>pathIn-&gt;pts[j1].y)<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(SplashCoord)1<sp/>/<sp/>splashDist(pathIn-&gt;pts[j1].x,<sp/>pathIn-&gt;pts[j1].y,</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[k0].x,<sp/>pathIn-&gt;pts[k0].y);</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dxNext<sp/>=<sp/>d<sp/>*<sp/>(pathIn-&gt;pts[k0].x<sp/>-<sp/>pathIn-&gt;pts[j1].x);</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dyNext<sp/>=<sp/>d<sp/>*<sp/>(pathIn-&gt;pts[k0].y<sp/>-<sp/>pathIn-&gt;pts[j1].y);</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wdxNext<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>w<sp/>*<sp/>dxNext;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wdyNext<sp/>=<sp/>(SplashCoord)0.5<sp/>*<sp/>w<sp/>*<sp/>dyNext;</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"></highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>join<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crossprod<sp/>=<sp/>dx<sp/>*<sp/>dyNext<sp/>-<sp/>dy<sp/>*<sp/>dxNext;</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dotprod<sp/>=<sp/>-(dx<sp/>*<sp/>dxNext<sp/>+<sp/>dy<sp/>*<sp/>dyNext);</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hasangle<sp/>=<sp/>crossprod<sp/>!=<sp/>0<sp/>||<sp/>dx<sp/>*<sp/>dxNext<sp/>&lt;<sp/>0<sp/>||<sp/>dy<sp/>*<sp/>dyNext<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dotprod<sp/>&gt;<sp/>0.9999)<sp/>{</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>a<sp/>divide-by-zero<sp/>--<sp/>set<sp/>miter<sp/>to<sp/>something<sp/>arbitrary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>that<sp/>sqrt(miter)<sp/>will<sp/>exceed<sp/>miterLimit<sp/>(and<sp/>m<sp/>is<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>that<sp/>situation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(note:<sp/>the<sp/>comparison<sp/>value<sp/>(0.9999)<sp/>has<sp/>to<sp/>be<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-epsilon,<sp/>where<sp/>epsilon<sp/>is<sp/>the<sp/>smallest<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>representable<sp/>in<sp/>the<sp/>fixed<sp/>point<sp/>format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/>miter<sp/>=<sp/>(state-&gt;miterLimit<sp/>+<sp/>1)<sp/>*<sp/>(state-&gt;miterLimit<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/>miter<sp/>=<sp/>(SplashCoord)2<sp/>/<sp/>((SplashCoord)1<sp/>-<sp/>dotprod);</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(miter<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>happen<sp/>because<sp/>of<sp/>floating<sp/>point<sp/>inaccuracies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>miter<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>splashSqrt(miter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"></highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasangle<sp/>&amp;&amp;<sp/>state-&gt;lineJoin<sp/>==<sp/>splashLineJoinRound)<sp/>{</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;moveTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x,</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x,</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;curveTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>bezierCircle2<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].x<sp/>+<sp/>(SplashCoord)0.5<sp/>*<sp/>w,</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasangle)<sp/>{</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;moveTo(pathIn-&gt;pts[j0].x,<sp/>pathIn-&gt;pts[j0].y);</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>angle<sp/>&lt;<sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crossprod<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdyNext,</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdxNext);</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>miter<sp/>join<sp/>inside<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineJoin<sp/>==<sp/>splashLineJoinMiter<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashSqrt(miter)<sp/>&lt;=<sp/>state-&gt;miterLimit)<sp/>{</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy<sp/>+<sp/>wdx<sp/>*<sp/>m,</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx<sp/>+<sp/>wdy<sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bevel<sp/>join<sp/>or<sp/>miter<sp/>join<sp/>outside<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>-<sp/>wdy,</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>+<sp/>wdx);</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"></highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>angle<sp/>&gt;=<sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdy,</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdx);</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>miter<sp/>join<sp/>inside<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineJoin<sp/>==<sp/>splashLineJoinMiter<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splashSqrt(miter)<sp/>&lt;=<sp/>state-&gt;miterLimit)<sp/>{</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdy<sp/>+<sp/>wdx<sp/>*<sp/>m,</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdx<sp/>+<sp/>wdy<sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdyNext,</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdxNext);</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bevel<sp/>join<sp/>or<sp/>miter<sp/>join<sp/>outside<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;lineTo(pathIn-&gt;pts[j0].x<sp/>+<sp/>wdyNext,</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIn-&gt;pts[j0].y<sp/>-<sp/>wdxNext);</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;close();</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"></highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>stroke<sp/>adjustment<sp/>hints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;strokeAdjust)<sp/>{</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!closed)<sp/>{</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineCap<sp/>==<sp/>splashLineCapButt)<sp/>{</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(firstPt,<sp/>left2<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPt,<sp/>firstPt<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last)<sp/>{</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(firstPt,<sp/>left2<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left2<sp/>+<sp/>1,<sp/>left2<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineCap<sp/>==<sp/>splashLineCapProjecting)<sp/>{</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last)<sp/>{</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(firstPt<sp/>+<sp/>1,<sp/>left2<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPt<sp/>+<sp/>1,<sp/>firstPt<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(firstPt<sp/>+<sp/>1,<sp/>left2<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left2<sp/>+<sp/>2,<sp/>left2<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(firstPt<sp/>+<sp/>1,<sp/>left2<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPt<sp/>+<sp/>1,<sp/>firstPt<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>left0<sp/>+<sp/>1,<sp/>right0);</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>join0,<sp/>left2);</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>firstPt,<sp/>left2);</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>right2<sp/>+<sp/>1,<sp/>right2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left0<sp/>=<sp/>left1;</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left1<sp/>=<sp/>left2;</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right0<sp/>=<sp/>right1;</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right1<sp/>=<sp/>right2;</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join0<sp/>=<sp/>join1;</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join1<sp/>=<sp/>join2;</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/>leftFirst<sp/>=<sp/>left2;</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/><sp/><sp/>rightFirst<sp/>=<sp/>right2;</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last)<sp/>{</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>left0<sp/>+<sp/>1,<sp/>right0);</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join0,<sp/>pathOut-&gt;length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPt,<sp/>pathOut-&gt;length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closed)<sp/>{</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,<sp/>firstPt,<sp/>leftFirst);</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1,<sp/>right1,</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightFirst<sp/>+<sp/>1,<sp/>rightFirst<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(leftFirst,<sp/>rightFirst,</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left1<sp/>+<sp/>1,<sp/>right1);</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(leftFirst,<sp/>rightFirst,</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join1,<sp/>pathOut-&gt;length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closed<sp/>&amp;&amp;<sp/>seg<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineCap<sp/>==<sp/>splashLineCapButt)<sp/>{</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1<sp/>-<sp/>1,<sp/>left1<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left1<sp/>+<sp/>1,<sp/>left1<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;lineCap<sp/>==<sp/>splashLineCapProjecting)<sp/>{</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathOut-&gt;addStrokeAdjustHint(left1<sp/>-<sp/>1,<sp/>left1<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left1<sp/>+<sp/>2,<sp/>left1<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"></highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>j0;</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>j1;</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/>++seg;</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"></highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathIn<sp/>!=<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pathIn;</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"></highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathOut;</highlight></codeline>
<codeline lineno="6319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::dumpPath(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"></highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%3d:<sp/>x=%8.2f<sp/>y=%8.2f%s%s%s%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;pts[i].x,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;pts[i].y,</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathFirst)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>first&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathLast)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>last&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathClosed)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>closed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;flags[i]<sp/>&amp;<sp/>splashPathCurve)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>curve&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"></highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Splash::dumpXPath(<ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"></highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>path-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%4d:<sp/>x0=%8.2f<sp/>y0=%8.2f<sp/>x1=%8.2f<sp/>y1=%8.2f<sp/>%s%s%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;segs[i].x0,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;segs[i].y0,</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;segs[i].x1,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)path-&gt;segs[i].y1,</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;segs[i].flags<sp/>&amp;<sp/>splashXPathHoriz)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;segs[i].flags<sp/>&amp;<sp/>splashXPathVert)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;V&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(path-&gt;segs[i].flags<sp/>&amp;<sp/>splashXPathFlip)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"></highlight></codeline>
<codeline lineno="6347"><highlight class="normal">SplashError<sp/>Splash::shadedFill(<ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*path,<sp/>GBool<sp/>hasBBox,</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_splash_pattern" kindref="compound">SplashPattern</ref><sp/>*pattern)<sp/>{</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_pipe" kindref="compound">SplashPipe</ref><sp/>pipe;</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath;</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref><sp/>*scanner;</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI,<sp/>x0,<sp/>x1,<sp/>y;</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/>SplashClipResult<sp/>clipRes;</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"></highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>aaBuf<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>happen,<sp/>but<sp/>to<sp/>be<sp/>secure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrGeneric;</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashErrEmptyPath;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/>xPath<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref>(path,<sp/>state-&gt;matrix,<sp/>state-&gt;flatness,<sp/>gTrue);</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/>xPath-&gt;aaScale();</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/>xPath-&gt;sort();</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/>yMinI<sp/>=<sp/>state-&gt;clip-&gt;getYMinI();</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/>yMaxI<sp/>=<sp/>state-&gt;clip-&gt;getYMaxI();</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias<sp/>&amp;&amp;<sp/>!inShading)<sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/>yMinI<sp/>=<sp/>yMinI<sp/>*<sp/>splashAASize;</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/>yMaxI<sp/>=<sp/>(yMaxI<sp/>+<sp/>1)<sp/>*<sp/>splashAASize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/>scanner<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref>(xPath,<sp/>gFalse,<sp/>yMinI,<sp/>yMaxI);</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"></highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>min<sp/>and<sp/>max<sp/>x<sp/>and<sp/>y<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner-&gt;getBBoxAA(&amp;xMinI,<sp/>&amp;yMinI,<sp/>&amp;xMaxI,<sp/>&amp;yMaxI);</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/>scanner-&gt;getBBox(&amp;xMinI,<sp/>&amp;yMinI,<sp/>&amp;xMaxI,<sp/>&amp;yMaxI);</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"></highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clipRes<sp/>=<sp/>state-&gt;clip-&gt;testRect(xMinI,<sp/>yMinI,<sp/>xMaxI,<sp/>yMaxI))<sp/>!=<sp/>splashClipAllOutside)<sp/>{</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>the<sp/>y<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yMinI<sp/>&lt;<sp/>state-&gt;clip-&gt;getYMinI())<sp/>{</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMinI<sp/>=<sp/>state-&gt;clip-&gt;getYMinI();</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yMaxI<sp/>&gt;<sp/>state-&gt;clip-&gt;getYMaxI())<sp/>{</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yMaxI<sp/>=<sp/>state-&gt;clip-&gt;getYMaxI();</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"></highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeInit(&amp;pipe,<sp/>0,<sp/>yMinI,<sp/>pattern,<sp/>NULL,<sp/>(Guchar)splashRound(state-&gt;fillAlpha<sp/>*<sp/>255),<sp/>vectorAntialias<sp/>&amp;&amp;<sp/>!hasBBox,<sp/>gFalse);</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"></highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>spans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vectorAntialias)<sp/>{</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>yMinI;<sp/>y<sp/>&lt;=<sp/>yMaxI;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanner-&gt;renderAALine(aaBuf,<sp/>&amp;x0,<sp/>&amp;x1,<sp/>y);</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>!=<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;clip-&gt;clipAALine(aaBuf,<sp/>&amp;x0,<sp/>&amp;x1,<sp/>y);</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>splashAASize<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasBBox<sp/>&amp;&amp;<sp/>y<sp/>&gt;<sp/>yMinI<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>yMaxI)<sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>shape<sp/>on<sp/>left<sp/>side<sp/>if<sp/>clip<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>through<sp/>the<sp/>middle<sp/>of<sp/>shading:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>*p0,<sp/>*p1,<sp/>*p2,<sp/>*p3;</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>c1,<sp/>c2,<sp/>c3,<sp/>c4;</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>(x0<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>p1<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/>p2<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>(*p0<sp/>&amp;<sp/>0x0f);<sp/>c2<sp/>=(*p1<sp/>&amp;<sp/>0x0f);<sp/>c3<sp/>=<sp/>(*p2<sp/>&amp;<sp/>0x0f)<sp/>;<sp/>c4<sp/>=<sp/>(*p3<sp/>&amp;<sp/>0x0f);</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>(*p0<sp/>&gt;&gt;<sp/>4);<sp/>c2<sp/>=<sp/>(*p1<sp/>&gt;&gt;<sp/>4);<sp/>c3<sp/>=<sp/>(*p2<sp/>&gt;&gt;<sp/>4);<sp/>c4<sp/>=<sp/>(*p3<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(c1<sp/>&amp;<sp/>0x03)<sp/>==<sp/>0x03<sp/>&amp;&amp;<sp/>(c2<sp/>&amp;<sp/>0x03)<sp/>==<sp/>0x03<sp/>&amp;&amp;<sp/>(c3<sp/>&amp;<sp/>0x03)<sp/>==<sp/>0x03<sp/>&amp;&amp;<sp/>(c4<sp/>&amp;<sp/>0x03)<sp/>==<sp/>0x03</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c1<sp/>==<sp/>c2<sp/>&amp;&amp;<sp/>c2<sp/>==<sp/>c3<sp/>&amp;&amp;<sp/>c3<sp/>==<sp/>c4<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern-&gt;testPosition(x0<sp/>-<sp/>1,<sp/>y)<sp/>)</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>shapeCorrection<sp/>=<sp/>(x0<sp/>&amp;<sp/>1)<sp/>?<sp/>0x0f<sp/>:<sp/>0xf0;</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p0<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p1<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p2<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p3<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>shape<sp/>on<sp/>right<sp/>side<sp/>if<sp/>clip<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>through<sp/>the<sp/>middle<sp/>of<sp/>shading:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>aaBuf-&gt;getDataPtr()<sp/>+<sp/>(x1<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p0<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>p1<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p3<sp/>=<sp/>p2<sp/>+<sp/>aaBuf-&gt;getRowSize();</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>(*p0<sp/>&amp;<sp/>0x0f);<sp/>c2<sp/>=(*p1<sp/>&amp;<sp/>0x0f);<sp/>c3<sp/>=<sp/>(*p2<sp/>&amp;<sp/>0x0f)<sp/>;<sp/>c4<sp/>=<sp/>(*p3<sp/>&amp;<sp/>0x0f);</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>(*p0<sp/>&gt;&gt;<sp/>4);<sp/>c2<sp/>=<sp/>(*p1<sp/>&gt;&gt;<sp/>4);<sp/>c3<sp/>=<sp/>(*p2<sp/>&gt;&gt;<sp/>4);<sp/>c4<sp/>=<sp/>(*p3<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"></highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(c1<sp/>&amp;<sp/>0xc)<sp/>==<sp/>0x0c<sp/>&amp;&amp;<sp/>(c2<sp/>&amp;<sp/>0x0c)<sp/>==<sp/>0x0c<sp/>&amp;&amp;<sp/>(c3<sp/>&amp;<sp/>0x0c)<sp/>==<sp/>0x0c<sp/>&amp;&amp;<sp/>(c4<sp/>&amp;<sp/>0x0c)<sp/>==<sp/>0x0c</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>c1<sp/>==<sp/>c2<sp/>&amp;&amp;<sp/>c2<sp/>==<sp/>c3<sp/>&amp;&amp;<sp/>c3<sp/>==<sp/>c4<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern-&gt;testPosition(x1<sp/>+<sp/>1,<sp/>y)<sp/>)</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>shapeCorrection<sp/>=<sp/>(x1<sp/>&amp;<sp/>1)<sp/>?<sp/>0x0f<sp/>:<sp/>0xf0;</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p0<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p1<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p2<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p3<sp/>|=<sp/>shapeCorrection;</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawAALine(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y);</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplashClipResult<sp/>clipRes2;</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>yMinI;<sp/>y<sp/>&lt;=<sp/>yMaxI;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(scanner-&gt;getNextSpan(y,<sp/>&amp;x0,<sp/>&amp;x1))<sp/>{</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipRes<sp/>==<sp/>splashClipAllInside)<sp/>{</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>gTrue);</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>the<sp/>x<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>state-&gt;clip-&gt;getXMinI())<sp/>{</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>state-&gt;clip-&gt;getXMinI();</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>state-&gt;clip-&gt;getXMaxI())<sp/>{</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>state-&gt;clip-&gt;getXMaxI();</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipRes2<sp/>=<sp/>state-&gt;clip-&gt;testSpan(x0,<sp/>x1,<sp/>y);</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSpan(&amp;pipe,<sp/>x0,<sp/>x1,<sp/>y,<sp/>clipRes2<sp/>==<sp/>splashClipAllInside);</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/>opClipRes<sp/>=<sp/>clipRes;</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scanner;</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xPath;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splashOk;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/Splash.cc"/>
  </compounddef>
</doxygen>
