<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_midi_track" kind="class" language="C++" prot="public">
    <compoundname>Ms::MidiTrack</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_midi_track_1aa2b1347eec36acae1cf95dee4ea6ed25" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; int, <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &gt;</type>
        <definition>std::multimap&lt;int, MidiEvent&gt; Ms::MidiTrack::_events</definition>
        <argsstring></argsstring>
        <name>_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="39" column="1" bodyfile="midi/midifile.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_track_1a55701229201335cbdba94349a642a1de" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiTrack::_outChannel</definition>
        <argsstring></argsstring>
        <name>_outChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="40" column="1" bodyfile="midi/midifile.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_track_1a49e33acbcba1a04b7fb2261ce9f0b0d4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::MidiTrack::_outPort</definition>
        <argsstring></argsstring>
        <name>_outPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="41" column="1" bodyfile="midi/midifile.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_midi_track_1ac635f46df401f82a05b6d0b84e4611e4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::MidiTrack::_drumTrack</definition>
        <argsstring></argsstring>
        <name>_drumTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="42" column="1" bodyfile="midi/midifile.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a27bb430e424378bfd16f42e2561443c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiTrack::readXml</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>readXml</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a1aac85a42504d59b2b76983a44e42ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiTrack::MidiTrack</definition>
        <argsstring>()</argsstring>
        <name>MidiTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="48" column="1" bodyfile="midi/midifile.cpp" bodystart="484" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1aaa9f15c2fe33ed0f44e0a78b2d1f0bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiTrack::~MidiTrack</definition>
        <argsstring>()</argsstring>
        <name>~MidiTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="49" column="1" bodyfile="midi/midifile.cpp" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1ad63317df652b3fa1d3ce6dbce869064f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiTrack::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a49093c0b3193ed8d5d3f0b0b8e0dc617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::multimap&lt; int, <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &gt; &amp;</type>
        <definition>const std::multimap&lt;int, MidiEvent&gt;&amp; Ms::MidiTrack::events</definition>
        <argsstring>() const</argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="52" column="1" bodyfile="midi/midifile.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1ab1557bd2e554269ecdb97b7860ba9ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; int, <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &gt; &amp;</type>
        <definition>std::multimap&lt;int, MidiEvent&gt;&amp; Ms::MidiTrack::events</definition>
        <argsstring>()</argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="53" column="1" bodyfile="midi/midifile.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1acc6f97fd1157dc46801dbb0df2a69a2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiTrack::outChannel</definition>
        <argsstring>() const</argsstring>
        <name>outChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="55" column="1" bodyfile="midi/midifile.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1ad69639bf7147d29237fde1131efd8341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiTrack::setOutChannel</definition>
        <argsstring>(int n)</argsstring>
        <name>setOutChannel</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="56" column="1" bodyfile="midi/midifile.cpp" bodystart="658" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1aad040b93458fafea339972f4537387ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::MidiTrack::outPort</definition>
        <argsstring>() const</argsstring>
        <name>outPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="57" column="1" bodyfile="midi/midifile.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a09e929575b880959afba468672067fe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiTrack::setOutPort</definition>
        <argsstring>(int n)</argsstring>
        <name>setOutPort</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="58" column="1" bodyfile="midi/midifile.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1afb4c68c56f2702d3d0b2bc58c74585c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiTrack::drumTrack</definition>
        <argsstring>() const</argsstring>
        <name>drumTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="60" column="1" bodyfile="midi/midifile.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a5f34b06fc8e9d7c6b41f8df152c5dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiTrack::insert</definition>
        <argsstring>(int tick, const MidiEvent &amp;)</argsstring>
        <name>insert</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &amp;</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="62" column="1" bodyfile="midi/midifile.cpp" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_midi_track_1a624706c894defc9817d446b83751ae21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiTrack::mergeNoteOnOffAndFindMidiType</definition>
        <argsstring>(MidiType *mt)</argsstring>
        <name>mergeNoteOnOffAndFindMidiType</name>
        <param>
          <type>MidiType *</type>
          <declname>mt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="midi/midifile.h" line="63" column="1" bodyfile="midi/midifile.cpp" bodystart="672" bodyend="866"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="midi/midifile.h" line="38" column="1" bodyfile="midi/midifile.h" bodystart="38" bodyend="64"/>
    <listofallmembers>
      <member refid="class_ms_1_1_midi_track_1ac635f46df401f82a05b6d0b84e4611e4" prot="private" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>_drumTrack</name></member>
      <member refid="class_ms_1_1_midi_track_1aa2b1347eec36acae1cf95dee4ea6ed25" prot="private" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>_events</name></member>
      <member refid="class_ms_1_1_midi_track_1a55701229201335cbdba94349a642a1de" prot="private" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>_outChannel</name></member>
      <member refid="class_ms_1_1_midi_track_1a49e33acbcba1a04b7fb2261ce9f0b0d4" prot="private" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>_outPort</name></member>
      <member refid="class_ms_1_1_midi_track_1afb4c68c56f2702d3d0b2bc58c74585c8" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>drumTrack</name></member>
      <member refid="class_ms_1_1_midi_track_1ad63317df652b3fa1d3ce6dbce869064f" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>empty</name></member>
      <member refid="class_ms_1_1_midi_track_1a49093c0b3193ed8d5d3f0b0b8e0dc617" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>events</name></member>
      <member refid="class_ms_1_1_midi_track_1ab1557bd2e554269ecdb97b7860ba9ca6" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>events</name></member>
      <member refid="class_ms_1_1_midi_track_1a5f34b06fc8e9d7c6b41f8df152c5dcc6" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>insert</name></member>
      <member refid="class_ms_1_1_midi_track_1a624706c894defc9817d446b83751ae21" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>mergeNoteOnOffAndFindMidiType</name></member>
      <member refid="class_ms_1_1_midi_track_1a1aac85a42504d59b2b76983a44e42ed5" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>MidiTrack</name></member>
      <member refid="class_ms_1_1_midi_track_1acc6f97fd1157dc46801dbb0df2a69a2d" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>outChannel</name></member>
      <member refid="class_ms_1_1_midi_track_1aad040b93458fafea339972f4537387ac" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>outPort</name></member>
      <member refid="class_ms_1_1_midi_track_1a27bb430e424378bfd16f42e2561443c6" prot="protected" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>readXml</name></member>
      <member refid="class_ms_1_1_midi_track_1ad69639bf7147d29237fde1131efd8341" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>setOutChannel</name></member>
      <member refid="class_ms_1_1_midi_track_1a09e929575b880959afba468672067fe8" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>setOutPort</name></member>
      <member refid="class_ms_1_1_midi_track_1aaa9f15c2fe33ed0f44e0a78b2d1f0bf4" prot="public" virt="non-virtual"><scope>Ms::MidiTrack</scope><name>~MidiTrack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
