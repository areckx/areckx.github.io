<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_xml_stream_notation_declaration" kind="class" language="C++" prot="public">
    <compoundname>XmlStreamNotationDeclaration</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_xml_stream_notation_declaration_1ad8c7526b8564d5118c642a4da1a98843" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamNotationDeclaration::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="164" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_notation_declaration_1a3d600f6703231956c47c1e2d809f7450" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamNotationDeclaration::m_systemId</definition>
        <argsstring></argsstring>
        <name>m_systemId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="164" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_notation_declaration_1a1415f5d9e5d354f915cbd84570ecde5b" prot="private" static="no" mutable="no">
        <type><ref refid="class_xml_stream_string_ref" kindref="compound">XmlStreamStringRef</ref></type>
        <definition>XmlStreamStringRef XmlStreamNotationDeclaration::m_publicId</definition>
        <argsstring></argsstring>
        <name>m_publicId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="164" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_xml_stream_notation_declaration_1a1f7b0d5e1a343864d46d9b2f9e4a5297" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* XmlStreamNotationDeclaration::reserved</definition>
        <argsstring></argsstring>
        <name>reserved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="165" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_xml_stream_notation_declaration_1a07cbe8adea255c3bb802811c3872de83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class XmlStreamReaderPrivate</definition>
        <argsstring></argsstring>
        <name>XmlStreamReaderPrivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="167" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1ab189bffc2f535e607045e724645cea66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamNotationDeclaration::XmlStreamNotationDeclaration</definition>
        <argsstring>()</argsstring>
        <name>XmlStreamNotationDeclaration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty notation declaration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="169" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2433" bodyend="2435"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a39154003f4dde259994ad84dae38a428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamNotationDeclaration::~XmlStreamNotationDeclaration</definition>
        <argsstring>()</argsstring>
        <name>~XmlStreamNotationDeclaration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructs this notation declaration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="170" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2458" bodyend="2460"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a6477e182d03d9981672ac72b9a52d8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamNotationDeclaration::XmlStreamNotationDeclaration</definition>
        <argsstring>(const XmlStreamNotationDeclaration &amp;)</argsstring>
        <name>XmlStreamNotationDeclaration</name>
        <param>
          <type>const <ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of <emphasis>other</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="171" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2439" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a3689e3063f5c7f21416d4c2b55913bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> &amp;</type>
        <definition>XmlStreamNotationDeclaration &amp; XmlStreamNotationDeclaration::operator=</definition>
        <argsstring>(const XmlStreamNotationDeclaration &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns <emphasis>other</emphasis> to this notation declaration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="172" column="1" bodyfile="thirdparty/xmlstream/xmlstream.cpp" bodystart="2447" bodyend="2453"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a4da496e98a28ca1a7900cb1b53e02ab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamNotationDeclaration::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the notation name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="173" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a2d7315861053ed1130b180afaf2e67c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamNotationDeclaration::systemId</definition>
        <argsstring>() const</argsstring>
        <name>systemId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the system identifier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="174" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a4469e6a2ccc3556cbaf787448d441e0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringRef</type>
        <definition>QStringRef XmlStreamNotationDeclaration::publicId</definition>
        <argsstring>() const</argsstring>
        <name>publicId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the public identifier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="175" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1acd0f30e890e5a8d9d2f0889f5d80d65e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XmlStreamNotationDeclaration::operator==</definition>
        <argsstring>(const XmlStreamNotationDeclaration &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this notation declaration with <emphasis>other</emphasis> and returns <computeroutput>true</computeroutput> if they are equal; otherwise returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="176" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1a01ba1938f916a1bc849ad16e356aabfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XmlStreamNotationDeclaration::operator!=</definition>
        <argsstring>(const XmlStreamNotationDeclaration &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares this notation declaration with <emphasis>other</emphasis> and returns <computeroutput>true</computeroutput> if they are not equal; otherwise returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.h" line="180" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="180" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="class_xml_stream_notation_declaration_1ad9d46fd24dc57a73fc72e1e1c27cd185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XmlStreamNotationDeclarations</definition>
        <argsstring></argsstring>
        <name>XmlStreamNotationDeclarations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synonym for QVector&lt;XmlStreamNotationDeclaration&gt;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/xmlstream/xmlstream.cpp" line="2411" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_xml_stream_notation_declaration" kindref="compound">XmlStreamNotationDeclaration</ref> class represents a DTD notation declaration. </para>    </briefdescription>
    <detaileddescription>
<para>QtCore <simplesect kind="since"><para>4.3 </para></simplesect>
An notation declaration consists of a <ref refid="class_xml_stream_notation_declaration_1a4da496e98a28ca1a7900cb1b53e02ab7" kindref="member">name()</ref>, a <ref refid="class_xml_stream_notation_declaration_1a2d7315861053ed1130b180afaf2e67c6" kindref="member">systemId()</ref>, and a <ref refid="class_xml_stream_notation_declaration_1a4469e6a2ccc3556cbaf787448d441e0b" kindref="member">publicId()</ref>. </para>    </detaileddescription>
    <location file="thirdparty/xmlstream/xmlstream.h" line="163" column="1" bodyfile="thirdparty/xmlstream/xmlstream.h" bodystart="163" bodyend="182"/>
    <listofallmembers>
      <member refid="class_xml_stream_notation_declaration_1ad8c7526b8564d5118c642a4da1a98843" prot="private" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>m_name</name></member>
      <member refid="class_xml_stream_notation_declaration_1a1415f5d9e5d354f915cbd84570ecde5b" prot="private" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>m_publicId</name></member>
      <member refid="class_xml_stream_notation_declaration_1a3d600f6703231956c47c1e2d809f7450" prot="private" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>m_systemId</name></member>
      <member refid="class_xml_stream_notation_declaration_1a4da496e98a28ca1a7900cb1b53e02ab7" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>name</name></member>
      <member refid="class_xml_stream_notation_declaration_1a01ba1938f916a1bc849ad16e356aabfc" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>operator!=</name></member>
      <member refid="class_xml_stream_notation_declaration_1a3689e3063f5c7f21416d4c2b55913bbb" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>operator=</name></member>
      <member refid="class_xml_stream_notation_declaration_1acd0f30e890e5a8d9d2f0889f5d80d65e" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>operator==</name></member>
      <member refid="class_xml_stream_notation_declaration_1a4469e6a2ccc3556cbaf787448d441e0b" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>publicId</name></member>
      <member refid="class_xml_stream_notation_declaration_1a1f7b0d5e1a343864d46d9b2f9e4a5297" prot="private" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>reserved</name></member>
      <member refid="class_xml_stream_notation_declaration_1a2d7315861053ed1130b180afaf2e67c6" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>systemId</name></member>
      <member refid="class_xml_stream_notation_declaration_1ab189bffc2f535e607045e724645cea66" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>XmlStreamNotationDeclaration</name></member>
      <member refid="class_xml_stream_notation_declaration_1a6477e182d03d9981672ac72b9a52d8bd" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>XmlStreamNotationDeclaration</name></member>
      <member refid="class_xml_stream_notation_declaration_1ad9d46fd24dc57a73fc72e1e1c27cd185" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>XmlStreamNotationDeclarations</name></member>
      <member refid="class_xml_stream_notation_declaration_1a07cbe8adea255c3bb802811c3872de83" prot="private" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>XmlStreamReaderPrivate</name></member>
      <member refid="class_xml_stream_notation_declaration_1a39154003f4dde259994ad84dae38a428" prot="public" virt="non-virtual"><scope>XmlStreamNotationDeclaration</scope><name>~XmlStreamNotationDeclaration</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
