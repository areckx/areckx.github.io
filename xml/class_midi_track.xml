<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_midi_track" kind="class" language="C++" prot="public">
    <compoundname>MidiTrack</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_midi_track_1a5c674fc1abd6b0a857e5f6c69573d8e4" prot="private" static="no" mutable="no">
        <type><ref refid="class_midi_file" kindref="compound">MidiFile</ref> *</type>
        <definition>MidiFile* MidiTrack::mf</definition>
        <argsstring></argsstring>
        <name>mf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="31" column="1" bodyfile="miditools/midifile.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_track_1a55ec141bb7e58663eb806e970b8b9575" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; int, <ref refid="class_midi_event" kindref="compound">MidiEvent</ref> &gt;</type>
        <definition>std::multimap&lt;int, MidiEvent&gt; MidiTrack::_events</definition>
        <argsstring></argsstring>
        <name>_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="32" column="1" bodyfile="miditools/midifile.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_midi_track_1a6ad9731fe6b6712793a152e70f9c1fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiTrack::MidiTrack</definition>
        <argsstring>(MidiFile *)</argsstring>
        <name>MidiTrack</name>
        <param>
          <type><ref refid="class_midi_file" kindref="compound">MidiFile</ref> *</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="35" column="1" bodyfile="miditools/midifile.cpp" bodystart="200" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_track_1aaa9f15c2fe33ed0f44e0a78b2d1f0bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiTrack::~MidiTrack</definition>
        <argsstring>()</argsstring>
        <name>~MidiTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_track_1a76222c1f81dc484c4eec710556680fa4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::multimap&lt; int, <ref refid="class_midi_event" kindref="compound">MidiEvent</ref> &gt; &amp;</type>
        <definition>const std::multimap&lt;int, MidiEvent&gt;&amp; MidiTrack::events</definition>
        <argsstring>() const</argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="38" column="1" bodyfile="miditools/midifile.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_track_1a93d7d8f546bd289edf28344ed7bf18cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::multimap&lt; int, <ref refid="class_midi_event" kindref="compound">MidiEvent</ref> &gt; &amp;</type>
        <definition>std::multimap&lt;int, MidiEvent&gt;&amp; MidiTrack::events</definition>
        <argsstring>()</argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="39" column="1" bodyfile="miditools/midifile.h" bodystart="39" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="miditools/midifile.h" line="30" column="1" bodyfile="miditools/midifile.h" bodystart="30" bodyend="40"/>
    <listofallmembers>
      <member refid="class_midi_track_1a55ec141bb7e58663eb806e970b8b9575" prot="private" virt="non-virtual"><scope>MidiTrack</scope><name>_events</name></member>
      <member refid="class_midi_track_1a76222c1f81dc484c4eec710556680fa4" prot="public" virt="non-virtual"><scope>MidiTrack</scope><name>events</name></member>
      <member refid="class_midi_track_1a93d7d8f546bd289edf28344ed7bf18cd" prot="public" virt="non-virtual"><scope>MidiTrack</scope><name>events</name></member>
      <member refid="class_midi_track_1a5c674fc1abd6b0a857e5f6c69573d8e4" prot="private" virt="non-virtual"><scope>MidiTrack</scope><name>mf</name></member>
      <member refid="class_midi_track_1a6ad9731fe6b6712793a152e70f9c1fc2" prot="public" virt="non-virtual"><scope>MidiTrack</scope><name>MidiTrack</name></member>
      <member refid="class_midi_track_1aaa9f15c2fe33ed0f44e0a78b2d1f0bf4" prot="public" virt="non-virtual"><scope>MidiTrack</scope><name>~MidiTrack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
