<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_exponential_function" kind="class" language="C++" prot="public">
    <compoundname>ExponentialFunction</compoundname>
    <basecompoundref refid="class_function" prot="public" virt="non-virtual">Function</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_exponential_function_1adab5ab140ad30d71f909e7bf9947ba29" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ExponentialFunction::c0[funcMaxOutputs]</definition>
        <argsstring>[funcMaxOutputs]</argsstring>
        <name>c0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="187" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exponential_function_1aceba994d19874ed3734faa6f8d53fd4c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ExponentialFunction::c1[funcMaxOutputs]</definition>
        <argsstring>[funcMaxOutputs]</argsstring>
        <name>c1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="188" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exponential_function_1ada0622b734b26c77f9bf4349f90d5b08" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ExponentialFunction::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="189" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exponential_function_1ace90b51c8a69113724f19cd1d263230a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ExponentialFunction::isLinear</definition>
        <argsstring></argsstring>
        <name>isLinear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="190" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exponential_function_1ae738e2eb95b7d9a3d46df885d4975c4e" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool ExponentialFunction::ok</definition>
        <argsstring></argsstring>
        <name>ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="191" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_exponential_function_1a3333f38dfffbf2e957c0bc119ab397f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExponentialFunction::ExponentialFunction</definition>
        <argsstring>(Object *funcObj, Dict *dict)</argsstring>
        <name>ExponentialFunction</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>funcObj</declname>
        </param>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="172" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="558" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1a52b1883fc7a1e567c3f3b40d940b12c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ExponentialFunction::~ExponentialFunction</definition>
        <argsstring>()</argsstring>
        <name>~ExponentialFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="173" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="647" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1a12927581fd8608e8c4668ad53e8c916b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
        <definition>virtual Function* ExponentialFunction::copy</definition>
        <argsstring>()</argsstring>
        <name>copy</name>
        <reimplements refid="class_function_1a7124f1598043122cc38639e33e80c97e">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="174" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1ac5ff5b3b414f322fd9a7fab56351ff74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int ExponentialFunction::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <reimplements refid="class_function_1a4787a45ad7d946ce4958d3ef5436a34d">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="175" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1ae01f065c0c1b1098f49ebe241f6aeaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ExponentialFunction::transform</definition>
        <argsstring>(double *in, double *out)</argsstring>
        <name>transform</name>
        <reimplements refid="class_function_1ab1d76848aed832e1919fadf2b57210b6">transform</reimplements>
        <param>
          <type>double *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="176" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="659" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1ab311028fc126563b6c26bd61b6682c78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool ExponentialFunction::isOk</definition>
        <argsstring>()</argsstring>
        <name>isOk</name>
        <reimplements refid="class_function_1a3f407d8642ffac957855045725477cdd">isOk</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="177" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1a8b38895dc574f810c25ee671e2643d34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* ExponentialFunction::getC0</definition>
        <argsstring>()</argsstring>
        <name>getC0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="179" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1aa4cd0349d3aff0d1006bd0f6008853df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* ExponentialFunction::getC1</definition>
        <argsstring>()</argsstring>
        <name>getC1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="180" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_exponential_function_1afffa2b2034c71242a9a4cac54f0f704b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ExponentialFunction::getE</definition>
        <argsstring>()</argsstring>
        <name>getE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="181" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="181" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_exponential_function_1af61b299742fc6c6f30fa1ae15da3cfa1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExponentialFunction::ExponentialFunction</definition>
        <argsstring>(const ExponentialFunction *func)</argsstring>
        <name>ExponentialFunction</name>
        <param>
          <type>const <ref refid="class_exponential_function" kindref="compound">ExponentialFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="185" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="650" bodyend="657"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4693">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="4692">
        <label>ExponentialFunction</label>
        <link refid="class_exponential_function"/>
        <childnode refid="4693" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4695">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="4694">
        <label>ExponentialFunction</label>
        <link refid="class_exponential_function"/>
        <childnode refid="4695" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/Function.h" line="169" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="169" bodyend="192"/>
    <listofallmembers>
      <member refid="class_exponential_function_1adab5ab140ad30d71f909e7bf9947ba29" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>c0</name></member>
      <member refid="class_exponential_function_1aceba994d19874ed3734faa6f8d53fd4c" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>c1</name></member>
      <member refid="class_exponential_function_1a12927581fd8608e8c4668ad53e8c916b" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>copy</name></member>
      <member refid="class_function_1a3b17b3e90ca1b3cc162f2a79f5a02439" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>domain</name></member>
      <member refid="class_exponential_function_1ada0622b734b26c77f9bf4349f90d5b08" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>e</name></member>
      <member refid="class_exponential_function_1a3333f38dfffbf2e957c0bc119ab397f6" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>ExponentialFunction</name></member>
      <member refid="class_exponential_function_1af61b299742fc6c6f30fa1ae15da3cfa1" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>ExponentialFunction</name></member>
      <member refid="class_function_1ae206568fd4fd4c885e3ccff76345c4e6" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>Function</name></member>
      <member refid="class_function_1af5f9fab44f490ec95d06aea99beb528c" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>Function</name></member>
      <member refid="class_exponential_function_1a8b38895dc574f810c25ee671e2643d34" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getC0</name></member>
      <member refid="class_exponential_function_1aa4cd0349d3aff0d1006bd0f6008853df" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getC1</name></member>
      <member refid="class_function_1a3168767848a2a073835841640a84f754" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getDomainMax</name></member>
      <member refid="class_function_1a57c4c3228159a304c175324faa52ce28" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getDomainMin</name></member>
      <member refid="class_exponential_function_1afffa2b2034c71242a9a4cac54f0f704b" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getE</name></member>
      <member refid="class_function_1a2382b79f8c097baea7961cd51e4f292a" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getHasRange</name></member>
      <member refid="class_function_1ad2541961d470c65a468d9a5be1238cd9" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getInputSize</name></member>
      <member refid="class_function_1a5d8d90a099b865aa42c7f90ae076521f" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getOutputSize</name></member>
      <member refid="class_function_1a713fb58959968a9653b170d17ef93129" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getRangeMax</name></member>
      <member refid="class_function_1a08d9a249f6dea2bde2da3ed0bc17ee18" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>getRangeMin</name></member>
      <member refid="class_exponential_function_1ac5ff5b3b414f322fd9a7fab56351ff74" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>getType</name></member>
      <member refid="class_function_1a45b8cff53bba65523631fc66aa0f9f63" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>hasDifferentResultSet</name></member>
      <member refid="class_function_1abf8f6a3b30732bbc1ecef56d28b3f4e2" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>hasRange</name></member>
      <member refid="class_function_1ad0636679b03ed395ebda1332d20db149" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>init</name></member>
      <member refid="class_exponential_function_1ace90b51c8a69113724f19cd1d263230a" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>isLinear</name></member>
      <member refid="class_exponential_function_1ab311028fc126563b6c26bd61b6682c78" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>isOk</name></member>
      <member refid="class_function_1ace602300f2adca1fcc07fc25326ce301" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>m</name></member>
      <member refid="class_function_1a2f582d2da9cb2af5507a55e17bc44083" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>n</name></member>
      <member refid="class_exponential_function_1ae738e2eb95b7d9a3d46df885d4975c4e" prot="private" virt="non-virtual"><scope>ExponentialFunction</scope><name>ok</name></member>
      <member refid="class_function_1aa43a8ea82c3573a7c0c7b40ea58ea128" prot="public" virt="non-virtual"><scope>ExponentialFunction</scope><name>parse</name></member>
      <member refid="class_function_1a1ed4753bf0905efc7c1b1e15d7b1e4bf" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>parse</name></member>
      <member refid="class_function_1aae39c230b68a5b8e96145635b1831038" prot="protected" virt="non-virtual"><scope>ExponentialFunction</scope><name>range</name></member>
      <member refid="class_exponential_function_1ae01f065c0c1b1098f49ebe241f6aeaa1" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>transform</name></member>
      <member refid="class_exponential_function_1a52b1883fc7a1e567c3f3b40d940b12c0" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>~ExponentialFunction</name></member>
      <member refid="class_function_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>ExponentialFunction</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
