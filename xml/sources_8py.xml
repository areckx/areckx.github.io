<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sources_8py" kind="file" language="Python">
    <compoundname>sources.py</compoundname>
    <innerclass refid="classsources_1_1_source_block_format" prot="public">sources::SourceBlockFormat</innerclass>
    <innerclass refid="classsources_1_1_source_block" prot="public">sources::SourceBlock</innerclass>
    <innerclass refid="classsources_1_1_source_processor" prot="public">sources::SourceProcessor</innerclass>
    <innernamespace refid="namespacesources">sources</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>sources.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>Convert<sp/>source<sp/>code<sp/>comments<sp/>to<sp/>multi-line<sp/>blocks<sp/>(library<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Copyright<sp/>2002-2015<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>David<sp/>Turner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>library<sp/>file<sp/>contains<sp/>definitions<sp/>of<sp/>classes<sp/>needed<sp/>to<sp/>decompose<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>source<sp/>code<sp/>files<sp/>into<sp/>a<sp/>series<sp/>of<sp/>multi-line<sp/>`blocks&apos;.<sp/><sp/>There<sp/>are<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>kinds<sp/>of<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Normal<sp/>blocks,<sp/>which<sp/>contain<sp/>source<sp/>code<sp/>or<sp/>ordinary<sp/>comments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Documentation<sp/>blocks,<sp/>which<sp/>have<sp/>restricted<sp/>formatting,<sp/>and<sp/>whose<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>always<sp/>start<sp/>with<sp/>a<sp/>documentation<sp/>markup<sp/>tag<sp/>like<sp/>`&lt;Function&gt;&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>`&lt;Type&gt;&apos;,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>routines<sp/>to<sp/>process<sp/>the<sp/>content<sp/>of<sp/>documentation<sp/>blocks<sp/>are<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>file<sp/>`content.py&apos;;<sp/>the<sp/>classes<sp/>and<sp/>methods<sp/>found<sp/>here<sp/>only<sp/>deal<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>text<sp/>parsing<sp/>and<sp/>basic<sp/>documentation<sp/>block<sp/>extraction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fileinput,<sp/>re,<sp/>sys,<sp/>os,<sp/>string</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classsources_1_1_source_block_format" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_block_format" kindref="compound">SourceBlockFormat</ref>:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classsources_1_1_source_block_format_1a764ff2b86029ec36449dcd7c4f3dca31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_block_format_1a764ff2b86029ec36449dcd7c4f3dca31" kindref="member">__init__</ref>(<sp/>self,<sp/>id,<sp/>start,<sp/>column,<sp/>end<sp/>):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Create<sp/>a<sp/>block<sp/>pattern,<sp/>used<sp/>to<sp/>recognize<sp/>special<sp/>documentation</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_format_1af9700293768e74faf9bda49cf407ff99" kindref="member">id</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>id</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_format_1a645ae8bcdc09b14da5c35fbcb2adf043" kindref="member">start</ref><sp/><sp/>=<sp/>re.compile(<sp/>start,<sp/>re.VERBOSE<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_format_1ae5bb9e416f6280d4e57557abffc87f0d" kindref="member">column</ref><sp/>=<sp/>re.compile(<sp/>column,<sp/>re.VERBOSE<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_format_1a1bec2ffda05f5947540b8b5005e99f27" kindref="member">end</ref><sp/><sp/><sp/><sp/>=<sp/>re.compile(<sp/>end,<sp/>re.VERBOSE<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Format<sp/>1<sp/>documentation<sp/>comment<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/************************************/<sp/>(at<sp/>least<sp/>2<sp/>asterisks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/************************************/<sp/>(at<sp/>least<sp/>2<sp/>asterisks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">start<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/>\s*<sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>any<sp/>number<sp/>of<sp/>whitespace</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/>/\*{2,}/<sp/>#<sp/>followed<sp/>by<sp/>&apos;/&apos;<sp/>and<sp/>at<sp/>least<sp/>two<sp/>asterisks<sp/>then<sp/>&apos;/&apos;</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/>\s*$<sp/><sp/><sp/><sp/><sp/>#<sp/>probably<sp/>followed<sp/>by<sp/>whitespace</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">column<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/>\s*<sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>any<sp/>number<sp/>of<sp/>whitespace</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/>/\*{1}<sp/><sp/><sp/>#<sp/>followed<sp/>by<sp/>&apos;/&apos;<sp/>and<sp/>precisely<sp/>one<sp/>asterisk</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/>([^*].*)<sp/>#<sp/>followed<sp/>by<sp/>anything<sp/>(group<sp/>1)</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/>\*{1}/<sp/><sp/><sp/>#<sp/>followed<sp/>by<sp/>one<sp/>asterisk<sp/>and<sp/>a<sp/>&apos;/&apos;</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/>\s*$<sp/><sp/><sp/><sp/><sp/>#<sp/>probably<sp/>followed<sp/>by<sp/>whitespace</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">re_source_block_format1<sp/>=<sp/><ref refid="classsources_1_1_source_block_format" kindref="compound">SourceBlockFormat</ref>(<sp/>1,<sp/>start,<sp/>column,<sp/>start<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Format<sp/>2<sp/>documentation<sp/>comment<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>/************************************<sp/>(at<sp/>least<sp/>2<sp/>asterisks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>asterisk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>or<sp/>more<sp/>asterisks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">start<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/>\s*<sp/><sp/><sp/><sp/><sp/>#<sp/>any<sp/>number<sp/>of<sp/>whitespace</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/>/\*{2,}<sp/>#<sp/>followed<sp/>by<sp/>&apos;/&apos;<sp/>and<sp/>at<sp/>least<sp/>two<sp/>asterisks</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/>\s*$<sp/><sp/><sp/><sp/>#<sp/>probably<sp/>followed<sp/>by<sp/>whitespace</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">column<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>\s*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>any<sp/>number<sp/>of<sp/>whitespace</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/>\*{1}(?![*/])<sp/>#<sp/>followed<sp/>by<sp/>precisely<sp/>one<sp/>asterisk<sp/>not<sp/>followed<sp/>by<sp/>`/&apos;</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/>(.*)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>then<sp/>anything<sp/>(group1)</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">end<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/>\s*<sp/><sp/>#<sp/>any<sp/>number<sp/>of<sp/>whitespace</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/>\*+/<sp/>#<sp/>followed<sp/>by<sp/>at<sp/>least<sp/>one<sp/>asterisk,<sp/>then<sp/>&apos;/&apos;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">re_source_block_format2<sp/>=<sp/><ref refid="classsources_1_1_source_block_format" kindref="compound">SourceBlockFormat</ref>(<sp/>2,<sp/>start,<sp/>column,<sp/>end<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>list<sp/>of<sp/>supported<sp/>documentation<sp/>block<sp/>formats.<sp/><sp/>We<sp/>could<sp/>add<sp/>new<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">#<sp/>quite<sp/>easily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">re_source_block_formats<sp/>=<sp/>[re_source_block_format1,<sp/>re_source_block_format2]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>following<sp/>regular<sp/>expressions<sp/>correspond<sp/>to<sp/>markup<sp/>tags<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>comment<sp/>blocks.<sp/><sp/>They<sp/>are<sp/>equivalent<sp/>despite<sp/>their<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">#<sp/>syntax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>markup<sp/>tag<sp/>consists<sp/>of<sp/>letters<sp/>or<sp/>character<sp/>`-&apos;,<sp/>to<sp/>be<sp/>found<sp/>in<sp/>group<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Notice<sp/>that<sp/>a<sp/>markup<sp/>tag<sp/>_must_<sp/>begin<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">re_markup_tag1<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;\s*&lt;((?:\w|-)*)&gt;&apos;&apos;&apos;</highlight><highlight class="normal"><sp/>)<sp/><sp/></highlight><highlight class="comment">#<sp/>&lt;xxxx&gt;<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">re_markup_tag2<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;\s*@((?:\w|-)*):&apos;&apos;&apos;</highlight><highlight class="normal"><sp/>)<sp/><sp/></highlight><highlight class="comment">#<sp/>@xxxx:<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>list<sp/>of<sp/>supported<sp/>markup<sp/>tags.<sp/><sp/>We<sp/>could<sp/>add<sp/>new<sp/>ones<sp/>quite<sp/>easily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">re_markup_tags<sp/>=<sp/>[re_markup_tag1,<sp/>re_markup_tag2]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>regular<sp/>expression<sp/>to<sp/>detect<sp/>a<sp/>cross<sp/>reference,<sp/>after<sp/>markup<sp/>tags<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">#<sp/>been<sp/>stripped<sp/>off.<sp/><sp/>Group<sp/>1<sp/>is<sp/>the<sp/>reference,<sp/>group<sp/>2<sp/>the<sp/>rest<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">#<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>cross<sp/>reference<sp/>consists<sp/>of<sp/>letters,<sp/>digits,<sp/>or<sp/>characters<sp/>`-&apos;<sp/>and<sp/>`_&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">re_crossref<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&apos;@((?:\w|-)*)(.*)&apos;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>@foo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Two<sp/>regular<sp/>expressions<sp/>to<sp/>detect<sp/>italic<sp/>and<sp/>bold<sp/>markup,<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Group<sp/>1<sp/>is<sp/>the<sp/>markup,<sp/>group<sp/>2<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>the<sp/>markup<sp/>is<sp/>limited<sp/>to<sp/>words<sp/>consisting<sp/>of<sp/>letters,<sp/>digits,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>characters<sp/>`_&apos;<sp/>and<sp/>`-&apos;,<sp/>or<sp/>an<sp/>apostrophe<sp/>(but<sp/>not<sp/>as<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">#<sp/>character).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">re_italic<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&quot;_((?:\w|-)(?:\w|&apos;|-)*)_(.*)&quot;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>_italic_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">re_bold<sp/><sp/><sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&quot;\*((?:\w|-)(?:\w|&apos;|-)*)\*(.*)&quot;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>*bold*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>regular<sp/>expression<sp/>code<sp/>to<sp/>identify<sp/>an<sp/>URL<sp/>has<sp/>been<sp/>taken<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>http://mail.python.org/pipermail/tutor/2002-September/017228.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(with<sp/>slight<sp/>modifications).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">urls<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;(?:https?|telnet|gopher|file|wais|ftp)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">ltrs<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;\w&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">gunk<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;/#~:.?+=&amp;%@!\-&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">punc<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;.:?\-&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">any<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%(ltrs)s%(gunk)s%(punc)s&quot;</highlight><highlight class="normal"><sp/>%<sp/>{<sp/></highlight><highlight class="stringliteral">&apos;ltrs&apos;</highlight><highlight class="normal"><sp/>:<sp/>ltrs,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;gunk&apos;</highlight><highlight class="normal"><sp/>:<sp/>gunk,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;punc&apos;</highlight><highlight class="normal"><sp/>:<sp/>punc<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">url<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>start<sp/>at<sp/>word<sp/>boundary</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%(urls)s<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>need<sp/>resource<sp/>and<sp/>a<sp/>colon</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%(any)s]<sp/>+?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>followed<sp/>by<sp/>one<sp/>or<sp/>more<sp/>of<sp/>any<sp/>valid</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>character,<sp/>but<sp/>be<sp/>conservative<sp/>and</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>take<sp/>only<sp/>what<sp/>you<sp/>need<sp/>to...</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(?=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>[look-ahead<sp/>non-consumptive<sp/>assertion]</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[%(punc)s]*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>either<sp/>0<sp/>or<sp/>more<sp/>punctuation</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(?:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>[non-grouping<sp/>parentheses]</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[^%(any)s]<sp/>|<sp/>$<sp/><sp/><sp/><sp/>#<sp/>followed<sp/>by<sp/>a<sp/>non-url<sp/>char</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>or<sp/>end<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;urls&apos;</highlight><highlight class="normal"><sp/>:<sp/>urls,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;any&apos;</highlight><highlight class="normal"><sp/><sp/>:<sp/>any,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;punc&apos;</highlight><highlight class="normal"><sp/>:<sp/>punc<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">re_url<sp/>=<sp/>re.compile(<sp/>url,<sp/>re.VERBOSE<sp/>|<sp/>re.MULTILINE<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>regular<sp/>expression<sp/>that<sp/>stops<sp/>collection<sp/>of<sp/>comments<sp/>for<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">#<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">re_source_sep<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&apos;\s*/\*\s*\*/&apos;</highlight><highlight class="normal"><sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>regular<sp/>expression<sp/>to<sp/>find<sp/>possible<sp/>C<sp/>identifiers<sp/>while<sp/>outputting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">#<sp/>source<sp/>code<sp/>verbatim,<sp/>covering<sp/>things<sp/>like<sp/>`*foo&apos;<sp/>or<sp/>`(bar&apos;.<sp/><sp/>Group<sp/>1<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>prefix,<sp/>group<sp/>2<sp/>the<sp/>identifier<sp/>--<sp/>since<sp/>we<sp/>scan<sp/>lines<sp/>from<sp/>left<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">#<sp/>right,<sp/>sequentially<sp/>splitting<sp/>the<sp/>source<sp/>code<sp/>into<sp/>prefix<sp/>and<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>fully<sp/>sufficient<sp/>for<sp/>our<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">re_source_crossref<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">r&apos;(\W*)(\w*)&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>regular<sp/>expression<sp/>that<sp/>matches<sp/>a<sp/>list<sp/>of<sp/>reserved<sp/>C<sp/>source<sp/>keywords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">re_source_keywords<sp/>=<sp/>re.compile(<sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;\\b<sp/>(<sp/>typedef<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>union<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signed<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/><sp/>|</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#include<sp/>|</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#define<sp/><sp/>|</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#undef<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#if<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#ifdef<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#ifndef<sp/><sp/>|</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#else<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\#endif<sp/><sp/><sp/>)<sp/>\\b&apos;&apos;&apos;</highlight><highlight class="normal">,<sp/>re.VERBOSE<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classsources_1_1_source_block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_block" kindref="compound">SourceBlock</ref>:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal">__init__(<sp/>self,<sp/>processor,<sp/>filename,<sp/>lineno,<sp/>lines<sp/>):</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1a8959c6541c8fe51ec6111dd80973805b" kindref="member">processor</ref><sp/>=<sp/>processor</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1a8c6429cc014b529c83008381c3628802" kindref="member">filename</ref><sp/><sp/>=<sp/>filename</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1ad5abe697abb489da39fcf1ada5cc0cc3" kindref="member">lineno</ref><sp/><sp/><sp/><sp/>=<sp/>lineno</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1aebcb48dd1532e4dbe6ef18ff839dd1e6" kindref="member">lines</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>lines[:]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1a841a9b75f5efd9649d0e86c1072ed65d" kindref="member">format</ref><sp/><sp/><sp/><sp/>=<sp/>processor.format</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1a3f9e3b90ee957c6d8fc8f326d05c7e3b" kindref="member">content</ref><sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1a841a9b75f5efd9649d0e86c1072ed65d" kindref="member">format</ref><sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>extract<sp/>comment<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line0<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1aebcb48dd1532e4dbe6ef18ff839dd1e6" kindref="member">lines</ref>:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>self.<ref refid="classsources_1_1_source_block_1a841a9b75f5efd9649d0e86c1072ed65d" kindref="member">format</ref>.column.match(<sp/>line0<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(<sp/>m.group(<sp/>1<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>now,<sp/>look<sp/>for<sp/>a<sp/>markup<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>string.strip(<sp/>l<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<sp/>l<sp/>)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>re_markup_tags:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tag.match(<sp/>l<sp/>):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_block_1a3f9e3b90ee957c6d8fc8f326d05c7e3b" kindref="member">content</ref><sp/>=<sp/>lines</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal">location(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classsources_1_1_source_block_1a8c6429cc014b529c83008381c3628802" kindref="member">filename</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>repr(<sp/>self.<ref refid="classsources_1_1_source_block_1ad5abe697abb489da39fcf1ada5cc0cc3" kindref="member">lineno</ref><sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>debugging<sp/>only<sp/>--<sp/>not<sp/>used<sp/>in<sp/>normal<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal">dump(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1a3f9e3b90ee957c6d8fc8f326d05c7e3b" kindref="member">content</ref>:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;{{{content<sp/>start---&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1a3f9e3b90ee957c6d8fc8f326d05c7e3b" kindref="member">content</ref>:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>l</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;---content<sp/>end}}}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1a841a9b75f5efd9649d0e86c1072ed65d" kindref="member">format</ref>:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>repr(<sp/>self.<ref refid="classsources_1_1_source_block_1a841a9b75f5efd9649d0e86c1072ed65d" kindref="member">format</ref>.id<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_block_1aebcb48dd1532e4dbe6ef18ff839dd1e6" kindref="member">lines</ref>:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>line</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classsources_1_1_source_processor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor" kindref="compound">SourceProcessor</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classsources_1_1_source_processor_1a976a915b122b4e1eaae02ff140c04292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1a976a915b122b4e1eaae02ff140c04292" kindref="member">__init__</ref>(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>a<sp/>source<sp/>processor.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4c6a2a09b63a37de1c8f70d5cfd08bb1" kindref="member">blocks</ref><sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1ab324c34e3a33bf2abec242df5407b690" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref><sp/><sp/><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classsources_1_1_source_processor_1a367b849e7abce1219f2c14a9c8fda0ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1a367b849e7abce1219f2c14a9c8fda0ca" kindref="member">reset</ref>(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Reset<sp/>a<sp/>block<sp/>processor<sp/>and<sp/>clean<sp/>up<sp/>all<sp/>its<sp/>blocks.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4c6a2a09b63a37de1c8f70d5cfd08bb1" kindref="member">blocks</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classsources_1_1_source_processor_1ac3aa49eda144c4b855c84907d8f95c18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1ac3aa49eda144c4b855c84907d8f95c18" kindref="member">parse_file</ref>(<sp/>self,<sp/>filename<sp/>):</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Parse<sp/>a<sp/>C<sp/>source<sp/>file<sp/>and<sp/>add<sp/>its<sp/>blocks<sp/>to<sp/>the<sp/>processor&apos;s</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a367b849e7abce1219f2c14a9c8fda0ca" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1ab324c34e3a33bf2abec242df5407b690" kindref="member">filename</ref><sp/>=<sp/>filename</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileinput.close()</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a3a18441a2fdf0feb1ac612f01263cee2" kindref="member">lineno</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fileinput.input(<sp/>filename<sp/>):</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>strip<sp/>trailing<sp/>newlines,<sp/>important<sp/>on<sp/>Windows<sp/>machines!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line[-1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;\012&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>line[0:-1]</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a2b1c60d8bc9d94bb958e04019baafea3" kindref="member">process_normal_line</ref>(<sp/>line<sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref>.end.match(<sp/>line<sp/>):</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>normal<sp/>block<sp/>end.<sp/><sp/>Add<sp/>it<sp/>to<sp/>`lines&apos;<sp/>and<sp/>create<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref>.append(<sp/>line<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" kindref="member">add_block_lines</ref>()</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref>.column.match(<sp/>line<sp/>):</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>normal<sp/>column<sp/>line.<sp/><sp/>Add<sp/>it<sp/>to<sp/>`lines&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref>.append(<sp/>line<sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>An<sp/>unexpected<sp/>block<sp/>end.<sp/><sp/>Create<sp/>a<sp/>new<sp/>block,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>don&apos;t<sp/>process<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" kindref="member">add_block_lines</ref>()</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>need<sp/>to<sp/>process<sp/>the<sp/>line<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a2b1c60d8bc9d94bb958e04019baafea3" kindref="member">process_normal_line</ref>(<sp/>line<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>record<sp/>the<sp/>last<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" kindref="member">add_block_lines</ref>()</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="classsources_1_1_source_processor_1a2b1c60d8bc9d94bb958e04019baafea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1a2b1c60d8bc9d94bb958e04019baafea3" kindref="member">process_normal_line</ref>(<sp/>self,<sp/>line<sp/>):</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Process<sp/>a<sp/>normal<sp/>line<sp/>and<sp/>check<sp/>whether<sp/>it<sp/>is<sp/>the<sp/>start<sp/>of<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>re_source_block_formats:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f.start.match(<sp/>line<sp/>):</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" kindref="member">add_block_lines</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/>=<sp/>f</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a3a18441a2fdf0feb1ac612f01263cee2" kindref="member">lineno</ref><sp/>=<sp/>fileinput.filelineno()</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref>.append(<sp/>line<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1a461735ab30867f32d3e974ee8f2c255d" kindref="member">add_block_lines</ref>(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Add<sp/>the<sp/>current<sp/>accumulated<sp/>lines<sp/>and<sp/>create<sp/>a<sp/>new<sp/>block.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref><sp/>!=<sp/>[]:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/><ref refid="classsources_1_1_source_block" kindref="compound">SourceBlock</ref>(<sp/>self,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1ab324c34e3a33bf2abec242df5407b690" kindref="member">filename</ref>,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a3a18441a2fdf0feb1ac612f01263cee2" kindref="member">lineno</ref>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref><sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4c6a2a09b63a37de1c8f70d5cfd08bb1" kindref="member">blocks</ref>.append(<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1a4613674ba9915139266f9a39a5d6295a" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsources_1_1_source_processor_1adc4256e323f2766175075037a992a4f8" kindref="member">lines</ref><sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>debugging<sp/>only,<sp/>not<sp/>used<sp/>in<sp/>normal<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classsources_1_1_source_processor_1a4b76f5fe5374cca4929e6d4fb6eb0e1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/><sp/></highlight><highlight class="normal"><ref refid="classsources_1_1_source_processor_1a4b76f5fe5374cca4929e6d4fb6eb0e1f" kindref="member">dump</ref>(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Print<sp/>all<sp/>blocks<sp/>in<sp/>a<sp/>processor.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsources_1_1_source_processor_1a4c6a2a09b63a37de1c8f70d5cfd08bb1" kindref="member">blocks</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.dump()</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">#<sp/>eof</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/tools/docmaker/sources.py"/>
  </compounddef>
</doxygen>
