<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ftstream_8h" kind="file" language="C++">
    <compoundname>ftstream.h</compoundname>
    <includes local="no">ft2build.h</includes>
    <incdepgraph>
      <node id="77563">
        <label>ft2build.h</label>
      </node>
      <node id="77562">
        <label>thirdparty/freetype/include/freetype/internal/ftstream.h</label>
        <link refid="ftstream_8h"/>
        <childnode refid="77563" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_f_t___frame___field__" prot="public">FT_Frame_Field_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ftstream_8h_1af83dc70d96924194672a2c6d96fb72c8" prot="public" static="no">
        <name>FT_FRAME_OP_SHIFT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="40" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3bd34e6c0ef24f4d201ead6148fba63b" prot="public" static="no">
        <name>FT_FRAME_OP_SIGNED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="41" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a87f10bca3978c1be6ccb4b913479b196" prot="public" static="no">
        <name>FT_FRAME_OP_LITTLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="42" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a2b3087077d46d8682dc1155047b319e6" prot="public" static="no">
        <name>FT_FRAME_OP_COMMAND</name>
        <param><defname>x</defname></param>
        <initializer>( x &gt;&gt; FT_FRAME_OP_SHIFT )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="43" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a8cdc30f7990bd8b258543eede1419920" prot="public" static="no">
        <name>FT_MAKE_FRAME_OP</name>
        <param><defname>command</defname></param>
        <param><defname>little</defname></param>
        <param><defname>sign</defname></param>
        <initializer>( ( command &lt;&lt; FT_FRAME_OP_SHIFT ) | ( little &lt;&lt; 1 ) | sign )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="45" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a27825ea1dd7f533280e3e5f1a5425c86" prot="public" static="no">
        <name>FT_FRAME_OP_END</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="48" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad88a1290ec6c2b96617e2390ab49a40c" prot="public" static="no">
        <name>FT_FRAME_OP_START</name>
        <initializer>1  /* start a new frame     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="49" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a824f81b64b5a2b8dbbd873f0257fda07" prot="public" static="no">
        <name>FT_FRAME_OP_BYTE</name>
        <initializer>2  /* read 1-byte value     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="50" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a7801cd1c99ba4d68a5f4e2bf0ea2c48b" prot="public" static="no">
        <name>FT_FRAME_OP_SHORT</name>
        <initializer>3  /* read 2-byte value     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="51" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a99dba74e06ede053f3b17f8e020a4f4d" prot="public" static="no">
        <name>FT_FRAME_OP_LONG</name>
        <initializer>4  /* read 4-byte value     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="52" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1adcca76ef01fde1b017459164d7630533" prot="public" static="no">
        <name>FT_FRAME_OP_OFF3</name>
        <initializer>5  /* read 3-byte value     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="53" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aee5d00cd3dba8d23d883af85e4d2563b" prot="public" static="no">
        <name>FT_FRAME_OP_BYTES</name>
        <initializer>6  /* read a bytes sequence */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="54" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a240f1b224b1444d377bbd137ff5b11e4" prot="public" static="no">
        <name>FT_FIELD_SIZE</name>
        <param><defname>f</defname></param>
        <initializer>(FT_Byte)sizeof ( ((FT_STRUCTURE*)0)-&gt;f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="99" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4dc8e9c1628c18ec6a1a26899bebadec" prot="public" static="no">
        <name>FT_FIELD_SIZE_DELTA</name>
        <param><defname>f</defname></param>
        <initializer>(FT_Byte)sizeof ( ((FT_STRUCTURE*)0)-&gt;f[0] )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="102" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3ebd7a152d802c741eaef56d4d9296ff" prot="public" static="no">
        <name>FT_FIELD_OFFSET</name>
        <param><defname>f</defname></param>
        <initializer>(FT_UShort)( offsetof( FT_STRUCTURE, f ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="105" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a06c694b7e4e5e2342a5071570946c854" prot="public" static="no">
        <name>FT_FRAME_FIELD</name>
        <param><defname>frame_op</defname></param>
        <param><defname>field</defname></param>
        <initializer>{                               \
            frame_op,                     \
            FT_FIELD_SIZE( field ),       \
            FT_FIELD_OFFSET( field )      \
          }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="108" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a97a93907b732fe9915d2ffc0adbe6667" prot="public" static="no">
        <name>FT_MAKE_EMPTY_FIELD</name>
        <param><defname>frame_op</defname></param>
        <initializer>{ frame_op, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="115" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad21c17eec6966e8275f8bc2269fe98a9" prot="public" static="no">
        <name>FT_FRAME_START</name>
        <param><defname>size</defname></param>
        <initializer>{ ft_frame_start, 0, size }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="117" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a158291ad00a2056f43fee105a3e0c794" prot="public" static="no">
        <name>FT_FRAME_END</name>
        <initializer>{ ft_frame_end, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="118" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1af3f32d9574aaf8ab1d00caf900d2ebb2" prot="public" static="no">
        <name>FT_FRAME_LONG</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_long_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="120" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a73021dde1b10ba2fc7c0c68859322f3f" prot="public" static="no">
        <name>FT_FRAME_ULONG</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_ulong_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="121" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4676c9f8eae51a3e82c0f6b98200e036" prot="public" static="no">
        <name>FT_FRAME_SHORT</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_short_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="122" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ae5421a72e00a764e9c6a56158b158772" prot="public" static="no">
        <name>FT_FRAME_USHORT</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_ushort_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="123" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a9c3f04acc1a2594fdee39a29c1fbd7ea" prot="public" static="no">
        <name>FT_FRAME_OFF3</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_off3_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="124" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a91b9044db9e535989551b1c96254ca22" prot="public" static="no">
        <name>FT_FRAME_UOFF3</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_uoff3_be, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="125" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5ef8640f671132d7a96573f0c46f62f9" prot="public" static="no">
        <name>FT_FRAME_BYTE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_byte, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="126" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ae26771a9bd6428a30aba9762f56de680" prot="public" static="no">
        <name>FT_FRAME_CHAR</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_schar, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="127" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ab486a7dc25c6a11a2444b93cbd318193" prot="public" static="no">
        <name>FT_FRAME_LONG_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_long_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="129" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aaca41819d7f46d0693daeff11e43bf00" prot="public" static="no">
        <name>FT_FRAME_ULONG_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_ulong_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="130" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a741924c511aa2aee590e3d3fd7c2ba5a" prot="public" static="no">
        <name>FT_FRAME_SHORT_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_short_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="131" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa6aa5faf9ab284a6ac439bb68db42bed" prot="public" static="no">
        <name>FT_FRAME_USHORT_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_ushort_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="132" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a56c3f43bede0c2e51747d92eae9ff391" prot="public" static="no">
        <name>FT_FRAME_OFF3_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_off3_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="133" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5a898e08b862f01d2318a99873c5593f" prot="public" static="no">
        <name>FT_FRAME_UOFF3_LE</name>
        <param><defname>f</defname></param>
        <initializer>FT_FRAME_FIELD( ft_frame_uoff3_le, f )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="134" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a70141edf47dce086f04eb8c8af7a253c" prot="public" static="no">
        <name>FT_FRAME_SKIP_LONG</name>
        <initializer>{ ft_frame_long_be, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="136" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a139d3de61c2e0bdeceb80674d0d62718" prot="public" static="no">
        <name>FT_FRAME_SKIP_SHORT</name>
        <initializer>{ ft_frame_short_be, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="137" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aaeb9e95aaecda4e8fadfb3ff87a4f561" prot="public" static="no">
        <name>FT_FRAME_SKIP_BYTE</name>
        <initializer>{ ft_frame_byte, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="138" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ac6f3c395df0c6ec90c1751be254fd3ee" prot="public" static="no">
        <name>FT_FRAME_BYTES</name>
        <param><defname>field</defname></param>
        <param><defname>count</defname></param>
        <initializer>{                            \
            ft_frame_bytes,            \
            count,                     \
            FT_FIELD_OFFSET( field )   \
          }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="140" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa13dc4d8b6f99f2263f264a58baf5847" prot="public" static="no">
        <name>FT_FRAME_SKIP_BYTES</name>
        <param><defname>count</defname></param>
        <initializer>{ ft_frame_skip, count, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="147" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a9e719039905b1e37d5da1884da79fb0f" prot="public" static="no">
        <name>FT_BYTE_</name>
        <param><defname>p</defname></param>
        <param><defname>i</defname></param>
        <initializer>( ((const FT_Byte*)(p))[(i)] )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="156" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4a832c88bf2e2d0b17a4c686dbd90388" prot="public" static="no">
        <name>FT_INT16</name>
        <param><defname>x</defname></param>
        <initializer>( (FT_Int16)(x)  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="158" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a6067fe55fb672ba01d28bd6dddf057fc" prot="public" static="no">
        <name>FT_UINT16</name>
        <param><defname>x</defname></param>
        <initializer>( (FT_UInt16)(x) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="159" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa2510c6ff1ef8e5d4f976db2a94d1f79" prot="public" static="no">
        <name>FT_INT32</name>
        <param><defname>x</defname></param>
        <initializer>( (FT_Int32)(x)  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="160" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1abb1f91353b6b006a81f0730ff54f587b" prot="public" static="no">
        <name>FT_UINT32</name>
        <param><defname>x</defname></param>
        <initializer>( (FT_UInt32)(x) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="161" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a6973b11c4a59344d92e5d5ae22d8ebda" prot="public" static="no">
        <name>FT_BYTE_U16</name>
        <param><defname>p</defname></param>
        <param><defname>i</defname></param>
        <param><defname>s</defname></param>
        <initializer>( FT_UINT16( FT_BYTE_( p, i ) ) &lt;&lt; (s) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="164" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ac0e95c6feb3c5e2b903bb99c462f9c8f" prot="public" static="no">
        <name>FT_BYTE_U32</name>
        <param><defname>p</defname></param>
        <param><defname>i</defname></param>
        <param><defname>s</defname></param>
        <initializer>( FT_UINT32( FT_BYTE_( p, i ) ) &lt;&lt; (s) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="165" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa5a19efc12e06b62d9cc5fb27addd250" prot="public" static="no">
        <name>FT_PEEK_SHORT</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT16( FT_BYTE_U16( p, 0, 8) | \
                                      FT_BYTE_U16( p, 1, 0) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="168" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a7120290b5dedbb609a6bd5898084507e" prot="public" static="no">
        <name>FT_PEEK_USHORT</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT16( FT_BYTE_U16( p, 0, 8 ) | \
                                        FT_BYTE_U16( p, 1, 0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="171" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ac67f157d8c41812fd4e0b73f2dad65b7" prot="public" static="no">
        <name>FT_PEEK_LONG</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT32( FT_BYTE_U32( p, 0, 24 ) | \
                                     FT_BYTE_U32( p, 1, 16 ) | \
                                     FT_BYTE_U32( p, 2,  8 ) | \
                                     FT_BYTE_U32( p, 3,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="174" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ae390cd90732276a481e5dea28ffccc5b" prot="public" static="no">
        <name>FT_PEEK_ULONG</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT32( FT_BYTE_U32( p, 0, 24 ) | \
                                       FT_BYTE_U32( p, 1, 16 ) | \
                                       FT_BYTE_U32( p, 2,  8 ) | \
                                       FT_BYTE_U32( p, 3,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="179" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a7b38638d19a89b4a6943eace58a7ca3a" prot="public" static="no">
        <name>FT_PEEK_OFF3</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT32( FT_BYTE_U32( p, 0, 16 ) | \
                                     FT_BYTE_U32( p, 1,  8 ) | \
                                     FT_BYTE_U32( p, 2,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="184" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad269e93795fe8ad5ecb8e4cbec471048" prot="public" static="no">
        <name>FT_PEEK_UOFF3</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT32( FT_BYTE_U32( p, 0, 16 ) | \
                                       FT_BYTE_U32( p, 1,  8 ) | \
                                       FT_BYTE_U32( p, 2,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="188" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3529250eaa1c099199bbb19a76255885" prot="public" static="no">
        <name>FT_PEEK_SHORT_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT16( FT_BYTE_U16( p, 1, 8 ) | \
                                         FT_BYTE_U16( p, 0, 0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="192" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a84e6d7a46e13f2c449ad61e4e5af1070" prot="public" static="no">
        <name>FT_PEEK_USHORT_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT16( FT_BYTE_U16( p, 1, 8 ) |  \
                                           FT_BYTE_U16( p, 0, 0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="195" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa222a8fdbfcfb429984c2b6122308584" prot="public" static="no">
        <name>FT_PEEK_LONG_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT32( FT_BYTE_U32( p, 3, 24 ) | \
                                        FT_BYTE_U32( p, 2, 16 ) | \
                                        FT_BYTE_U32( p, 1,  8 ) | \
                                        FT_BYTE_U32( p, 0,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="198" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad7a96d9f32d402016651afc5164aab03" prot="public" static="no">
        <name>FT_PEEK_ULONG_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT32( FT_BYTE_U32( p, 3, 24 ) | \
                                          FT_BYTE_U32( p, 2, 16 ) | \
                                          FT_BYTE_U32( p, 1,  8 ) | \
                                          FT_BYTE_U32( p, 0,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="203" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a01931c7b780962ec8555c0a83f6c3671" prot="public" static="no">
        <name>FT_PEEK_OFF3_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_INT32( FT_BYTE_U32( p, 2, 16 ) | \
                                        FT_BYTE_U32( p, 1,  8 ) | \
                                        FT_BYTE_U32( p, 0,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="208" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a26b30af93633b7b76ee66bed79478b8f" prot="public" static="no">
        <name>FT_PEEK_UOFF3_LE</name>
        <param><defname>p</defname></param>
        <initializer>FT_UINT32( FT_BYTE_U32( p, 2, 16 ) | \
                                          FT_BYTE_U32( p, 1,  8 ) | \
                                          FT_BYTE_U32( p, 0,  0 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="212" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a6bd6efde65d594a855c22e76b3db8082" prot="public" static="no">
        <name>FT_NEXT_CHAR</name>
        <param><defname>buffer</defname></param>
        <initializer>( (signed char)*buffer++ )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="217" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1afe9415e1e4bb65f24a7abfc03680245f" prot="public" static="no">
        <name>FT_NEXT_BYTE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned char)*buffer++ )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="220" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1adf9cb2928bf5443d749263372adbac11" prot="public" static="no">
        <name>FT_NEXT_SHORT</name>
        <param><defname>buffer</defname></param>
        <initializer>( (short)( buffer += 2, FT_PEEK_SHORT( buffer - 2 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="223" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4b19c876e295b22217b881710a7957b2" prot="public" static="no">
        <name>FT_NEXT_USHORT</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned short)( buffer += 2, FT_PEEK_USHORT( buffer - 2 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="226" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a41f1aeaae73ddb84a904a9787ff32b3f" prot="public" static="no">
        <name>FT_NEXT_OFF3</name>
        <param><defname>buffer</defname></param>
        <initializer>( (long)( buffer += 3, FT_PEEK_OFF3( buffer - 3 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="229" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad1fc5981f170073ce4f7380bf49f3ec2" prot="public" static="no">
        <name>FT_NEXT_UOFF3</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned long)( buffer += 3, FT_PEEK_UOFF3( buffer - 3 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="232" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a84114c4294ac02d82037b4b72db17fff" prot="public" static="no">
        <name>FT_NEXT_LONG</name>
        <param><defname>buffer</defname></param>
        <initializer>( (long)( buffer += 4, FT_PEEK_LONG( buffer - 4 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="235" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aead1857593f6680aaced3e39ccda0153" prot="public" static="no">
        <name>FT_NEXT_ULONG</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned long)( buffer += 4, FT_PEEK_ULONG( buffer - 4 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="238" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a093c3bab68ebccd0362e638519813361" prot="public" static="no">
        <name>FT_NEXT_SHORT_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (short)( buffer += 2, FT_PEEK_SHORT_LE( buffer - 2 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="242" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a2f1520c2d7ca2cde9ff885993210dc0a" prot="public" static="no">
        <name>FT_NEXT_USHORT_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned short)( buffer += 2, FT_PEEK_USHORT_LE( buffer - 2 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="245" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1acc9b7c53e0e31adec4e265f35df262db" prot="public" static="no">
        <name>FT_NEXT_OFF3_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (long)( buffer += 3, FT_PEEK_OFF3_LE( buffer - 3 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="248" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a97b41d1fb183e6294a4cbdc121e3de81" prot="public" static="no">
        <name>FT_NEXT_UOFF3_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned long)( buffer += 3, FT_PEEK_UOFF3_LE( buffer - 3 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="251" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3916a8ab7cf122ebaa90ddc3e6cacda4" prot="public" static="no">
        <name>FT_NEXT_LONG_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (long)( buffer += 4, FT_PEEK_LONG_LE( buffer - 4 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="254" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a1e0de457f68a6ec600406b266880c385" prot="public" static="no">
        <name>FT_NEXT_ULONG_LE</name>
        <param><defname>buffer</defname></param>
        <initializer>( (unsigned long)( buffer += 4, FT_PEEK_ULONG_LE( buffer - 4 ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="257" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1afe189d163c40ad02c59befa6d4203258" prot="public" static="no">
        <name>FT_GET_MACRO</name>
        <param><defname>func</defname></param>
        <param><defname>type</defname></param>
        <initializer>( (type)func( stream ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="284" column="10" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a1983e36e40344d098074d515ae5af612" prot="public" static="no">
        <name>FT_GET_CHAR</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetChar, FT_Char )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="286" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a73c4fa9c17781cb6748ad8e26096fc7d" prot="public" static="no">
        <name>FT_GET_BYTE</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetChar, FT_Byte )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="287" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a6c8e385f0e47228e6c7d1bda4a43e6c3" prot="public" static="no">
        <name>FT_GET_SHORT</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUShort, FT_Short )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="288" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aff48dc518ca658f10cbb9c82db43b66f" prot="public" static="no">
        <name>FT_GET_USHORT</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUShort, FT_UShort )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="289" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a1b4f499e2447fbeda77a8f0759c8fe05" prot="public" static="no">
        <name>FT_GET_OFF3</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUOffset, FT_Long )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="290" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1af48b9870f727e471632f508391bd377b" prot="public" static="no">
        <name>FT_GET_UOFF3</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUOffset, FT_ULong )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="291" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1abc2f3ba39bce900f7f76aa55f5607ab3" prot="public" static="no">
        <name>FT_GET_LONG</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetULong, FT_Long )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="292" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a15cf62f1829c71b4e35b529c2687421e" prot="public" static="no">
        <name>FT_GET_ULONG</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetULong, FT_ULong )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="293" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a8b3fa45e892214ad13838ee16679383a" prot="public" static="no">
        <name>FT_GET_TAG4</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetULong, FT_ULong )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="294" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ac7e752b07d4b109ee867361908be979f" prot="public" static="no">
        <name>FT_GET_SHORT_LE</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUShortLE, FT_Short )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="296" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5eb754c0c6b91738e212f3f883fc2e82" prot="public" static="no">
        <name>FT_GET_USHORT_LE</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetUShortLE, FT_UShort )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="297" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1abda31bc4ac9819eabb31378a83bcb47c" prot="public" static="no">
        <name>FT_GET_LONG_LE</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetULongLE, FT_Long )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="298" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a06eab4bcdc3696b5f57c49ee093c82e8" prot="public" static="no">
        <name>FT_GET_ULONG_LE</name>
        <param></param>
        <initializer>FT_GET_MACRO( FT_Stream_GetULongLE, FT_ULong )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="299" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1afb1e56e1e316c8f350f34367803c47c4" prot="public" static="no">
        <name>FT_READ_MACRO</name>
        <param><defname>func</defname></param>
        <param><defname>type</defname></param>
        <param><defname>var</defname></param>
        <initializer>( var = (type)func( stream, &amp;error ), \
            error != FT_Err_Ok )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="302" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a790dee379caabee189f82719de98c44c" prot="public" static="no">
        <name>FT_READ_BYTE</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadChar, FT_Byte, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="306" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a881d9c21fb56c9d0a4cbd9e0a978dd54" prot="public" static="no">
        <name>FT_READ_CHAR</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadChar, FT_Char, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="307" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ae67ebae980ddfe97802ebe15866a64d4" prot="public" static="no">
        <name>FT_READ_SHORT</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUShort, FT_Short, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="308" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a1144011013161a44608a85afb891c329" prot="public" static="no">
        <name>FT_READ_USHORT</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUShort, FT_UShort, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="309" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5820156a0938cb9bae2be046559466b1" prot="public" static="no">
        <name>FT_READ_OFF3</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUOffset, FT_Long, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="310" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5bee3513fb0ac8f7c235659f17eea2c1" prot="public" static="no">
        <name>FT_READ_UOFF3</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUOffset, FT_ULong, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="311" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4afa9453f279dd9217e796023a2799f1" prot="public" static="no">
        <name>FT_READ_LONG</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadULong, FT_Long, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="312" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a4010e009439b0e0393aff9cfb90e1ab6" prot="public" static="no">
        <name>FT_READ_ULONG</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadULong, FT_ULong, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="313" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a6528b185e147474687566b272f3b6724" prot="public" static="no">
        <name>FT_READ_SHORT_LE</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_Short, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="315" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ac92588764ccf93ac9e43fb8b90f331a4" prot="public" static="no">
        <name>FT_READ_USHORT_LE</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_UShort, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="316" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1af019e55502a337cc6af72a2405ffdd62" prot="public" static="no">
        <name>FT_READ_LONG_LE</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadULongLE, FT_Long, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="317" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1acab4980a4fad00e2a2b0e054bebb369f" prot="public" static="no">
        <name>FT_READ_ULONG_LE</name>
        <param><defname>var</defname></param>
        <initializer>FT_READ_MACRO( FT_Stream_ReadULongLE, FT_ULong, var )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="318" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a5262f8785a4ccdd4b903e6af1cc9a4e1" prot="public" static="no">
        <name>FT_STREAM_POS</name>
        <param></param>
        <initializer>FT_Stream_Pos( stream )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="486" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3c34f068e1c9b76cb93a26305bc83ca0" prot="public" static="no">
        <name>FT_STREAM_SEEK</name>
        <param><defname>position</defname></param>
        <initializer>FT_SET_ERROR( FT_Stream_Seek( stream,                  \
                                        (FT_ULong)(position) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="489" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aadca1eb5ef2cfaad959969a1384e06c2" prot="public" static="no">
        <name>FT_STREAM_SKIP</name>
        <param><defname>distance</defname></param>
        <initializer>FT_SET_ERROR( FT_Stream_Skip( stream,                 \
                                        (FT_Long)(distance) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="493" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ad1246e3ce6ce91df258e0f5e043debef" prot="public" static="no">
        <name>FT_STREAM_READ</name>
        <param><defname>buffer</defname></param>
        <param><defname>count</defname></param>
        <initializer>FT_SET_ERROR( FT_Stream_Read( stream,               \
                                        (FT_Byte*)(buffer),   \
                                        (FT_ULong)(count) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="497" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1ab69482acd00880954e959cd66acb83fc" prot="public" static="no">
        <name>FT_STREAM_READ_AT</name>
        <param><defname>position</defname></param>
        <param><defname>buffer</defname></param>
        <param><defname>count</defname></param>
        <initializer>FT_SET_ERROR( FT_Stream_ReadAt( stream,               \
                                          (FT_ULong)(position), \
                                          (FT_Byte*)buffer,     \
                                          (FT_ULong)(count) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="502" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aad69676397131f16326c7d2fa243fc77" prot="public" static="no">
        <name>FT_STREAM_READ_FIELDS</name>
        <param><defname>fields</defname></param>
        <param><defname>object</defname></param>
        <initializer>FT_SET_ERROR( FT_Stream_ReadFields( stream, fields, object ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="508" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a0cfcab6f51b431eaf5ff176f817ede3d" prot="public" static="no">
        <name>FT_FRAME_ENTER</name>
        <param><defname>size</defname></param>
        <initializer>FT_SET_ERROR(                                                  \
            FT_DEBUG_INNER( FT_Stream_EnterFrame( stream,                \
                                                  (FT_ULong)(size) ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="512" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a92d8a5339382481750bad468ff700eb4" prot="public" static="no">
        <name>FT_FRAME_EXIT</name>
        <param></param>
        <initializer>FT_DEBUG_INNER( FT_Stream_ExitFrame( stream ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="517" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1aa9dfe5ccf1a80dc6a1e678722d6611f9" prot="public" static="no">
        <name>FT_FRAME_EXTRACT</name>
        <param><defname>size</defname></param>
        <param><defname>bytes</defname></param>
        <initializer>FT_SET_ERROR(                                                       \
            FT_DEBUG_INNER( FT_Stream_ExtractFrame( stream,                   \
                                                    (FT_ULong)(size),         \
                                                    (FT_Byte**)&amp;(bytes) ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="520" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftstream_8h_1a3637148a7db2c87464b6908d076356dc" prot="public" static="no">
        <name>FT_FRAME_RELEASE</name>
        <param><defname>bytes</defname></param>
        <initializer>FT_DEBUG_INNER( FT_Stream_ReleaseFrame( stream,                 \
                                                  (FT_Byte**)&amp;(bytes) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="526" column="9" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ftstream_8h_1a7a2cb268db41c732fffe692856497527" prot="public" static="no">
        <name>FT_Frame_Op_</name>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a938a94038d110854524e4219d592744c" prot="public">
          <name>ft_frame_end</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527ab8a76c74da117b8aff399cff37409974" prot="public">
          <name>ft_frame_start</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_START, 0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a29bac2bba7029c233450e6183675a264" prot="public">
          <name>ft_frame_byte</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527af430d6ce1ea8c90d2cabe86ccf349f16" prot="public">
          <name>ft_frame_schar</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527ab757e1278da83b3948f561c95b75bd38" prot="public">
          <name>ft_frame_ushort_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a9133ad7ecdd9a0d809c77dddc4f5a38d" prot="public">
          <name>ft_frame_short_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527ae7299876fad08299078105d5386dc000" prot="public">
          <name>ft_frame_ushort_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a3c8a94112b88dda1bccc3bb570697ae7" prot="public">
          <name>ft_frame_short_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a84baf6e2b0f50d90d39b59d6716d4184" prot="public">
          <name>ft_frame_ulong_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527ae76bb894981b3a931befba9aea0aa7dd" prot="public">
          <name>ft_frame_long_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a7193b8228340c1a91be83e5d6230f871" prot="public">
          <name>ft_frame_ulong_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a6bca43a2efc37f6a77983f5cee78842d" prot="public">
          <name>ft_frame_long_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a1ea69c8edf7795097da774389fd6af28" prot="public">
          <name>ft_frame_uoff3_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a52a6655f2bbc582b72de0dba08c232ea" prot="public">
          <name>ft_frame_off3_be</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527aaf9922daeb16b9a43e325d48c62bd408" prot="public">
          <name>ft_frame_uoff3_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527ac98390256da2e8e010e80c1a2b6fa47f" prot="public">
          <name>ft_frame_off3_le</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a86084e3a9d61dc3857fdf34468b3c2f8" prot="public">
          <name>ft_frame_bytes</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 0 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ftstream_8h_1a7a2cb268db41c732fffe692856497527a8c09a7541e37847967d008fc1bf65fe1" prot="public">
          <name>ft_frame_skip</name>
          <initializer>= FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 1 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="58" column="1" bodyfile="thirdparty/freetype/include/freetype/internal/ftstream.h" bodystart="57" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ftstream_8h_1a2faffabd2ac8ee9055f975bbc96701ca" prot="public" static="no">
        <type>enum FT_Frame_Op_</type>
        <definition>typedef enum FT_Frame_Op_  FT_Frame_Op</definition>
        <argsstring></argsstring>
        <name>FT_Frame_Op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="ftstream_8h_1a4995aa1ed0d599c90290a4c64edd633f" prot="public" static="no">
        <type>struct <ref refid="struct_f_t___frame___field__" kindref="compound">FT_Frame_Field_</ref></type>
        <definition>typedef struct FT_Frame_Field_  FT_Frame_Field</definition>
        <argsstring></argsstring>
        <name>FT_Frame_Field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ftstream_8h_1a80669a3b6fb4d8ad8187866fc3db25aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Open</definition>
        <argsstring>(FT_Stream stream, const char *filepathname)</argsstring>
        <name>FT_Stream_Open</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filepathname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="325" column="1" bodyfile="thirdparty/freetype/builds/amiga/src/base/ftsystem.c" bodystart="381" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ab33e9c576d1ce3850acacddcdfea8692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_New</definition>
        <argsstring>(FT_Library library, const FT_Open_Args *args, FT_Stream *astream)</argsstring>
        <name>FT_Stream_New</name>
        <param>
          <type><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref></type>
          <declname>library</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___open___args__" kindref="compound">FT_Open_Args</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref> *</type>
          <declname>astream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="333" column="1" bodyfile="thirdparty/freetype/src/base/ftobjs.c" bodystart="152" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ac2619fbc2d12358691456bf1bf312710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Free</definition>
        <argsstring>(FT_Stream stream, FT_Int external)</argsstring>
        <name>FT_Stream_Free</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Int</type>
          <declname>external</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="339" column="1" bodyfile="thirdparty/freetype/src/base/ftobjs.c" bodystart="220" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1adef0df22d5202d491bd9c8a93fb4bffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_OpenMemory</definition>
        <argsstring>(FT_Stream stream, const FT_Byte *base, FT_ULong size)</argsstring>
        <name>FT_Stream_OpenMemory</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const FT_Byte *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="344" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a593fa53a196798f63d80b7bfc25a1e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Close</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_Close</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="350" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1adaaeed4eea8beadd5ae9a5493b340890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Seek</definition>
        <argsstring>(FT_Stream stream, FT_ULong pos)</argsstring>
        <name>FT_Stream_Seek</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="355" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="57" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1af8c7f7371554f4eb30c7aa56ded8078a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Skip</definition>
        <argsstring>(FT_Stream stream, FT_Long distance)</argsstring>
        <name>FT_Stream_Skip</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Long</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="360" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1aa779880df754b097a9f92f45d648ab42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Pos</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_Pos</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="365" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ab3efa470f29a814a6e99d51f62fa005a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_Read</definition>
        <argsstring>(FT_Stream stream, FT_Byte *buffer, FT_ULong count)</argsstring>
        <name>FT_Stream_Read</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="370" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a61262facd40a26a70e2bee8b7a22f05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadAt</definition>
        <argsstring>(FT_Stream stream, FT_ULong pos, FT_Byte *buffer, FT_ULong count)</argsstring>
        <name>FT_Stream_ReadAt</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>FT_Byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="376" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="119" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a5453a1db27b421914ed031497827ae19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_TryRead</definition>
        <argsstring>(FT_Stream stream, FT_Byte *buffer, FT_ULong count)</argsstring>
        <name>FT_Stream_TryRead</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="384" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="164" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a66977ac21c86fa564b923fec7572e54c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_EnterFrame</definition>
        <argsstring>(FT_Stream stream, FT_ULong count)</argsstring>
        <name>FT_Stream_EnterFrame</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="397" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="234" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a73170a3614df067fddb5821e2b8a0a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ExitFrame</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_ExitFrame</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="402" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="314" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a7171603d2cc206ce768a5b1a2ebea20d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ExtractFrame</definition>
        <argsstring>(FT_Stream stream, FT_ULong count, FT_Byte **pbytes)</argsstring>
        <name>FT_Stream_ExtractFrame</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FT_Byte **</type>
          <declname>pbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="414" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="193" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ac4a5eb8e87737cec90b9c2a2fade0cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReleaseFrame</definition>
        <argsstring>(FT_Stream stream, FT_Byte **pbytes)</argsstring>
        <name>FT_Stream_ReleaseFrame</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Byte **</type>
          <declname>pbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="420" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="215" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a782c38deb5dc7ac0bd520f37199ae240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetChar</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetChar</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="425" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="344" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1adcb62810d388975b4644a2a908e69fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetUShort</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetUShort</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="429" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="360" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a1a19ff24cf90fa33ef49b1ac1e8ec939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetUOffset</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetUOffset</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="433" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="398" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1af3163b692ff4279cc9bcec887ad42dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetULong</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetULong</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="437" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="416" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ad0847009b5b613a83f867131cf744956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetUShortLE</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetUShortLE</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="441" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="379" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a68563d95d388d8bf6025ef468be0a6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_GetULongLE</definition>
        <argsstring>(FT_Stream stream)</argsstring>
        <name>FT_Stream_GetULongLE</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="445" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="434" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a5eb02c5f6c9744323c4d0dcbc986d4a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadChar</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadChar</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="450" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="452" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1affbb9fec397d4fdd0e291ff1bec67fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadUShort</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadUShort</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="455" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="489" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a8014183afbcfa27ac9d283c3d7483ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadUOffset</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadUOffset</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="460" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="579" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1ac08d551cebc480fb099ec2092a008cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadULong</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadULong</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="465" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="624" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a0aad0e01cbebfe22b79ebed7f97505a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadUShortLE</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadUShortLE</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="470" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="534" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a48d7c100218c4e32fb129963ea0a1f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadULongLE</definition>
        <argsstring>(FT_Stream stream, FT_Error *error)</argsstring>
        <name>FT_Stream_ReadULongLE</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="475" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="669" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="ftstream_8h_1a0447bc18a9d0964196bc85aa585a758b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_Stream_ReadFields</definition>
        <argsstring>(FT_Stream stream, const FT_Frame_Field *fields, void *structure)</argsstring>
        <name>FT_Stream_ReadFields</name>
        <param>
          <type><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___frame___field__" kindref="compound">FT_Frame_Field</ref> *</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/include/freetype/internal/ftstream.h" line="481" column="1" bodyfile="thirdparty/freetype/src/base/ftstream.c" bodystart="714" bodyend="857"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>ftstream.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Stream<sp/>handling<sp/>(specification).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>1996-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__FTSTREAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FTSTREAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_SYSTEM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_OBJECTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">FT_BEGIN_HEADER</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>of<sp/>an<sp/>8-bit<sp/>frame_op<sp/>value:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/><sp/>76543210<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>xxxxxxes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>s<sp/>is<sp/>set<sp/>to<sp/>1<sp/>if<sp/>the<sp/>value<sp/>is<sp/>signed.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>e<sp/>is<sp/>set<sp/>to<sp/>1<sp/>if<sp/>the<sp/>value<sp/>is<sp/>little-endian.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>xxx<sp/>is<sp/>a<sp/>command.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_SHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_SIGNED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_LITTLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_COMMAND(<sp/>x<sp/>)<sp/><sp/>(<sp/>x<sp/>&gt;&gt;<sp/>FT_FRAME_OP_SHIFT<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_MAKE_FRAME_OP(<sp/>command,<sp/>little,<sp/>sign<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>command<sp/>&lt;&lt;<sp/>FT_FRAME_OP_SHIFT<sp/>)<sp/>|<sp/>(<sp/>little<sp/>&lt;&lt;<sp/>1<sp/>)<sp/>|<sp/>sign<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_END<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_START<sp/><sp/>1<sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>a<sp/>new<sp/>frame<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_BYTE<sp/><sp/><sp/>2<sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>1-byte<sp/>value<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_SHORT<sp/><sp/>3<sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>2-byte<sp/>value<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_LONG<sp/><sp/><sp/>4<sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>4-byte<sp/>value<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_OFF3<sp/><sp/><sp/>5<sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>3-byte<sp/>value<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OP_BYTES<sp/><sp/>6<sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>bytes<sp/>sequence<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>FT_Frame_Op_</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_end<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_start<sp/><sp/><sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_START,<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_byte<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_BYTE,<sp/><sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_schar<sp/><sp/><sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_BYTE,<sp/><sp/>0,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_ushort_be<sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_SHORT,<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_short_be<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_SHORT,<sp/>0,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_ushort_le<sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_SHORT,<sp/>1,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_short_le<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_SHORT,<sp/>1,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_ulong_be<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_LONG,<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_long_be<sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_LONG,<sp/>0,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_ulong_le<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_LONG,<sp/>1,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_long_le<sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_LONG,<sp/>1,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_uoff3_be<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_OFF3,<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_off3_be<sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_OFF3,<sp/>0,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_uoff3_le<sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_OFF3,<sp/>1,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_off3_le<sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_OFF3,<sp/>1,<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_bytes<sp/><sp/><sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_BYTES,<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>ft_frame_skip<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FT_MAKE_FRAME_OP(<sp/>FT_FRAME_OP_BYTES,<sp/>0,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}<sp/>FT_Frame_Op;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_f_t___frame___field__" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="struct_f_t___frame___field__" kindref="compound">FT_Frame_Field_</ref></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/>value;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Byte<sp/><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_UShort<sp/><sp/>offset;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_f_t___frame___field__" kindref="compound">FT_Frame_Field</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>an<sp/>FT_Frame_Field<sp/>out<sp/>of<sp/>a<sp/>structure<sp/>type<sp/>and<sp/>a<sp/>field<sp/>name.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>structure<sp/>type<sp/>must<sp/>be<sp/>set<sp/>in<sp/>the<sp/>FT_STRUCTURE<sp/>macro<sp/>before<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calling<sp/>the<sp/>FT_FRAME_START()<sp/>macro.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FIELD_SIZE(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte)sizeof<sp/>(<sp/>((FT_STRUCTURE*)0)-&gt;f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FIELD_SIZE_DELTA(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte)sizeof<sp/>(<sp/>((FT_STRUCTURE*)0)-&gt;f[0]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FIELD_OFFSET(<sp/>f<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_UShort)(<sp/>offsetof(<sp/>FT_STRUCTURE,<sp/>f<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_FIELD(<sp/>frame_op,<sp/>field<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_op,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FIELD_SIZE(<sp/>field<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FIELD_OFFSET(<sp/>field<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_MAKE_EMPTY_FIELD(<sp/>frame_op<sp/>)<sp/><sp/>{<sp/>frame_op,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_START(<sp/>size<sp/>)<sp/><sp/><sp/>{<sp/>ft_frame_start,<sp/>0,<sp/>size<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ft_frame_end,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_LONG(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_long_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_ULONG(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_ulong_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SHORT(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_short_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_USHORT(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_ushort_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OFF3(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_off3_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_UOFF3(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_uoff3_be,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_BYTE(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_byte,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_CHAR(<sp/>f<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_schar,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_LONG_LE(<sp/>f<sp/>)<sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_long_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_ULONG_LE(<sp/>f<sp/>)<sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_ulong_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SHORT_LE(<sp/>f<sp/>)<sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_short_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_USHORT_LE(<sp/>f<sp/>)<sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_ushort_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_OFF3_LE(<sp/>f<sp/>)<sp/><sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_off3_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_UOFF3_LE(<sp/>f<sp/>)<sp/><sp/><sp/>FT_FRAME_FIELD(<sp/>ft_frame_uoff3_le,<sp/>f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SKIP_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ft_frame_long_be,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SKIP_SHORT<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ft_frame_short_be,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SKIP_BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ft_frame_byte,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_BYTES(<sp/>field,<sp/>count<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ft_frame_bytes,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_FIELD_OFFSET(<sp/>field<sp/>)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_SKIP_BYTES(<sp/>count<sp/>)<sp/><sp/>{<sp/>ft_frame_skip,<sp/>count,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Integer<sp/>extraction<sp/>macros<sp/>--<sp/>the<sp/>`buffer&apos;<sp/>parameter<sp/>must<sp/>ALWAYS<sp/>be<sp/>of<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>`char*&apos;<sp/>or<sp/>equivalent<sp/>(1-byte<sp/>elements).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_BYTE_(<sp/>p,<sp/>i<sp/>)<sp/><sp/>(<sp/>((const<sp/>FT_Byte*)(p))[(i)]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_INT16(<sp/>x<sp/>)<sp/><sp/><sp/>(<sp/>(FT_Int16)(x)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_UINT16(<sp/>x<sp/>)<sp/><sp/>(<sp/>(FT_UInt16)(x)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_INT32(<sp/>x<sp/>)<sp/><sp/><sp/>(<sp/>(FT_Int32)(x)<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_UINT32(<sp/>x<sp/>)<sp/><sp/>(<sp/>(FT_UInt32)(x)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_BYTE_U16(<sp/>p,<sp/>i,<sp/>s<sp/>)<sp/><sp/>(<sp/>FT_UINT16(<sp/>FT_BYTE_(<sp/>p,<sp/>i<sp/>)<sp/>)<sp/>&lt;&lt;<sp/>(s)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_BYTE_U32(<sp/>p,<sp/>i,<sp/>s<sp/>)<sp/><sp/>(<sp/>FT_UINT32(<sp/>FT_BYTE_(<sp/>p,<sp/>i<sp/>)<sp/>)<sp/>&lt;&lt;<sp/>(s)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_SHORT(<sp/>p<sp/>)<sp/><sp/>FT_INT16(<sp/>FT_BYTE_U16(<sp/>p,<sp/>0,<sp/>8)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U16(<sp/>p,<sp/>1,<sp/>0)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_USHORT(<sp/>p<sp/>)<sp/><sp/>FT_UINT16(<sp/>FT_BYTE_U16(<sp/>p,<sp/>0,<sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U16(<sp/>p,<sp/>1,<sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_LONG(<sp/>p<sp/>)<sp/><sp/>FT_INT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/>24<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>3,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_ULONG(<sp/>p<sp/>)<sp/><sp/>FT_UINT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/>24<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>3,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_OFF3(<sp/>p<sp/>)<sp/><sp/>FT_INT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_UOFF3(<sp/>p<sp/>)<sp/><sp/>FT_UINT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_SHORT_LE(<sp/>p<sp/>)<sp/><sp/>FT_INT16(<sp/>FT_BYTE_U16(<sp/>p,<sp/>1,<sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U16(<sp/>p,<sp/>0,<sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_USHORT_LE(<sp/>p<sp/>)<sp/><sp/>FT_UINT16(<sp/>FT_BYTE_U16(<sp/>p,<sp/>1,<sp/>8<sp/>)<sp/>|<sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U16(<sp/>p,<sp/>0,<sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_LONG_LE(<sp/>p<sp/>)<sp/><sp/>FT_INT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>3,<sp/>24<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_ULONG_LE(<sp/>p<sp/>)<sp/><sp/>FT_UINT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>3,<sp/>24<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_OFF3_LE(<sp/>p<sp/>)<sp/><sp/>FT_INT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PEEK_UOFF3_LE(<sp/>p<sp/>)<sp/><sp/>FT_UINT32(<sp/>FT_BYTE_U32(<sp/>p,<sp/>2,<sp/>16<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>1,<sp/><sp/>8<sp/>)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_BYTE_U32(<sp/>p,<sp/>0,<sp/><sp/>0<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_CHAR(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(signed<sp/>char)*buffer++<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_BYTE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>char)*buffer++<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_SHORT(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(short)(<sp/>buffer<sp/>+=<sp/>2,<sp/>FT_PEEK_SHORT(<sp/>buffer<sp/>-<sp/>2<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_USHORT(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>short)(<sp/>buffer<sp/>+=<sp/>2,<sp/>FT_PEEK_USHORT(<sp/>buffer<sp/>-<sp/>2<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_OFF3(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(long)(<sp/>buffer<sp/>+=<sp/>3,<sp/>FT_PEEK_OFF3(<sp/>buffer<sp/>-<sp/>3<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_UOFF3(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>long)(<sp/>buffer<sp/>+=<sp/>3,<sp/>FT_PEEK_UOFF3(<sp/>buffer<sp/>-<sp/>3<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_LONG(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(long)(<sp/>buffer<sp/>+=<sp/>4,<sp/>FT_PEEK_LONG(<sp/>buffer<sp/>-<sp/>4<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_ULONG(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>long)(<sp/>buffer<sp/>+=<sp/>4,<sp/>FT_PEEK_ULONG(<sp/>buffer<sp/>-<sp/>4<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_SHORT_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(short)(<sp/>buffer<sp/>+=<sp/>2,<sp/>FT_PEEK_SHORT_LE(<sp/>buffer<sp/>-<sp/>2<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_USHORT_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>short)(<sp/>buffer<sp/>+=<sp/>2,<sp/>FT_PEEK_USHORT_LE(<sp/>buffer<sp/>-<sp/>2<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_OFF3_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(long)(<sp/>buffer<sp/>+=<sp/>3,<sp/>FT_PEEK_OFF3_LE(<sp/>buffer<sp/>-<sp/>3<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_UOFF3_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>long)(<sp/>buffer<sp/>+=<sp/>3,<sp/>FT_PEEK_UOFF3_LE(<sp/>buffer<sp/>-<sp/>3<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_LONG_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(long)(<sp/>buffer<sp/>+=<sp/>4,<sp/>FT_PEEK_LONG_LE(<sp/>buffer<sp/>-<sp/>4<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEXT_ULONG_LE(<sp/>buffer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(unsigned<sp/>long)(<sp/>buffer<sp/>+=<sp/>4,<sp/>FT_PEEK_ULONG_LE(<sp/>buffer<sp/>-<sp/>4<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Each<sp/>GET_xxxx()<sp/>macro<sp/>uses<sp/>an<sp/>implicit<sp/>`stream&apos;<sp/>variable.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_MACRO(<sp/>type<sp/>)<sp/><sp/><sp/><sp/>FT_NEXT_<sp/>##<sp/>type<sp/>(<sp/>stream-&gt;cursor<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_CHAR()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>CHAR<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_BYTE()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>BYTE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_SHORT()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>SHORT<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_USHORT()<sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>USHORT<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_OFF3()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>OFF3<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_UOFF3()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>UOFF3<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_LONG()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>LONG<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_ULONG()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>ULONG<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_TAG4()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>ULONG<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_SHORT_LE()<sp/><sp/><sp/>FT_GET_MACRO(<sp/>SHORT_LE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_USHORT_LE()<sp/><sp/>FT_GET_MACRO(<sp/>USHORT_LE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_LONG_LE()<sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>LONG_LE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_ULONG_LE()<sp/><sp/><sp/>FT_GET_MACRO(<sp/>ULONG_LE<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_MACRO(<sp/>func,<sp/>type<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(type)func(<sp/>stream<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_CHAR()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetChar,<sp/>FT_Char<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_BYTE()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetChar,<sp/>FT_Byte<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_SHORT()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUShort,<sp/>FT_Short<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_USHORT()<sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUShort,<sp/>FT_UShort<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_OFF3()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUOffset,<sp/>FT_Long<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_UOFF3()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUOffset,<sp/>FT_ULong<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_LONG()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetULong,<sp/>FT_Long<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_ULONG()<sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetULong,<sp/>FT_ULong<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_TAG4()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetULong,<sp/>FT_ULong<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_SHORT_LE()<sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUShortLE,<sp/>FT_Short<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_USHORT_LE()<sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetUShortLE,<sp/>FT_UShort<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_LONG_LE()<sp/><sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetULongLE,<sp/>FT_Long<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_GET_ULONG_LE()<sp/><sp/><sp/>FT_GET_MACRO(<sp/>FT_Stream_GetULongLE,<sp/>FT_ULong<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_MACRO(<sp/>func,<sp/>type,<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>var<sp/>=<sp/>(type)func(<sp/>stream,<sp/>&amp;error<sp/>),<sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>!=<sp/>FT_Err_Ok<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_BYTE(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadChar,<sp/>FT_Byte,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_CHAR(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadChar,<sp/>FT_Char,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_SHORT(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUShort,<sp/>FT_Short,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_USHORT(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUShort,<sp/>FT_UShort,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_OFF3(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUOffset,<sp/>FT_Long,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_UOFF3(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUOffset,<sp/>FT_ULong,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_LONG(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadULong,<sp/>FT_Long,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_ULONG(<sp/>var<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadULong,<sp/>FT_ULong,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_SHORT_LE(<sp/>var<sp/>)<sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUShortLE,<sp/>FT_Short,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_USHORT_LE(<sp/>var<sp/>)<sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadUShortLE,<sp/>FT_UShort,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_LONG_LE(<sp/>var<sp/>)<sp/><sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadULongLE,<sp/>FT_Long,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_READ_ULONG_LE(<sp/>var<sp/>)<sp/><sp/><sp/>FT_READ_MACRO(<sp/>FT_Stream_ReadULongLE,<sp/>FT_ULong,<sp/>var<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FT_CONFIG_OPTION_NO_DEFAULT_SYSTEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>stream<sp/>for<sp/>reading<sp/>a<sp/>regular<sp/>system<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>FT_Stream_Open(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>filepathname<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_CONFIG_OPTION_NO_DEFAULT_SYSTEM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>new<sp/>(input)<sp/>stream<sp/>from<sp/>an<sp/>FT_Open_Args<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>FT_Stream_New(<sp/><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___open___args__" kindref="compound">FT_Open_Args</ref>*<sp/><sp/>args,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*astream<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>FT_Stream_Free(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/>external<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>stream<sp/>for<sp/>reading<sp/>in-memory<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>FT_Stream_OpenMemory(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FT_Byte*<sp/><sp/>base,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>a<sp/>stream<sp/>(does<sp/>not<sp/>destroy<sp/>the<sp/>stream<sp/>structure)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>FT_Stream_Close(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>seek<sp/>within<sp/>a<sp/>stream.<sp/>position<sp/>is<sp/>relative<sp/>to<sp/>start<sp/>of<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>FT_Stream_Seek(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>bytes<sp/>in<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>FT_Stream_Skip(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Long<sp/><sp/><sp/><sp/>distance<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>current<sp/>stream<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>FT_Stream_Pos(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>bytes<sp/>from<sp/>a<sp/>stream<sp/>into<sp/>a<sp/>user-allocated<sp/>buffer,<sp/>returns<sp/>an<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>if<sp/>not<sp/>all<sp/>bytes<sp/>could<sp/>be<sp/>read.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>FT_Stream_Read(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>bytes<sp/>from<sp/>a<sp/>stream<sp/>at<sp/>a<sp/>given<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>FT_Stream_ReadAt(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>pos,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>try<sp/>to<sp/>read<sp/>bytes<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>stream;<sp/>return<sp/>number<sp/>of<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>really<sp/>available<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>FT_Stream_TryRead(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>a<sp/>frame<sp/>of<sp/>`count&apos;<sp/>consecutive<sp/>bytes<sp/>in<sp/>a<sp/>stream.<sp/><sp/>Returns<sp/>an<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>if<sp/>the<sp/>frame<sp/>could<sp/>not<sp/>be<sp/>read/accessed.<sp/><sp/>The<sp/>caller<sp/>can<sp/>use<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>FT_Stream_Get_XXX<sp/>functions<sp/>to<sp/>retrieve<sp/>frame<sp/>data<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>checks.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>You<sp/>must<sp/>_always_<sp/>call<sp/>FT_Stream_ExitFrame()<sp/>once<sp/>you<sp/>have<sp/>entered<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>stream<sp/>frame!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>FT_Stream_EnterFrame(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>a<sp/>stream<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>FT_Stream_ExitFrame(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>a<sp/>stream<sp/>frame.<sp/><sp/>If<sp/>the<sp/>stream<sp/>is<sp/>disk-based,<sp/>a<sp/>heap<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>allocated<sp/>and<sp/>the<sp/>frame<sp/>bytes<sp/>are<sp/>read<sp/>into<sp/>it.<sp/><sp/>If<sp/>the<sp/>stream<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>memory-based,<sp/>this<sp/>function<sp/>simply<sp/>set<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>data.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Useful<sp/>to<sp/>optimize<sp/>access<sp/>to<sp/>memory-based<sp/>streams<sp/>transparently.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>extracted<sp/>frames<sp/>must<sp/>be<sp/>`freed&apos;<sp/>with<sp/>a<sp/>call<sp/>to<sp/>the<sp/>function<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FT_Stream_ReleaseFrame().<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>FT_Stream_ExtractFrame(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte**<sp/><sp/>pbytes<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>release<sp/>an<sp/>extract<sp/>frame<sp/>(see<sp/>FT_Stream_ExtractFrame)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>FT_Stream_ReleaseFrame(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte**<sp/><sp/>pbytes<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>byte<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Char<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>FT_Stream_GetChar(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>16-bit<sp/>big-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_UShort<sp/>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>FT_Stream_GetUShort(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>24-bit<sp/>big-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>FT_Stream_GetUOffset(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>32-bit<sp/>big-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>FT_Stream_GetULong(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>16-bit<sp/>little-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_UShort<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>FT_Stream_GetUShortLE(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>32-bit<sp/>little-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>an<sp/>entered<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>FT_Stream_GetULongLE(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>byte<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Char<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>FT_Stream_ReadChar(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>16-bit<sp/>big-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_UShort<sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>FT_Stream_ReadUShort(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>24-bit<sp/>big-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>FT_Stream_ReadUOffset(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>32-bit<sp/>big-endian<sp/>integer<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>FT_Stream_ReadULong(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>16-bit<sp/>little-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_UShort<sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>FT_Stream_ReadUShortLE(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>32-bit<sp/>little-endian<sp/>unsigned<sp/>integer<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_ULong<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>FT_Stream_ReadULongLE(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>error<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>a<sp/>structure<sp/>from<sp/>a<sp/>stream.<sp/><sp/>The<sp/>structure<sp/>must<sp/>be<sp/>described<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>by<sp/>an<sp/>array<sp/>of<sp/>FT_Frame_Field<sp/>records.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>FT_BASE(<sp/>FT_Error<sp/>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>FT_Stream_ReadFields(<sp/><ref refid="struct_f_t___stream_rec__" kindref="compound">FT_Stream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___frame___field__" kindref="compound">FT_Frame_Field</ref>*<sp/><sp/>fields,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_POS()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Stream_Pos(<sp/>stream<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_SEEK(<sp/>position<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/>FT_Stream_Seek(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(position)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_SKIP(<sp/>distance<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/>FT_Stream_Skip(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Long)(distance)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_READ(<sp/>buffer,<sp/>count<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/>FT_Stream_Read(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte*)(buffer),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(count)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_READ_AT(<sp/>position,<sp/>buffer,<sp/>count<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/>FT_Stream_ReadAt(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(position),<sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte*)buffer,<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(count)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STREAM_READ_FIELDS(<sp/>fields,<sp/>object<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/>FT_Stream_ReadFields(<sp/>stream,<sp/>fields,<sp/>object<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_ENTER(<sp/>size<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_DEBUG_INNER(<sp/>FT_Stream_EnterFrame(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(size)<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_EXIT()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_DEBUG_INNER(<sp/>FT_Stream_ExitFrame(<sp/>stream<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_EXTRACT(<sp/>size,<sp/>bytes<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_SET_ERROR(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_DEBUG_INNER(<sp/>FT_Stream_ExtractFrame(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_ULong)(size),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte**)&amp;(bytes)<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_FRAME_RELEASE(<sp/>bytes<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_DEBUG_INNER(<sp/>FT_Stream_ReleaseFrame(<sp/>stream,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Byte**)&amp;(bytes)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">FT_END_HEADER</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__FTSTREAM_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/include/freetype/internal/ftstream.h"/>
  </compounddef>
</doxygen>
