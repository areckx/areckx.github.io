<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="volta_8h" kind="file" language="C++">
    <compoundname>volta.h</compoundname>
    <includes refid="textlinebase_8h" local="yes">textlinebase.h</includes>
    <includedby refid="moc__volta_8cpp" local="yes">build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_volta.cpp</includedby>
    <includedby refid="cmd_8cpp" local="yes">libmscore/cmd.cpp</includedby>
    <includedby refid="element_8cpp" local="yes">libmscore/element.cpp</includedby>
    <includedby refid="layout_8cpp" local="yes">libmscore/layout.cpp</includedby>
    <includedby refid="measure_8cpp" local="yes">libmscore/measure.cpp</includedby>
    <includedby refid="mscore_8cpp" local="yes">libmscore/mscore.cpp</includedby>
    <includedby refid="read114_8cpp" local="yes">libmscore/read114.cpp</includedby>
    <includedby refid="read206_8cpp" local="yes">libmscore/read206.cpp</includedby>
    <includedby refid="rendermidi_8cpp" local="yes">libmscore/rendermidi.cpp</includedby>
    <includedby refid="repeatlist_8cpp" local="yes">libmscore/repeatlist.cpp</includedby>
    <includedby refid="score_8cpp" local="yes">libmscore/score.cpp</includedby>
    <includedby refid="scorefile_8cpp" local="yes">libmscore/scorefile.cpp</includedby>
    <includedby refid="undo_8cpp" local="yes">libmscore/undo.cpp</includedby>
    <includedby refid="volta_8cpp" local="yes">libmscore/volta.cpp</includedby>
    <includedby refid="capella_8cpp" local="yes">mscore/capella.cpp</includedby>
    <includedby refid="debugger_8cpp" local="yes">mscore/debugger/debugger.cpp</includedby>
    <includedby refid="exportly_8cpp" local="yes">mscore/exportly.cpp</includedby>
    <includedby refid="exportxml_8cpp" local="yes">mscore/exportxml.cpp</includedby>
    <includedby refid="file_8cpp" local="yes">mscore/file.cpp</includedby>
    <includedby refid="importbww_8cpp" local="yes">mscore/importbww.cpp</includedby>
    <includedby refid="importgtp-gp4_8cpp" local="yes">mscore/importgtp-gp4.cpp</includedby>
    <includedby refid="importgtp-gp5_8cpp" local="yes">mscore/importgtp-gp5.cpp</includedby>
    <includedby refid="importgtp-gp6_8cpp" local="yes">mscore/importgtp-gp6.cpp</includedby>
    <includedby refid="importgtp_8cpp" local="yes">mscore/importgtp.cpp</includedby>
    <includedby refid="importmxmlpass2_8cpp" local="yes">mscore/importmxmlpass2.cpp</includedby>
    <includedby refid="importove_8cpp" local="yes">mscore/importove.cpp</includedby>
    <includedby refid="inspector_volta_8cpp" local="yes">mscore/inspector/inspectorVolta.cpp</includedby>
    <includedby refid="menus_8cpp" local="yes">mscore/menus.cpp</includedby>
    <includedby refid="musescore_8cpp" local="yes">mscore/musescore.cpp</includedby>
    <includedby refid="propertymenu_8cpp" local="yes">mscore/propertymenu.cpp</includedby>
    <includedby refid="scoreview_8cpp" local="yes">mscore/scoreview.cpp</includedby>
    <incdepgraph>
      <node id="46042">
        <label>libmscore/volta.h</label>
        <link refid="volta_8h"/>
        <childnode refid="46043" relation="include">
        </childnode>
      </node>
      <node id="46051">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="46054">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="46044">
        <label>line.h</label>
        <link refid="line_8h_source"/>
        <childnode refid="46045" relation="include">
        </childnode>
        <childnode refid="46052" relation="include">
        </childnode>
      </node>
      <node id="46043">
        <label>textlinebase.h</label>
        <link refid="textlinebase_8h_source"/>
        <childnode refid="46044" relation="include">
        </childnode>
        <childnode refid="46053" relation="include">
        </childnode>
        <childnode refid="46055" relation="include">
        </childnode>
      </node>
      <node id="46045">
        <label>spanner.h</label>
        <link refid="spanner_8h_source"/>
        <childnode refid="46046" relation="include">
        </childnode>
      </node>
      <node id="46047">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="46055">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="46048">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="46049" relation="include">
        </childnode>
      </node>
      <node id="46053">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="46054" relation="include">
        </childnode>
      </node>
      <node id="46046">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="46047" relation="include">
        </childnode>
        <childnode refid="46048" relation="include">
        </childnode>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46051" relation="include">
        </childnode>
      </node>
      <node id="46052">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="46049" relation="include">
        </childnode>
        <childnode refid="46053" relation="include">
        </childnode>
      </node>
      <node id="46049">
        <label>config.h</label>
      </node>
      <node id="46050">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="46079">
        <label>mscore/importgtp-gp5.cpp</label>
        <link refid="importgtp-gp5_8cpp_source"/>
      </node>
      <node id="46056">
        <label>libmscore/volta.h</label>
        <link refid="volta_8h"/>
        <childnode refid="46057" relation="include">
        </childnode>
        <childnode refid="46059" relation="include">
        </childnode>
        <childnode refid="46060" relation="include">
        </childnode>
        <childnode refid="46061" relation="include">
        </childnode>
        <childnode refid="46062" relation="include">
        </childnode>
        <childnode refid="46063" relation="include">
        </childnode>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46068" relation="include">
        </childnode>
        <childnode refid="46069" relation="include">
        </childnode>
        <childnode refid="46070" relation="include">
        </childnode>
        <childnode refid="46071" relation="include">
        </childnode>
        <childnode refid="46072" relation="include">
        </childnode>
        <childnode refid="46073" relation="include">
        </childnode>
        <childnode refid="46074" relation="include">
        </childnode>
        <childnode refid="46075" relation="include">
        </childnode>
        <childnode refid="46076" relation="include">
        </childnode>
        <childnode refid="46077" relation="include">
        </childnode>
        <childnode refid="46078" relation="include">
        </childnode>
        <childnode refid="46079" relation="include">
        </childnode>
        <childnode refid="46080" relation="include">
        </childnode>
        <childnode refid="46081" relation="include">
        </childnode>
        <childnode refid="46082" relation="include">
        </childnode>
        <childnode refid="46083" relation="include">
        </childnode>
        <childnode refid="46084" relation="include">
        </childnode>
        <childnode refid="46085" relation="include">
        </childnode>
        <childnode refid="46086" relation="include">
        </childnode>
        <childnode refid="46087" relation="include">
        </childnode>
        <childnode refid="46088" relation="include">
        </childnode>
      </node>
      <node id="46075">
        <label>mscore/exportxml.cpp</label>
        <link refid="exportxml_8cpp_source"/>
      </node>
      <node id="46084">
        <label>mscore/inspector/inspectorVolta.cpp</label>
        <link refid="inspector_volta_8cpp_source"/>
      </node>
      <node id="46085">
        <label>mscore/menus.cpp</label>
        <link refid="menus_8cpp_source"/>
      </node>
      <node id="46082">
        <label>mscore/importmxmlpass2.cpp</label>
        <link refid="importmxmlpass2_8cpp_source"/>
      </node>
      <node id="46081">
        <label>mscore/importgtp.cpp</label>
        <link refid="importgtp_8cpp_source"/>
      </node>
      <node id="46058">
        <label>build.release/libmscore/libmscore_autogen/moc_compilation.cpp</label>
        <link refid="libmscore_2libmscore__autogen_2moc__compilation_8cpp_source"/>
      </node>
      <node id="46068">
        <label>libmscore/score.cpp</label>
        <link refid="score_8cpp"/>
      </node>
      <node id="46057">
        <label>build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_volta.cpp</label>
        <link refid="moc__volta_8cpp_source"/>
        <childnode refid="46058" relation="include">
        </childnode>
      </node>
      <node id="46080">
        <label>mscore/importgtp-gp6.cpp</label>
        <link refid="importgtp-gp6_8cpp_source"/>
      </node>
      <node id="46077">
        <label>mscore/importbww.cpp</label>
        <link refid="importbww_8cpp_source"/>
      </node>
      <node id="46070">
        <label>libmscore/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="46071">
        <label>libmscore/volta.cpp</label>
        <link refid="volta_8cpp_source"/>
      </node>
      <node id="46066">
        <label>libmscore/rendermidi.cpp</label>
        <link refid="rendermidi_8cpp"/>
      </node>
      <node id="46067">
        <label>libmscore/repeatlist.cpp</label>
        <link refid="repeatlist_8cpp_source"/>
      </node>
      <node id="46069">
        <label>libmscore/scorefile.cpp</label>
        <link refid="scorefile_8cpp_source"/>
      </node>
      <node id="46064">
        <label>libmscore/read114.cpp</label>
        <link refid="read114_8cpp_source"/>
      </node>
      <node id="46088">
        <label>mscore/scoreview.cpp</label>
        <link refid="scoreview_8cpp_source"/>
      </node>
      <node id="46059">
        <label>libmscore/cmd.cpp</label>
        <link refid="cmd_8cpp"/>
      </node>
      <node id="46076">
        <label>mscore/file.cpp</label>
        <link refid="file_8cpp_source"/>
      </node>
      <node id="46062">
        <label>libmscore/measure.cpp</label>
        <link refid="measure_8cpp"/>
      </node>
      <node id="46083">
        <label>mscore/importove.cpp</label>
        <link refid="importove_8cpp_source"/>
      </node>
      <node id="46074">
        <label>mscore/exportly.cpp</label>
        <link refid="exportly_8cpp_source"/>
      </node>
      <node id="46072">
        <label>mscore/capella.cpp</label>
        <link refid="capella_8cpp_source"/>
      </node>
      <node id="46061">
        <label>libmscore/layout.cpp</label>
        <link refid="layout_8cpp_source"/>
      </node>
      <node id="46063">
        <label>libmscore/mscore.cpp</label>
        <link refid="mscore_8cpp_source"/>
      </node>
      <node id="46073">
        <label>mscore/debugger/debugger.cpp</label>
        <link refid="debugger_8cpp_source"/>
      </node>
      <node id="46087">
        <label>mscore/propertymenu.cpp</label>
        <link refid="propertymenu_8cpp_source"/>
      </node>
      <node id="46086">
        <label>mscore/musescore.cpp</label>
        <link refid="musescore_8cpp_source"/>
      </node>
      <node id="46060">
        <label>libmscore/element.cpp</label>
        <link refid="element_8cpp"/>
      </node>
      <node id="46065">
        <label>libmscore/read206.cpp</label>
        <link refid="read206_8cpp_source"/>
      </node>
      <node id="46078">
        <label>mscore/importgtp-gp4.cpp</label>
        <link refid="importgtp-gp4_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ms_1_1_volta_segment" prot="public">Ms::VoltaSegment</innerclass>
    <innerclass refid="class_ms_1_1_volta" prot="public">Ms::Volta</innerclass>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="volta_8h_1a949178f9bc85f5d063895c822e2db21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Q_DECLARE_METATYPE</definition>
        <argsstring>(Ms::Volta::Type)</argsstring>
        <name>Q_DECLARE_METATYPE</name>
        <param>
          <type>Ms::Volta::Type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/volta.h" line="95" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VOLTA_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VOLTA_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;textlinebase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Score;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_xml_writer" kindref="compound">XmlWriter</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Volta;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Measure;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vdebug(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>LineSegment*<sp/>voltaDebug;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@<sp/>VoltaSegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_ms_1_1_volta_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_volta_segment" kindref="compound">VoltaSegment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_text_line_base_segment" kindref="compound">TextLineBaseSegment</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_volta_segment" kindref="compound">VoltaSegment</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s)<sp/>:<sp/><ref refid="class_ms_1_1_text_line_base_segment" kindref="compound">TextLineBaseSegment</ref>(s)<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::VOLTA_SEGMENT;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_volta_segment" kindref="compound">VoltaSegment</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_volta_segment" kindref="compound">VoltaSegment</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref>*<sp/>volta()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref>*)spanner();<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>layout()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>getProperty(P_ID<sp/>propertyId)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>propertyDefault(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>PropertyFlags<sp/>propertyFlags(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StyleIdx<sp/>getPropertyStyle(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetProperty(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>styleChanged()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@<sp/>Volta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@P<sp/>voltaType<sp/><sp/>enum<sp/>(Volta.CLOSE,<sp/>Volta.OPEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_ms_1_1_volta" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_text_line_base" kindref="compound">TextLineBase</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_GADGET</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>_endings;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>Type<sp/>:<sp/>char<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN,<sp/>CLOSED</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref>(<ref refid="class_ms_1_1_score" kindref="compound">Score</ref>*<sp/>s);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref>*<sp/>clone()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ElementType::VOLTA;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_line_segment" kindref="compound">LineSegment</ref>*<sp/>createLineSegment()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(<ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read(<ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref>&amp;<sp/>e)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;<sp/>endings()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_endings;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;int&gt;&amp;<sp/>endings()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_endings;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEndings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;int&gt;&amp;<sp/>l)<sp/>{<sp/>_endings<sp/>=<sp/>l;<sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>s);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>text()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasEnding(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVoltaType(Volta::Type);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>voltaType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>getProperty(P_ID<sp/>propertyId)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QVariant<sp/>propertyDefault(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StyleIdx<sp/>getPropertyStyle(P_ID)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>systemFlag()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>QString<sp/>accessibleInfo()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">Q_DECLARE_METATYPE(Ms::Volta::Type);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libmscore/volta.h"/>
  </compounddef>
</doxygen>
