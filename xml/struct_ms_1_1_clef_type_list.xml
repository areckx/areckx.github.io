<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_ms_1_1_clef_type_list" kind="struct" language="C++" prot="public">
    <compoundname>Ms::ClefTypeList</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_ms_1_1_clef_type_list_1a439d1af8fbc56d3f1233a94fae255117" prot="public" static="no" mutable="no">
        <type>ClefType</type>
        <definition>ClefType Ms::ClefTypeList::_concertClef</definition>
        <argsstring></argsstring>
        <name>_concertClef</name>
        <initializer>= ClefType::G</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="80" column="1" bodyfile="libmscore/clef.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_ms_1_1_clef_type_list_1aefa541c00c4453cc0f17e98b949e00cb" prot="public" static="no" mutable="no">
        <type>ClefType</type>
        <definition>ClefType Ms::ClefTypeList::_transposingClef</definition>
        <argsstring></argsstring>
        <name>_transposingClef</name>
        <initializer>= ClefType::G</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="81" column="1" bodyfile="libmscore/clef.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_ms_1_1_clef_type_list_1a71a2c4c3d7a2cd9d63ea0b8b7965b468" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::ClefTypeList::ClefTypeList</definition>
        <argsstring>()</argsstring>
        <name>ClefTypeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="83" column="1" bodyfile="libmscore/clef.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_clef_type_list_1a2ce99fb65829a940a829c413421bafe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::ClefTypeList::ClefTypeList</definition>
        <argsstring>(ClefType a, ClefType b)</argsstring>
        <name>ClefTypeList</name>
        <param>
          <type>ClefType</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ClefType</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="84" column="1" bodyfile="libmscore/clef.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_clef_type_list_1a135688157be2f8b45d60c3422176461f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::ClefTypeList::ClefTypeList</definition>
        <argsstring>(ClefType a)</argsstring>
        <name>ClefTypeList</name>
        <param>
          <type>ClefType</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="85" column="1" bodyfile="libmscore/clef.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_clef_type_list_1af4188419e9a35e9b8d032af8a2b09ca2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::ClefTypeList::operator==</definition>
        <argsstring>(const ClefTypeList &amp;t) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_clef_type_list" kindref="compound">ClefTypeList</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="86" column="1" bodyfile="libmscore/cleflist.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_ms_1_1_clef_type_list_1adcd01c42970af7f7665b5d687108b999" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::ClefTypeList::operator!=</definition>
        <argsstring>(const ClefTypeList &amp;t) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_clef_type_list" kindref="compound">ClefTypeList</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.h" line="87" column="1" bodyfile="libmscore/cleflist.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libmscore/clef.h" line="79" column="1" bodyfile="libmscore/clef.h" bodystart="79" bodyend="88"/>
    <listofallmembers>
      <member refid="struct_ms_1_1_clef_type_list_1a439d1af8fbc56d3f1233a94fae255117" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>_concertClef</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1aefa541c00c4453cc0f17e98b949e00cb" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>_transposingClef</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1a71a2c4c3d7a2cd9d63ea0b8b7965b468" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>ClefTypeList</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1a2ce99fb65829a940a829c413421bafe4" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>ClefTypeList</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1a135688157be2f8b45d60c3422176461f" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>ClefTypeList</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1adcd01c42970af7f7665b5d687108b999" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>operator!=</name></member>
      <member refid="struct_ms_1_1_clef_type_list_1af4188419e9a35e9b8d032af8a2b09ca2" prot="public" virt="non-virtual"><scope>Ms::ClefTypeList</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
