<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_midi_file" kind="class" language="C++" prot="public">
    <compoundname>MidiFile</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_midi_file_1ad7ca83c6ddeb2762c72e4a14ed38901a" prot="private" static="no" mutable="no">
        <type><ref refid="class_tempo_map" kindref="compound">TempoMap</ref></type>
        <definition>TempoMap MidiFile::_tempoMap</definition>
        <argsstring></argsstring>
        <name>_tempoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="47" column="1" bodyfile="miditools/midifile.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a17db0e99b5f6537a0db11acf726109a9" prot="private" static="no" mutable="no">
        <type>QIODevice *</type>
        <definition>QIODevice* MidiFile::fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="48" column="1" bodyfile="miditools/midifile.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a9015d7144b7c62e19f357f0e25e3bc8a" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_midi_track" kindref="compound">MidiTrack</ref> * &gt;</type>
        <definition>std::list&lt;MidiTrack*&gt; MidiFile::_tracks</definition>
        <argsstring></argsstring>
        <name>_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="49" column="1" bodyfile="miditools/midifile.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1aa77430e039445383487312601b268a41" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MidiFile::_division</definition>
        <argsstring></argsstring>
        <name>_division</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="50" column="1" bodyfile="miditools/midifile.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a77e697571c78b49e3905e9481d35827b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MidiFile::_format</definition>
        <argsstring></argsstring>
        <name>_format</name>
        <briefdescription>
<para>midi file format (0-2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="51" column="1" bodyfile="miditools/midifile.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a2de9a61174635e1d8b856a20bb5443d0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MidiFile::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
<para>running status </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="53" column="1" bodyfile="miditools/midifile.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a2a551bf8ca46becd1190ba29d384b782" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MidiFile::sstatus</definition>
        <argsstring></argsstring>
        <name>sstatus</name>
        <briefdescription>
<para>running status (not reset after meta or sysex events) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="54" column="1" bodyfile="miditools/midifile.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1ae169a88fb2d9d408ecf3e683404216ca" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MidiFile::click</definition>
        <argsstring></argsstring>
        <name>click</name>
        <briefdescription>
<para>current tick position in file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="55" column="1" bodyfile="miditools/midifile.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_midi_file_1a628077a07cb34469cf02e424dc0f87df" prot="private" static="no" mutable="no">
        <type>qint64</type>
        <definition>qint64 MidiFile::curPos</definition>
        <argsstring></argsstring>
        <name>curPos</name>
        <briefdescription>
<para>current file byte position </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="56" column="1" bodyfile="miditools/midifile.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_midi_file_1af1925aeaf05cc9a4577311db1b1114ae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::read</definition>
        <argsstring>(void *, qint64)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <defname>p</defname>
        </param>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="60" column="1" bodyfile="miditools/midifile.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1ac7cc609e1b398dc33c42a8c902ac2608" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::getvl</definition>
        <argsstring>()</argsstring>
        <name>getvl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="61" column="1" bodyfile="miditools/midifile.cpp" bodystart="181" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1aaf8046d0a5e8da4ad02f52fca895f3f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::readShort</definition>
        <argsstring>()</argsstring>
        <name>readShort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="62" column="1" bodyfile="miditools/midifile.cpp" bodystart="133" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1aedd3144615cf104d0a05f82583b9a9de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::readLong</definition>
        <argsstring>()</argsstring>
        <name>readLong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="63" column="1" bodyfile="miditools/midifile.cpp" bodystart="150" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1aafdb5191d57e8405a1f6d41af6f119c2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::readEvent</definition>
        <argsstring>(MidiEvent *)</argsstring>
        <name>readEvent</name>
        <param>
          <type><ref refid="class_midi_event" kindref="compound">MidiEvent</ref> *</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="64" column="1" bodyfile="miditools/midifile.cpp" bodystart="217" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a3a125b39fb645a5576a97f889cceba30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::readTrack</definition>
        <argsstring>()</argsstring>
        <name>readTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="65" column="1" bodyfile="miditools/midifile.cpp" bodystart="84" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1afe2f0f15effd198649ec822fa99888a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::skip</definition>
        <argsstring>(qint64)</argsstring>
        <name>skip</name>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="66" column="1" bodyfile="miditools/midifile.cpp" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a96c6082dae7dffc86ee0d173a700c14b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::write</definition>
        <argsstring>(const void *, qint64)</argsstring>
        <name>write</name>
        <param>
          <type>const void *</type>
          <defname>p</defname>
        </param>
        <param>
          <type>qint64</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="69" column="1" bodyfile="miditools/midifile.cpp" bodystart="478" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a70e964adc1025404111aaa47336a89a9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeShort</definition>
        <argsstring>(int)</argsstring>
        <name>writeShort</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="70" column="1" bodyfile="miditools/midifile.cpp" bodystart="491" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a34977bbb6e6a998f577de3009c901301" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeLong</definition>
        <argsstring>(int)</argsstring>
        <name>writeLong</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="71" column="1" bodyfile="miditools/midifile.cpp" bodystart="501" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1aaed701c6575337afd00d2acc01dcdba1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::writeTrack</definition>
        <argsstring>(const MidiTrack *)</argsstring>
        <name>writeTrack</name>
        <param>
          <type>const <ref refid="class_midi_track" kindref="compound">MidiTrack</ref> *</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="72" column="1" bodyfile="miditools/midifile.cpp" bodystart="427" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1adf3c23a612f9d2e2d5f72c17085b7f7e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeEvent</definition>
        <argsstring>(const MidiEvent &amp;)</argsstring>
        <name>writeEvent</name>
        <param>
          <type>const <ref refid="class_midi_event" kindref="compound">MidiEvent</ref> &amp;</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="73" column="1" bodyfile="miditools/midifile.cpp" bodystart="375" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a74a8d5c857a669a8fa7334bbf30c40e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::putvl</definition>
        <argsstring>(unsigned)</argsstring>
        <name>putvl</name>
        <param>
          <type>unsigned</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="74" column="1" bodyfile="miditools/midifile.cpp" bodystart="514" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a37cee5861163503f2b051de0307a61f5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::put</definition>
        <argsstring>(unsigned char c)</argsstring>
        <name>put</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="75" column="1" bodyfile="miditools/midifile.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1ab9f67f681e39817a250015f8428d8f84" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::writeStatus</definition>
        <argsstring>(MidiEventType, int channel)</argsstring>
        <name>writeStatus</name>
        <param>
          <type>MidiEventType</type>
          <defname>st</defname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="76" column="1" bodyfile="miditools/midifile.cpp" bodystart="462" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a42abc6c1a00e6d83cbf17aa768808f51" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::resetRunningStatus</definition>
        <argsstring>()</argsstring>
        <name>resetRunningStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="78" column="1" bodyfile="miditools/midifile.h" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_midi_file_1a989fec6d479c0ebf68ef72224e58e894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MidiFile::MidiFile</definition>
        <argsstring>()</argsstring>
        <name>MidiFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="81" column="1" bodyfile="miditools/midifile.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1ab97ac3c329c144fc091d46a28476f697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::read</definition>
        <argsstring>(const QString &amp;path)</argsstring>
        <name>read</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="82" column="1" bodyfile="miditools/midifile.cpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a8a1ac2ced9288846596cd5b2d18abe87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::read</definition>
        <argsstring>(QIODevice *)</argsstring>
        <name>read</name>
        <param>
          <type>QIODevice *</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="83" column="1" bodyfile="miditools/midifile.cpp" bodystart="40" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a3842d8a3598d2845d7ee7936e51ab106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::write</definition>
        <argsstring>(const QString &amp;path)</argsstring>
        <name>write</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="85" column="1" bodyfile="miditools/midifile.cpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a05ed269ba1eaa3070c82361869c77c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MidiFile::write</definition>
        <argsstring>(QIODevice *)</argsstring>
        <name>write</name>
        <param>
          <type>QIODevice *</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="86" column="1" bodyfile="miditools/midifile.cpp" bodystart="356" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a67b891f452959bc7622a9490a0078452" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::list&lt; <ref refid="class_midi_track" kindref="compound">MidiTrack</ref> * &gt; &amp;</type>
        <definition>const std::list&lt;MidiTrack*&gt;&amp; MidiFile::tracks</definition>
        <argsstring>() const</argsstring>
        <name>tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="88" column="1" bodyfile="miditools/midifile.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a8ed6c3b92a2991ddbffa3b39b288fe13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::list&lt; <ref refid="class_midi_track" kindref="compound">MidiTrack</ref> * &gt; &amp;</type>
        <definition>std::list&lt;MidiTrack*&gt;&amp; MidiFile::tracks</definition>
        <argsstring>()</argsstring>
        <name>tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="89" column="1" bodyfile="miditools/midifile.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a4259956087abc82f9b1f3a668874664c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="91" column="1" bodyfile="miditools/midifile.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1a7768f4400750631ecb3c1d6b2fba1db7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::setFormat</definition>
        <argsstring>(int fmt)</argsstring>
        <name>setFormat</name>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="92" column="1" bodyfile="miditools/midifile.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1adda9151e1ea1fba0d8222c2e7537ce6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int MidiFile::division</definition>
        <argsstring>() const</argsstring>
        <name>division</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="93" column="1" bodyfile="miditools/midifile.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1aece12b78e3c350bd35ed1a791c373f20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MidiFile::setDivision</definition>
        <argsstring>(int val)</argsstring>
        <name>setDivision</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="94" column="1" bodyfile="miditools/midifile.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_midi_file_1ad11eac6e7cda706187152e88665a36f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tempo_map" kindref="compound">TempoMap</ref> &amp;</type>
        <definition>const TempoMap&amp; MidiFile::tempoMap</definition>
        <argsstring>() const</argsstring>
        <name>tempoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="miditools/midifile.h" line="95" column="1" bodyfile="miditools/midifile.h" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="miditools/midifile.h" line="46" column="1" bodyfile="miditools/midifile.h" bodystart="46" bodyend="96"/>
    <listofallmembers>
      <member refid="class_midi_file_1aa77430e039445383487312601b268a41" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>_division</name></member>
      <member refid="class_midi_file_1a77e697571c78b49e3905e9481d35827b" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>_format</name></member>
      <member refid="class_midi_file_1ad7ca83c6ddeb2762c72e4a14ed38901a" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>_tempoMap</name></member>
      <member refid="class_midi_file_1a9015d7144b7c62e19f357f0e25e3bc8a" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>_tracks</name></member>
      <member refid="class_midi_file_1ae169a88fb2d9d408ecf3e683404216ca" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>click</name></member>
      <member refid="class_midi_file_1a628077a07cb34469cf02e424dc0f87df" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>curPos</name></member>
      <member refid="class_midi_file_1adda9151e1ea1fba0d8222c2e7537ce6d" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>division</name></member>
      <member refid="class_midi_file_1a4259956087abc82f9b1f3a668874664c" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>format</name></member>
      <member refid="class_midi_file_1a17db0e99b5f6537a0db11acf726109a9" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>fp</name></member>
      <member refid="class_midi_file_1ac7cc609e1b398dc33c42a8c902ac2608" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>getvl</name></member>
      <member refid="class_midi_file_1a989fec6d479c0ebf68ef72224e58e894" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>MidiFile</name></member>
      <member refid="class_midi_file_1a37cee5861163503f2b051de0307a61f5" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>put</name></member>
      <member refid="class_midi_file_1a74a8d5c857a669a8fa7334bbf30c40e5" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>putvl</name></member>
      <member refid="class_midi_file_1af1925aeaf05cc9a4577311db1b1114ae" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>read</name></member>
      <member refid="class_midi_file_1ab97ac3c329c144fc091d46a28476f697" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>read</name></member>
      <member refid="class_midi_file_1a8a1ac2ced9288846596cd5b2d18abe87" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>read</name></member>
      <member refid="class_midi_file_1aafdb5191d57e8405a1f6d41af6f119c2" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>readEvent</name></member>
      <member refid="class_midi_file_1aedd3144615cf104d0a05f82583b9a9de" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>readLong</name></member>
      <member refid="class_midi_file_1aaf8046d0a5e8da4ad02f52fca895f3f5" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>readShort</name></member>
      <member refid="class_midi_file_1a3a125b39fb645a5576a97f889cceba30" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>readTrack</name></member>
      <member refid="class_midi_file_1a42abc6c1a00e6d83cbf17aa768808f51" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>resetRunningStatus</name></member>
      <member refid="class_midi_file_1aece12b78e3c350bd35ed1a791c373f20" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>setDivision</name></member>
      <member refid="class_midi_file_1a7768f4400750631ecb3c1d6b2fba1db7" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>setFormat</name></member>
      <member refid="class_midi_file_1afe2f0f15effd198649ec822fa99888a6" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>skip</name></member>
      <member refid="class_midi_file_1a2a551bf8ca46becd1190ba29d384b782" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>sstatus</name></member>
      <member refid="class_midi_file_1a2de9a61174635e1d8b856a20bb5443d0" prot="private" virt="non-virtual"><scope>MidiFile</scope><name>status</name></member>
      <member refid="class_midi_file_1ad11eac6e7cda706187152e88665a36f6" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>tempoMap</name></member>
      <member refid="class_midi_file_1a67b891f452959bc7622a9490a0078452" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>tracks</name></member>
      <member refid="class_midi_file_1a8ed6c3b92a2991ddbffa3b39b288fe13" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>tracks</name></member>
      <member refid="class_midi_file_1a96c6082dae7dffc86ee0d173a700c14b" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>write</name></member>
      <member refid="class_midi_file_1a3842d8a3598d2845d7ee7936e51ab106" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>write</name></member>
      <member refid="class_midi_file_1a05ed269ba1eaa3070c82361869c77c0d" prot="public" virt="non-virtual"><scope>MidiFile</scope><name>write</name></member>
      <member refid="class_midi_file_1adf3c23a612f9d2e2d5f72c17085b7f7e" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>writeEvent</name></member>
      <member refid="class_midi_file_1a34977bbb6e6a998f577de3009c901301" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>writeLong</name></member>
      <member refid="class_midi_file_1a70e964adc1025404111aaa47336a89a9" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>writeShort</name></member>
      <member refid="class_midi_file_1ab9f67f681e39817a250015f8428d8f84" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>writeStatus</name></member>
      <member refid="class_midi_file_1aaed701c6575337afd00d2acc01dcdba1" prot="protected" virt="non-virtual"><scope>MidiFile</scope><name>writeTrack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
