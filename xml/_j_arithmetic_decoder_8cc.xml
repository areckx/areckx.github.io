<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_j_arithmetic_decoder_8cc" kind="file" language="C++">
    <compoundname>JArithmeticDecoder.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_stream_8h" local="yes">Stream.h</includes>
    <includes refid="_j_arithmetic_decoder_8h" local="yes">JArithmeticDecoder.h</includes>
    <incdepgraph>
      <node id="87703">
        <label>stdarg.h</label>
      </node>
      <node id="87692">
        <label>thirdparty/poppler/poppler/JArithmeticDecoder.cc</label>
        <link refid="_j_arithmetic_decoder_8cc"/>
        <childnode refid="87693" relation="include">
        </childnode>
        <childnode refid="87694" relation="include">
        </childnode>
        <childnode refid="87711" relation="include">
        </childnode>
        <childnode refid="87712" relation="include">
        </childnode>
      </node>
      <node id="87704">
        <label>stdlib.h</label>
      </node>
      <node id="87700">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="87696" relation="include">
        </childnode>
        <childnode refid="87699" relation="include">
        </childnode>
      </node>
      <node id="87707">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="87699" relation="include">
        </childnode>
        <childnode refid="87694" relation="include">
        </childnode>
        <childnode refid="87708" relation="include">
        </childnode>
      </node>
      <node id="87706">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="87703" relation="include">
        </childnode>
        <childnode refid="87699" relation="include">
        </childnode>
        <childnode refid="87698" relation="include">
        </childnode>
        <childnode refid="87701" relation="include">
        </childnode>
      </node>
      <node id="87710">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="87699" relation="include">
        </childnode>
        <childnode refid="87694" relation="include">
        </childnode>
        <childnode refid="87708" relation="include">
        </childnode>
      </node>
      <node id="87702">
        <label>limits.h</label>
      </node>
      <node id="87699">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="87696" relation="include">
        </childnode>
      </node>
      <node id="87705">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="87711">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="87699" relation="include">
        </childnode>
        <childnode refid="87696" relation="include">
        </childnode>
        <childnode refid="87698" relation="include">
        </childnode>
        <childnode refid="87694" relation="include">
        </childnode>
        <childnode refid="87708" relation="include">
        </childnode>
      </node>
      <node id="87712">
        <label>JArithmeticDecoder.h</label>
        <link refid="_j_arithmetic_decoder_8h_source"/>
        <childnode refid="87698" relation="include">
        </childnode>
      </node>
      <node id="87709">
        <label>pthread.h</label>
      </node>
      <node id="87697">
        <label>string.h</label>
      </node>
      <node id="87701">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="87702" relation="include">
        </childnode>
        <childnode refid="87703" relation="include">
        </childnode>
        <childnode refid="87704" relation="include">
        </childnode>
        <childnode refid="87698" relation="include">
        </childnode>
      </node>
      <node id="87694">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="87695" relation="include">
        </childnode>
        <childnode refid="87696" relation="include">
        </childnode>
        <childnode refid="87697" relation="include">
        </childnode>
        <childnode refid="87698" relation="include">
        </childnode>
        <childnode refid="87700" relation="include">
        </childnode>
        <childnode refid="87701" relation="include">
        </childnode>
        <childnode refid="87705" relation="include">
        </childnode>
        <childnode refid="87706" relation="include">
        </childnode>
        <childnode refid="87707" relation="include">
        </childnode>
        <childnode refid="87710" relation="include">
        </childnode>
        <childnode refid="87711" relation="include">
        </childnode>
      </node>
      <node id="87708">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="87709" relation="include">
        </childnode>
      </node>
      <node id="87698">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="87699" relation="include">
        </childnode>
      </node>
      <node id="87695">
        <label>set</label>
      </node>
      <node id="87693">
        <label>config.h</label>
      </node>
      <node id="87696">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JArithmeticDecoder.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2002-2004<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JArithmeticDecoder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JArithmeticDecoderStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">JArithmeticDecoderStats::JArithmeticDecoderStats(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contextSizeA)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>contextSize<sp/>=<sp/>contextSizeA;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>cxTab<sp/>=<sp/>(Guchar<sp/>*)gmallocn(contextSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Guchar));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">JArithmeticDecoderStats::~JArithmeticDecoderStats()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>gfree(cxTab);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*JArithmeticDecoderStats::copy()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>stats<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref>(contextSize);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>memcpy(stats-&gt;cxTab,<sp/>cxTab,<sp/>contextSize);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoderStats::reset()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>memset(cxTab,<sp/>0,<sp/>contextSize);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoderStats::copyFrom(<ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>memcpy(cxTab,<sp/>stats-&gt;cxTab,<sp/>contextSize);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoderStats::setEntry(Guint<sp/>cx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mps)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>cxTab[cx]<sp/>=<sp/>(i<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>mps;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>JArithmeticDecoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">Guint<sp/>JArithmeticDecoder::qeTab[47]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>0x56010000,<sp/>0x34010000,<sp/>0x18010000,<sp/>0x0AC10000,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>0x05210000,<sp/>0x02210000,<sp/>0x56010000,<sp/>0x54010000,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>0x48010000,<sp/>0x38010000,<sp/>0x30010000,<sp/>0x24010000,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>0x1C010000,<sp/>0x16010000,<sp/>0x56010000,<sp/>0x54010000,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>0x51010000,<sp/>0x48010000,<sp/>0x38010000,<sp/>0x34010000,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>0x30010000,<sp/>0x28010000,<sp/>0x24010000,<sp/>0x22010000,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>0x1C010000,<sp/>0x18010000,<sp/>0x16010000,<sp/>0x14010000,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>0x12010000,<sp/>0x11010000,<sp/>0x0AC10000,<sp/>0x09C10000,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>0x08A10000,<sp/>0x05210000,<sp/>0x04410000,<sp/>0x02A10000,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>0x02210000,<sp/>0x01410000,<sp/>0x01110000,<sp/>0x00850000,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>0x00490000,<sp/>0x00250000,<sp/>0x00150000,<sp/>0x00090000,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>0x00050000,<sp/>0x00010000,<sp/>0x56010000</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::nmpsTab[47]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>1,<sp/><sp/>2,<sp/><sp/>3,<sp/><sp/>4,<sp/><sp/>5,<sp/>38,<sp/><sp/>7,<sp/><sp/>8,<sp/><sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>29,<sp/>15,<sp/>16,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>17,<sp/>18,<sp/>19,<sp/>20,<sp/>21,<sp/>22,<sp/>23,<sp/>24,<sp/>25,<sp/>26,<sp/>27,<sp/>28,<sp/>29,<sp/>30,<sp/>31,<sp/>32,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>33,<sp/>34,<sp/>35,<sp/>36,<sp/>37,<sp/>38,<sp/>39,<sp/>40,<sp/>41,<sp/>42,<sp/>43,<sp/>44,<sp/>45,<sp/>45,<sp/>46</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::nlpsTab[47]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>1,<sp/><sp/>6,<sp/><sp/>9,<sp/>12,<sp/>29,<sp/>33,<sp/><sp/>6,<sp/>14,<sp/>14,<sp/>14,<sp/>17,<sp/>18,<sp/>20,<sp/>21,<sp/>14,<sp/>14,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>15,<sp/>16,<sp/>17,<sp/>18,<sp/>19,<sp/>19,<sp/>20,<sp/>21,<sp/>22,<sp/>23,<sp/>24,<sp/>25,<sp/>26,<sp/>27,<sp/>28,<sp/>29,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>30,<sp/>31,<sp/>32,<sp/>33,<sp/>34,<sp/>35,<sp/>36,<sp/>37,<sp/>38,<sp/>39,<sp/>40,<sp/>41,<sp/>42,<sp/>43,<sp/>46</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::switchTab[47]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">JArithmeticDecoder::JArithmeticDecoder()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>limitStream<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>nBytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Guint<sp/>JArithmeticDecoder::readByte()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limitStream)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>--dataLen;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLen<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xff;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>++nBytesRead;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Guint)str-&gt;getChar()<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">JArithmeticDecoder::~JArithmeticDecoder()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>cleanup();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoder::start()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>buf0<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>INITDEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>(buf0<sp/>^<sp/>0xff)<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>byteIn();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>c<sp/>&lt;&lt;=<sp/>7;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>ct<sp/>-=<sp/>7;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoder::restart(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataLenA)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>Guint<sp/>cAdd;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>GBool<sp/>prevFF;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>nBits;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLen<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>dataLenA;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLen<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>dataLenA;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(-dataLen<sp/>-<sp/>1)<sp/>*<sp/>8<sp/>-<sp/>ct;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>dataLenA;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>cAdd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>prevFF<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevFF)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>cAdd<sp/>+=<sp/>0xfe00<sp/>-<sp/>(buf0<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>nBits<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>cAdd<sp/>+=<sp/>0xff00<sp/>-<sp/>(buf0<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>nBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevFF<sp/>=<sp/>buf0<sp/>==<sp/>0xff;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>nBits)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>cAdd<sp/>&lt;&lt;=<sp/>nBits;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>-=<sp/>nBits;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>cAdd<sp/>&lt;&lt;=<sp/>k;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>nBits<sp/>-<sp/>k;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>cAdd;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoder::cleanup()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limitStream)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dataLen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>buf1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::decodeBit(Guint<sp/>context,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>Guint<sp/>qe;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCX,<sp/>mpsCX;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>iCX<sp/>=<sp/>stats-&gt;cxTab[context]<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>mpsCX<sp/>=<sp/>stats-&gt;cxTab[context]<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>qe<sp/>=<sp/>qeTab[iCX];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>qe;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;<sp/>0x80000000)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>mpsCX;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPS_EXCHANGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>qe)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>1<sp/>-<sp/>mpsCX;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switchTab[iCX])<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nlpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(1<sp/>-<sp/>mpsCX);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nlpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>mpsCX;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>mpsCX;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nmpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>mpsCX;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RENORMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ct<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>byteIn();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>--ct;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(a<sp/>&amp;<sp/>0x80000000));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>-=<sp/>a;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LPS_EXCHANGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>qe)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>mpsCX;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nmpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>mpsCX;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>1<sp/>-<sp/>mpsCX;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switchTab[iCX])<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nlpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>(1<sp/>-<sp/>mpsCX);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;cxTab[context]<sp/>=<sp/>(nlpsTab[iCX]<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>mpsCX;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>qe;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RENORMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ct<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>byteIn();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--ct;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(a<sp/>&amp;<sp/>0x80000000));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::decodeByte(Guint<sp/>context,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>=<sp/>(byte<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeBit(context,<sp/>stats);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">GBool<sp/>JArithmeticDecoder::decodeInt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>Guint<sp/>v;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>prev<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeIntBit(stats))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeIntBit(stats))<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeIntBit(stats))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeIntBit(stats))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decodeIntBit(stats))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>4436;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>340;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>84;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>20;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>decodeIntBit(stats);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>-(int)v;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>(int)v;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gTrue;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JArithmeticDecoder::decodeIntBit(<ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>bit<sp/>=<sp/>decodeBit(prev,<sp/>stats);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>&lt;<sp/>0x100)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>(prev<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bit;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>(((prev<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bit)<sp/>&amp;<sp/>0x1ff)<sp/>|<sp/>0x100;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">Guint<sp/>JArithmeticDecoder::decodeIAID(Guint<sp/>codeLen,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_j_arithmetic_decoder_stats" kindref="compound">JArithmeticDecoderStats</ref><sp/>*stats)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>Guint<sp/>i;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>prev<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>codeLen;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>decodeBit(prev,<sp/>stats);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>(prev<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bit;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prev<sp/>-<sp/>(1<sp/>&lt;&lt;<sp/>codeLen);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JArithmeticDecoder::byteIn()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf0<sp/>==<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf1<sp/>&gt;<sp/>0x8f)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limitStream)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>buf1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>+<sp/>0xff00<sp/>-<sp/>(buf0<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>buf1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>+<sp/>0xfe00<sp/>-<sp/>(buf0<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>buf0<sp/>=<sp/>buf1;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>buf1<sp/>=<sp/>readByte();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>+<sp/>0xff00<sp/>-<sp/>(buf0<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/JArithmeticDecoder.cc"/>
  </compounddef>
</doxygen>
