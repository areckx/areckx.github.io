<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_font_8h" kind="file" language="C++">
    <compoundname>SplashFont.h</compoundname>
    <includes refid="gtypes_8h" local="yes">goo/gtypes.h</includes>
    <includes refid="_splash_types_8h" local="yes">SplashTypes.h</includes>
    <includes refid="_splash_clip_8h" local="yes">SplashClip.h</includes>
    <includedby refid="_splash_output_dev_8cc" local="yes">thirdparty/poppler/poppler/SplashOutputDev.cc</includedby>
    <includedby refid="_splash_8cc" local="yes">thirdparty/poppler/splash/Splash.cc</includedby>
    <includedby refid="_splash_font_8cc" local="yes">thirdparty/poppler/splash/SplashFont.cc</includedby>
    <includedby refid="_splash_font_engine_8cc" local="yes">thirdparty/poppler/splash/SplashFontEngine.cc</includedby>
    <incdepgraph>
      <node id="92517">
        <label>thirdparty/poppler/splash/SplashFont.h</label>
        <link refid="_splash_font_8h"/>
        <childnode refid="92518" relation="include">
        </childnode>
        <childnode refid="92521" relation="include">
        </childnode>
        <childnode refid="92522" relation="include">
        </childnode>
      </node>
      <node id="92519">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92520" relation="include">
        </childnode>
      </node>
      <node id="92525">
        <label>SplashXPathScanner.h</label>
        <link refid="_splash_x_path_scanner_8h_source"/>
        <childnode refid="92521" relation="include">
        </childnode>
      </node>
      <node id="92523">
        <label>SplashMath.h</label>
        <link refid="_splash_math_8h_source"/>
        <childnode refid="92519" relation="include">
        </childnode>
        <childnode refid="92524" relation="include">
        </childnode>
        <childnode refid="92521" relation="include">
        </childnode>
      </node>
      <node id="92522">
        <label>SplashClip.h</label>
        <link refid="_splash_clip_8h_source"/>
        <childnode refid="92521" relation="include">
        </childnode>
        <childnode refid="92523" relation="include">
        </childnode>
        <childnode refid="92525" relation="include">
        </childnode>
      </node>
      <node id="92524">
        <label>math.h</label>
      </node>
      <node id="92521">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92518" relation="include">
        </childnode>
      </node>
      <node id="92518">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92519" relation="include">
        </childnode>
      </node>
      <node id="92520">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="92530">
        <label>thirdparty/poppler/splash/SplashFontEngine.cc</label>
        <link refid="_splash_font_engine_8cc_source"/>
      </node>
      <node id="92526">
        <label>thirdparty/poppler/splash/SplashFont.h</label>
        <link refid="_splash_font_8h"/>
        <childnode refid="92527" relation="include">
        </childnode>
        <childnode refid="92528" relation="include">
        </childnode>
        <childnode refid="92529" relation="include">
        </childnode>
        <childnode refid="92530" relation="include">
        </childnode>
      </node>
      <node id="92528">
        <label>thirdparty/poppler/splash/Splash.cc</label>
        <link refid="_splash_8cc_source"/>
      </node>
      <node id="92527">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="92529">
        <label>thirdparty/poppler/splash/SplashFont.cc</label>
        <link refid="_splash_font_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_splash_font" prot="public">SplashFont</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_splash_font_8h_1a4c19f3a8acde43e68ba71b31b0999457" prot="public" static="no">
        <name>splashFontFractionBits</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/SplashFont.h" line="41" column="9" bodyfile="thirdparty/poppler/splash/SplashFont.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_splash_font_8h_1a92bfc867658e227fc55b243fe7987ca6" prot="public" static="no">
        <name>splashFontFraction</name>
        <initializer>(1 &lt;&lt; splashFontFractionBits)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/SplashFont.h" line="42" column="9" bodyfile="thirdparty/poppler/splash/SplashFont.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_splash_font_8h_1a123f2e8290e78871943c2591a6a88510" prot="public" static="no">
        <name>splashFontFractionMul</name>
        <initializer>((SplashCoord)1 / (SplashCoord)splashFontFraction)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/splash/SplashFont.h" line="43" column="9" bodyfile="thirdparty/poppler/splash/SplashFont.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashFont.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007-2008<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPLASHFONT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLASHFONT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;goo/gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashClip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_font_cache_tag" kindref="compound">SplashFontCacheTag</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_font_file" kindref="compound">SplashFontFile</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_path" kindref="compound">SplashPath</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fractional<sp/>positioning<sp/>uses<sp/>this<sp/>many<sp/>bits<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decimal<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>splashFontFractionBits<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>splashFontFraction<sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>splashFontFractionBits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>splashFontFractionMul<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SplashCoord)1<sp/>/<sp/>(SplashCoord)splashFontFraction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_splash_font" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_font" kindref="compound">SplashFont</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_splash_font" kindref="compound">SplashFont</ref>(<ref refid="class_splash_font_file" kindref="compound">SplashFontFile</ref><sp/>*fontFileA,<sp/>SplashCoord<sp/>*matA,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*textMatA,<sp/>GBool<sp/>aaA);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>be<sp/>called<sp/>after<sp/>the<sp/>constructor,<sp/>so<sp/>that<sp/>the<sp/>subclass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>has<sp/>a<sp/>chance<sp/>to<sp/>compute<sp/>the<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initCache();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_splash_font" kindref="compound">SplashFont</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="class_splash_font_file" kindref="compound">SplashFontFile</ref><sp/>*getFontFile()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontFile;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>&lt;this&gt;<sp/>matches<sp/>the<sp/>specified<sp/>font<sp/>file<sp/>and<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>GBool<sp/>matches(<ref refid="class_splash_font_file" kindref="compound">SplashFontFile</ref><sp/>*fontFileA,<sp/>SplashCoord<sp/>*matA,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplashCoord<sp/>*textMatA)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fontFileA<sp/>==<sp/>fontFile<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matA[0]<sp/>==<sp/>mat[0]<sp/>&amp;&amp;<sp/>matA[1]<sp/>==<sp/>mat[1]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matA[2]<sp/>==<sp/>mat[2]<sp/>&amp;&amp;<sp/>matA[3]<sp/>==<sp/>mat[3]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textMatA[0]<sp/>==<sp/>textMat[0]<sp/>&amp;&amp;<sp/>textMatA[1]<sp/>==<sp/>textMat[1]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textMatA[2]<sp/>==<sp/>textMat[2]<sp/>&amp;&amp;<sp/>textMatA[3]<sp/>==<sp/>textMat[3];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>glyph<sp/>-<sp/>this<sp/>does<sp/>a<sp/>cache<sp/>lookup<sp/>first,<sp/>and<sp/>if<sp/>not<sp/>found,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>creates<sp/>a<sp/>new<sp/>bitmap<sp/>and<sp/>adds<sp/>it<sp/>to<sp/>the<sp/>cache.<sp/><sp/>The<sp/>&lt;xFrac&gt;<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;yFrac&gt;<sp/>values<sp/>are<sp/>splashFontFractionBits<sp/>bits<sp/>each,<sp/>representing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>numerators<sp/>of<sp/>fractions<sp/>in<sp/>[0,<sp/>1),<sp/>where<sp/>the<sp/>denominator<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>splashFontFraction<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>splashFontFractionBits.<sp/><sp/>Subclasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>override<sp/>this<sp/>to<sp/>zero<sp/>out<sp/>xFrac<sp/>and/or<sp/>yFrac<sp/>if<sp/>they<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>fractional<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>getGlyph(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xFrac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yFrac,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/><ref refid="class_splash_clip" kindref="compound">SplashClip</ref><sp/>*clip,<sp/>SplashClipResult<sp/>*clipRes);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rasterize<sp/>a<sp/>glyph.<sp/><sp/>The<sp/>&lt;xFrac&gt;<sp/>and<sp/>&lt;yFrac&gt;<sp/>values<sp/>are<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>described<sp/>for<sp/>getGlyph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>GBool<sp/>makeGlyph(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xFrac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yFrac,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_splash_glyph_bitmap" kindref="compound">SplashGlyphBitmap</ref><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/><ref refid="class_splash_clip" kindref="compound">SplashClip</ref><sp/>*clip,<sp/>SplashClipResult<sp/>*clipRes)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>path<sp/>for<sp/>a<sp/>glyph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_splash_path" kindref="compound">SplashPath</ref><sp/>*getGlyphPath(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>advance<sp/>of<sp/>a<sp/>glyph.<sp/>(in<sp/>0..1<sp/>range)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;<sp/>0<sp/>means<sp/>not<sp/>known</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getGlyphAdvance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>font<sp/>transform<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>*getMatrix()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>glyph<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMaxA)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMinA<sp/>=<sp/>xMin;<sp/>*yMinA<sp/>=<sp/>yMin;<sp/>*xMaxA<sp/>=<sp/>xMax;<sp/>*yMaxA<sp/>=<sp/>yMax;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="class_splash_font_file" kindref="compound">SplashFontFile</ref><sp/>*fontFile;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>mat[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(text<sp/>space<sp/>-&gt;<sp/>device<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>SplashCoord<sp/>textMat[4];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(text<sp/>space<sp/>-&gt;<sp/>user<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>GBool<sp/>aa;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anti-aliasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glyph<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>Guchar<sp/>*cache;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glyph<sp/>bitmap<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_font_cache_tag" kindref="compound">SplashFontCacheTag</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>cacheTags;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyphW,<sp/>glyphH;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>glyph<sp/>bitmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyphSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>glyph<sp/>bitmaps,<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cacheSets;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sets<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cacheAssoc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>associativity<sp/>(glyphs<sp/>per<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/SplashFont.h"/>
  </compounddef>
</doxygen>
