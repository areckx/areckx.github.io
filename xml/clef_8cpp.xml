<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="clef_8cpp" kind="file" language="C++">
    <compoundname>clef.cpp</compoundname>
    <includes refid="clef_8h" local="yes">clef.h</includes>
    <includes refid="measure_8h" local="yes">measure.h</includes>
    <includes refid="ambitus_8h" local="yes">ambitus.h</includes>
    <includes refid="xml_8h" local="yes">xml.h</includes>
    <includes refid="sym_8h" local="yes">sym.h</includes>
    <includes refid="symbol_8h" local="yes">symbol.h</includes>
    <includes refid="system_8h" local="yes">system.h</includes>
    <includes refid="score_8h" local="yes">score.h</includes>
    <includes refid="staff_8h" local="yes">staff.h</includes>
    <includes refid="segment_8h" local="yes">segment.h</includes>
    <includes refid="stafftype_8h" local="yes">stafftype.h</includes>
    <incdepgraph>
      <node id="19491">
        <label>list</label>
      </node>
      <node id="19475">
        <label>pitchspelling.h</label>
        <link refid="pitchspelling_8h_source"/>
        <childnode refid="19461" relation="include">
        </childnode>
      </node>
      <node id="19477">
        <label>key.h</label>
        <link refid="key_8h_source"/>
      </node>
      <node id="19467">
        <label>segmentlist.h</label>
        <link refid="segmentlist_8h_source"/>
        <childnode refid="19468" relation="include">
        </childnode>
      </node>
      <node id="19464">
        <label>measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19467" relation="include">
        </childnode>
      </node>
      <node id="19460">
        <label>shape.h</label>
        <link refid="shape_8h_source"/>
      </node>
      <node id="19453">
        <label>libmscore/clef.cpp</label>
        <link refid="clef_8cpp"/>
        <childnode refid="19454" relation="include">
        </childnode>
        <childnode refid="19464" relation="include">
        </childnode>
        <childnode refid="19469" relation="include">
        </childnode>
        <childnode refid="19479" relation="include">
        </childnode>
        <childnode refid="19484" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19486" relation="include">
        </childnode>
        <childnode refid="19487" relation="include">
        </childnode>
        <childnode refid="19499" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19480" relation="include">
        </childnode>
      </node>
      <node id="19492">
        <label>mscoreview.h</label>
        <link refid="mscoreview_8h_source"/>
      </node>
      <node id="19501">
        <label>pitch.h</label>
        <link refid="pitch_8h_source"/>
      </node>
      <node id="19468">
        <label>segment.h</label>
        <link refid="segment_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19460" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
      </node>
      <node id="19503">
        <label>keylist.h</label>
        <link refid="keylist_8h_source"/>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19486">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19456" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
      </node>
      <node id="19463">
        <label>chordlist.h</label>
        <link refid="chordlist_8h_source"/>
      </node>
      <node id="19472">
        <label>bsymbol.h</label>
        <link refid="bsymbol_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19473" relation="include">
        </childnode>
      </node>
      <node id="19454">
        <label>clef.h</label>
        <link refid="clef_8h"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
      </node>
      <node id="19481">
        <label>durationtype.h</label>
        <link refid="durationtype_8h_source"/>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
      </node>
      <node id="19499">
        <label>staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19500" relation="include">
        </childnode>
        <childnode refid="19501" relation="include">
        </childnode>
        <childnode refid="19502" relation="include">
        </childnode>
        <childnode refid="19503" relation="include">
        </childnode>
        <childnode refid="19504" relation="include">
        </childnode>
        <childnode refid="19505" relation="include">
        </childnode>
        <childnode refid="19459" relation="include">
        </childnode>
      </node>
      <node id="19493">
        <label>spannermap.h</label>
        <link refid="spannermap_8h_source"/>
        <childnode refid="19494" relation="include">
        </childnode>
      </node>
      <node id="19484">
        <label>sym.h</label>
        <link refid="sym_8h_source"/>
        <childnode refid="19458" relation="include">
        </childnode>
        <childnode refid="19485" relation="include">
        </childnode>
      </node>
      <node id="19494">
        <label>thirdparty/intervaltree/IntervalTree.h</label>
        <link refid="_interval_tree_8h_source"/>
        <childnode refid="19495" relation="include">
        </childnode>
        <childnode refid="19496" relation="include">
        </childnode>
        <childnode refid="19497" relation="include">
        </childnode>
      </node>
      <node id="19504">
        <label>stafftypelist.h</label>
        <link refid="stafftypelist_8h_source"/>
        <childnode refid="19480" relation="include">
        </childnode>
      </node>
      <node id="19465">
        <label>measurebase.h</label>
        <link refid="measurebase_8h"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
      </node>
      <node id="19476">
        <label>tremolo.h</label>
        <link refid="tremolo_8h_source"/>
        <childnode refid="19471" relation="include">
        </childnode>
      </node>
      <node id="19495">
        <label>vector</label>
      </node>
      <node id="19473">
        <label>elementlayout.h</label>
        <link refid="elementlayout_8h_source"/>
      </node>
      <node id="19479">
        <label>xml.h</label>
        <link refid="xml_8h_source"/>
        <childnode refid="19480" relation="include">
        </childnode>
        <childnode refid="19482" relation="include">
        </childnode>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19483" relation="include">
        </childnode>
      </node>
      <node id="19456">
        <label>spatium.h</label>
        <link refid="spatium_8h_source"/>
      </node>
      <node id="19498">
        <label>property.h</label>
        <link refid="property_8h_source"/>
      </node>
      <node id="19457">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="19458" relation="include">
        </childnode>
      </node>
      <node id="19471">
        <label>symbol.h</label>
        <link refid="symbol_8h_source"/>
        <childnode refid="19472" relation="include">
        </childnode>
      </node>
      <node id="19462">
        <label>style.h</label>
        <link refid="style_8h_source"/>
        <childnode refid="19463" relation="include">
        </childnode>
      </node>
      <node id="19485">
        <label>ft2build.h</label>
      </node>
      <node id="19489">
        <label>beam.h</label>
        <link refid="beam_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
      </node>
      <node id="19482">
        <label>interval.h</label>
        <link refid="interval_8h_source"/>
      </node>
      <node id="19466">
        <label>layoutbreak.h</label>
        <link refid="layoutbreak_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
      </node>
      <node id="19455">
        <label>element.h</label>
        <link refid="element_8h_source"/>
        <childnode refid="19456" relation="include">
        </childnode>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19459" relation="include">
        </childnode>
        <childnode refid="19460" relation="include">
        </childnode>
      </node>
      <node id="19469">
        <label>ambitus.h</label>
        <link refid="ambitus_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
        <childnode refid="19478" relation="include">
        </childnode>
      </node>
      <node id="19490">
        <label>synthesizerstate.h</label>
        <link refid="synthesizerstate_8h_source"/>
        <childnode refid="19491" relation="include">
        </childnode>
      </node>
      <node id="19497">
        <label>iostream</label>
      </node>
      <node id="19500">
        <label>velo.h</label>
        <link refid="velo_8h"/>
      </node>
      <node id="19461">
        <label>mscore.h</label>
        <link refid="mscore_8h_source"/>
        <childnode refid="19458" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
      </node>
      <node id="19505">
        <label>groups.h</label>
        <link refid="groups_8h_source"/>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
        <childnode refid="19489" relation="include">
        </childnode>
      </node>
      <node id="19488">
        <label>input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
        <childnode refid="19489" relation="include">
        </childnode>
      </node>
      <node id="19478">
        <label>accidental.h</label>
        <link refid="accidental_8h"/>
        <childnode refid="19458" relation="include">
        </childnode>
        <childnode refid="19455" relation="include">
        </childnode>
      </node>
      <node id="19474">
        <label>noteevent.h</label>
        <link refid="noteevent_8h_source"/>
      </node>
      <node id="19480">
        <label>stafftype.h</label>
        <link refid="stafftype_8h_source"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19456" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
      </node>
      <node id="19458">
        <label>config.h</label>
      </node>
      <node id="19496">
        <label>algorithm</label>
      </node>
      <node id="19487">
        <label>score.h</label>
        <link refid="score_8h"/>
        <childnode refid="19458" relation="include">
        </childnode>
        <childnode refid="19488" relation="include">
        </childnode>
        <childnode refid="19483" relation="include">
        </childnode>
        <childnode refid="19490" relation="include">
        </childnode>
        <childnode refid="19492" relation="include">
        </childnode>
        <childnode refid="19493" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
        <childnode refid="19498" relation="include">
        </childnode>
      </node>
      <node id="19459">
        <label>scoreElement.h</label>
        <link refid="score_element_8h_source"/>
      </node>
      <node id="19502">
        <label>cleflist.h</label>
        <link refid="cleflist_8h_source"/>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19454" relation="include">
        </childnode>
      </node>
      <node id="19483">
        <label>select.h</label>
        <link refid="select_8h_source"/>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19481" relation="include">
        </childnode>
      </node>
      <node id="19470">
        <label>note.h</label>
        <link refid="note_8h"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
        <childnode refid="19460" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_ms">Ms</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="clef_8cpp_1a061ab1f0d3b6440b7052f059abb41a60" prot="public" static="no">
        <name>TR</name>
        <param><defname>a</defname></param>
        <initializer>QT_TRANSLATE_NOOP(&quot;clefTable&quot;, a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/clef.cpp" line="33" column="9" bodyfile="libmscore/clef.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of classes Clef (partial) and ClefList (complete). </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MuseScore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Music<sp/>Composition<sp/>&amp;<sp/>Notation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Werner<sp/>Schweer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation<sp/>and<sp/>appearing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>file<sp/>LICENCE.GPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clef_8h" kindref="compound">clef.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="measure_8h" kindref="compound">measure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ambitus.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xml.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sym.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;symbol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="system_8h" kindref="compound">system.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="score_8h" kindref="compound">score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="staff_8h" kindref="compound">staff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;segment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stafftype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_ms" kindref="compound">Ms</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TR(a)<sp/>QT_TRANSLATE_NOOP(&quot;clefTable&quot;,<sp/>a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>table<sp/>must<sp/>be<sp/>in<sp/>sync<sp/>with<sp/>enum<sp/>ClefType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClefInfo<sp/>ClefInfo::clefTable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tag<sp/><sp/><sp/><sp/>xmlName<sp/><sp/><sp/><sp/>line<sp/>oCh<sp/>pOff|-lines<sp/>for<sp/>sharps---||---lines<sp/>for<sp/>flats--|<sp/><sp/>symbol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>valid<sp/>in<sp/>staff<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>0,<sp/>45,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G15mb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>-2,<sp/>59,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef15mb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef<sp/>15mb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G8vb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>-1,<sp/>38,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef8vb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef<sp/>8vb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G8va&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>1,<sp/>52,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef8va,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef<sp/>8va&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G15ma&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>2,<sp/>59,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef15ma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef<sp/>15ma&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G8vbo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>-1,<sp/>38,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef8vbOld,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Double<sp/>treble<sp/>clef<sp/>8vb<sp/>on<sp/>2nd<sp/>line&quot;</highlight><highlight class="normal">),StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G8vbp&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>0,<sp/>45,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::gClef8vbParens,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Treble<sp/>clef<sp/>optional<sp/>8vb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;G1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/>0,<sp/>47,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::gClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;French<sp/>violin<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/>0,<sp/>43,<sp/>{<sp/>5,<sp/>1,<sp/>4,<sp/>0,<sp/>3,-1,<sp/>2,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5<sp/>},<sp/>SymId::cClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Soprano<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>0,<sp/>41,<sp/>{<sp/>3,<sp/>6,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>0,<sp/>0,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3<sp/>},<sp/>SymId::cClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Mezzo-soprano<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C3&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/>0,<sp/>39,<sp/>{<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>6,<sp/>2,<sp/>5,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8<sp/>},<sp/>SymId::cClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Alto<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C4&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>37,<sp/>{<sp/>6,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>3,<sp/>0,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6<sp/>},<sp/>SymId::cClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tenor<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C5&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>0,<sp/>35,<sp/>{<sp/>4,<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4<sp/>},<sp/>SymId::cClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Baritone<sp/>clef<sp/>(C<sp/>clef)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C_19C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/>0,<sp/>45,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::cClefSquare,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;C<sp/>clef,<sp/>H<sp/>shape<sp/>(19th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C3_F18C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/>0,<sp/>39,<sp/>{<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>6,<sp/>2,<sp/>5,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8<sp/>},<sp/>SymId::cClefFrench,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Alto<sp/>clef<sp/>(French,<sp/>18th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C4_F18C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>37,<sp/>{<sp/>6,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>3,<sp/>0,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6<sp/>},<sp/>SymId::cClefFrench,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tenor<sp/>clef<sp/>(French,<sp/>18th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C3_F20C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/>0,<sp/>39,<sp/>{<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>6,<sp/>2,<sp/>5,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8<sp/>},<sp/>SymId::cClefFrench20C,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Alto<sp/>clef<sp/>(French,<sp/>20th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;C4_F20C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>37,<sp/>{<sp/>6,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>0,<sp/>3,<sp/>3,<sp/>0,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6<sp/>},<sp/>SymId::cClefFrench20C,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tenor<sp/>clef<sp/>(French,<sp/>20th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>33,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Bass<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F15mb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>-2,<sp/>19,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef15mb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Bass<sp/>clef<sp/>15mb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F8vb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>-1,<sp/>26,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef8vb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Bass<sp/>clef<sp/>8vb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F8va&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>1,<sp/>40,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef8va,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Bass<sp/>clef<sp/>8va&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F15ma&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>2,<sp/>47,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef15ma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Bass<sp/>clef<sp/>15ma&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F3&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/>0,<sp/>35,<sp/>{<sp/>4,<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7,<sp/>4<sp/>},<sp/>SymId::fClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Baritone<sp/>clef<sp/>(F<sp/>clef)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F5&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>0,<sp/>31,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::fClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Subbass<sp/>clef&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F_F18C&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>33,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClefFrench,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;F<sp/>clef<sp/>(French,<sp/>18th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;F_19C&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/><sp/>0,<sp/>33,<sp/>{<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>7,<sp/>3,<sp/>6,<sp/>6,<sp/>3,<sp/>7,<sp/>4,<sp/>8,<sp/>5,<sp/>9<sp/>},<sp/>SymId::fClef19thCentury,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;F<sp/>clef<sp/>(19th<sp/>century)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::STANDARD<sp/><sp/>},</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;PERC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;percussion&quot;</highlight><highlight class="normal">,2,<sp/><sp/>0,<sp/>45,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::unpitchedPercussionClef1,<sp/>TR(</highlight><highlight class="stringliteral">&quot;Percussion&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::PERCUSSION},</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;PERC2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;percussion&quot;</highlight><highlight class="normal">,2,<sp/><sp/>0,<sp/>45,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::unpitchedPercussionClef2,<sp/>TR(</highlight><highlight class="stringliteral">&quot;Percussion<sp/>2&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::PERCUSSION},</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;TAB&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;TAB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>0,<sp/><sp/>0,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::sixStringTabClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tablature&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;TAB4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TAB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>0,<sp/><sp/>0,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::fourStringTabClef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tablature<sp/>4<sp/>lines&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;TAB2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TAB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>0,<sp/><sp/>0,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::sixStringTabClefSerif,<sp/><sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tablature<sp/>Serif&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;TAB4_SERIF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TAB&quot;</highlight><highlight class="normal">,<sp/>5,<sp/><sp/>0,<sp/><sp/>0,<sp/>{<sp/>0,<sp/>3,-1,<sp/>2,<sp/>5,<sp/>1,<sp/>4,<sp/>4,<sp/>1,<sp/>5,<sp/>2,<sp/>6,<sp/>3,<sp/>7<sp/>},<sp/>SymId::fourStringTabClefSerif,<sp/><sp/><sp/>TR(</highlight><highlight class="stringliteral">&quot;Tablature<sp/>Serif<sp/>4<sp/>lines&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffGroup::TAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tag2type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">ClefType<sp/>ClefInfo::tag2type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>s)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ClefInfo::clefTable)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ClefInfo::clefTable);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clefTable[i].<ref refid="class_ms_1_1_clef_info_1a89cfdea1c40dde7dd0c959d5d0f359a1" kindref="member">_tag</ref><sp/>==<sp/>s)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClefType(i);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClefType::G;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Clef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">Clef::Clef(Score*<sp/>s)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>:<sp/>Element(s)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setFlags(ElementFlag::SELECTABLE<sp/>|<sp/>ElementFlag::ON_STAFF);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_showCourtesy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_small<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._concertClef<sp/><sp/><sp/><sp/><sp/>=<sp/>ClefType::INVALID;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._transposingClef<sp/>=<sp/>ClefType::INVALID;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">Clef::Clef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Clef&amp;<sp/>c)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>:<sp/>Element(c)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_showCourtesy<sp/>=<sp/>c._showCourtesy;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_small<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c._small;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes<sp/><sp/><sp/><sp/>=<sp/>c._clefTypes;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">qreal<sp/>Clef::mag()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>mag<sp/>=<sp/>staff()<sp/>?<sp/>staff()-&gt;mag(tick())<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_small)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag<sp/>*=<sp/>score()-&gt;styleD(StyleIdx::smallClefMag);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mag;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::layout()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>current<sp/>number<sp/>of<sp/>lines<sp/>and<sp/>line<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>lines;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>lineDist;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Segment*<sp/>clefSeg<sp/><sp/>=<sp/>segment();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stepOffset;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>clef<sp/>visibility<sp/>and<sp/>type<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clefSeg<sp/>&amp;&amp;<sp/>staff())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>clefSeg-&gt;tick();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StaffType*<sp/>staffType<sp/>=<sp/>staff()-&gt;staffType(tick);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>staffType-&gt;genClef();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>staff<sp/>type<sp/>allows<sp/>clef<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>clef<sp/>is<sp/>compatible<sp/>with<sp/>staff<sp/>type<sp/>group:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClefInfo::staffGroup(clefType())<sp/>!=<sp/>staffType-&gt;group())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tick<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!generated())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>clef<sp/>is<sp/>not<sp/>generated,<sp/>hide<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>generated,<sp/>replace<sp/>with<sp/>initial<sp/>clef<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>instead<sp/>of<sp/>initial<sp/>staff<sp/>clef<sp/>(which<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>compatible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>last<sp/>compatible<sp/>clef<sp/>previously<sp/>found<sp/>in<sp/>staff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes<sp/>=<sp/>staff()-&gt;clefType(0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>clef<sp/>not<sp/>to<sp/>show<sp/>or<sp/>not<sp/>compatible<sp/>with<sp/>staff<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!show)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setbbox(QRectF());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Clef::layout():<sp/>invisible<sp/>clef<sp/>at<sp/>tick<sp/>%d(%d)<sp/>staff<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment()-&gt;tick(),<sp/>segment()-&gt;tick()/1920,<sp/>staffIdx());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>staffType-&gt;lines();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>values<sp/>from<sp/>staff<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineDist<sp/><sp/><sp/>=<sp/>staffType-&gt;lineDistance().val();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepOffset<sp/>=<sp/>staffType-&gt;stepOffset();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineDist<sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>_spatium<sp/>=<sp/>spatium();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>yoff<sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clefType()<sp/>!=<sp/><sp/>ClefType::INVALID<sp/>&amp;&amp;<sp/>clefType()<sp/>!=<sp/><sp/>ClefType::MAX)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symId<sp/>=<sp/>ClefInfo::symId(clefType());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>ClefInfo::line(clefType()));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(clefType())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::C_19C:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>19th<sp/>C<sp/>clef<sp/>is<sp/>like<sp/>a<sp/>G<sp/>clef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>1.5;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::TAB:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TAB<sp/>clef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>tablature,<sp/>position<sp/>clef<sp/>at<sp/>half<sp/>the<sp/>number<sp/>of<sp/>spaces<sp/>*<sp/>line<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::TAB4:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TAB<sp/>clef<sp/>4<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>tablature,<sp/>position<sp/>clef<sp/>at<sp/>half<sp/>the<sp/>number<sp/>of<sp/>spaces<sp/>*<sp/>line<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::TAB_SERIF:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TAB<sp/>clef<sp/>alternate<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>tablature,<sp/>position<sp/>clef<sp/>at<sp/>half<sp/>the<sp/>number<sp/>of<sp/>spaces<sp/>*<sp/>line<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::TAB4_SERIF:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TAB<sp/>clef<sp/>alternate<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>tablature,<sp/>position<sp/>clef<sp/>at<sp/>half<sp/>the<sp/>number<sp/>of<sp/>spaces<sp/>*<sp/>line<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::PERC:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>percussion<sp/>clefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::PERC2:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoff<sp/>=<sp/>lineDist<sp/>*<sp/>(lines<sp/>-<sp/>1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::INVALID:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ClefType::MAX:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Clef::layout:<sp/>invalid<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clefs<sp/>are<sp/>right<sp/>aligned<sp/>to<sp/>Segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>r(symBbox(symId));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setPos(0.0,<sp/>yoff<sp/>*<sp/>_spatium<sp/>+<sp/>(stepOffset<sp/>*<sp/>-_spatium));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setbbox(r);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::draw(QPainter*<sp/>painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symId<sp/>==<sp/>SymId::noSym<sp/>||<sp/>(staff()<sp/>&amp;&amp;<sp/>!staff()-&gt;staffType(tick())-&gt;genClef()))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setPen(curColor());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawSymbol(symId,<sp/>painter);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>acceptDrop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_ms_1_1_clef_1ae91b3164063b5e25e704fdcd4fa292a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_clef_1ae91b3164063b5e25e704fdcd4fa292a3" kindref="member">Clef::acceptDrop</ref>(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;<sp/>data)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data.element-&gt;type()<sp/>==<sp/>ElementType::CLEF</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>data.element-&gt;type()<sp/>==<sp/>ElementType::AMBITUS)<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_ms_1_1_clef_1a3a9ca86d904b55728c1cd9c65b15ecef" refkind="member"><highlight class="normal"><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/><ref refid="class_ms_1_1_clef_1a3a9ca86d904b55728c1cd9c65b15ecef" kindref="member">Clef::drop</ref>(<ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref>&amp;<sp/>data)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>e<sp/>=<sp/>data.element;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_clef" kindref="compound">Clef</ref>*<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;isClef())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_clef" kindref="compound">Clef</ref>*<sp/>clef<sp/>=<sp/>toClef(e);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClefType<sp/>stype<sp/><sp/>=<sp/>clef-&gt;clefType();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clefType()<sp/>!=<sp/>stype)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score()-&gt;undoChangeClef(staff(),<sp/>segment(),<sp/>stype);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;isAmbitus())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(!generated())*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>*<sp/><sp/><sp/><sp/>meas<sp/><sp/>=<sp/>measure();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref>*<sp/><sp/><sp/><sp/>segm<sp/><sp/>=<sp/>meas-&gt;<ref refid="class_ms_1_1_measure_1a4fe8e5a83c238d686df4930a59ad6861" kindref="member">getSegment</ref>(SegmentType::Ambitus,<sp/>meas-&gt;tick());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segm-&gt;element(track()))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score()-&gt;undoRemoveElement(segm-&gt;element(track()));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ms_1_1_ambitus" kindref="compound">Ambitus</ref>*<sp/>r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ms_1_1_ambitus" kindref="compound">Ambitus</ref>(score());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;setParent(segm);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;setTrack(track());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score()-&gt;undoAddElement(r);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setSmall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::setSmall(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/>_small)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_small<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::read(<ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref>&amp;<sp/>e)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e.readNextStartElement())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringRef&amp;<sp/>tag(e.name());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;concertClefType&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._concertClef<sp/>=<sp/>Clef::clefType(e.readElementText());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;transposingClefType&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._transposingClef<sp/>=<sp/>Clef::clefType(e.readElementText());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;showCourtesyClef&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_showCourtesy<sp/>=<sp/>e.readInt();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Element::readProperties(e))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.unknown();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clefType()<sp/>==<sp/>ClefType::INVALID)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setClefType(ClefType::G);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::write(<ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref>&amp;<sp/>xml)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="305"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml.stag(name());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_clefTypes._concertClef<sp/>!=<sp/>ClefType::INVALID)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.tag(</highlight><highlight class="stringliteral">&quot;concertClefType&quot;</highlight><highlight class="normal">,<sp/>ClefInfo::tag(_clefTypes._concertClef));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_clefTypes._transposingClef<sp/>!=<sp/>ClefType::INVALID)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.tag(</highlight><highlight class="stringliteral">&quot;transposingClefType&quot;</highlight><highlight class="normal">,<sp/>ClefInfo::tag(_clefTypes._transposingClef));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_showCourtesy)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml.tag(</highlight><highlight class="stringliteral">&quot;showCourtesyClef&quot;</highlight><highlight class="normal">,<sp/>_showCourtesy);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Element::writeProperties(xml);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xml.etag();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>tick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Clef::tick()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="322"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segment()<sp/>?<sp/>segment()-&gt;tick()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setClefType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::setClefType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>s)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClefType<sp/>ct<sp/>=<sp/>clefType(s);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ct<sp/>==<sp/>ClefType::INVALID)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Clef::setSubtype:<sp/>unknown:<sp/>&lt;%s&gt;&quot;</highlight><highlight class="normal">,<sp/>qPrintable(s));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct<sp/>=<sp/>ClefType::G;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setClefType(ct);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>clefTypeName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Clef::clefTypeName()</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClefInfo::tag(clefType());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>clefType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">ClefType<sp/>Clef::clefType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>s)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClefInfo::tag2type(s);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setClefType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::setClefType(ClefType<sp/>i)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concertPitch())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._concertClef<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_clefTypes._transposingClef<sp/>==<sp/>ClefType::INVALID)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._transposingClef<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._transposingClef<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_clefTypes._concertClef<sp/>==<sp/>ClefType::INVALID)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._concertClef<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setConcertClef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::setConcertClef(ClefType<sp/>val)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._concertClef<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setTransposingClef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::setTransposingClef(ClefType<sp/>val)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_clefTypes._transposingClef<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>clefType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">ClefType<sp/>Clef::clefType()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="400"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concertPitch())</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_clefTypes._concertClef;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_clefTypes._transposingClef;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>spatiumChanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::spatiumChanged(qreal<sp/>oldValue,<sp/>qreal<sp/>newValue)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Element::spatiumChanged(oldValue,<sp/>newValue);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layout();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>undoSetShowCourtesy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::undoSetShowCourtesy(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>undoChangeProperty(P_ID::SHOW_COURTESY,<sp/>v);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>getProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">QVariant<sp/>Clef::getProperty(P_ID<sp/>propertyId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(propertyId)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SHOW_COURTESY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>showCourtesy();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SMALL:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>small();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Element::getProperty(propertyId);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>setProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Clef::setProperty(P_ID<sp/>propertyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant&amp;<sp/>v)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(propertyId)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SHOW_COURTESY:<sp/>_showCourtesy<sp/>=<sp/>v.toBool();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SMALL:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setSmall(v.toBool());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Element::setProperty(propertyId,<sp/>v);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>propertyDefault</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">QVariant<sp/>Clef::propertyDefault(P_ID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="460"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SHOW_COURTESY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P_ID::SMALL:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Element::propertyDefault(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>nextElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>Clef::nextElement()</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segment()-&gt;firstInNextSegments(staffIdx());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>prevElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="class_ms_1_1_element" kindref="compound">Element</ref>*<sp/>Clef::prevElement()</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segment()-&gt;lastInPrevSegments(staffIdx());</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>accessibleInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">QString<sp/>Clef::accessibleInfo()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="491"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qApp-&gt;translate(</highlight><highlight class="stringliteral">&quot;clefTable&quot;</highlight><highlight class="normal">,<sp/>ClefInfo::name(clefType()));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clef::clear()</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setbbox(QRectF());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symId<sp/>=<sp/>SymId::noSym;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libmscore/clef.cpp"/>
  </compounddef>
</doxygen>
