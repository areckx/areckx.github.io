<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pmmacosxcm_8c" kind="file" language="C++">
    <compoundname>pmmacosxcm.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="pmutil_8h" local="yes">pmutil.h</includes>
    <includes refid="pminternal_8h" local="yes">pminternal.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="pmmac_8h" local="yes">pmmac.h</includes>
    <includes refid="pmmacosxcm_8h" local="yes">pmmacosxcm.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">CoreServices/CoreServices.h</includes>
    <includes local="no">CoreMIDI/MIDIServices.h</includes>
    <includes local="no">CoreAudio/HostTime.h</includes>
    <incdepgraph>
      <node id="92964">
        <label>pmmac.h</label>
        <link refid="pmmac_8h_source"/>
      </node>
      <node id="92962">
        <label>pminternal.h</label>
        <link refid="pminternal_8h_source"/>
      </node>
      <node id="92969">
        <label>CoreMIDI/MIDIServices.h</label>
      </node>
      <node id="92959">
        <label>stdlib.h</label>
      </node>
      <node id="92968">
        <label>CoreServices/CoreServices.h</label>
      </node>
      <node id="92960">
        <label>portmidi.h</label>
        <link refid="portmidi_8h_source"/>
      </node>
      <node id="92967">
        <label>string.h</label>
      </node>
      <node id="92958">
        <label>thirdparty/portmidi/pm_mac/pmmacosxcm.c</label>
        <link refid="pmmacosxcm_8c"/>
        <childnode refid="92959" relation="include">
        </childnode>
        <childnode refid="92960" relation="include">
        </childnode>
        <childnode refid="92961" relation="include">
        </childnode>
        <childnode refid="92962" relation="include">
        </childnode>
        <childnode refid="92963" relation="include">
        </childnode>
        <childnode refid="92964" relation="include">
        </childnode>
        <childnode refid="92965" relation="include">
        </childnode>
        <childnode refid="92966" relation="include">
        </childnode>
        <childnode refid="92967" relation="include">
        </childnode>
        <childnode refid="92968" relation="include">
        </childnode>
        <childnode refid="92969" relation="include">
        </childnode>
        <childnode refid="92970" relation="include">
        </childnode>
      </node>
      <node id="92965">
        <label>pmmacosxcm.h</label>
        <link refid="pmmacosxcm_8h_source"/>
      </node>
      <node id="92970">
        <label>CoreAudio/HostTime.h</label>
      </node>
      <node id="92961">
        <label>pmutil.h</label>
        <link refid="pmutil_8h_source"/>
      </node>
      <node id="92966">
        <label>stdio.h</label>
      </node>
      <node id="92963">
        <label>porttime.h</label>
        <link refid="porttime_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="structmidi__macosxcm__struct" prot="public">midi_macosxcm_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pmmacosxcm_8c_1ab30af815d6e9494361629440f14e3716" prot="public" static="no">
        <name>PACKET_BUFFER_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="42" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1a1d8bc4eae0955327e214d935e00eb3d7" prot="public" static="no">
        <name>SYSEX_BUFFER_SIZE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="51" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1acbbde1bd17dd8e09b46e3f0d809deea1" prot="public" static="no">
        <name>VERBOSE_ON</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="53" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1a42f8c497a1968074f38bf5055c650dca" prot="public" static="no">
        <name>VERBOSE</name>
        <initializer>if (VERBOSE_ON)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="54" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1aa2197f6ca200566c0986e737edd211e4" prot="public" static="no">
        <name>MIDI_SYSEX</name>
        <initializer>0xf0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="56" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" prot="public" static="no">
        <name>MIDI_EOX</name>
        <initializer>0xf7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="57" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmmacosxcm_8c_1a1ee2586a063422ec7d18e2abfbafa545" prot="public" static="no">
        <name>MIDI_STATUS_MASK</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="58" column="9" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pmmacosxcm_8c_1a9ec032b9b4c250f0d5c3582eaeb2e763" prot="public" static="no">
        <type>struct <ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_struct</ref></type>
        <definition>typedef struct midi_macosxcm_struct  midi_macosxcm_node</definition>
        <argsstring></argsstring>
        <name>midi_macosxcm_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="85" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pmmacosxcm_8c_1ae166cd7460930e0604053ee5adf79f5b" prot="public" static="no">
        <type>struct <ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_struct</ref> *</type>
        <definition>typedef struct midi_macosxcm_struct * midi_macosxcm_type</definition>
        <argsstring></argsstring>
        <name>midi_macosxcm_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="85" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pmmacosxcm_8c_1ae44da69d56ef14744e584c02d1bb20a2" prot="public" static="yes" mutable="no">
        <type>MIDIClientRef</type>
        <definition>MIDIClientRef client</definition>
        <argsstring></argsstring>
        <name>client</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="60" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmmacosxcm_8c_1ad067c6e06dd981e02ae976b75f9e8406" prot="public" static="yes" mutable="no">
        <type>MIDIPortRef</type>
        <definition>MIDIPortRef portIn</definition>
        <argsstring></argsstring>
        <name>portIn</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="61" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmmacosxcm_8c_1a59d6b1b83598d9cc91242803e811fe3c" prot="public" static="yes" mutable="no">
        <type>MIDIPortRef</type>
        <definition>MIDIPortRef portOut</definition>
        <argsstring></argsstring>
        <name>portOut</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="62" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmmacosxcm_8c_1ae873c00d5f23a0694ac7ab51b14b4850" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_macosx_in_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_macosx_in_dictionary</name>
        <initializer>= {
    none_write_short,
    none_sysex,
    none_sysex,
    none_write_byte,
    none_write_short,
    none_write_flush,
    none_synchronize,
    midi_in_open,
    midi_abort,
    midi_in_close,
    success_poll,
    midi_has_host_error,
    midi_get_host_error,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="64" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmmacosxcm_8c_1aa9435e0a77e0a9e7ae94dcce3b3f637f" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_macosx_out_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_macosx_out_dictionary</name>
        <initializer>= {
    midi_write_short,
    midi_begin_sysex,
    midi_end_sysex,
    midi_write_byte,
    midi_write_realtime,
    midi_write_flush,
    midi_synchronize,
    midi_out_open,
    midi_abort,
    midi_out_close,
    success_poll,
    midi_has_host_error,
    midi_get_host_error,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="65" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="828" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pmmacosxcm_8c_1ad568f8aa7eb36520f82e66495921c959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MIDITimeStamp</type>
        <definition>MIDITimeStamp timestamp_pm_to_cm</definition>
        <argsstring>(PmTimestamp timestamp)</argsstring>
        <name>timestamp_pm_to_cm</name>
        <param>
          <type>PmTimestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="88" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="614" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a0e1fdfd5e03e05a85470dadee7f1e237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmTimestamp</type>
        <definition>PmTimestamp timestamp_cm_to_pm</definition>
        <argsstring>(MIDITimeStamp timestamp)</argsstring>
        <name>timestamp_cm_to_pm</name>
        <param>
          <type>MIDITimeStamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="89" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="625" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1ae90a73f7fe6862656bad47ce0df16def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * cm_get_full_endpoint_name</definition>
        <argsstring>(MIDIEndpointRef endpoint)</argsstring>
        <name>cm_get_full_endpoint_name</name>
        <param>
          <type>MIDIEndpointRef</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="91" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="762" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a22c1d0fd35977f92468172c5d04eacde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int midi_length</definition>
        <argsstring>(long msg)</argsstring>
        <name>midi_length</name>
        <param>
          <type>long</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="95" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="95" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1aad4a1d2e052b59e82f887bed03e0cc4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmTimestamp</type>
        <definition>static PmTimestamp midi_synchronize</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>midi_synchronize</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="114" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="114" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a2655a50da6fa830f8840ed1b83cee5a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_packet</definition>
        <argsstring>(MIDIPacket *packet, PmEvent *event, PmInternal *midi, midi_macosxcm_type m)</argsstring>
        <name>process_packet</name>
        <param>
          <type>MIDIPacket *</type>
          <declname>packet</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_type</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="139" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="139" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1acbd57e51bdf4e1cec69149a3947363d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void readProc</definition>
        <argsstring>(const MIDIPacketList *newPackets, void *refCon, void *connRefCon)</argsstring>
        <name>readProc</name>
        <param>
          <type>const MIDIPacketList *</type>
          <declname>newPackets</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>refCon</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>connRefCon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="231" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="231" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1aaec3e0de5e05df773438dd4fc4935edd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_in_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>midi_in_open</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="293" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="293" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a56d9a963948347e742db379e66d533dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_in_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>midi_in_close</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="346" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="346" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1abaa386ede4fbd0c2d3c821de6eb8ad15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_out_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>midi_out_open</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="379" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="379" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a79dfdafb5ab5e69dcb1a3c729581b9f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_out_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>midi_out_close</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="407" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="407" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a6808f4db07cf1bef378ad4a9d731c19d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_abort</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>midi_abort</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="419" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1ae4d7fe635915f7f099747edda1ba5cdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_write_flush</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>midi_write_flush</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>PmTimestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="426" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="426" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a9866541a7bd0c314ed698b7e1634d5a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError send_packet</definition>
        <argsstring>(PmInternal *midi, Byte *message, unsigned int messageLength, MIDITimeStamp timestamp)</argsstring>
        <name>send_packet</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>Byte *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>messageLength</declname>
        </param>
        <param>
          <type>MIDITimeStamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="453" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="453" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a65ffcfa38dcf1879b530a48bf47ef15b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_write_short</definition>
        <argsstring>(PmInternal *midi, PmEvent *event)</argsstring>
        <name>midi_write_short</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="481" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="481" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a1c3cd3c662339c0d4ac6c9571c686c6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_begin_sysex</definition>
        <argsstring>(PmInternal *midi, PmTimestamp when)</argsstring>
        <name>midi_begin_sysex</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>PmTimestamp</type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="519" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="519" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a0fb9629f0c463a2fe5e5cf314f97e2f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_end_sysex</definition>
        <argsstring>(PmInternal *midi, PmTimestamp when)</argsstring>
        <name>midi_end_sysex</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>PmTimestamp</type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="544" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="544" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a857e4f7ae401eebbdce32fda10d1d0b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_write_byte</definition>
        <argsstring>(PmInternal *midi, unsigned char byte, PmTimestamp timestamp)</argsstring>
        <name>midi_write_byte</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>PmTimestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="566" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="566" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1ac01d8a9cdd1f765e14ff0db6c52e0559" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>static PmError midi_write_realtime</definition>
        <argsstring>(PmInternal *midi, PmEvent *event)</argsstring>
        <name>midi_write_realtime</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="580" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="580" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1abb5c79c3a2e7937f0394edbce32a7f5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int midi_has_host_error</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>midi_has_host_error</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="590" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="590" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a2d023983320d84b05f4cf71e344c1034" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void midi_get_host_error</definition>
        <argsstring>(PmInternal *midi, char *msg, unsigned int len)</argsstring>
        <name>midi_get_host_error</name>
        <param>
          <type><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="597" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="597" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1ad23cf6b92596cdc2273a377e6534af64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CFStringRef</type>
        <definition>CFStringRef EndpointName</definition>
        <argsstring>(MIDIEndpointRef endpoint, bool isExternal)</argsstring>
        <name>EndpointName</name>
        <param>
          <type>MIDIEndpointRef</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isExternal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="638" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="638" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a8988cec3211c4176b20f7445adab8793" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CFStringRef</type>
        <definition>static CFStringRef ConnectedEndpointName</definition>
        <argsstring>(MIDIEndpointRef endpoint)</argsstring>
        <name>ConnectedEndpointName</name>
        <param>
          <type>MIDIEndpointRef</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="709" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="709" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a558b66062ad3b79541651a4b7bb3ec3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PmError</type>
        <definition>PmError pm_macosxcm_init</definition>
        <argsstring>(void)</argsstring>
        <name>pm_macosxcm_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="845" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="845" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="pmmacosxcm_8c_1a57920448f35efec74a9d8ed028c89dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pm_macosxcm_term</definition>
        <argsstring>(void)</argsstring>
        <name>pm_macosxcm_term</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c" line="930" column="1" bodyfile="thirdparty/portmidi/pm_mac/pmmacosxcm.c" bodystart="930" bodyend="935"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Platform<sp/>interface<sp/>to<sp/>the<sp/>MacOS<sp/>X<sp/>CoreMIDI<sp/>framework</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Jon<sp/>Parise<sp/>&lt;jparise<sp/>at<sp/>cmu.edu&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>and<sp/>subsequent<sp/>work<sp/>by<sp/>Andrew<sp/>Zeldis<sp/>and<sp/>Zico<sp/>Kolter</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>and<sp/>Roger<sp/>B.<sp/>Dannenberg</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pmmacosx.c,v<sp/>1.17<sp/>2002/01/27<sp/>02:40:40<sp/>jon<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Notes:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>since<sp/>the<sp/>input<sp/>and<sp/>output<sp/>streams<sp/>are<sp/>represented<sp/>by<sp/>MIDIEndpointRef</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>values<sp/>and<sp/>almost<sp/>no<sp/>other<sp/>state,<sp/>we<sp/>store<sp/>the<sp/>MIDIEndpointRef<sp/>on</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>descriptors[midi-&gt;device_id].descriptor.<sp/>The<sp/>only<sp/>other<sp/>state<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>for<sp/>errors:<sp/>we<sp/>need<sp/>to<sp/>know<sp/>if<sp/>there<sp/>is<sp/>an<sp/>error<sp/>and<sp/>if<sp/>so,<sp/>what<sp/>is</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>error<sp/>text.<sp/>We<sp/>use<sp/>a<sp/>structure<sp/>with<sp/>two<sp/>kinds<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>host<sp/>error:<sp/>&quot;error&quot;<sp/>and<sp/>&quot;callback_error&quot;.<sp/>That<sp/>way,<sp/>asynchronous<sp/>callbacks</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>do<sp/>not<sp/>interfere<sp/>with<sp/>other<sp/>error<sp/>information.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>OS<sp/>X<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>have<sp/>an<sp/>error-code-to-text<sp/>function,<sp/>so<sp/>we<sp/>will</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>just<sp/>use<sp/>text<sp/>messages<sp/>instead<sp/>of<sp/>error<sp/>codes.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CM_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;portmidi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pmutil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pminternal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;porttime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pmmac.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pmmacosxcm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CoreServices/CoreServices.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CoreMIDI/MIDIServices.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CoreAudio/HostTime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_BUFFER_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>very<sp/>strange:<sp/>if<sp/>I<sp/>put<sp/>in<sp/>a<sp/>reasonable<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>number<sp/>here,<sp/>e.g.<sp/>128,<sp/>which<sp/>would<sp/>allow<sp/>sysex<sp/>data</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>to<sp/>be<sp/>sent<sp/>128<sp/>bytes<sp/>at<sp/>a<sp/>time,<sp/>then<sp/>I<sp/>lose<sp/>sysex</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>data<sp/>in<sp/>my<sp/>loopback<sp/>test.<sp/>With<sp/>a<sp/>buffer<sp/>size<sp/>of<sp/>4,</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>we<sp/>put<sp/>at<sp/>most<sp/>4<sp/>bytes<sp/>in<sp/>a<sp/>packet<sp/>(but<sp/>maybe<sp/>many</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>packets<sp/>in<sp/>a<sp/>packetList),<sp/>and<sp/>everything<sp/>works<sp/>fine.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSEX_BUFFER_SIZE<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_ON<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE<sp/>if<sp/>(VERBOSE_ON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SYSEX<sp/><sp/><sp/><sp/><sp/><sp/>0xf0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_EOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_STATUS_MASK<sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MIDIClientRef<sp/><sp/><sp/><sp/>client<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Client<sp/>handle<sp/>to<sp/>the<sp/>MIDI<sp/>server<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MIDIPortRef<sp/><sp/>portIn<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>port<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MIDIPortRef<sp/><sp/>portOut<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>port<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_macosx_in_dictionary;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_macosx_out_dictionary;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structmidi__macosxcm__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sync_time;<sp/></highlight><highlight class="comment">/*<sp/>when<sp/>did<sp/>we<sp/>last<sp/>determine<sp/>delta?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>delta;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>difference<sp/>between<sp/>stream<sp/>time<sp/>and<sp/>real<sp/>time<sp/>in<sp/>ns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>last_time;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>output<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_message;<sp/><sp/></highlight><highlight class="comment">/*<sp/>tells<sp/>midi_write<sp/>to<sp/>sychronize<sp/>timestamps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysex_mode;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>middle<sp/>of<sp/>sending<sp/>sysex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sysex_word;<sp/></highlight><highlight class="comment">/*<sp/>accumulate<sp/>data<sp/>when<sp/>receiving<sp/>sysex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysex_byte_count;<sp/></highlight><highlight class="comment">/*<sp/>count<sp/>how<sp/>many<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error[PM_HOST_ERROR_MSG_LEN];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>callback_error[PM_HOST_ERROR_MSG_LEN];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte<sp/>packetBuffer[PACKET_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIPacketList<sp/>*packetList;<sp/></highlight><highlight class="comment">/*<sp/>a<sp/>pointer<sp/>to<sp/>packetBuffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIPacket<sp/>*packet;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte<sp/>sysex_buffer[SYSEX_BUFFER_SIZE];<sp/></highlight><highlight class="comment">/*<sp/>temp<sp/>storage<sp/>for<sp/>sysex<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDITimeStamp<sp/>sysex_timestamp;<sp/></highlight><highlight class="comment">/*<sp/>timestamp<sp/>to<sp/>use<sp/>with<sp/>sysex<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>for<sp/>running<sp/>status<sp/>(is<sp/>running<sp/>status<sp/>possible<sp/>here?<sp/>-rbd):<sp/>-cpr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>last_command;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>last_msg_length;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/><ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_node</ref>,<sp/>*<ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_type</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>private<sp/>function<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">MIDITimeStamp<sp/>timestamp_pm_to_cm(PmTimestamp<sp/>timestamp);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">PmTimestamp<sp/>timestamp_cm_to_pm(MIDITimeStamp<sp/>timestamp);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cm_get_full_endpoint_name(MIDIEndpointRef<sp/>endpoint);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">midi_length(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>msg)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,<sp/>high,<sp/>low;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_lengths[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x00<sp/>through<sp/>0x70<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3,<sp/>3,<sp/>3,<sp/>2,<sp/>2,<sp/>3,<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x80<sp/>through<sp/>0xf0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_lengths[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/>3,<sp/>2,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0xf0<sp/>through<sp/>0xf8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0xf9<sp/>through<sp/>0xff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>msg<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>high<sp/>=<sp/>status<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/>=<sp/>status<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(high<sp/>!=<sp/>0xF)<sp/>?<sp/>high_lengths[high]<sp/>:<sp/>low_lengths[low];</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmTimestamp<sp/>midi_synchronize(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>pm_stream_time_2<sp/>=<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AudioConvertHostTimeToNanos(AudioGetCurrentHostTime());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>PmTimestamp<sp/>real_time;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>pm_stream_time;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>is<sp/>zero<sp/>and<sp/>this<sp/>is<sp/>an<sp/>output,<sp/>there<sp/>is<sp/>no<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>reference<sp/>and<sp/>midi_synchronize<sp/>should<sp/>never<sp/>be<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(midi-&gt;time_proc);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!(midi-&gt;write_flag<sp/>&amp;&amp;<sp/>midi-&gt;latency<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>real_time<sp/>between<sp/>two<sp/>reads<sp/>of<sp/>stream<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_stream_time<sp/>=<sp/>pm_stream_time_2;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real_time<sp/>=<sp/>(*midi-&gt;time_proc)(midi-&gt;time_info);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_stream_time_2<sp/>=<sp/>AudioConvertHostTimeToNanos(AudioGetCurrentHostTime());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>repeat<sp/>if<sp/>more<sp/>than<sp/>0.5<sp/>ms<sp/>has<sp/>elapsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pm_stream_time_2<sp/>&gt;<sp/>pm_stream_time<sp/>+<sp/>500000);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;delta<sp/>=<sp/>pm_stream_time<sp/>-<sp/>((UInt64)<sp/>real_time<sp/>*<sp/>(UInt64)<sp/>1000000);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sync_time<sp/>=<sp/>real_time;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>real_time;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">process_packet(MIDIPacket<sp/>*packet,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event,<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/>midi_macosxcm_type<sp/>m)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>a<sp/>packet<sp/>of<sp/>MIDI<sp/>messages<sp/>from<sp/>CoreMIDI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>may<sp/>be<sp/>multiple<sp/>short<sp/>messages<sp/>in<sp/>one<sp/>packet<sp/>(!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_length<sp/>=<sp/>packet-&gt;length;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cur_packet_data<sp/>=<sp/>packet-&gt;data;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining_length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_packet_data[0]<sp/>==<sp/>MIDI_SYSEX<sp/>||</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>are<sp/>we<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>a<sp/>sysex<sp/>message?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m-&gt;last_command<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(cur_packet_data[0]<sp/>&amp;<sp/>MIDI_STATUS_MASK)))<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>running<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amt<sp/>=<sp/>pm_read_bytes(midi,<sp/>cur_packet_data,<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_length,<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;timestamp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_length<sp/>-=<sp/>amt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data<sp/>+=<sp/>amt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_packet_data[0]<sp/>==<sp/>MIDI_EOX)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>never<sp/>happen,<sp/>because<sp/>pm_read_bytes<sp/>should</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>get<sp/>and<sp/>read<sp/>all<sp/>EOX<sp/>bytes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;sysex_in_progress<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_packet_data[0]<sp/>&amp;<sp/>MIDI_STATUS_MASK)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>length<sp/>of<sp/>the<sp/>next<sp/>(short)<sp/>msg<sp/>in<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_message_length<sp/>=<sp/>midi_length(cur_packet_data[0]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_message_length<sp/>&gt;<sp/>remaining_length)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>debug<sp/>msg:<sp/>not<sp/>enough<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>there&apos;s<sp/>no<sp/>more<sp/>data,<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_msg_length<sp/>=<sp/>cur_message_length;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>cur_packet_data[0];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cur_message_length)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(cur_packet_data[0],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(cur_packet_data[0],<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[1],<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(cur_packet_data[0],</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[1],<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[2]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PortMIDI<sp/>internal<sp/>error;<sp/>should<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(cur_message_length<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>give<sp/>up<sp/>on<sp/>packet<sp/>if<sp/>continued<sp/>after<sp/>assert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_read_short(midi,<sp/>event);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_length<sp/>-=<sp/>m-&gt;last_msg_length;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data<sp/>+=<sp/>m-&gt;last_msg_length;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;last_msg_length<sp/>&gt;<sp/>remaining_length<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>running<sp/>status,<sp/>but<sp/>not<sp/>enough<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>debug<sp/>msg:<sp/>not<sp/>enough<sp/>data<sp/>in<sp/>CoreMIDI<sp/>packet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>there&apos;s<sp/>no<sp/>more<sp/>data,<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>output<sp/>message<sp/>using<sp/>running<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m-&gt;last_msg_length)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(m-&gt;last_command,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(m-&gt;last_command,<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[0],<sp/>0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message<sp/>=<sp/>Pm_Message(m-&gt;last_command,<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[0],<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data[1]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last_msg_length<sp/>is<sp/>invalid<sp/>--<sp/>internal<sp/>PortMIDI<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m-&gt;last_msg_length<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_read_short(midi,<sp/>event);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_length<sp/>-=<sp/>(m-&gt;last_msg_length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_packet_data<sp/>+=<sp/>(m-&gt;last_msg_length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>called<sp/>when<sp/>MIDI<sp/>packets<sp/>are<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">readProc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MIDIPacketList<sp/>*newPackets,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*refCon,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*connRefCon)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIPacket<sp/>*packet;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetIndex;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CM_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;readProc:<sp/>numPackets<sp/>%d:<sp/>&quot;</highlight><highlight class="normal">,<sp/>newPackets-&gt;numPackets);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>the<sp/>context<sp/>for<sp/>this<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>connRefCon;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>synchronize<sp/>time<sp/>references<sp/>every<sp/>100ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>=<sp/>(*midi-&gt;time_proc)(midi-&gt;time_info);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;first_message<sp/>||<sp/>m-&gt;sync_time<sp/>+<sp/>100<sp/></highlight><highlight class="comment">/*ms*/</highlight><highlight class="normal"><sp/>&lt;<sp/>now)<sp/>{<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>to<sp/>resync<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>midi_synchronize(midi);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;first_message<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>packet<sp/>=<sp/>(MIDIPacket<sp/>*)<sp/>&amp;newPackets-&gt;packet[0];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;readproc<sp/>packet<sp/>status<sp/>%x<sp/>length<sp/>%d\n&quot;,<sp/>packet-&gt;data[0],<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;length);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(packetIndex<sp/>=<sp/>0;<sp/>packetIndex<sp/>&lt;<sp/>newPackets-&gt;numPackets;<sp/>packetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>timestamp<sp/>and<sp/>dispatch<sp/>this<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.timestamp<sp/>=<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(AudioConvertHostTimeToNanos(packet-&gt;timeStamp)<sp/>-<sp/>m-&gt;delta)<sp/>/<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UInt64)<sp/>1000000;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>packet-&gt;data[0];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>packet<sp/>as<sp/>sysex<sp/>data<sp/>if<sp/>it<sp/>begins<sp/>with<sp/>MIDI_SYSEX,<sp/>or</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDI_EOX<sp/>or<sp/>non-status<sp/>byte<sp/>with<sp/>no<sp/>running<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CM_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>packet-&gt;length);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>MIDI_SYSEX<sp/>||<sp/>status<sp/>==<sp/>MIDI_EOX<sp/>||<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((!(status<sp/>&amp;<sp/>MIDI_STATUS_MASK))<sp/>&amp;&amp;<sp/>!m-&gt;last_command))<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>previously<sp/>was:<sp/>!(status<sp/>&amp;<sp/>MIDI_STATUS_MASK))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>this<sp/>could<sp/>mistake<sp/>running<sp/>status<sp/>for<sp/>sysex<sp/>data</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>running<sp/>status<sp/>data<sp/>-cpr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;last_msg_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;sysex<sp/>packet<sp/>length:<sp/>%d\n&quot;,<sp/>packet-&gt;length);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_read_bytes(midi,<sp/>packet-&gt;data,<sp/>packet-&gt;length,<sp/>event.timestamp);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_packet(packet,<sp/>&amp;event,<sp/>midi,<sp/>m);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet<sp/>=<sp/>MIDIPacketNext(packet);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CM_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="293"><highlight class="normal">midi_in_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEndpointRef<sp/>endpoint;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>OSStatus<sp/>macHostError;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>insure<sp/>that<sp/>we<sp/>have<sp/>a<sp/>time_proc<sp/>for<sp/>timing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;time_proc<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Pt_Started())<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pt_Start(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time_get<sp/>does<sp/>not<sp/>take<sp/>a<sp/>parameter,<sp/>so<sp/>coerce<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;time_proc<sp/>=<sp/>(PmTimeProcPtr)<sp/>Pt_Time;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/>(MIDIEndpointRef)<sp/>descriptors[midi-&gt;device_id].descriptor;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!endpoint)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmInvalidDeviceId;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>pm_alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_node</ref>));<sp/></highlight><highlight class="comment">/*<sp/>create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmInsufficientMemory;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;error[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;callback_error[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sync_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;delta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;first_message<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_mode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_word<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_byte_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;packetList<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_msg_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDIPortConnectSource(portIn,<sp/>endpoint,<sp/>midi);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>macHostError;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(pm_hosterror_text,<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>error<sp/>%d:<sp/>MIDIPortConnectSource()<sp/>in<sp/>midi_in_open()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macHostError);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_free(m);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmHostError;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="346"><highlight class="normal">midi_in_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEndpointRef<sp/>endpoint;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>OSStatus<sp/>macHostError;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>PmError<sp/>err<sp/>=<sp/>pmNoError;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!m)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmBadPtr;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/>(MIDIEndpointRef)<sp/>descriptors[midi-&gt;device_id].descriptor;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!endpoint)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>pmBadPtr;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shut<sp/>off<sp/>the<sp/>incoming<sp/>messages<sp/>before<sp/>freeing<sp/>data<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDIPortDisconnectSource(portIn,<sp/>endpoint);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>macHostError;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(pm_hosterror_text,<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>error<sp/>%d:<sp/>MIDIPortDisconnectSource()<sp/>in<sp/>midi_in_close()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macHostError);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pmHostError;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_free(midi-&gt;descriptor);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="379"><highlight class="normal">midi_out_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>pm_alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmidi__macosxcm__struct" kindref="compound">midi_macosxcm_node</ref>));<sp/></highlight><highlight class="comment">/*<sp/>create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmInsufficientMemory;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;error[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;callback_error[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sync_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;delta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;first_message<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_mode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_word<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_byte_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;packetList<sp/>=<sp/>(MIDIPacketList<sp/>*)<sp/>m-&gt;packetBuffer;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_command<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_msg_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="407"><highlight class="normal">midi_out_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!m)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmBadPtr;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;descriptor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_free(midi-&gt;descriptor);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="419"><highlight class="normal">midi_abort(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="426"><highlight class="normal">midi_write_flush(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/>PmTimestamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>OSStatus<sp/>macHostError;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEndpointRef<sp/>endpoint<sp/>=<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MIDIEndpointRef)<sp/>descriptors[midi-&gt;device_id].descriptor;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(endpoint);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;packet<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>space,<sp/>send<sp/>the<sp/>buffer<sp/>and<sp/>start<sp/>refilling<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDISend(portOut,<sp/>endpoint,<sp/>m-&gt;packetList);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>indicate<sp/>no<sp/>data<sp/>in<sp/>packetList<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>send_packet_error;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal">send_packet_error:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>macHostError;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(pm_hosterror_text,<sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>error<sp/>%d:<sp/>MIDISend()<sp/>in<sp/>midi_write()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macHostError);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmHostError;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="453"><highlight class="normal">send_packet(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/>Byte<sp/>*message,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>messageLength,<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDITimeStamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>PmError<sp/>err;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;add<sp/>%d<sp/>to<sp/>packet<sp/>%lx<sp/>len<sp/>%d\n&quot;,<sp/>message[0],<sp/>m-&gt;packet,<sp/>messageLength);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>MIDIPacketListAdd(m-&gt;packetList,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m-&gt;packetBuffer),<sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet,<sp/>timestamp,<sp/>messageLength,<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;packet<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>space,<sp/>send<sp/>the<sp/>buffer<sp/>and<sp/>start<sp/>refilling<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>midi-&gt;packet<sp/>non-null<sp/>to<sp/>fool<sp/>midi_write_flush<sp/>into<sp/>sending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>(MIDIPacket<sp/>*)<sp/>4;<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>midi_write_flush(midi,<sp/>timestamp))<sp/>!=<sp/>pmNoError)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>MIDIPacketListInit(m-&gt;packetList);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m-&gt;packet);<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>this<sp/>fails,<sp/>it&apos;s<sp/>a<sp/>programming<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>MIDIPacketListAdd(m-&gt;packetList,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m-&gt;packetBuffer),</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet,<sp/>timestamp,<sp/>messageLength,<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m-&gt;packet);<sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>run<sp/>out<sp/>of<sp/>space<sp/>on<sp/>first<sp/>message<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="481"><highlight class="normal">midi_write_short(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>when<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;timestamp;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>what<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDITimeStamp<sp/>timestamp;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>when_ns;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>Byte<sp/>message[4];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>messageLength;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(m-&gt;packet<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>MIDIPacketListInit(m-&gt;packetList);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>can<sp/>never<sp/>fail,<sp/>right?<sp/>failure<sp/>would<sp/>indicate<sp/>something<sp/></highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unrecoverable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m-&gt;packet);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>midi-&gt;now;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>==<sp/>0,<sp/>midi-&gt;now<sp/>is<sp/>not<sp/>valid.<sp/>We<sp/>will<sp/>just<sp/>set<sp/>it<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;latency<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>when_ns<sp/>=<sp/>((UInt64)<sp/>(when<sp/>+<sp/>midi-&gt;latency)<sp/>*<sp/>(UInt64)<sp/>1000000)<sp/>+<sp/>m-&gt;delta;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>backward<sp/>in<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when_ns<sp/>&lt;<sp/>m-&gt;last_time)<sp/>when_ns<sp/>=<sp/>m-&gt;last_time;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;last_time<sp/>=<sp/>when_ns;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/>(MIDITimeStamp)<sp/>AudioConvertNanosToHostTime(when_ns);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>message[0]<sp/>=<sp/>Pm_MessageStatus(what);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>message[1]<sp/>=<sp/>Pm_MessageData1(what);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>message[2]<sp/>=<sp/>Pm_MessageData2(what);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>messageLength<sp/>=<sp/>midi_length(what);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>this<sp/>message<sp/>to<sp/>the<sp/>packet<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>send_packet(midi,<sp/>message,<sp/>messageLength,<sp/>timestamp);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal">midi_begin_sysex(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/>PmTimestamp<sp/>when)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>when_ns;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_byte_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>midi-&gt;now;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>==<sp/>0,<sp/>midi-&gt;now<sp/>is<sp/>not<sp/>valid.<sp/>We<sp/>will<sp/>just<sp/>set<sp/>it<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;latency<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>when_ns<sp/>=<sp/>((UInt64)<sp/>(when<sp/>+<sp/>midi-&gt;latency)<sp/>*<sp/>(UInt64)<sp/>1000000)<sp/>+<sp/>m-&gt;delta;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_timestamp<sp/>=<sp/>(MIDITimeStamp)<sp/>AudioConvertNanosToHostTime(when_ns);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;packet<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>MIDIPacketListInit(m-&gt;packetList);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>can<sp/>never<sp/>fail,<sp/>right?<sp/>failure<sp/>would<sp/>indicate<sp/>something<sp/></highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unrecoverable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m-&gt;packet);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="544"><highlight class="normal">midi_end_sysex(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/>PmTimestamp<sp/>when)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>PmError<sp/>err;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>backward<sp/>in<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sysex_timestamp<sp/>&lt;<sp/>m-&gt;last_time)<sp/>m-&gt;sysex_timestamp<sp/>=<sp/>m-&gt;last_time;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>send<sp/>what&apos;s<sp/>in<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>send_packet(midi,<sp/>m-&gt;sysex_buffer,<sp/>m-&gt;sysex_byte_count,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;sysex_timestamp);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_byte_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>pmNoError)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;packet<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>flush<sp/>everything<sp/>in<sp/>the<sp/>packet<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="566"><highlight class="normal">midi_write_byte(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/>PmTimestamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;sysex_byte_count<sp/>&gt;=<sp/>SYSEX_BUFFER_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmError<sp/>err<sp/>=<sp/>midi_end_sysex(midi,<sp/>timestamp);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>pmNoError)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;sysex_buffer[m-&gt;sysex_byte_count++]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PmError</highlight></codeline>
<codeline lineno="580"><highlight class="normal">midi_write_realtime(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>send<sp/>a<sp/>realtime<sp/>message<sp/>during<sp/>a<sp/>sysex<sp/>message,<sp/>first</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flush<sp/>all<sp/>pending<sp/>sysex<sp/>bytes<sp/>into<sp/>packet<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>PmError<sp/>err<sp/>=<sp/>midi_end_sysex(midi,<sp/>0);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>pmNoError)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>we<sp/>can<sp/>just<sp/>do<sp/>a<sp/>normal<sp/>midi_write_short<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>midi_write_short(midi,<sp/>event);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>midi_has_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(m-&gt;callback_error[0]<sp/>!=<sp/>0)<sp/>||<sp/>(m-&gt;error[0]<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>midi_get_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_macosxcm_type<sp/>m<sp/>=<sp/>(midi_macosxcm_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>msg[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>to<sp/>empty<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(m)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>an<sp/>open<sp/>device<sp/>to<sp/>examine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;error[0])<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(msg,<sp/>m-&gt;error,<sp/>len);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;error[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;callback_error[0])<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(msg,<sp/>m-&gt;callback_error,<sp/>len);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;callback_error[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg[len<sp/>-<sp/>1]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>string<sp/>is<sp/>terminated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">MIDITimeStamp<sp/>timestamp_pm_to_cm(PmTimestamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>nanos;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MIDITimeStamp)0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanos<sp/>=<sp/>(UInt64)timestamp<sp/>*<sp/>(UInt64)1000000;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MIDITimeStamp)AudioConvertNanosToHostTime(nanos);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">PmTimestamp<sp/>timestamp_cm_to_pm(MIDITimeStamp<sp/>timestamp)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt64<sp/>nanos;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>nanos<sp/>=<sp/>AudioConvertHostTimeToNanos(timestamp);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PmTimestamp)(nanos<sp/>/<sp/>(UInt64)1000000);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>taken<sp/>from<sp/>http://developer.apple.com/qa/qa2004/qa1374.html</highlight></codeline>
<codeline lineno="636"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Obtain<sp/>the<sp/>name<sp/>of<sp/>an<sp/>endpoint<sp/>without<sp/>regard<sp/>for<sp/>whether<sp/>it<sp/>has<sp/>connections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>should<sp/>be<sp/>released<sp/>by<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal">CFStringRef<sp/>EndpointName(MIDIEndpointRef<sp/>endpoint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExternal)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>CFMutableStringRef<sp/>result<sp/>=<sp/>CFStringCreateMutable(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>CFStringRef<sp/>str;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>with<sp/>the<sp/>endpoint&apos;s<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>MIDIObjectGetStringProperty(endpoint,<sp/>kMIDIPropertyName,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringAppend(result,<sp/>str);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>CFRelease(str);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>MIDIEntityRef<sp/>entity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>MIDIEndpointGetEntity(endpoint,<sp/>&amp;entity);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFStringGetLength(result)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endpoint<sp/>name<sp/>has<sp/>zero<sp/>length<sp/>--<sp/>try<sp/>the<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIObjectGetStringProperty(entity,<sp/>kMIDIPropertyName,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFStringAppend(result,<sp/>str);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(str);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>consider<sp/>the<sp/>device&apos;s<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>MIDIDeviceRef<sp/>device<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>MIDIEntityGetDevice(entity,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>MIDIObjectGetStringProperty(device,<sp/>kMIDIPropertyName,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFStringGetLength(result)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(result);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>external<sp/>device<sp/>has<sp/>only<sp/>one<sp/>entity,<sp/>throw<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>endpoint<sp/>name<sp/>and<sp/>just<sp/>use<sp/>the<sp/>device<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isExternal<sp/>&amp;&amp;<sp/>MIDIDeviceGetNumberOfEntities(device)<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(result);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFStringGetLength(str)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(str);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>the<sp/>entity<sp/>name<sp/>already<sp/>start<sp/>with<sp/>the<sp/>device<sp/>name?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(some<sp/>drivers<sp/>do<sp/>this<sp/>though<sp/>they<sp/>shouldn&apos;t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>so,<sp/>do<sp/>not<sp/>prepend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFStringCompareWithOptions(<sp/>result,<sp/></highlight><highlight class="comment">/*<sp/>endpoint<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/></highlight><highlight class="comment">/*<sp/>device<sp/>name<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRangeMake(0,<sp/>CFStringGetLength(str)),<sp/>0)<sp/>!=<sp/>kCFCompareEqualTo)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepend<sp/>the<sp/>device<sp/>name<sp/>to<sp/>the<sp/>entity<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFStringGetLength(result)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFStringInsert(result,<sp/>0,<sp/>CFSTR(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFStringInsert(result,<sp/>0,<sp/>str);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(str);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Obtain<sp/>the<sp/>name<sp/>of<sp/>an<sp/>endpoint,<sp/>following<sp/>connections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>should<sp/>be<sp/>released<sp/>by<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CFStringRef<sp/>ConnectedEndpointName(MIDIEndpointRef<sp/>endpoint)</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>CFMutableStringRef<sp/>result<sp/>=<sp/>CFStringCreateMutable(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>CFStringRef<sp/>str;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>OSStatus<sp/>err;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>the<sp/>endpoint<sp/>have<sp/>connections?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>CFDataRef<sp/>connections<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nConnected<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anyStrings<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>MIDIObjectGetDataProperty(endpoint,<sp/>kMIDIPropertyConnectionUniqueID,<sp/>&amp;connections);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connections<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>has<sp/>connections,<sp/>follow<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Concatenate<sp/>the<sp/>names<sp/>of<sp/>all<sp/>connected<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>nConnected<sp/>=<sp/>CFDataGetLength(connections)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MIDIUniqueID);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nConnected)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SInt32<sp/>*pid<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SInt32<sp/>*)(CFDataGetBytePtr(connections));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nConnected;<sp/>++i,<sp/>++pid)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIUniqueID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>EndianS32_BtoN(*pid);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIObjectRef<sp/>connObject;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIObjectType<sp/>connObjectType;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>MIDIObjectFindByUniqueID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;connObject,<sp/>&amp;connObjectType);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connObjectType<sp/>==<sp/>kMIDIObjectType_ExternalSource<sp/><sp/>||</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connObjectType<sp/>==<sp/>kMIDIObjectType_ExternalDestination)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connected<sp/>to<sp/>an<sp/>external<sp/>device&apos;s<sp/>endpoint<sp/>(10.3<sp/>and<sp/>later).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>EndpointName((MIDIEndpointRef)(connObject),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connected<sp/>to<sp/>an<sp/>external<sp/>device<sp/>(10.2)<sp/>(or<sp/>something<sp/>else,<sp/>catch-all)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIDIObjectGetStringProperty(connObject,<sp/>kMIDIPropertyName,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anyStrings)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFStringAppend(result,<sp/>CFSTR(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>anyStrings<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFStringAppend(result,<sp/>str);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(str);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>CFRelease(connections);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anyStrings)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>either<sp/>the<sp/>endpoint<sp/>had<sp/>no<sp/>connections,<sp/>or<sp/>we<sp/>failed<sp/>to<sp/>obtain<sp/>names<sp/>for<sp/>any<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EndpointName(endpoint,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cm_get_full_endpoint_name(MIDIEndpointRef<sp/>endpoint)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLDCODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEntityRef<sp/>entity;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIDeviceRef<sp/>device;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringRef<sp/>endpointName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringRef<sp/>deviceName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringRef<sp/>fullName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringEncoding<sp/>defaultEncoding;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newName;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>default<sp/>string<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>defaultEncoding<sp/>=<sp/>CFStringGetSystemEncoding();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>fullName<sp/>=<sp/>ConnectedEndpointName(endpoint);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLDCODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>entity<sp/>and<sp/>device<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEndpointGetEntity(endpoint,<sp/>&amp;entity);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEntityGetDevice(entity,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>nicely<sp/>formated<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIObjectGetStringProperty(endpoint,<sp/>kMIDIPropertyName,<sp/>&amp;endpointName);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIObjectGetStringProperty(device,<sp/>kMIDIPropertyName,<sp/>&amp;deviceName);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceName<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullName<sp/>=<sp/>CFStringCreateWithFormat(NULL,<sp/>NULL,<sp/>CFSTR(</highlight><highlight class="stringliteral">&quot;%@:<sp/>%@&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceName,<sp/>endpointName);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullName<sp/>=<sp/>endpointName;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>string<sp/>into<sp/>our<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>newName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(CFStringGetLength(fullName)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>CFStringGetCString(fullName,<sp/>newName,<sp/>CFStringGetLength(fullName)<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultEncoding);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLDCODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endpointName)<sp/>CFRelease(endpointName);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceName)<sp/>CFRelease(deviceName);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullName)<sp/>CFRelease(fullName);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newName;</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_macosx_in_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>none_write_short,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>none_sysex,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>none_sysex,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>none_write_byte,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>none_write_short,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>none_write_flush,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>none_synchronize,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_in_open,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_abort,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_in_close,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>success_poll,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_has_host_error,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_get_host_error,</highlight></codeline>
<codeline lineno="826"><highlight class="normal">};</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_macosx_out_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_write_short,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_begin_sysex,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_end_sysex,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_write_byte,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_write_realtime,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_write_flush,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_synchronize,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_out_open,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_abort,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_out_close,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>success_poll,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_has_host_error,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>midi_get_host_error,</highlight></codeline>
<codeline lineno="842"><highlight class="normal">};</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal">PmError<sp/>pm_macosxcm_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemCount<sp/>numInputs,<sp/>numOutputs,<sp/>numDevices;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>MIDIEndpointRef<sp/>endpoint;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>OSStatus<sp/>macHostError;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error_text;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>number<sp/>of<sp/>MIDI<sp/>devices<sp/>on<sp/>the<sp/>system<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>numDevices<sp/>=<sp/>MIDIGetNumberOfDevices();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>numInputs<sp/>=<sp/>MIDIGetNumberOfSources();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>numOutputs<sp/>=<sp/>MIDIGetNumberOfDestinations();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>prematurely<sp/>if<sp/>no<sp/>devices<sp/>exist<sp/>on<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>is<sp/>not<sp/>an<sp/>error.<sp/>There<sp/>may<sp/>be<sp/>no<sp/>devices.</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pm_CountDevices()<sp/>will<sp/>return<sp/>zero,<sp/>which<sp/>is<sp/>correct<sp/>and</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useful<sp/>information</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numDevices<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>client<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDIClientCreate(CFSTR(</highlight><highlight class="stringliteral">&quot;PortMidi&quot;</highlight><highlight class="normal">),<sp/>NULL,<sp/>NULL,<sp/>&amp;client);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDIClientCreate()<sp/>in<sp/>pm_macosxcm_init()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>input<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDIInputPortCreate(client,<sp/>CFSTR(</highlight><highlight class="stringliteral">&quot;Input<sp/>port&quot;</highlight><highlight class="normal">),<sp/>readProc,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>&amp;portIn);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDIInputPortCreate()<sp/>in<sp/>pm_macosxcm_init()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>output<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>macHostError<sp/>=<sp/>MIDIOutputPortCreate(client,<sp/>CFSTR(</highlight><highlight class="stringliteral">&quot;Output<sp/>port&quot;</highlight><highlight class="normal">),<sp/>&amp;portOut);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(macHostError<sp/>!=<sp/>noErr)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDIOutputPortCreate()<sp/>in<sp/>pm_macosxcm_init()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>over<sp/>the<sp/>MIDI<sp/>input<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numInputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/>MIDIGetSource(i);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!endpoint)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>first<sp/>input<sp/>we<sp/>see<sp/>to<sp/>the<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pm_default_input_device_id<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_default_input_device_id<sp/>=<sp/>pm_descriptor_index;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>this<sp/>device<sp/>with<sp/>PortMidi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_add_device(</highlight><highlight class="stringliteral">&quot;CoreMIDI&quot;</highlight><highlight class="normal">,<sp/>cm_get_full_endpoint_name(endpoint),</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)endpoint,<sp/>&amp;pm_macosx_in_dictionary);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>over<sp/>the<sp/>MIDI<sp/>output<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numOutputs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/>MIDIGetDestination(i);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!endpoint)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>first<sp/>output<sp/>we<sp/>see<sp/>to<sp/>the<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pm_default_output_device_id<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_default_output_device_id<sp/>=<sp/>pm_descriptor_index;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>this<sp/>device<sp/>with<sp/>PortMidi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_add_device(</highlight><highlight class="stringliteral">&quot;CoreMIDI&quot;</highlight><highlight class="normal">,<sp/>cm_get_full_endpoint_name(endpoint),</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>endpoint,<sp/>&amp;pm_macosx_out_dictionary);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmNoError;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal">error_return:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>macHostError;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(pm_hosterror_text,<sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>error<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>macHostError,<sp/>error_text);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_macosxcm_term();<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>any<sp/>opened<sp/>ports<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmHostError;</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_macosxcm_term(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client)<sp/><sp/>MIDIClientDispose(client);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portIn)<sp/><sp/>MIDIPortDispose(portIn);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portOut)<sp/>MIDIPortDispose(portOut);</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/portmidi/pm_mac/pmmacosxcm.c"/>
  </compounddef>
</doxygen>
