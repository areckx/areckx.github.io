<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="x509_8h" kind="file" language="C++">
    <compoundname>x509.h</compoundname>
    <includes refid="e__os2_8h" local="no">openssl/e_os2.h</includes>
    <includes refid="symhacks_8h" local="no">openssl/symhacks.h</includes>
    <includes refid="buffer_8h" local="no">openssl/buffer.h</includes>
    <includes refid="evp_8h" local="no">openssl/evp.h</includes>
    <includes refid="bio_8h" local="no">openssl/bio.h</includes>
    <includes refid="stack_8h" local="no">openssl/stack.h</includes>
    <includes refid="asn1_8h" local="no">openssl/asn1.h</includes>
    <includes refid="safestack_8h" local="no">openssl/safestack.h</includes>
    <includes refid="ec_8h" local="no">openssl/ec.h</includes>
    <includes refid="ecdsa_8h" local="no">openssl/ecdsa.h</includes>
    <includes refid="ecdh_8h" local="no">openssl/ecdh.h</includes>
    <includes refid="rsa_8h" local="no">openssl/rsa.h</includes>
    <includes refid="dsa_8h" local="no">openssl/dsa.h</includes>
    <includes refid="dh_8h" local="no">openssl/dh.h</includes>
    <includes refid="sha_8h" local="no">openssl/sha.h</includes>
    <includes refid="ossl__typ_8h" local="no">openssl/ossl_typ.h</includes>
    <includes refid="x509__vfy_8h" local="no">openssl/x509_vfy.h</includes>
    <includes refid="pkcs7_8h" local="no">openssl/pkcs7.h</includes>
    <includedby refid="cms_8h" local="no">thirdparty/openssl/include/openssl/cms.h</includedby>
    <includedby refid="engine_8h" local="no">thirdparty/openssl/include/openssl/engine.h</includedby>
    <includedby refid="ocsp_8h" local="no">thirdparty/openssl/include/openssl/ocsp.h</includedby>
    <includedby refid="pem_8h" local="no">thirdparty/openssl/include/openssl/pem.h</includedby>
    <includedby refid="pkcs12_8h" local="no">thirdparty/openssl/include/openssl/pkcs12.h</includedby>
    <includedby refid="ssl_8h" local="no">thirdparty/openssl/include/openssl/ssl.h</includedby>
    <includedby refid="ts_8h" local="no">thirdparty/openssl/include/openssl/ts.h</includedby>
    <includedby refid="x509__vfy_8h" local="no">thirdparty/openssl/include/openssl/x509_vfy.h</includedby>
    <includedby refid="x509v3_8h" local="no">thirdparty/openssl/include/openssl/x509v3.h</includedby>
    <incdepgraph>
      <node id="83807">
        <label>stdarg.h</label>
      </node>
      <node id="83812">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="83813">
        <label>stdint.h</label>
      </node>
      <node id="83819">
        <label>openssl/ec.h</label>
        <link refid="ec_8h_source"/>
        <childnode refid="83798" relation="include">
        </childnode>
        <childnode refid="83816" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
      <node id="83809">
        <label>stdlib.h</label>
      </node>
      <node id="83805">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83806" relation="include">
        </childnode>
        <childnode refid="83807" relation="include">
        </childnode>
        <childnode refid="83808" relation="include">
        </childnode>
        <childnode refid="83813" relation="include">
        </childnode>
      </node>
      <node id="83822">
        <label>openssl/rsa.h</label>
        <link refid="rsa_8h_source"/>
        <childnode refid="83816" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83808" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
      <node id="83800">
        <label>openssl/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83802" relation="include">
        </childnode>
        <childnode refid="83803" relation="include">
        </childnode>
      </node>
      <node id="83810">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="83828">
        <label>openssl/pkcs7.h</label>
        <link refid="pkcs7_8h_source"/>
        <childnode refid="83816" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
      </node>
      <node id="83802">
        <label>stddef.h</label>
      </node>
      <node id="83825">
        <label>openssl/sha.h</label>
        <link refid="sha_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83802" relation="include">
        </childnode>
      </node>
      <node id="83818">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83806" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83808" relation="include">
        </childnode>
      </node>
      <node id="83796">
        <label>thirdparty/openssl/include/openssl/x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
        <childnode refid="83800" relation="include">
        </childnode>
        <childnode refid="83804" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83810" relation="include">
        </childnode>
        <childnode refid="83816" relation="include">
        </childnode>
        <childnode refid="83811" relation="include">
        </childnode>
        <childnode refid="83819" relation="include">
        </childnode>
        <childnode refid="83820" relation="include">
        </childnode>
        <childnode refid="83821" relation="include">
        </childnode>
        <childnode refid="83822" relation="include">
        </childnode>
        <childnode refid="83823" relation="include">
        </childnode>
        <childnode refid="83824" relation="include">
        </childnode>
        <childnode refid="83825" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83826" relation="include">
        </childnode>
        <childnode refid="83828" relation="include">
        </childnode>
      </node>
      <node id="83823">
        <label>openssl/dsa.h</label>
        <link refid="dsa_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83808" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
        <childnode refid="83824" relation="include">
        </childnode>
      </node>
      <node id="83815">
        <label>openssl/obj_mac.h</label>
        <link refid="obj__mac_8h_source"/>
      </node>
      <node id="83826">
        <label>openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="83796" relation="include">
        </childnode>
        <childnode refid="83798" relation="include">
        </childnode>
        <childnode refid="83827" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83808" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
      </node>
      <node id="83803">
        <label>sys/types.h</label>
      </node>
      <node id="83799">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
      </node>
      <node id="83816">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="83817" relation="include">
        </childnode>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83810" relation="include">
        </childnode>
        <childnode refid="83811" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
      <node id="83811">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="83810" relation="include">
        </childnode>
      </node>
      <node id="83804">
        <label>openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="83798" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83814" relation="include">
        </childnode>
      </node>
      <node id="83817">
        <label>time.h</label>
      </node>
      <node id="83820">
        <label>openssl/ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="83798" relation="include">
        </childnode>
        <childnode refid="83819" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
      <node id="83827">
        <label>openssl/lhash.h</label>
        <link refid="lhash_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83806" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
      </node>
      <node id="83814">
        <label>openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="83815" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83816" relation="include">
        </childnode>
      </node>
      <node id="83798">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="83797">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="83798" relation="include">
        </childnode>
      </node>
      <node id="83806">
        <label>stdio.h</label>
      </node>
      <node id="83821">
        <label>openssl/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="83798" relation="include">
        </childnode>
        <childnode refid="83819" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
      <node id="83801">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
      </node>
      <node id="83808">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="83809" relation="include">
        </childnode>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83806" relation="include">
        </childnode>
        <childnode refid="83810" relation="include">
        </childnode>
        <childnode refid="83811" relation="include">
        </childnode>
        <childnode refid="83812" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83799" relation="include">
        </childnode>
      </node>
      <node id="83824">
        <label>openssl/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="83797" relation="include">
        </childnode>
        <childnode refid="83805" relation="include">
        </childnode>
        <childnode refid="83801" relation="include">
        </childnode>
        <childnode refid="83818" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="83833">
        <label>thirdparty/openssl/include/openssl/engine.h</label>
        <link refid="engine_8h_source"/>
      </node>
      <node id="83840">
        <label>thirdparty/openssl/include/openssl/ts.h</label>
        <link refid="ts_8h_source"/>
      </node>
      <node id="83831">
        <label>thirdparty/poppler/poppler/SignatureHandler.h</label>
        <link refid="_signature_handler_8h_source"/>
        <childnode refid="83832" relation="include">
        </childnode>
      </node>
      <node id="83836">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="83838">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="83837" relation="include">
        </childnode>
      </node>
      <node id="83829">
        <label>thirdparty/openssl/include/openssl/x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="83830" relation="include">
        </childnode>
        <childnode refid="83833" relation="include">
        </childnode>
        <childnode refid="83834" relation="include">
        </childnode>
        <childnode refid="83835" relation="include">
        </childnode>
        <childnode refid="83839" relation="include">
        </childnode>
        <childnode refid="83837" relation="include">
        </childnode>
        <childnode refid="83840" relation="include">
        </childnode>
        <childnode refid="83841" relation="include">
        </childnode>
        <childnode refid="83842" relation="include">
        </childnode>
      </node>
      <node id="83841">
        <label>thirdparty/openssl/include/openssl/x509_vfy.h</label>
        <link refid="x509__vfy_8h_source"/>
        <childnode refid="83829" relation="include">
        </childnode>
      </node>
      <node id="83835">
        <label>thirdparty/openssl/include/openssl/pem.h</label>
        <link refid="pem_8h_source"/>
        <childnode refid="83836" relation="include">
        </childnode>
        <childnode refid="83837" relation="include">
        </childnode>
      </node>
      <node id="83830">
        <label>thirdparty/openssl/include/openssl/cms.h</label>
        <link refid="cms_8h_source"/>
        <childnode refid="83831" relation="include">
        </childnode>
      </node>
      <node id="83837">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="83836" relation="include">
        </childnode>
        <childnode refid="83838" relation="include">
        </childnode>
      </node>
      <node id="83832">
        <label>thirdparty/poppler/poppler/SignatureHandler.cc</label>
        <link refid="_signature_handler_8cc_source"/>
      </node>
      <node id="83842">
        <label>thirdparty/openssl/include/openssl/x509v3.h</label>
        <link refid="x509v3_8h_source"/>
        <childnode refid="83834" relation="include">
        </childnode>
        <childnode refid="83840" relation="include">
        </childnode>
      </node>
      <node id="83839">
        <label>thirdparty/openssl/include/openssl/pkcs12.h</label>
        <link refid="pkcs12_8h_source"/>
      </node>
      <node id="83834">
        <label>thirdparty/openssl/include/openssl/ocsp.h</label>
        <link refid="ocsp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_x509__objects__st" prot="public">X509_objects_st</innerclass>
    <innerclass refid="struct_x509__algor__st" prot="public">X509_algor_st</innerclass>
    <innerclass refid="struct_x509__val__st" prot="public">X509_val_st</innerclass>
    <innerclass refid="struct_x509__pubkey__st" prot="public">X509_pubkey_st</innerclass>
    <innerclass refid="struct_x509__sig__st" prot="public">X509_sig_st</innerclass>
    <innerclass refid="struct_x509__name__entry__st" prot="public">X509_name_entry_st</innerclass>
    <innerclass refid="struct_x509__name__st" prot="public">X509_name_st</innerclass>
    <innerclass refid="struct_x509__extension__st" prot="public">X509_extension_st</innerclass>
    <innerclass refid="structx509__attributes__st" prot="public">x509_attributes_st</innerclass>
    <innerclass refid="struct_x509__req__info__st" prot="public">X509_req_info_st</innerclass>
    <innerclass refid="struct_x509__req__st" prot="public">X509_req_st</innerclass>
    <innerclass refid="structx509__cinf__st" prot="public">x509_cinf_st</innerclass>
    <innerclass refid="structx509__cert__aux__st" prot="public">x509_cert_aux_st</innerclass>
    <innerclass refid="structx509__st" prot="public">x509_st</innerclass>
    <innerclass refid="structx509__trust__st" prot="public">x509_trust_st</innerclass>
    <innerclass refid="structx509__cert__pair__st" prot="public">x509_cert_pair_st</innerclass>
    <innerclass refid="structx509__revoked__st" prot="public">x509_revoked_st</innerclass>
    <innerclass refid="struct_x509__crl__info__st" prot="public">X509_crl_info_st</innerclass>
    <innerclass refid="struct_x509__crl__st" prot="public">X509_crl_st</innerclass>
    <innerclass refid="structprivate__key__st" prot="public">private_key_st</innerclass>
    <innerclass refid="struct_x509__info__st" prot="public">X509_info_st</innerclass>
    <innerclass refid="struct_netscape__spkac__st" prot="public">Netscape_spkac_st</innerclass>
    <innerclass refid="struct_netscape__spki__st" prot="public">Netscape_spki_st</innerclass>
    <innerclass refid="struct_netscape__certificate__sequence" prot="public">Netscape_certificate_sequence</innerclass>
    <innerclass refid="struct_p_b_e_p_a_r_a_m__st" prot="public">PBEPARAM_st</innerclass>
    <innerclass refid="struct_p_b_e2_p_a_r_a_m__st" prot="public">PBE2PARAM_st</innerclass>
    <innerclass refid="struct_p_b_k_d_f2_p_a_r_a_m__st" prot="public">PBKDF2PARAM_st</innerclass>
    <innerclass refid="structpkcs8__priv__key__info__st" prot="public">pkcs8_priv_key_info_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="x509_8h_1a02d580af2bb712f56730b6a60dd402cf" prot="public" static="no">
        <name>X509_FILETYPE_PEM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="122" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a11df5567c94f6fbd649880d53611667d" prot="public" static="no">
        <name>X509_FILETYPE_ASN1</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="123" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1abf59625f92da9dcf3bbb561fee0a02fa" prot="public" static="no">
        <name>X509_FILETYPE_DEFAULT</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="124" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af92863d004cc4c7f23eaaaf8ac5e11c7" prot="public" static="no">
        <name>X509v3_KU_DIGITAL_SIGNATURE</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="126" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a194bcc811af1792ed8d7cc48ca20f41f" prot="public" static="no">
        <name>X509v3_KU_NON_REPUDIATION</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="127" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1abde62a3602e525c065041b807dadfc5b" prot="public" static="no">
        <name>X509v3_KU_KEY_ENCIPHERMENT</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="128" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a838b71694470723cc6b063801a050cbc" prot="public" static="no">
        <name>X509v3_KU_DATA_ENCIPHERMENT</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="129" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1afb663673053c1bc7b9a5c704e12782aa" prot="public" static="no">
        <name>X509v3_KU_KEY_AGREEMENT</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="130" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aac5ca21180d33bd871c7e8a3ed76e469" prot="public" static="no">
        <name>X509v3_KU_KEY_CERT_SIGN</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="131" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae34369ebf93eb944b8db1ea557ec683c" prot="public" static="no">
        <name>X509v3_KU_CRL_SIGN</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="132" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a11e0e8a17a6059c602f77db861f2973b" prot="public" static="no">
        <name>X509v3_KU_ENCIPHER_ONLY</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="133" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a0048eab8880c00617ad6a9306383311b" prot="public" static="no">
        <name>X509v3_KU_DECIPHER_ONLY</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="134" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af9e734e10cf00527321e7d5c5a8c07fd" prot="public" static="no">
        <name>X509v3_KU_UNDEF</name>
        <initializer>0xffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="135" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a37286a8aacce60347927b2815fd1da78" prot="public" static="no">
        <name>X509_EX_V_NETSCAPE_HACK</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="201" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1adb8ac1a8494b7cedffeb9fc566b3c31c" prot="public" static="no">
        <name>X509_EX_V_INIT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="202" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae40ca6229ccb8d7e1ef32892f65365fc" prot="public" static="no">
        <name>X509_TRUST_DEFAULT</name>
        <initializer>-1	/* Only valid in purpose settings */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="334" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ab571e8ff9cf67a8e712e361911027229" prot="public" static="no">
        <name>X509_TRUST_COMPAT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="336" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aea2a2bb612ea448f0ec2d639f94c038e" prot="public" static="no">
        <name>X509_TRUST_SSL_CLIENT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="337" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a265868de7e99afa03bd7fb7264cc38e5" prot="public" static="no">
        <name>X509_TRUST_SSL_SERVER</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="338" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac37e29f3427bd458d016559906103e23" prot="public" static="no">
        <name>X509_TRUST_EMAIL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="339" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a41eb520f82251064dff950229171cf97" prot="public" static="no">
        <name>X509_TRUST_OBJECT_SIGN</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="340" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac9ed8dd09287a67305d6daf512ec4d3d" prot="public" static="no">
        <name>X509_TRUST_OCSP_SIGN</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="341" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8cfcec9e8c55cff7be78553c0b15f040" prot="public" static="no">
        <name>X509_TRUST_OCSP_REQUEST</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="342" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2b86c102b46f347aaa5bf0537cd1b544" prot="public" static="no">
        <name>X509_TRUST_TSA</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="343" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1abe2c315ee4aaa8f0918dbe2274ae921a" prot="public" static="no">
        <name>X509_TRUST_MIN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="346" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2b6a83e997d597d24009bcd39a3b3a81" prot="public" static="no">
        <name>X509_TRUST_MAX</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="347" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a222e3822e6a268433a2a5ae688a2b980" prot="public" static="no">
        <name>X509_TRUST_DYNAMIC</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="351" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ad6a2ef22d14cde76fe596bb0024b6c14" prot="public" static="no">
        <name>X509_TRUST_DYNAMIC_NAME</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="352" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a9ee09ff46895f74bd102553eb38216e6" prot="public" static="no">
        <name>X509_TRUST_TRUSTED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="356" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae265a58b36b18e67d49d1bee70b90d43" prot="public" static="no">
        <name>X509_TRUST_REJECTED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="357" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a6e1bf47646363dfa5b1fe0bca56b8bfe" prot="public" static="no">
        <name>X509_TRUST_UNTRUSTED</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="358" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a9d0c659e07efcd86a40b07fafffe3eba" prot="public" static="no">
        <name>X509_FLAG_COMPAT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="362" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af21169b1b0a88be5e0f1ec8dacbb1071" prot="public" static="no">
        <name>X509_FLAG_NO_HEADER</name>
        <initializer>1L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="363" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2fb551b8e0506a7727bde3cc3560e597" prot="public" static="no">
        <name>X509_FLAG_NO_VERSION</name>
        <initializer>(1L &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="364" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a453733d395c9f471c8c924d06ccb5d31" prot="public" static="no">
        <name>X509_FLAG_NO_SERIAL</name>
        <initializer>(1L &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="365" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a6fea8842b3bb319d3b6bb36985de3328" prot="public" static="no">
        <name>X509_FLAG_NO_SIGNAME</name>
        <initializer>(1L &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="366" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aea3ec300656a72d04b8317bae2a1b331" prot="public" static="no">
        <name>X509_FLAG_NO_ISSUER</name>
        <initializer>(1L &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="367" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a93bae4e35946de530b98cac7d32e7fd7" prot="public" static="no">
        <name>X509_FLAG_NO_VALIDITY</name>
        <initializer>(1L &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="368" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac8c2c4a9e4451b63f1866acb35bbcaf7" prot="public" static="no">
        <name>X509_FLAG_NO_SUBJECT</name>
        <initializer>(1L &lt;&lt; 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="369" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a322d37e122ea3b540e8f8dfce10ba477" prot="public" static="no">
        <name>X509_FLAG_NO_PUBKEY</name>
        <initializer>(1L &lt;&lt; 7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="370" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af2e3f5da2f3dd9b228f4d0a2463b17fd" prot="public" static="no">
        <name>X509_FLAG_NO_EXTENSIONS</name>
        <initializer>(1L &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="371" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a5deff4f1ccfb3e834ce34d5ded772f54" prot="public" static="no">
        <name>X509_FLAG_NO_SIGDUMP</name>
        <initializer>(1L &lt;&lt; 9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="372" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac68c565be90f11d08c2cac231a2a287d" prot="public" static="no">
        <name>X509_FLAG_NO_AUX</name>
        <initializer>(1L &lt;&lt; 10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="373" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aaaab1bde4586a789d1ab82840134c0ad" prot="public" static="no">
        <name>X509_FLAG_NO_ATTRIBUTES</name>
        <initializer>(1L &lt;&lt; 11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="374" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a1b1689a5bc2f58988606fe68762df1c3" prot="public" static="no">
        <name>XN_FLAG_SEP_MASK</name>
        <initializer>(0xf &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="380" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a6d6f2876d75ff35a1950da77d4546b31" prot="public" static="no">
        <name>XN_FLAG_COMPAT</name>
        <initializer>0		/* Traditional SSLeay: use old X509_NAME_print */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="382" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae3b19f1044be57e6906c04b6954ed99b" prot="public" static="no">
        <name>XN_FLAG_SEP_COMMA_PLUS</name>
        <initializer>(1 &lt;&lt; 16)	/* RFC2253 ,+ */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="383" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a929c40ddbb6e4304a2ba7806299f1125" prot="public" static="no">
        <name>XN_FLAG_SEP_CPLUS_SPC</name>
        <initializer>(2 &lt;&lt; 16)	/* ,+ spaced: more readable */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="384" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a6d39d9589c3e06e550482adabcd9cc8d" prot="public" static="no">
        <name>XN_FLAG_SEP_SPLUS_SPC</name>
        <initializer>(3 &lt;&lt; 16)	/* ;+ spaced */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="385" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a98d4a052476c4cb69a6a03d4b5df12e3" prot="public" static="no">
        <name>XN_FLAG_SEP_MULTILINE</name>
        <initializer>(4 &lt;&lt; 16)	/* One line per field */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="386" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4ea819c58966b1738c1aaa674c01b9d6" prot="public" static="no">
        <name>XN_FLAG_DN_REV</name>
        <initializer>(1 &lt;&lt; 20)	/* Reverse DN order */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="388" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a314ffdde57bf59c329aa8e3cde0913f4" prot="public" static="no">
        <name>XN_FLAG_FN_MASK</name>
        <initializer>(0x3 &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="392" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a532d1f62a1a8b9fa65777cb309de5170" prot="public" static="no">
        <name>XN_FLAG_FN_SN</name>
        <initializer>0		/* <ref refid="class_object" kindref="compound">Object</ref> short name */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="394" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ab7f080d616447daf03bdba864781b433" prot="public" static="no">
        <name>XN_FLAG_FN_LN</name>
        <initializer>(1 &lt;&lt; 21)	/* <ref refid="class_object" kindref="compound">Object</ref> long name */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="395" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa6c0cef3486ac8ee674796ac9bcf8762" prot="public" static="no">
        <name>XN_FLAG_FN_OID</name>
        <initializer>(2 &lt;&lt; 21)	/* Always use OIDs */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="396" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a07e2e01d98821bc676983164161dd545" prot="public" static="no">
        <name>XN_FLAG_FN_NONE</name>
        <initializer>(3 &lt;&lt; 21)	/* No field names */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="397" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ab280ced7191bb9c38323e42db4c4e9df" prot="public" static="no">
        <name>XN_FLAG_SPC_EQ</name>
        <initializer>(1 &lt;&lt; 23)	/* Put spaces round &apos;=&apos; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="399" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4649de198015a787848e5c772e3fb6e0" prot="public" static="no">
        <name>XN_FLAG_DUMP_UNKNOWN_FIELDS</name>
        <initializer>(1 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="405" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1acc766e6b3a671f26dce586c0a2b6de2a" prot="public" static="no">
        <name>XN_FLAG_FN_ALIGN</name>
        <initializer>(1 &lt;&lt; 25)	/* Align field names to 20 characters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="407" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a631b7a026283974351f7b209318b9d0c" prot="public" static="no">
        <name>XN_FLAG_RFC2253</name>
        <initializer>(ASN1_STRFLGS_RFC2253 | \
			XN_FLAG_SEP_COMMA_PLUS | \
			XN_FLAG_DN_REV | \
			XN_FLAG_FN_SN | \
			XN_FLAG_DUMP_UNKNOWN_FIELDS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="411" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a747bcf1e5dc22c0343758f71879ce4e6" prot="public" static="no">
        <name>XN_FLAG_ONELINE</name>
        <initializer>(ASN1_STRFLGS_RFC2253 | \
			ASN1_STRFLGS_ESC_QUOTE | \
			XN_FLAG_SEP_CPLUS_SPC | \
			XN_FLAG_SPC_EQ | \
			XN_FLAG_FN_SN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="419" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8c5097648157306aec057778741d22cc" prot="public" static="no">
        <name>XN_FLAG_MULTILINE</name>
        <initializer>(ASN1_STRFLGS_ESC_CTRL | \
			ASN1_STRFLGS_ESC_MSB | \
			XN_FLAG_SEP_MULTILINE | \
			XN_FLAG_SPC_EQ | \
			XN_FLAG_FN_LN | \
			XN_FLAG_FN_ALIGN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="427" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2ec186a806def761e9c0f18ecd826525" prot="public" static="no">
        <name>PKCS8_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="585" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a25bd2e65a6a481dd38c5d2aa0f33a244" prot="public" static="no">
        <name>PKCS8_NO_OCTET</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="586" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a5fcd7b7d9b7b8ad00276b3297ba31dbb" prot="public" static="no">
        <name>PKCS8_EMBEDDED_PARAM</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="587" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a9169399c04a4f5d9dfd45b32700806ac" prot="public" static="no">
        <name>PKCS8_NS_DB</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="588" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a49c8ce89a0ac5ce92047d5e5d75c7564" prot="public" static="no">
        <name>PKCS8_NEG_PRIVKEY</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="589" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac728dae55426edf5e4a32a2d7943cd3d" prot="public" static="no">
        <name>X509_EXT_PACK_UNKNOWN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="607" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a9190ab0211ceca5ee7efe8699d341961" prot="public" static="no">
        <name>X509_EXT_PACK_STRING</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="608" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a14789fcbbf4dac2c595097be489736ed" prot="public" static="no">
        <name>X509_get_version</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_INTEGER_get((x)-&gt;cert_info-&gt;version)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="610" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a55b3a02e67d4e7db8bce103d5e58b044" prot="public" static="no">
        <name>X509_get_notBefore</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;cert_info-&gt;validity-&gt;notBefore)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="612" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a548f2ef91ebf8847b8fc3aa58d9c296d" prot="public" static="no">
        <name>X509_get_notAfter</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;cert_info-&gt;validity-&gt;notAfter)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="613" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a6f258f1db5db378a81c848aa698eba4b" prot="public" static="no">
        <name>X509_extract_key</name>
        <param><defname>x</defname></param>
        <initializer>X509_get_pubkey(x) /*****/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="614" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a55916b8315aa96f20296cb441d0fa552" prot="public" static="no">
        <name>X509_REQ_get_version</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_INTEGER_get((x)-&gt;req_info-&gt;version)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="615" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a10f331dfbb4dd91a1cd7c3244ee0bd9c" prot="public" static="no">
        <name>X509_REQ_get_subject_name</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;req_info-&gt;subject)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="616" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af7334ee6f8aaa997b71fa21cfbe3d200" prot="public" static="no">
        <name>X509_REQ_extract_key</name>
        <param><defname>a</defname></param>
        <initializer>X509_REQ_get_pubkey(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="617" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a3955d3f67eb411f808044a6ad5d4b8bf" prot="public" static="no">
        <name>X509_name_cmp</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>X509_NAME_cmp((a),(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="618" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa4776b84804314944be747448bdf8d8b" prot="public" static="no">
        <name>X509_get_signature_type</name>
        <param><defname>x</defname></param>
        <initializer>EVP_PKEY_type(OBJ_obj2nid((x)-&gt;sig_alg-&gt;algorithm))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="619" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a634630599e37eba10f2d98506839204d" prot="public" static="no">
        <name>X509_CRL_get_version</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_INTEGER_get((x)-&gt;crl-&gt;version)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="621" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a711ae1c9efb02df2280b207bb4086a18" prot="public" static="no">
        <name>X509_CRL_get_lastUpdate</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;crl-&gt;lastUpdate)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="622" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a63614432adc5566254dcefed2181b347" prot="public" static="no">
        <name>X509_CRL_get_nextUpdate</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;crl-&gt;nextUpdate)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="623" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8e380db8b19c7276383d88d9bae3d0ff" prot="public" static="no">
        <name>X509_CRL_get_issuer</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;crl-&gt;issuer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="624" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1abcd9eeee355489ad8e50a8a28c6b958a" prot="public" static="no">
        <name>X509_CRL_get_REVOKED</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;crl-&gt;revoked)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="625" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a0d202004c56ef79a8df8f24877b3feba" prot="public" static="no">
        <name>X509_get_X509_PUBKEY</name>
        <param><defname>x</defname></param>
        <initializer>((x)-&gt;cert_info-&gt;key)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="641" column="10" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af3978477593ce9603c162a604828e2ce" prot="public" static="no">
        <name>X509_F_ADD_CERT_DIR</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1220" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4832448e33d4785fa8de5da2cff91b4c" prot="public" static="no">
        <name>X509_F_BY_FILE_CTRL</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1221" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8cc3f68559fb5ea90cb594012c60b069" prot="public" static="no">
        <name>X509_F_CHECK_POLICY</name>
        <initializer>145</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1222" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a9e3d99af849f38552159e9c888b50105" prot="public" static="no">
        <name>X509_F_DIR_CTRL</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1223" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a50b34730002648af72bcc2e517a47ddf" prot="public" static="no">
        <name>X509_F_GET_CERT_BY_SUBJECT</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1224" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa2b9fd99c2e4062e9e46edd897af761f" prot="public" static="no">
        <name>X509_F_NETSCAPE_SPKI_B64_DECODE</name>
        <initializer>129</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1225" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aefb72203e233818facc6aaf0482a50ba" prot="public" static="no">
        <name>X509_F_NETSCAPE_SPKI_B64_ENCODE</name>
        <initializer>130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1226" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a231f2b18f1ebe3ded4f17cd162e5f93e" prot="public" static="no">
        <name>X509_F_X509AT_ADD1_ATTR</name>
        <initializer>135</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1227" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a126a1457edb623ba25f2da715a0a454d" prot="public" static="no">
        <name>X509_F_X509V3_ADD_EXT</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1228" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a06b01596942dd9aebad620f4db1c757e" prot="public" static="no">
        <name>X509_F_X509_ATTRIBUTE_CREATE_BY_NID</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1229" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a1f01b6f396617f49b779f53c6fed5e4b" prot="public" static="no">
        <name>X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ</name>
        <initializer>137</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1230" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a75554ae4689802c0fa39a8c568e64f60" prot="public" static="no">
        <name>X509_F_X509_ATTRIBUTE_CREATE_BY_TXT</name>
        <initializer>140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1231" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4bc5b6c26d61ca48067ab63c0f91534d" prot="public" static="no">
        <name>X509_F_X509_ATTRIBUTE_GET0_DATA</name>
        <initializer>139</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1232" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a777ffb6a21231b4dd6a38b4948466d52" prot="public" static="no">
        <name>X509_F_X509_ATTRIBUTE_SET1_DATA</name>
        <initializer>138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1233" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af5d164c897c49ee0fe66f5a51fd7a420" prot="public" static="no">
        <name>X509_F_X509_CHECK_PRIVATE_KEY</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1234" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a28b0d5e6c6f3509290cd8cb758d851a4" prot="public" static="no">
        <name>X509_F_X509_CRL_PRINT_FP</name>
        <initializer>147</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1235" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a715b7e4f724cfd9a28833c29ca419318" prot="public" static="no">
        <name>X509_F_X509_EXTENSION_CREATE_BY_NID</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1236" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa125ce30b894fd64da12ffc8d1942e4a" prot="public" static="no">
        <name>X509_F_X509_EXTENSION_CREATE_BY_OBJ</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1237" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a5cf4eb01abf90ba2ad51f0d8529f7365" prot="public" static="no">
        <name>X509_F_X509_GET_PUBKEY_PARAMETERS</name>
        <initializer>110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1238" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae8deb88d4e589d395f18ca940f8fb298" prot="public" static="no">
        <name>X509_F_X509_LOAD_CERT_CRL_FILE</name>
        <initializer>132</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1239" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a1b6e81af631f77519d89ef2625fe8359" prot="public" static="no">
        <name>X509_F_X509_LOAD_CERT_FILE</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1240" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8ab7b95b4ad8f383da321b4420e50826" prot="public" static="no">
        <name>X509_F_X509_LOAD_CRL_FILE</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1241" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac6ef65f9cd7c5c11a4b5e219b115f55e" prot="public" static="no">
        <name>X509_F_X509_NAME_ADD_ENTRY</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1242" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a3efa7673b4cd674425dc7e0ec5a1a166" prot="public" static="no">
        <name>X509_F_X509_NAME_ENTRY_CREATE_BY_NID</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1243" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a640e5aaba2ebdb8f4380ccd43061cb54" prot="public" static="no">
        <name>X509_F_X509_NAME_ENTRY_CREATE_BY_TXT</name>
        <initializer>131</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1244" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a0655b5b40dd8a5ff7f50c9c2fe7659d6" prot="public" static="no">
        <name>X509_F_X509_NAME_ENTRY_SET_OBJECT</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1245" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4c54a1279d4e2b3baa3f86c6dc402f0c" prot="public" static="no">
        <name>X509_F_X509_NAME_ONELINE</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1246" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a17a6b3229fdb39a590efe543b4d79caf" prot="public" static="no">
        <name>X509_F_X509_NAME_PRINT</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1247" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a54af53f6bb6102968310d8811491f11d" prot="public" static="no">
        <name>X509_F_X509_PRINT_EX_FP</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1248" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8df94ab2a37daada1e5f81f6580a63b6" prot="public" static="no">
        <name>X509_F_X509_PUBKEY_GET</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1249" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a46f7a342462b1dfafcd589e8c9591405" prot="public" static="no">
        <name>X509_F_X509_PUBKEY_SET</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1250" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a3381caa24cd44e8ced7276144d49c1c4" prot="public" static="no">
        <name>X509_F_X509_REQ_CHECK_PRIVATE_KEY</name>
        <initializer>144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1251" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a20bbee03772b92b0fe8c8ab87182d48d" prot="public" static="no">
        <name>X509_F_X509_REQ_PRINT_EX</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1252" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1af7043c5305cb185e27bbd151cc1539a7" prot="public" static="no">
        <name>X509_F_X509_REQ_PRINT_FP</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1253" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4343567845e83ace67395636e0e640b1" prot="public" static="no">
        <name>X509_F_X509_REQ_TO_X509</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1254" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ab92c259fc06b151cc6f1618cea047f2b" prot="public" static="no">
        <name>X509_F_X509_STORE_ADD_CERT</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1255" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a043471fca553470857ac459f22e7d8d3" prot="public" static="no">
        <name>X509_F_X509_STORE_ADD_CRL</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1256" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a61c1537524f30161e1f5c1bc2651b19d" prot="public" static="no">
        <name>X509_F_X509_STORE_CTX_GET1_ISSUER</name>
        <initializer>146</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1257" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a26e5843438c4485c1d97c1caa8f623dd" prot="public" static="no">
        <name>X509_F_X509_STORE_CTX_INIT</name>
        <initializer>143</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1258" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a4a18775f858c2b1498b0310a74ed818c" prot="public" static="no">
        <name>X509_F_X509_STORE_CTX_NEW</name>
        <initializer>142</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1259" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a0bfd1136ece0beabe27286e7eb3e0455" prot="public" static="no">
        <name>X509_F_X509_STORE_CTX_PURPOSE_INHERIT</name>
        <initializer>134</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1260" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a55aeae8f682ca2915aa50a4674422630" prot="public" static="no">
        <name>X509_F_X509_TO_X509_REQ</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1261" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a3579a9f53895197fa6b27cde448ebc79" prot="public" static="no">
        <name>X509_F_X509_TRUST_ADD</name>
        <initializer>133</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1262" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a038c9d061648dec7f94e548c6b65d0d5" prot="public" static="no">
        <name>X509_F_X509_TRUST_SET</name>
        <initializer>141</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1263" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a0993d7ad5f0ca3dfd175c1c1a223328a" prot="public" static="no">
        <name>X509_F_X509_VERIFY_CERT</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1264" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a3358896fcd98b7c1c9f28a1e0bc3b1d6" prot="public" static="no">
        <name>X509_R_BAD_X509_FILETYPE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1267" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a403eae1492b758a3e9f1253d0ee93b8f" prot="public" static="no">
        <name>X509_R_BASE64_DECODE_ERROR</name>
        <initializer>118</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1268" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1afff034d52b2541ac5665cba8f7d63920" prot="public" static="no">
        <name>X509_R_CANT_CHECK_DH_KEY</name>
        <initializer>114</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1269" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a96a86e2a2328e421758393ea8241e1b4" prot="public" static="no">
        <name>X509_R_CERT_ALREADY_IN_HASH_TABLE</name>
        <initializer>101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1270" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a81a754f14f8fcb69e855b8ef644e8bd2" prot="public" static="no">
        <name>X509_R_ERR_ASN1_LIB</name>
        <initializer>102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1271" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a20258f60813be9b29f3ebc09290c526a" prot="public" static="no">
        <name>X509_R_INVALID_DIRECTORY</name>
        <initializer>113</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1272" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a36df077ff157b59fb81da03f73d20683" prot="public" static="no">
        <name>X509_R_INVALID_FIELD_NAME</name>
        <initializer>119</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1273" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1acbfcc67c6584d0028a0fbd727452b758" prot="public" static="no">
        <name>X509_R_INVALID_TRUST</name>
        <initializer>123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1274" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2abeb85ade83d1593a2235eb015db620" prot="public" static="no">
        <name>X509_R_KEY_TYPE_MISMATCH</name>
        <initializer>115</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1275" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa68ae40691e908a53734266a9765f914" prot="public" static="no">
        <name>X509_R_KEY_VALUES_MISMATCH</name>
        <initializer>116</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1276" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1afdaebf3899d366170e67460b442c920a" prot="public" static="no">
        <name>X509_R_LOADING_CERT_DIR</name>
        <initializer>103</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1277" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a40cbd9a7f54689cc0d005c67d4f0655b" prot="public" static="no">
        <name>X509_R_LOADING_DEFAULTS</name>
        <initializer>104</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1278" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aacd6898d9a6ad90657d475049c1c218c" prot="public" static="no">
        <name>X509_R_METHOD_NOT_SUPPORTED</name>
        <initializer>124</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1279" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a1a55a729d1e870ab6bfefc6c1899d561" prot="public" static="no">
        <name>X509_R_NO_CERT_SET_FOR_US_TO_VERIFY</name>
        <initializer>105</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1280" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a8524879a679b55352cd73af4d0ef2b4e" prot="public" static="no">
        <name>X509_R_PUBLIC_KEY_DECODE_ERROR</name>
        <initializer>125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1281" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a27dc9f13f7c0beb93e999bc5ddffcdb3" prot="public" static="no">
        <name>X509_R_PUBLIC_KEY_ENCODE_ERROR</name>
        <initializer>126</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1282" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ac0d3abb877e189e68c36cacba89bed54" prot="public" static="no">
        <name>X509_R_SHOULD_RETRY</name>
        <initializer>106</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1283" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a89517c4c81f12169ae9776263306b4eb" prot="public" static="no">
        <name>X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN</name>
        <initializer>107</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1284" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1affb256d6a7f9d3b99e472a4de0b8259d" prot="public" static="no">
        <name>X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY</name>
        <initializer>108</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1285" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a54af237e1fb60a36d7cc752ec7fd050b" prot="public" static="no">
        <name>X509_R_UNKNOWN_KEY_TYPE</name>
        <initializer>117</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1286" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a2f3bd2893b4ee2911abe169bf41a4242" prot="public" static="no">
        <name>X509_R_UNKNOWN_NID</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1287" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a774a6a59965803d652d7679946ee23bf" prot="public" static="no">
        <name>X509_R_UNKNOWN_PURPOSE_ID</name>
        <initializer>121</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1288" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1ae985c8dc741a61b60edaaa2607c13e75" prot="public" static="no">
        <name>X509_R_UNKNOWN_TRUST_ID</name>
        <initializer>120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1289" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1a583f5c2d72723b83583455f3029ff280" prot="public" static="no">
        <name>X509_R_UNSUPPORTED_ALGORITHM</name>
        <initializer>111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1290" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1abc00cdbbe03aad6b2b424ab891c42368" prot="public" static="no">
        <name>X509_R_WRONG_LOOKUP_TYPE</name>
        <initializer>112</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1291" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x509_8h_1aa5e95e4d96e7189fbba71acb76dc8690" prot="public" static="no">
        <name>X509_R_WRONG_TYPE</name>
        <initializer>122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1292" column="9" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="x509_8h_1aa25737af7149232cab3580d4cbbc0beb" prot="public" static="no">
        <type>struct <ref refid="struct_x509__objects__st" kindref="compound">X509_objects_st</ref></type>
        <definition>typedef struct X509_objects_st  X509_OBJECTS</definition>
        <argsstring></argsstring>
        <name>X509_OBJECTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a870a329752479c6c758cc5a093c74604" prot="public" static="no">
        <type>struct <ref refid="struct_x509__val__st" kindref="compound">X509_val_st</ref></type>
        <definition>typedef struct X509_val_st  X509_VAL</definition>
        <argsstring></argsstring>
        <name>X509_VAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a84b39cf74cc1ae6512f7d4481f5f4404" prot="public" static="no">
        <type>struct <ref refid="struct_x509__sig__st" kindref="compound">X509_sig_st</ref></type>
        <definition>typedef struct X509_sig_st  X509_SIG</definition>
        <argsstring></argsstring>
        <name>X509_SIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1af3ca6ec6d07932d262daab57dab9cdd0" prot="public" static="no">
        <type>struct <ref refid="struct_x509__name__entry__st" kindref="compound">X509_name_entry_st</ref></type>
        <definition>typedef struct X509_name_entry_st  X509_NAME_ENTRY</definition>
        <argsstring></argsstring>
        <name>X509_NAME_ENTRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1ab2f7f7dc0ced8684e0cbfc818e408304" prot="public" static="no">
        <type>struct <ref refid="struct_x509__extension__st" kindref="compound">X509_extension_st</ref></type>
        <definition>typedef struct X509_extension_st  X509_EXTENSION</definition>
        <argsstring></argsstring>
        <name>X509_EXTENSION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1aa4f1a62a9d2dd8cb6780fe2713737c0f" prot="public" static="no">
        <type>struct <ref refid="structx509__attributes__st" kindref="compound">x509_attributes_st</ref></type>
        <definition>typedef struct x509_attributes_st  X509_ATTRIBUTE</definition>
        <argsstring></argsstring>
        <name>X509_ATTRIBUTE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a69f978223ac282eaa2b2740ef6684d96" prot="public" static="no">
        <type>struct <ref refid="struct_x509__req__info__st" kindref="compound">X509_req_info_st</ref></type>
        <definition>typedef struct X509_req_info_st  X509_REQ_INFO</definition>
        <argsstring></argsstring>
        <name>X509_REQ_INFO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1afcb1c737fc5aee6c012c238794ef2d66" prot="public" static="no">
        <type>struct <ref refid="struct_x509__req__st" kindref="compound">X509_req_st</ref></type>
        <definition>typedef struct X509_req_st  X509_REQ</definition>
        <argsstring></argsstring>
        <name>X509_REQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1adf52d084ce690fb5335dce1c5ebd0502" prot="public" static="no">
        <type>struct <ref refid="structx509__cinf__st" kindref="compound">x509_cinf_st</ref></type>
        <definition>typedef struct x509_cinf_st  X509_CINF</definition>
        <argsstring></argsstring>
        <name>X509_CINF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1aadc9c8163bcb914268dbd43bc3abe119" prot="public" static="no">
        <type>struct <ref refid="structx509__cert__aux__st" kindref="compound">x509_cert_aux_st</ref></type>
        <definition>typedef struct x509_cert_aux_st  X509_CERT_AUX</definition>
        <argsstring></argsstring>
        <name>X509_CERT_AUX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a4d72ffa62cdb8a1110f46f0438097760" prot="public" static="no">
        <type>struct <ref refid="structx509__trust__st" kindref="compound">x509_trust_st</ref></type>
        <definition>typedef struct x509_trust_st  X509_TRUST</definition>
        <argsstring></argsstring>
        <name>X509_TRUST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a58652c5d6bcef0709989954b10f36f00" prot="public" static="no">
        <type>struct <ref refid="structx509__cert__pair__st" kindref="compound">x509_cert_pair_st</ref></type>
        <definition>typedef struct x509_cert_pair_st  X509_CERT_PAIR</definition>
        <argsstring></argsstring>
        <name>X509_CERT_PAIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a1e216f160dc7df7dcd81665a2579c027" prot="public" static="no">
        <type>struct <ref refid="struct_x509__crl__info__st" kindref="compound">X509_crl_info_st</ref></type>
        <definition>typedef struct X509_crl_info_st  X509_CRL_INFO</definition>
        <argsstring></argsstring>
        <name>X509_CRL_INFO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a3c6aa7f1ac02d0eadbcd9415cc5ed0e0" prot="public" static="no">
        <type>struct <ref refid="structprivate__key__st" kindref="compound">private_key_st</ref></type>
        <definition>typedef struct private_key_st  X509_PKEY</definition>
        <argsstring></argsstring>
        <name>X509_PKEY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a3e1b4ea0caba323ac815bf4925cd5e1d" prot="public" static="no">
        <type>struct <ref refid="struct_x509__info__st" kindref="compound">X509_info_st</ref></type>
        <definition>typedef struct X509_info_st  X509_INFO</definition>
        <argsstring></argsstring>
        <name>X509_INFO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a490e724bcf7062dddfcbab65a4f452e9" prot="public" static="no">
        <type>struct <ref refid="struct_netscape__spkac__st" kindref="compound">Netscape_spkac_st</ref></type>
        <definition>typedef struct Netscape_spkac_st  NETSCAPE_SPKAC</definition>
        <argsstring></argsstring>
        <name>NETSCAPE_SPKAC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="535" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a73f83149a005916cd103a787d17f696a" prot="public" static="no">
        <type>struct <ref refid="struct_netscape__spki__st" kindref="compound">Netscape_spki_st</ref></type>
        <definition>typedef struct Netscape_spki_st  NETSCAPE_SPKI</definition>
        <argsstring></argsstring>
        <name>NETSCAPE_SPKI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1a286a1a3a10294c030ba73e1042b81694" prot="public" static="no">
        <type>struct <ref refid="struct_netscape__certificate__sequence" kindref="compound">Netscape_certificate_sequence</ref></type>
        <definition>typedef struct Netscape_certificate_sequence  NETSCAPE_CERT_SEQUENCE</definition>
        <argsstring></argsstring>
        <name>NETSCAPE_CERT_SEQUENCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1af722feb8445608df67189b5bd0dd9b31" prot="public" static="no">
        <type>struct <ref refid="struct_p_b_e_p_a_r_a_m__st" kindref="compound">PBEPARAM_st</ref></type>
        <definition>typedef struct PBEPARAM_st  PBEPARAM</definition>
        <argsstring></argsstring>
        <name>PBEPARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1afb0515b678cc3f3597fc2df6f26782c9" prot="public" static="no">
        <type>struct <ref refid="struct_p_b_e2_p_a_r_a_m__st" kindref="compound">PBE2PARAM_st</ref></type>
        <definition>typedef struct PBE2PARAM_st  PBE2PARAM</definition>
        <argsstring></argsstring>
        <name>PBE2PARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="x509_8h_1aecfb9449668da39a4880f55bdfe8dba8" prot="public" static="no">
        <type>struct <ref refid="struct_p_b_k_d_f2_p_a_r_a_m__st" kindref="compound">PBKDF2PARAM_st</ref></type>
        <definition>typedef struct PBKDF2PARAM_st  PBKDF2PARAM</definition>
        <argsstring></argsstring>
        <name>PBKDF2PARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="577" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="x509_8h_1aff6537740cdd14cdc4d3de9ff117e83d" prot="public" static="no" mutable="no">
        <type>int(*)(int, <ref refid="structx509__st" kindref="compound">X509</ref> *, int)</type>
        <definition>int(*)(int, X509 *, int) X509_TRUST_set_default(int(*trust)(int, X509 *, int))</definition>
        <argsstring>(int(*trust)(int, X509 *, int))</argsstring>
        <name>X509_TRUST_set_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="855" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1a02ad6cc5d33c413aabdabe742adfe889" prot="public" static="no" mutable="no">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* ex</definition>
        <argsstring></argsstring>
        <name>ex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1051" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1aebdbf0bfc23402adcaa55cb1fb6f2dd7" prot="public" static="no" mutable="no">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> int</type>
        <definition>X509_EXTENSION int loc</definition>
        <argsstring></argsstring>
        <name>loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1051" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1aff9037fcb7fcfead3168611f8008a2dc" prot="public" static="no" mutable="no">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* attr</definition>
        <argsstring></argsstring>
        <name>attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1106" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1a8e76a846a02bda3e8e416145f67e90ae" prot="public" static="no" mutable="no">
        <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>const ASN1_OBJECT* obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1108" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1ab512b8f495325c7ea0f5a5a5d3f938eb" prot="public" static="no" mutable="no">
        <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> int</type>
        <definition>const char int type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1108" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1a3fb78b1e1dea1301c549fdcb5a6ddc11" prot="public" static="no" mutable="no">
        <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> int const unsigned char *</type>
        <definition>const char int const unsigned char * bytes</definition>
        <argsstring></argsstring>
        <name>bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1109" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1ad8c3db4434e9cb5cd772cc009f40e856" prot="public" static="no" mutable="no">
        <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> int const unsigned char int</type>
        <definition>const char int const unsigned char int len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1109" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1a7235ef62e89328f5155846dc59c6fc37" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nid</definition>
        <argsstring></argsstring>
        <name>nid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1111" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="x509_8h_1a78f646207493cc73cd624c99da84424d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* attrname</definition>
        <argsstring></argsstring>
        <name>attrname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1114" column="1" bodyfile="thirdparty/openssl/include/openssl/x509.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="x509_8h_1a5a8054d02c9a2aafc81574b208886222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef STACK_OF</definition>
        <argsstring>(X509_ALGOR) X509_ALGORS</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6d7ead03e7472075676e292e17853c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef STACK_OF</definition>
        <argsstring>(X509_EXTENSION) X509_EXTENSIONS</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1abd1a7ee1ea4de60791bdc0160f389633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_CRL_set_default_method</definition>
        <argsstring>(const X509_CRL_METHOD *meth)</argsstring>
        <name>X509_CRL_set_default_method</name>
        <param>
          <type>const X509_CRL_METHOD *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa09d656c6e5738841fc29a0b5ae00ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X509_CRL_METHOD *</type>
        <definition>X509_CRL_METHOD* X509_CRL_METHOD_new</definition>
        <argsstring>(int(*crl_init)(X509_CRL *crl), int(*crl_free)(X509_CRL *crl), int(*crl_lookup)(X509_CRL *crl, X509_REVOKED **ret, ASN1_INTEGER *ser, X509_NAME *issuer), int(*crl_verify)(X509_CRL *crl, EVP_PKEY *pk))</argsstring>
        <name>X509_CRL_METHOD_new</name>
        <param>
          <type>int(*)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *crl)</type>
          <declname>crl_init</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *crl)</type>
          <declname>crl_free</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *crl, <ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> **ret, <ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *ser, <ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *issuer)</type>
          <declname>crl_lookup</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *crl, <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *pk)</type>
          <declname>crl_verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a39fde26dfc288d94924115f6228990f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_CRL_METHOD_free</definition>
        <argsstring>(X509_CRL_METHOD *m)</argsstring>
        <name>X509_CRL_METHOD_free</name>
        <param>
          <type>X509_CRL_METHOD *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9cb1bfb0a314de74c4e5f288d0cd7565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_CRL_set_meth_data</definition>
        <argsstring>(X509_CRL *crl, void *dat)</argsstring>
        <name>X509_CRL_set_meth_data</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a296b07df49595517d2d62e4e0ab0899d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_CRL_get_meth_data</definition>
        <argsstring>(X509_CRL *crl)</argsstring>
        <name>X509_CRL_get_meth_data</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aca3aaed56594bd3ae0f365491844c83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_verify_cert_error_string</definition>
        <argsstring>(long n)</argsstring>
        <name>X509_verify_cert_error_string</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a12429ffeb3897b47a4c7aed25ccaf159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_verify</definition>
        <argsstring>(X509 *a, EVP_PKEY *r)</argsstring>
        <name>X509_verify</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a68fa62b5170fb01f881c78a8cccd431b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_verify</definition>
        <argsstring>(X509_REQ *a, EVP_PKEY *r)</argsstring>
        <name>X509_REQ_verify</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa937e0ce7c1aa3d4a947af552b86a5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_verify</definition>
        <argsstring>(X509_CRL *a, EVP_PKEY *r)</argsstring>
        <name>X509_CRL_verify</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="650" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af72c6bc805dcd3a372c4259a22f6d039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NETSCAPE_SPKI_verify</definition>
        <argsstring>(NETSCAPE_SPKI *a, EVP_PKEY *r)</argsstring>
        <name>NETSCAPE_SPKI_verify</name>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a86121fc294ea33bebf26f16168951eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
        <definition>NETSCAPE_SPKI* NETSCAPE_SPKI_b64_decode</definition>
        <argsstring>(const char *str, int len)</argsstring>
        <name>NETSCAPE_SPKI_b64_decode</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af113a4f88c95d437e04495b503af2210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* NETSCAPE_SPKI_b64_encode</definition>
        <argsstring>(NETSCAPE_SPKI *x)</argsstring>
        <name>NETSCAPE_SPKI_b64_encode</name>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="654" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af964b911fc359300ff7647772a3d1125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* NETSCAPE_SPKI_get_pubkey</definition>
        <argsstring>(NETSCAPE_SPKI *x)</argsstring>
        <name>NETSCAPE_SPKI_get_pubkey</name>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad63fee191a5f2829416eca4dc7352bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NETSCAPE_SPKI_set_pubkey</definition>
        <argsstring>(NETSCAPE_SPKI *x, EVP_PKEY *pkey)</argsstring>
        <name>NETSCAPE_SPKI_set_pubkey</name>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0935fadd9aa17eb91895088f0e33c9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NETSCAPE_SPKI_print</definition>
        <argsstring>(BIO *out, NETSCAPE_SPKI *spki)</argsstring>
        <name>NETSCAPE_SPKI_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>spki</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4dbd1e03d8806b59605ba17f596eb6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_signature_dump</definition>
        <argsstring>(BIO *bp, const ASN1_STRING *sig, int indent)</argsstring>
        <name>X509_signature_dump</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="660" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a98ae93c84efcc6ec1848c421f0b66424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_signature_print</definition>
        <argsstring>(BIO *bp, X509_ALGOR *alg, ASN1_STRING *sig)</argsstring>
        <name>X509_signature_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>alg</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="661" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a67bca5179716cf4787fe9cbf75e87240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_sign</definition>
        <argsstring>(X509 *x, EVP_PKEY *pkey, const EVP_MD *md)</argsstring>
        <name>X509_sign</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af03640a94d759040e789d31bb7d6d0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_sign_ctx</definition>
        <argsstring>(X509 *x, EVP_MD_CTX *ctx)</argsstring>
        <name>X509_sign_ctx</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aebc32f7daaf65d3b806d624ebd477022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_sign</definition>
        <argsstring>(X509_REQ *x, EVP_PKEY *pkey, const EVP_MD *md)</argsstring>
        <name>X509_REQ_sign</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1affe8a43489c64ef582eb030822e26509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_sign_ctx</definition>
        <argsstring>(X509_REQ *x, EVP_MD_CTX *ctx)</argsstring>
        <name>X509_REQ_sign_ctx</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="666" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4e2e1a1bedd42d29eccabeb4afa3a295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_sign</definition>
        <argsstring>(X509_CRL *x, EVP_PKEY *pkey, const EVP_MD *md)</argsstring>
        <name>X509_CRL_sign</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aeaf329e140011c87a990a527b6a4258b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_sign_ctx</definition>
        <argsstring>(X509_CRL *x, EVP_MD_CTX *ctx)</argsstring>
        <name>X509_CRL_sign_ctx</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab3cc5f2ce526cfc779becce568d7dc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NETSCAPE_SPKI_sign</definition>
        <argsstring>(NETSCAPE_SPKI *x, EVP_PKEY *pkey, const EVP_MD *md)</argsstring>
        <name>NETSCAPE_SPKI_sign</name>
        <param>
          <type><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae6689523c2e4bb685381483d74ffeee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_pubkey_digest</definition>
        <argsstring>(const X509 *data, const EVP_MD *type, unsigned char *md, unsigned int *len)</argsstring>
        <name>X509_pubkey_digest</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a885a33bd3b7e209a162577b266bcdc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_digest</definition>
        <argsstring>(const X509 *data, const EVP_MD *type, unsigned char *md, unsigned int *len)</argsstring>
        <name>X509_digest</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1787f39f6deccab5d2c095acbe1f55d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_digest</definition>
        <argsstring>(const X509_CRL *data, const EVP_MD *type, unsigned char *md, unsigned int *len)</argsstring>
        <name>X509_CRL_digest</name>
        <param>
          <type>const <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="675" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa150e2876606afd4ee91a2b979cc246f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_digest</definition>
        <argsstring>(const X509_REQ *data, const EVP_MD *type, unsigned char *md, unsigned int *len)</argsstring>
        <name>X509_REQ_digest</name>
        <param>
          <type>const <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab05e58b19001a10b9715403a5ca287bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_digest</definition>
        <argsstring>(const X509_NAME *data, const EVP_MD *type, unsigned char *md, unsigned int *len)</argsstring>
        <name>X509_NAME_digest</name>
        <param>
          <type>const <ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a47b4cf1d9e23f798f92c2cd65d720fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* d2i_X509_fp</definition>
        <argsstring>(FILE *fp, X509 **x509)</argsstring>
        <name>d2i_X509_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> **</type>
          <declname>x509</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6a04dbf972ec873fb2d1a7c103781b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_fp</definition>
        <argsstring>(FILE *fp, X509 *x509)</argsstring>
        <name>i2d_X509_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x509</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa4c9d3d1b9d9883c9fa545e4dfbb1b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
        <definition>X509_CRL* d2i_X509_CRL_fp</definition>
        <argsstring>(FILE *fp, X509_CRL **crl)</argsstring>
        <name>d2i_X509_CRL_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> **</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0a262bc91f14ec4552db5129a82469b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_CRL_fp</definition>
        <argsstring>(FILE *fp, X509_CRL *crl)</argsstring>
        <name>i2d_X509_CRL_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="687" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2cf5b066b186199793f4efa823307e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
        <definition>X509_REQ* d2i_X509_REQ_fp</definition>
        <argsstring>(FILE *fp, X509_REQ **req)</argsstring>
        <name>d2i_X509_REQ_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> **</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3800aea58fe4f72b6d3f701f179994c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_REQ_fp</definition>
        <argsstring>(FILE *fp, X509_REQ *req)</argsstring>
        <name>i2d_X509_REQ_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0d55cf5d14d11f89d677287fa9273f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSAPrivateKey_fp</definition>
        <argsstring>(FILE *fp, RSA **rsa)</argsstring>
        <name>d2i_RSAPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8edfb5d7b2cfd9537f26e79597498bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSAPrivateKey_fp</definition>
        <argsstring>(FILE *fp, RSA *rsa)</argsstring>
        <name>i2d_RSAPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="692" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab65ef1ec54eea9a131c9f253217175b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSAPublicKey_fp</definition>
        <argsstring>(FILE *fp, RSA **rsa)</argsstring>
        <name>d2i_RSAPublicKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2eea5387016e2d6744d6efc0632f5c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSAPublicKey_fp</definition>
        <argsstring>(FILE *fp, RSA *rsa)</argsstring>
        <name>i2d_RSAPublicKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a40fc0ac4bea6601efce92053a175003b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSA_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, RSA **rsa)</argsstring>
        <name>d2i_RSA_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a707ac630b96c723a27ac16c3409c53bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSA_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, RSA *rsa)</argsstring>
        <name>i2d_RSA_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="696" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1b1e485e1845dc727a6f3f0c6bcf639e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSA_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, DSA **dsa)</argsstring>
        <name>d2i_DSA_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad1f60be796553a0a946ad6262c4374fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSA_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, DSA *dsa)</argsstring>
        <name>i2d_DSA_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a74d5b0fee73cec939a03490afa93d8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSAPrivateKey_fp</definition>
        <argsstring>(FILE *fp, DSA **dsa)</argsstring>
        <name>d2i_DSAPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a10a9fb3dfbec37ace9404ee8b62601dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSAPrivateKey_fp</definition>
        <argsstring>(FILE *fp, DSA *dsa)</argsstring>
        <name>i2d_DSAPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9a5fb63a26785a6039b7f651654f9a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EC_KEY *</type>
        <definition>EC_KEY* d2i_EC_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, EC_KEY **eckey)</argsstring>
        <name>d2i_EC_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>EC_KEY **</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad45b89bb174aebe1702e7092c3b5d679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_EC_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, EC_KEY *eckey)</argsstring>
        <name>i2d_EC_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>EC_KEY *</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="706" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a480cf4faa47140de0c891cf47d9ed7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EC_KEY *</type>
        <definition>EC_KEY* d2i_ECPrivateKey_fp</definition>
        <argsstring>(FILE *fp, EC_KEY **eckey)</argsstring>
        <name>d2i_ECPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>EC_KEY **</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="707" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6f571550a330b2792ced487d120466ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ECPrivateKey_fp</definition>
        <argsstring>(FILE *fp, EC_KEY *eckey)</argsstring>
        <name>i2d_ECPrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>EC_KEY *</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af1189f38f0b01f4cd38608ec147b0cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> *</type>
        <definition>X509_SIG* d2i_PKCS8_fp</definition>
        <argsstring>(FILE *fp, X509_SIG **p8)</argsstring>
        <name>d2i_PKCS8_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> **</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="710" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac47ecf0763360d66163b846ae8ae2102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8_fp</definition>
        <argsstring>(FILE *fp, X509_SIG *p8)</argsstring>
        <name>i2d_PKCS8_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> *</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4a81e71b430d7c91b6ac5582e9de5174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
        <definition>PKCS8_PRIV_KEY_INFO* d2i_PKCS8_PRIV_KEY_INFO_fp</definition>
        <argsstring>(FILE *fp, PKCS8_PRIV_KEY_INFO **p8inf)</argsstring>
        <name>d2i_PKCS8_PRIV_KEY_INFO_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> **</type>
          <declname>p8inf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6f355722c2e82b447a779bce8669fb60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8_PRIV_KEY_INFO_fp</definition>
        <argsstring>(FILE *fp, PKCS8_PRIV_KEY_INFO *p8inf)</argsstring>
        <name>i2d_PKCS8_PRIV_KEY_INFO_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>p8inf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8aa6be61b8619508017a0dcb08aa7921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKeyInfo_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY *key)</argsstring>
        <name>i2d_PKCS8PrivateKeyInfo_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a95d9f95b4d740d9e74449d24d535212f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PrivateKey_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY *pkey)</argsstring>
        <name>i2d_PrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a12eb5dfb1b8e3915ab30243a3a5953aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PrivateKey_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY **a)</argsstring>
        <name>d2i_PrivateKey_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="717" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8dac8e994361fc82817713afcd6a7d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY *pkey)</argsstring>
        <name>i2d_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9c6c197f29c3837e5d93ab6ab4164cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PUBKEY_fp</definition>
        <argsstring>(FILE *fp, EVP_PKEY **a)</argsstring>
        <name>d2i_PUBKEY_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af0e2887fd9da723165fd453aedc43d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* d2i_X509_bio</definition>
        <argsstring>(BIO *bp, X509 **x509)</argsstring>
        <name>d2i_X509_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> **</type>
          <declname>x509</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9d813d1bb43060dd17ca669356eee3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_bio</definition>
        <argsstring>(BIO *bp, X509 *x509)</argsstring>
        <name>i2d_X509_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x509</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a16e1ac41030f5acaea1b2908c3e94db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
        <definition>X509_CRL* d2i_X509_CRL_bio</definition>
        <argsstring>(BIO *bp, X509_CRL **crl)</argsstring>
        <name>d2i_X509_CRL_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> **</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4edc7a557af15e3a067ca7e7fc800575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_CRL_bio</definition>
        <argsstring>(BIO *bp, X509_CRL *crl)</argsstring>
        <name>i2d_X509_CRL_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8270cfece45249ac9aecbfdecfe19ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
        <definition>X509_REQ* d2i_X509_REQ_bio</definition>
        <argsstring>(BIO *bp, X509_REQ **req)</argsstring>
        <name>d2i_X509_REQ_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> **</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a678decfd3144ff4b2e6f3af6e98977b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_REQ_bio</definition>
        <argsstring>(BIO *bp, X509_REQ *req)</argsstring>
        <name>i2d_X509_REQ_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="728" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a41aee42d489b65a582364116f0db1321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSAPrivateKey_bio</definition>
        <argsstring>(BIO *bp, RSA **rsa)</argsstring>
        <name>d2i_RSAPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="730" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab5d066acff745569a861dc5cc9c414f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSAPrivateKey_bio</definition>
        <argsstring>(BIO *bp, RSA *rsa)</argsstring>
        <name>i2d_RSAPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="731" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a85a1e6763699ed50cf871f3a8759d09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSAPublicKey_bio</definition>
        <argsstring>(BIO *bp, RSA **rsa)</argsstring>
        <name>d2i_RSAPublicKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a42b20313f153eed27df1e9a78ec03fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSAPublicKey_bio</definition>
        <argsstring>(BIO *bp, RSA *rsa)</argsstring>
        <name>i2d_RSAPublicKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a51d8d90b854ff8ff15b1a20750e87272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSA_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, RSA **rsa)</argsstring>
        <name>d2i_RSA_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="734" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad3946d246ea40cf347ec4b8c6751710c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSA_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, RSA *rsa)</argsstring>
        <name>i2d_RSA_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>rsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="735" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a32a49768ef1a99769aaaae09c0def93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSA_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, DSA **dsa)</argsstring>
        <name>d2i_DSA_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a82c8cfb8507ff5e8a59b8e50c8a728ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSA_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, DSA *dsa)</argsstring>
        <name>i2d_DSA_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a950fea0102e0ec6800b0764408ba040e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSAPrivateKey_bio</definition>
        <argsstring>(BIO *bp, DSA **dsa)</argsstring>
        <name>d2i_DSAPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1adec1440139ec6cafce3f1f8c417306aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSAPrivateKey_bio</definition>
        <argsstring>(BIO *bp, DSA *dsa)</argsstring>
        <name>i2d_DSAPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>dsa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="741" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1c94b77cda3acced1e7e6e725ac0fe3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EC_KEY *</type>
        <definition>EC_KEY* d2i_EC_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, EC_KEY **eckey)</argsstring>
        <name>d2i_EC_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>EC_KEY **</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="744" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1c6a1409a50ca012884bfeb93231b393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_EC_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, EC_KEY *eckey)</argsstring>
        <name>i2d_EC_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>EC_KEY *</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="745" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8a68d5148aa5eb06f1849b8fe33729c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EC_KEY *</type>
        <definition>EC_KEY* d2i_ECPrivateKey_bio</definition>
        <argsstring>(BIO *bp, EC_KEY **eckey)</argsstring>
        <name>d2i_ECPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>EC_KEY **</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="746" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a970ab5d4f2afb217ed3acc434507d46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_ECPrivateKey_bio</definition>
        <argsstring>(BIO *bp, EC_KEY *eckey)</argsstring>
        <name>i2d_ECPrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>EC_KEY *</type>
          <declname>eckey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="747" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1c8da16a02aa88816909113c793f6f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> *</type>
        <definition>X509_SIG* d2i_PKCS8_bio</definition>
        <argsstring>(BIO *bp, X509_SIG **p8)</argsstring>
        <name>d2i_PKCS8_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> **</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="749" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad8df7dbe0dc0d5b31d5a76b970f5d01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8_bio</definition>
        <argsstring>(BIO *bp, X509_SIG *p8)</argsstring>
        <name>i2d_PKCS8_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref> *</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afa91c41cc11c9370b92576f031dfc5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
        <definition>PKCS8_PRIV_KEY_INFO* d2i_PKCS8_PRIV_KEY_INFO_bio</definition>
        <argsstring>(BIO *bp, PKCS8_PRIV_KEY_INFO **p8inf)</argsstring>
        <name>d2i_PKCS8_PRIV_KEY_INFO_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> **</type>
          <declname>p8inf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="751" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8c775e89d94da50b15b1ac3ffc019314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8_PRIV_KEY_INFO_bio</definition>
        <argsstring>(BIO *bp, PKCS8_PRIV_KEY_INFO *p8inf)</argsstring>
        <name>i2d_PKCS8_PRIV_KEY_INFO_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>p8inf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="753" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afaf01d76f03aa1137a81524ee7a73a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PKCS8PrivateKeyInfo_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY *key)</argsstring>
        <name>i2d_PKCS8PrivateKeyInfo_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="754" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1abc51cb215d33a4c10347841c290b3cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PrivateKey_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY *pkey)</argsstring>
        <name>i2d_PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8568e2db1d6ef729942c7ea48a1b39ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PrivateKey_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY **a)</argsstring>
        <name>d2i_PrivateKey_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="756" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1c20d1581760cf849856d9cbba6a7ba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY *pkey)</argsstring>
        <name>i2d_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1cc3b239494e5ffb26c3609255f3bba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PUBKEY_bio</definition>
        <argsstring>(BIO *bp, EVP_PKEY **a)</argsstring>
        <name>d2i_PUBKEY_bio</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a140fe9507e97f510a3481b64c0795529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_dup</definition>
        <argsstring>(X509 *x509)</argsstring>
        <name>X509_dup</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x509</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="761" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0b795d15ae60484c806238dea5ce6ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_ATTRIBUTE_dup</definition>
        <argsstring>(X509_ATTRIBUTE *xa)</argsstring>
        <name>X509_ATTRIBUTE_dup</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>xa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aba2bc15d0f0739cfbf5d68250ce66cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_EXTENSION_dup</definition>
        <argsstring>(X509_EXTENSION *ex)</argsstring>
        <name>X509_EXTENSION_dup</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="763" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a10432844d32c7b460ca7d56d7b15ee90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
        <definition>X509_CRL* X509_CRL_dup</definition>
        <argsstring>(X509_CRL *crl)</argsstring>
        <name>X509_CRL_dup</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad5932e81569d31243bd32568460538a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
        <definition>X509_REQ* X509_REQ_dup</definition>
        <argsstring>(X509_REQ *req)</argsstring>
        <name>X509_REQ_dup</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="765" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7eb32e908bbf9984ff6a49b726a3741b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* X509_ALGOR_dup</definition>
        <argsstring>(X509_ALGOR *xn)</argsstring>
        <name>X509_ALGOR_dup</name>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>xn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5c289a6fbc3107fefb5dc6184b5b7cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_ALGOR_set0</definition>
        <argsstring>(X509_ALGOR *alg, ASN1_OBJECT *aobj, int ptype, void *pval)</argsstring>
        <name>X509_ALGOR_set0</name>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>alg</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>aobj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="767" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acfea022df77108974470fa98aa88d9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_ALGOR_get0</definition>
        <argsstring>(ASN1_OBJECT **paobj, int *pptype, void **ppval, X509_ALGOR *algor)</argsstring>
        <name>X509_ALGOR_get0</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> **</type>
          <declname>paobj</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pptype</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>ppval</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab44f4d3bad3d1c20afa59b4c38772cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_ALGOR_set_md</definition>
        <argsstring>(X509_ALGOR *alg, const EVP_MD *md)</argsstring>
        <name>X509_ALGOR_set_md</name>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>alg</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae6994cab0db78e6eb700c2d90c78a1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
        <definition>X509_NAME* X509_NAME_dup</definition>
        <argsstring>(X509_NAME *xn)</argsstring>
        <name>X509_NAME_dup</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>xn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a71b7ee7d2857382d5357cbf34c863aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_ENTRY_dup</definition>
        <argsstring>(X509_NAME_ENTRY *ne)</argsstring>
        <name>X509_NAME_ENTRY_dup</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="773" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afba9843938bb0294a3cf0b78387f8f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_cmp_time</definition>
        <argsstring>(const ASN1_TIME *s, time_t *t)</argsstring>
        <name>X509_cmp_time</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>time_t *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac2a307beb5076e0b4d11725deaa17ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_cmp_current_time</definition>
        <argsstring>(const ASN1_TIME *s)</argsstring>
        <name>X509_cmp_current_time</name>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="776" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af608891c1a59567348c55fdaa3e62413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
        <definition>ASN1_TIME* X509_time_adj</definition>
        <argsstring>(ASN1_TIME *s, long adj, time_t *t)</argsstring>
        <name>X509_time_adj</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>adj</declname>
        </param>
        <param>
          <type>time_t *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="777" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a71d24dcf2d75b17f75c03b2392e87293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
        <definition>ASN1_TIME* X509_time_adj_ex</definition>
        <argsstring>(ASN1_TIME *s, int offset_day, long offset_sec, time_t *t)</argsstring>
        <name>X509_time_adj_ex</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_day</declname>
        </param>
        <param>
          <type>long</type>
          <declname>offset_sec</declname>
        </param>
        <param>
          <type>time_t *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="778" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2af41732f9bd8d8b11ae2b94390d415a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
        <definition>ASN1_TIME* X509_gmtime_adj</definition>
        <argsstring>(ASN1_TIME *s, long adj)</argsstring>
        <name>X509_gmtime_adj</name>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>adj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1eef3e2ec7f785f2f9186ce5583e51cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_cert_area</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_cert_area</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a274f5cfea3f07fbed89844c23733d4be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_cert_dir</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_cert_dir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a81698e7131828dd779b28067287f7a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_cert_file</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_cert_file</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae656968729324faf7ff3cfabf7f49717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_cert_dir_env</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_cert_dir_env</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="785" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a73455f8271ee6b251eb99bfac8246e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_cert_file_env</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_cert_file_env</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="786" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3b633ef64733b1664ae0d2a13536e728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* X509_get_default_private_dir</definition>
        <argsstring>(void)</argsstring>
        <name>X509_get_default_private_dir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="787" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3368635149d228beb207665a29bf9781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
        <definition>X509_REQ* X509_to_X509_REQ</definition>
        <argsstring>(X509 *x, EVP_PKEY *pkey, const EVP_MD *md)</argsstring>
        <name>X509_to_X509_REQ</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aea2209ef55137efbdcaa09e0904338d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_REQ_to_X509</definition>
        <argsstring>(X509_REQ *r, int days, EVP_PKEY *pkey)</argsstring>
        <name>X509_REQ_to_X509</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af3b9ed771d6bc373f71f3b52c588b02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_PUBKEY_set</definition>
        <argsstring>(X509_PUBKEY **x, EVP_PKEY *pkey)</argsstring>
        <name>X509_PUBKEY_set</name>
        <param>
          <type><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref> **</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6f77c030e116939bbb3df6381b1ffdb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* X509_PUBKEY_get</definition>
        <argsstring>(X509_PUBKEY *key)</argsstring>
        <name>X509_PUBKEY_get</name>
        <param>
          <type><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aeed67b0b7e3a06eca99c34cf1134918a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_pubkey_parameters</definition>
        <argsstring>(EVP_PKEY *pkey, STACK_OF(X509) *chain)</argsstring>
        <name>X509_get_pubkey_parameters</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="800" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae3e7e4b0706474840314a062b891f88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_PUBKEY</definition>
        <argsstring>(EVP_PKEY *a, unsigned char **pp)</argsstring>
        <name>i2d_PUBKEY</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9a29317f00f890ff3687995aede4dd63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* d2i_PUBKEY</definition>
        <argsstring>(EVP_PKEY **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_PUBKEY</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="803" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae00d4f6a382c2d3d0a1d9d93bd7a73e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_RSA_PUBKEY</definition>
        <argsstring>(RSA *a, unsigned char **pp)</argsstring>
        <name>i2d_RSA_PUBKEY</name>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1adc1fa405af5ad7ef7d38ac831970e83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrsa__st" kindref="compound">RSA</ref> *</type>
        <definition>RSA* d2i_RSA_PUBKEY</definition>
        <argsstring>(RSA **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_RSA_PUBKEY</name>
        <param>
          <type><ref refid="structrsa__st" kindref="compound">RSA</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad4fd403b7d94cad11ce8e321fe382a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_DSA_PUBKEY</definition>
        <argsstring>(DSA *a, unsigned char **pp)</argsstring>
        <name>i2d_DSA_PUBKEY</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="811" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a88c80ef34081d8b7687ce8e61650bc4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdsa__st" kindref="compound">DSA</ref> *</type>
        <definition>DSA* d2i_DSA_PUBKEY</definition>
        <argsstring>(DSA **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_DSA_PUBKEY</name>
        <param>
          <type><ref refid="structdsa__st" kindref="compound">DSA</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="812" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae7e034a115d55019f7464b4cbfcf52ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_EC_PUBKEY</definition>
        <argsstring>(EC_KEY *a, unsigned char **pp)</argsstring>
        <name>i2d_EC_PUBKEY</name>
        <param>
          <type>EC_KEY *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad0336dab896733f215fb85e379964848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EC_KEY *</type>
        <definition>EC_KEY* d2i_EC_PUBKEY</definition>
        <argsstring>(EC_KEY **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_EC_PUBKEY</name>
        <param>
          <type>EC_KEY **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a09fdf0cf326b1e0123e006d50010e1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_ATTRIBUTE_create</definition>
        <argsstring>(int nid, int atrtype, void *value)</argsstring>
        <name>X509_ATTRIBUTE_create</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atrtype</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="826" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2b7f33760c1ad95f513ef3d835cf516f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_set</definition>
        <argsstring>(X509_NAME **xn, X509_NAME *name)</argsstring>
        <name>X509_NAME_set</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> **</type>
          <declname>xn</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="835" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae56bc7276d87059695ea77df149bcb2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_ex_new_index</definition>
        <argsstring>(long argl, void *argp, CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func)</argsstring>
        <name>X509_get_ex_new_index</name>
        <param>
          <type>long</type>
          <declname>argl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <param>
          <type>CRYPTO_EX_new *</type>
          <declname>new_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_dup *</type>
          <declname>dup_func</declname>
        </param>
        <param>
          <type>CRYPTO_EX_free *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a37de9f48e39ef785789fc0d67448c0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_ex_data</definition>
        <argsstring>(X509 *r, int idx, void *arg)</argsstring>
        <name>X509_set_ex_data</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="846" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a207d4c2c6d6bcbbb84af0672a849466b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_get_ex_data</definition>
        <argsstring>(X509 *r, int idx)</argsstring>
        <name>X509_get_ex_data</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afa3a65b4c44d72b89b5fd8e4adb5c970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_AUX</definition>
        <argsstring>(X509 *a, unsigned char **pp)</argsstring>
        <name>i2d_X509_AUX</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7bc4147004be02071206e6e61437d225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* d2i_X509_AUX</definition>
        <argsstring>(X509 **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_X509_AUX</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="849" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae113149736840ef84d0e25064a7f907a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_alias_set1</definition>
        <argsstring>(X509 *x, unsigned char *name, int len)</argsstring>
        <name>X509_alias_set1</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="851" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a84bc543ffaa67d7f9261f1aa6b8ec642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_keyid_set1</definition>
        <argsstring>(X509 *x, unsigned char *id, int len)</argsstring>
        <name>X509_keyid_set1</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3d67f2918b12c3c8b233d9afbedb1248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* X509_alias_get0</definition>
        <argsstring>(X509 *x, int *len)</argsstring>
        <name>X509_alias_get0</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="853" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aaed89c80a2e02feebb7a83faa74ed47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* X509_keyid_get0</definition>
        <argsstring>(X509 *x, int *len)</argsstring>
        <name>X509_keyid_get0</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af4963afecc1f72363e15459ce943d3e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_set</definition>
        <argsstring>(int *t, int trust)</argsstring>
        <name>X509_TRUST_set</name>
        <param>
          <type>int *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a48cc725aa287b6208fa8130472bed0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_add1_trust_object</definition>
        <argsstring>(X509 *x, ASN1_OBJECT *obj)</argsstring>
        <name>X509_add1_trust_object</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab45d7ae3d81819e9291b6616bf31f823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_add1_reject_object</definition>
        <argsstring>(X509 *x, ASN1_OBJECT *obj)</argsstring>
        <name>X509_add1_reject_object</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="858" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae79ae94d90ac06b093aee4681254c124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_trust_clear</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_trust_clear</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2b8fadd72f980137f06a3fd1e646472c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_reject_clear</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_reject_clear</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a972e185d623fbc459691dbbb261e29a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_add0_revoked</definition>
        <argsstring>(X509_CRL *crl, X509_REVOKED *rev)</argsstring>
        <name>X509_CRL_add0_revoked</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>rev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa78070b3deadd98e12fd29280237c7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get0_by_serial</definition>
        <argsstring>(X509_CRL *crl, X509_REVOKED **ret, ASN1_INTEGER *serial)</argsstring>
        <name>X509_CRL_get0_by_serial</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> **</type>
          <declname>ret</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="867" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a65e755cc5cf638ac5dc9b6cb43b7974f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get0_by_cert</definition>
        <argsstring>(X509_CRL *crl, X509_REVOKED **ret, X509 *x)</argsstring>
        <name>X509_CRL_get0_by_cert</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> **</type>
          <declname>ret</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a512fd7597880b8d96b7a6f01a3c92de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref> *</type>
        <definition>X509_PKEY* X509_PKEY_new</definition>
        <argsstring>(void)</argsstring>
        <name>X509_PKEY_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="871" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a230e8d3180a8dd35d68030e30b73e4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_PKEY_free</definition>
        <argsstring>(X509_PKEY *a)</argsstring>
        <name>X509_PKEY_free</name>
        <param>
          <type><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a04a5ad37599e9ba82d2253271eebd601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_X509_PKEY</definition>
        <argsstring>(X509_PKEY *a, unsigned char **pp)</argsstring>
        <name>i2d_X509_PKEY</name>
        <param>
          <type><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="873" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a79d158916aafc3efb72a6afc221bf198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref> *</type>
        <definition>X509_PKEY* d2i_X509_PKEY</definition>
        <argsstring>(X509_PKEY **a, const unsigned char **pp, long length)</argsstring>
        <name>d2i_X509_PKEY</name>
        <param>
          <type><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref> **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="874" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a967f15bc16ce7ffdb4dcf4fa9057b268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref> *</type>
        <definition>X509_INFO* X509_INFO_new</definition>
        <argsstring>(void)</argsstring>
        <name>X509_INFO_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="881" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7eb7397898d92c2f64fb96a885f52e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_INFO_free</definition>
        <argsstring>(X509_INFO *a)</argsstring>
        <name>X509_INFO_free</name>
        <param>
          <type><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="882" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5f4ca5972b28da5c63da204422fb9636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* X509_NAME_oneline</definition>
        <argsstring>(X509_NAME *a, char *buf, int size)</argsstring>
        <name>X509_NAME_oneline</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="883" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aeec53779ce885c4bf586804e183b2aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_verify</definition>
        <argsstring>(i2d_of_void *i2d, X509_ALGOR *algor1, ASN1_BIT_STRING *signature, char *data, EVP_PKEY *pkey)</argsstring>
        <name>ASN1_verify</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor1</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="885" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a15c675680f1d1d729e3d5bef7ed9ce72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_digest</definition>
        <argsstring>(i2d_of_void *i2d, const EVP_MD *type, char *data, unsigned char *md, unsigned int *len)</argsstring>
        <name>ASN1_digest</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="888" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aafb5211ddb93fe4ec1dc2b9d5c4b0184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_sign</definition>
        <argsstring>(i2d_of_void *i2d, X509_ALGOR *algor1, X509_ALGOR *algor2, ASN1_BIT_STRING *signature, char *data, EVP_PKEY *pkey, const EVP_MD *type)</argsstring>
        <name>ASN1_sign</name>
        <param>
          <type>i2d_of_void *</type>
          <declname>i2d</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor1</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor2</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a22ec2e0f37ed37afb8e40c71e0048256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_digest</definition>
        <argsstring>(const ASN1_ITEM *it, const EVP_MD *type, void *data, unsigned char *md, unsigned int *len)</argsstring>
        <name>ASN1_item_digest</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="895" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab3cf79ad9bbd549fdbe7eb87b205417f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_verify</definition>
        <argsstring>(const ASN1_ITEM *it, X509_ALGOR *algor1, ASN1_BIT_STRING *signature, void *data, EVP_PKEY *pkey)</argsstring>
        <name>ASN1_item_verify</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor1</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab777198ac9d35a9956f8df69bd8669ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_sign</definition>
        <argsstring>(const ASN1_ITEM *it, X509_ALGOR *algor1, X509_ALGOR *algor2, ASN1_BIT_STRING *signature, void *data, EVP_PKEY *pkey, const EVP_MD *type)</argsstring>
        <name>ASN1_item_sign</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor1</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor2</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="901" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3c63a4d43e29fddfbdd933394e83a59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ASN1_item_sign_ctx</definition>
        <argsstring>(const ASN1_ITEM *it, X509_ALGOR *algor1, X509_ALGOR *algor2, ASN1_BIT_STRING *signature, void *asn, EVP_MD_CTX *ctx)</argsstring>
        <name>ASN1_item_sign_ctx</name>
        <param>
          <type>const <ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor1</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor2</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>asn</declname>
        </param>
        <param>
          <type><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a38ff9a50db1e2881e69b17741732efe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_version</definition>
        <argsstring>(X509 *x, long version)</argsstring>
        <name>X509_set_version</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a61dfb4f758fa18feba336860ed9b3396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_serialNumber</definition>
        <argsstring>(X509 *x, ASN1_INTEGER *serial)</argsstring>
        <name>X509_set_serialNumber</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="910" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a667af4dd51a9a8cafefc3f6fb8fc23b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
        <definition>ASN1_INTEGER* X509_get_serialNumber</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_get_serialNumber</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a214abc39d0b208e3e400ff4786e7e155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_issuer_name</definition>
        <argsstring>(X509 *x, X509_NAME *name)</argsstring>
        <name>X509_set_issuer_name</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="912" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ade3220b850537708545f660ee272d4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
        <definition>X509_NAME* X509_get_issuer_name</definition>
        <argsstring>(X509 *a)</argsstring>
        <name>X509_get_issuer_name</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a54597d74716614e7ccf0aaaa0998b44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_subject_name</definition>
        <argsstring>(X509 *x, X509_NAME *name)</argsstring>
        <name>X509_set_subject_name</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aff52c219295ce864fb20f88050f9963c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
        <definition>X509_NAME* X509_get_subject_name</definition>
        <argsstring>(X509 *a)</argsstring>
        <name>X509_get_subject_name</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="915" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a36d4f7bfdf60875634a62ba89d6a9d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_notBefore</definition>
        <argsstring>(X509 *x, const ASN1_TIME *tm)</argsstring>
        <name>X509_set_notBefore</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="916" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a18774088ece4a401d73ed3e381b68ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_notAfter</definition>
        <argsstring>(X509 *x, const ASN1_TIME *tm)</argsstring>
        <name>X509_set_notAfter</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="917" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab345f704456e2de6a10211a88d98823a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_set_pubkey</definition>
        <argsstring>(X509 *x, EVP_PKEY *pkey)</argsstring>
        <name>X509_set_pubkey</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="918" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a97c3703b14a1f4a987c5d31cdf6cb205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* X509_get_pubkey</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_get_pubkey</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="919" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a053c90aafc3462a497ae11afd4180362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref> *</type>
        <definition>ASN1_BIT_STRING* X509_get0_pubkey_bitstr</definition>
        <argsstring>(const X509 *x)</argsstring>
        <name>X509_get0_pubkey_bitstr</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad91802c42ded0ad2ea9d4ee7d02489e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_certificate_type</definition>
        <argsstring>(X509 *x, EVP_PKEY *pubkey)</argsstring>
        <name>X509_certificate_type</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a75ed4c70664ec9c2994438113f5941a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_set_version</definition>
        <argsstring>(X509_REQ *x, long version)</argsstring>
        <name>X509_REQ_set_version</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a465d078bfba7f607313d942f400e7360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_set_subject_name</definition>
        <argsstring>(X509_REQ *req, X509_NAME *name)</argsstring>
        <name>X509_REQ_set_subject_name</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="924" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acd531669dcec421c4909e80133452962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_set_pubkey</definition>
        <argsstring>(X509_REQ *x, EVP_PKEY *pkey)</argsstring>
        <name>X509_REQ_set_pubkey</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="925" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab2dbf4d2ab0e9379506040921d3e4594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* X509_REQ_get_pubkey</definition>
        <argsstring>(X509_REQ *req)</argsstring>
        <name>X509_REQ_get_pubkey</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="926" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a34d2ed004beff0ed68a04625e0f695f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_extension_nid</definition>
        <argsstring>(int nid)</argsstring>
        <name>X509_REQ_extension_nid</name>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="927" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5ee68039246b39f14e101853e3178273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* X509_REQ_get_extension_nids</definition>
        <argsstring>(void)</argsstring>
        <name>X509_REQ_get_extension_nids</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a54eb3b2c2cf3605cb9a25fe96a6740cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_REQ_set_extension_nids</definition>
        <argsstring>(int *nids)</argsstring>
        <name>X509_REQ_set_extension_nids</name>
        <param>
          <type>int *</type>
          <declname>nids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="929" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1ceb9cb503b605c2ca9059c88c992464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add_extensions_nid</definition>
        <argsstring>(X509_REQ *req, STACK_OF(X509_EXTENSION) *exts, int nid)</argsstring>
        <name>X509_REQ_add_extensions_nid</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>exts</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af2a8aebdc9a673b2b7de49ea35eee1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add_extensions</definition>
        <argsstring>(X509_REQ *req, STACK_OF(X509_EXTENSION) *exts)</argsstring>
        <name>X509_REQ_add_extensions</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>exts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="933" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a14a1270c4915cfea6e51ad5b555d9736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_get_attr_count</definition>
        <argsstring>(const X509_REQ *req)</argsstring>
        <name>X509_REQ_get_attr_count</name>
        <param>
          <type>const <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="934" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aca5ef7253d71eaecdb8b6d3a758ab86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_get_attr_by_NID</definition>
        <argsstring>(const X509_REQ *req, int nid, int lastpos)</argsstring>
        <name>X509_REQ_get_attr_by_NID</name>
        <param>
          <type>const <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acbfe569044d5415e7f936e983e7b83de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_get_attr_by_OBJ</definition>
        <argsstring>(const X509_REQ *req, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509_REQ_get_attr_by_OBJ</name>
        <param>
          <type>const <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="937" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a61f83b0a04e47b461d90ff65ed322124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_REQ_get_attr</definition>
        <argsstring>(const X509_REQ *req, int loc)</argsstring>
        <name>X509_REQ_get_attr</name>
        <param>
          <type>const <ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1adca349f7e58c4843f1d55bb78dd1f969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_REQ_delete_attr</definition>
        <argsstring>(X509_REQ *req, int loc)</argsstring>
        <name>X509_REQ_delete_attr</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a84de9cb6de888ddf70d40ff556154295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add1_attr</definition>
        <argsstring>(X509_REQ *req, X509_ATTRIBUTE *attr)</argsstring>
        <name>X509_REQ_add1_attr</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="941" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa63d75979b176e60bf84969ef9a7f6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add1_attr_by_OBJ</definition>
        <argsstring>(X509_REQ *req, const ASN1_OBJECT *obj, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_REQ_add1_attr_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1abfe5385a0dd5fa792fb70efb1e41745a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add1_attr_by_NID</definition>
        <argsstring>(X509_REQ *req, int nid, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_REQ_add1_attr_by_NID</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="945" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1c4a33d9cc83e31dac8b2ca783970044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_add1_attr_by_txt</definition>
        <argsstring>(X509_REQ *req, const char *attrname, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_REQ_add1_attr_by_txt</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0efab3a290f1148c2b80539188c6c39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_set_version</definition>
        <argsstring>(X509_CRL *x, long version)</argsstring>
        <name>X509_CRL_set_version</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="952" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a60ad195c7f93396d4f93bcb748b02d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_set_issuer_name</definition>
        <argsstring>(X509_CRL *x, X509_NAME *name)</argsstring>
        <name>X509_CRL_set_issuer_name</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a19edc40e2f01546b1828cf0a511a8437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_set_lastUpdate</definition>
        <argsstring>(X509_CRL *x, const ASN1_TIME *tm)</argsstring>
        <name>X509_CRL_set_lastUpdate</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9f2b01ccb97c8a47369dd6cd5376b001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_set_nextUpdate</definition>
        <argsstring>(X509_CRL *x, const ASN1_TIME *tm)</argsstring>
        <name>X509_CRL_set_nextUpdate</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="955" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5a644817d7e14d778cf3a0c470e37b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_sort</definition>
        <argsstring>(X509_CRL *crl)</argsstring>
        <name>X509_CRL_sort</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>crl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3abd9ecd9e923d1e17833c87f454aaae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_set_serialNumber</definition>
        <argsstring>(X509_REVOKED *x, ASN1_INTEGER *serial)</argsstring>
        <name>X509_REVOKED_set_serialNumber</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="958" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9f7d36e1e84af9c582db0e09babb272c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_set_revocationDate</definition>
        <argsstring>(X509_REVOKED *r, ASN1_TIME *tm)</argsstring>
        <name>X509_REVOKED_set_revocationDate</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="959" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aade921d9652d5b6a27e8eac8308e9dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_check_private_key</definition>
        <argsstring>(X509_REQ *x509, EVP_PKEY *pkey)</argsstring>
        <name>X509_REQ_check_private_key</name>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x509</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="961" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa2b4d3747ff3ce6998e1e1423f2c6051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_check_private_key</definition>
        <argsstring>(X509 *x509, EVP_PKEY *pkey)</argsstring>
        <name>X509_check_private_key</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x509</declname>
        </param>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1276977f17213ab47645f42184e86fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_issuer_and_serial_cmp</definition>
        <argsstring>(const X509 *a, const X509 *b)</argsstring>
        <name>X509_issuer_and_serial_cmp</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="965" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afc1d844277133981261a714b4868dfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_issuer_and_serial_hash</definition>
        <argsstring>(X509 *a)</argsstring>
        <name>X509_issuer_and_serial_hash</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a32af683a8734522d332404430ac975bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_issuer_name_cmp</definition>
        <argsstring>(const X509 *a, const X509 *b)</argsstring>
        <name>X509_issuer_name_cmp</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa0be07370a46b4fc209c8595d7bc0e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_issuer_name_hash</definition>
        <argsstring>(X509 *a)</argsstring>
        <name>X509_issuer_name_hash</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a769abe6e3f88e571e43ffc26938fa0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_subject_name_cmp</definition>
        <argsstring>(const X509 *a, const X509 *b)</argsstring>
        <name>X509_subject_name_cmp</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="971" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad453174b014334f59ce2721163ac491c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_subject_name_hash</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_subject_name_hash</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="972" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aedf7764a94b8c55f832dcc67a3abaaee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_issuer_name_hash_old</definition>
        <argsstring>(X509 *a)</argsstring>
        <name>X509_issuer_name_hash_old</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="975" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2aae7b9093439dd3da825411429285e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_subject_name_hash_old</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_subject_name_hash_old</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="976" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af7d8ab113a29212c9818af26c2573b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_cmp</definition>
        <argsstring>(const X509 *a, const X509 *b)</argsstring>
        <name>X509_cmp</name>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="979" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab52671f661dab2939d339792e9b30d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_cmp</definition>
        <argsstring>(const X509_NAME *a, const X509_NAME *b)</argsstring>
        <name>X509_NAME_cmp</name>
        <param>
          <type>const <ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5b681bfebd1b64b7ac6040322ae7cac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_NAME_hash</definition>
        <argsstring>(X509_NAME *x)</argsstring>
        <name>X509_NAME_hash</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5154e1a79b015f90a228a3a212724c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long X509_NAME_hash_old</definition>
        <argsstring>(X509_NAME *x)</argsstring>
        <name>X509_NAME_hash_old</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="982" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad1cd3e3963b4cb951e4bb734788faf91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_cmp</definition>
        <argsstring>(const X509_CRL *a, const X509_CRL *b)</argsstring>
        <name>X509_CRL_cmp</name>
        <param>
          <type>const <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="984" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a662c45dce21e02b2bdff314785bd1af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_match</definition>
        <argsstring>(const X509_CRL *a, const X509_CRL *b)</argsstring>
        <name>X509_CRL_match</name>
        <param>
          <type>const <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="985" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a45bf222c958721d68d8d118cf1664a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_print_ex_fp</definition>
        <argsstring>(FILE *bp, X509 *x, unsigned long nmflag, unsigned long cflag)</argsstring>
        <name>X509_print_ex_fp</name>
        <param>
          <type>FILE *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nmflag</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>cflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="987" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7a19d05b52634faa90ab0720ca4b301f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_print_fp</definition>
        <argsstring>(FILE *bp, X509 *x)</argsstring>
        <name>X509_print_fp</name>
        <param>
          <type>FILE *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="988" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2250afd80e9d754359fd967b4a1024a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_print_fp</definition>
        <argsstring>(FILE *bp, X509_CRL *x)</argsstring>
        <name>X509_CRL_print_fp</name>
        <param>
          <type>FILE *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="989" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a173c59866037a48dfe2d771b11ebb55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_print_fp</definition>
        <argsstring>(FILE *bp, X509_REQ *req)</argsstring>
        <name>X509_REQ_print_fp</name>
        <param>
          <type>FILE *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="990" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad4feb049506ee0b0dfd43324d3f849c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_print_ex_fp</definition>
        <argsstring>(FILE *fp, X509_NAME *nm, int indent, unsigned long flags)</argsstring>
        <name>X509_NAME_print_ex_fp</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7c9f3d2421ff2af59d300662a80c4351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_print</definition>
        <argsstring>(BIO *bp, X509_NAME *name, int obase)</argsstring>
        <name>X509_NAME_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>obase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="995" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5deb7d6e18030dc66a61c22614e11411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_print_ex</definition>
        <argsstring>(BIO *out, X509_NAME *nm, int indent, unsigned long flags)</argsstring>
        <name>X509_NAME_print_ex</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="996" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2b619335aae17fb4889683d0c1cf15ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_print_ex</definition>
        <argsstring>(BIO *bp, X509 *x, unsigned long nmflag, unsigned long cflag)</argsstring>
        <name>X509_print_ex</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nmflag</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>cflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3334cd2019f6197e4a2be131fd6932ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_print</definition>
        <argsstring>(BIO *bp, X509 *x)</argsstring>
        <name>X509_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="998" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afe3181432ee09e8bf31321389bbc58f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_ocspid_print</definition>
        <argsstring>(BIO *bp, X509 *x)</argsstring>
        <name>X509_ocspid_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="999" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a15567dc682a2d3669c03f32e6016f782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CERT_AUX_print</definition>
        <argsstring>(BIO *bp, X509_CERT_AUX *x, int indent)</argsstring>
        <name>X509_CERT_AUX_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="structx509__cert__aux__st" kindref="compound">X509_CERT_AUX</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a47224db797aa08618b7499081ad687b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_print</definition>
        <argsstring>(BIO *bp, X509_CRL *x)</argsstring>
        <name>X509_CRL_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1001" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a721fc1fbe6b42bad5e7aeeb98d94b566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_print_ex</definition>
        <argsstring>(BIO *bp, X509_REQ *x, unsigned long nmflag, unsigned long cflag)</argsstring>
        <name>X509_REQ_print_ex</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nmflag</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>cflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1002" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab2233de8592b60c159f6b72a2d850adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REQ_print</definition>
        <argsstring>(BIO *bp, X509_REQ *req)</argsstring>
        <name>X509_REQ_print</name>
        <param>
          <type><ref refid="structbio__st" kindref="compound">BIO</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref> *</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1003" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aacb73e97794e9a45e548ca856e4e19e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_entry_count</definition>
        <argsstring>(X509_NAME *name)</argsstring>
        <name>X509_NAME_entry_count</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1006" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3d14ec7364a719e8322f49f4509839f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_get_text_by_NID</definition>
        <argsstring>(X509_NAME *name, int nid, char *buf, int len)</argsstring>
        <name>X509_NAME_get_text_by_NID</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1007" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a6a7578c18bbf4a7b63697b095aab3a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_get_text_by_OBJ</definition>
        <argsstring>(X509_NAME *name, ASN1_OBJECT *obj, char *buf, int len)</argsstring>
        <name>X509_NAME_get_text_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1009" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acaee07e6b014a36ac8e9c804f6cd1a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_get_index_by_NID</definition>
        <argsstring>(X509_NAME *name, int nid, int lastpos)</argsstring>
        <name>X509_NAME_get_index_by_NID</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1014" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae3537757b93beca36805d74f1216175e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_get_index_by_OBJ</definition>
        <argsstring>(X509_NAME *name, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509_NAME_get_index_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afad0db52a95d0db7c98e33a9c37910be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_get_entry</definition>
        <argsstring>(X509_NAME *name, int loc)</argsstring>
        <name>X509_NAME_get_entry</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1017" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a98231a0f2057b0131583855372b191ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_delete_entry</definition>
        <argsstring>(X509_NAME *name, int loc)</argsstring>
        <name>X509_NAME_delete_entry</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1018" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5438afc33486b86ace24314173e06507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_add_entry</definition>
        <argsstring>(X509_NAME *name, X509_NAME_ENTRY *ne, int loc, int set)</argsstring>
        <name>X509_NAME_add_entry</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1019" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a155b9e3765adf39b6d3bd45acecd48cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_add_entry_by_OBJ</definition>
        <argsstring>(X509_NAME *name, ASN1_OBJECT *obj, int type, unsigned char *bytes, int len, int loc, int set)</argsstring>
        <name>X509_NAME_add_entry_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1021" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a482d058f69061781b07754a22c19cff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_add_entry_by_NID</definition>
        <argsstring>(X509_NAME *name, int nid, int type, unsigned char *bytes, int len, int loc, int set)</argsstring>
        <name>X509_NAME_add_entry_by_NID</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a73a507cc8e2b491796397fa1ec0ada80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_ENTRY_create_by_txt</definition>
        <argsstring>(X509_NAME_ENTRY **ne, const char *field, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_NAME_ENTRY_create_by_txt</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> **</type>
          <declname>ne</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1aa15a9169a1ed61756ddf66aa61ecdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_ENTRY_create_by_NID</definition>
        <argsstring>(X509_NAME_ENTRY **ne, int nid, int type, unsigned char *bytes, int len)</argsstring>
        <name>X509_NAME_ENTRY_create_by_NID</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> **</type>
          <declname>ne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1027" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afa4e01948da2a83dfb4858da5bc3b45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_add_entry_by_txt</definition>
        <argsstring>(X509_NAME *name, const char *field, int type, const unsigned char *bytes, int len, int loc, int set)</argsstring>
        <name>X509_NAME_add_entry_by_txt</name>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1029" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acd7f4fef95a82fd14c2d924697d31a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
        <definition>X509_NAME_ENTRY* X509_NAME_ENTRY_create_by_OBJ</definition>
        <argsstring>(X509_NAME_ENTRY **ne, ASN1_OBJECT *obj, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_NAME_ENTRY_create_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> **</type>
          <declname>ne</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1031" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a02e1c04ccc648200d0a81c3412777d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_ENTRY_set_object</definition>
        <argsstring>(X509_NAME_ENTRY *ne, ASN1_OBJECT *obj)</argsstring>
        <name>X509_NAME_ENTRY_set_object</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1034" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8ba0cc2b4d6fb2c7848475a530520071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_NAME_ENTRY_set_data</definition>
        <argsstring>(X509_NAME_ENTRY *ne, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_NAME_ENTRY_set_data</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab7e8b2d78f4ec22f9ebb42d101653551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* X509_NAME_ENTRY_get_object</definition>
        <argsstring>(X509_NAME_ENTRY *ne)</argsstring>
        <name>X509_NAME_ENTRY_get_object</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1038" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad27895f2ffd80592828ed12d01269f35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref> *</type>
        <definition>ASN1_STRING* X509_NAME_ENTRY_get_data</definition>
        <argsstring>(X509_NAME_ENTRY *ne)</argsstring>
        <name>X509_NAME_ENTRY_get_data</name>
        <param>
          <type><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref> *</type>
          <declname>ne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5a2f80cd5b99f71424d3063d58f5e319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509v3_get_ext_count</definition>
        <argsstring>(const STACK_OF(X509_EXTENSION) *x)</argsstring>
        <name>X509v3_get_ext_count</name>
        <param>
          <type>const STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1041" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a24dbbd9b3c18b2ef58e3e93426bc8d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509v3_get_ext_by_NID</definition>
        <argsstring>(const STACK_OF(X509_EXTENSION) *x, int nid, int lastpos)</argsstring>
        <name>X509v3_get_ext_by_NID</name>
        <param>
          <type>const STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1042" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a27aee4e257ac717abd1f32f7cbeac52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509v3_get_ext_by_OBJ</definition>
        <argsstring>(const STACK_OF(X509_EXTENSION) *x, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509v3_get_ext_by_OBJ</name>
        <param>
          <type>const STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1044" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8e5b0ced8d4614d1d75e964c461a4cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509v3_get_ext_by_critical</definition>
        <argsstring>(const STACK_OF(X509_EXTENSION) *x, int crit, int lastpos)</argsstring>
        <name>X509v3_get_ext_by_critical</name>
        <param>
          <type>const STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1046" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a57ef490decf8f4708f5ca6363e609b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509v3_get_ext</definition>
        <argsstring>(const STACK_OF(X509_EXTENSION) *x, int loc)</argsstring>
        <name>X509v3_get_ext</name>
        <param>
          <type>const STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab4b69905ff6e308e068ed746d880c3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509v3_delete_ext</definition>
        <argsstring>(STACK_OF(X509_EXTENSION) *x, int loc)</argsstring>
        <name>X509v3_delete_ext</name>
        <param>
          <type>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1049" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af79252df65299a522b3dd50ebc3e0e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_ext_count</definition>
        <argsstring>(X509 *x)</argsstring>
        <name>X509_get_ext_count</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1053" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a9833d3cf68693cbb4dcd452f10318cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_ext_by_NID</definition>
        <argsstring>(X509 *x, int nid, int lastpos)</argsstring>
        <name>X509_get_ext_by_NID</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5bad49d7c4dcc6d5e556021080fbb24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_ext_by_OBJ</definition>
        <argsstring>(X509 *x, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509_get_ext_by_OBJ</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad36acce506406d437ee47efd9e0d0412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_get_ext_by_critical</definition>
        <argsstring>(X509 *x, int crit, int lastpos)</argsstring>
        <name>X509_get_ext_by_critical</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1056" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a857fcdf9b9c3d8eb67b643351639dc0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_get_ext</definition>
        <argsstring>(X509 *x, int loc)</argsstring>
        <name>X509_get_ext</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1057" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7b3ee23413afcd72575b22f11b1ddf99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_delete_ext</definition>
        <argsstring>(X509 *x, int loc)</argsstring>
        <name>X509_delete_ext</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1058" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a47df56e4753b49279ba08ef4bb0fe18c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_add_ext</definition>
        <argsstring>(X509 *x, X509_EXTENSION *ex, int loc)</argsstring>
        <name>X509_add_ext</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1059" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a10c5af781e45915a68af14a26f072810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_get_ext_d2i</definition>
        <argsstring>(X509 *x, int nid, int *crit, int *idx)</argsstring>
        <name>X509_get_ext_d2i</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1060" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae1bbd8988f2fd2139cb24552f7219694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_add1_ext_i2d</definition>
        <argsstring>(X509 *x, int nid, void *value, int crit, unsigned long flags)</argsstring>
        <name>X509_add1_ext_i2d</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a92cfb734c75d65523362b65689180607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get_ext_count</definition>
        <argsstring>(X509_CRL *x)</argsstring>
        <name>X509_CRL_get_ext_count</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1064" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aa14cc4aa017d1895331b3413e2bbf75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get_ext_by_NID</definition>
        <argsstring>(X509_CRL *x, int nid, int lastpos)</argsstring>
        <name>X509_CRL_get_ext_by_NID</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1065" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac6e6e29ddc50a94ffaacc1c8f5d5dd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get_ext_by_OBJ</definition>
        <argsstring>(X509_CRL *x, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509_CRL_get_ext_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1066" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a28800b760c9679975b548a2f88024482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_get_ext_by_critical</definition>
        <argsstring>(X509_CRL *x, int crit, int lastpos)</argsstring>
        <name>X509_CRL_get_ext_by_critical</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1067" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab75785d36e0c68330f4578c0ca793f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_CRL_get_ext</definition>
        <argsstring>(X509_CRL *x, int loc)</argsstring>
        <name>X509_CRL_get_ext</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1068" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afcee34472bacd69e2c2464e66f538975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_CRL_delete_ext</definition>
        <argsstring>(X509_CRL *x, int loc)</argsstring>
        <name>X509_CRL_delete_ext</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1069" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5555281cc7fb4a60c0d4d4b0474cfd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_add_ext</definition>
        <argsstring>(X509_CRL *x, X509_EXTENSION *ex, int loc)</argsstring>
        <name>X509_CRL_add_ext</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad1d2df16f95fa4f93c950bca17df33f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_CRL_get_ext_d2i</definition>
        <argsstring>(X509_CRL *x, int nid, int *crit, int *idx)</argsstring>
        <name>X509_CRL_get_ext_d2i</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1071" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a675c1b38adf633fd20fa56c2828e41d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_CRL_add1_ext_i2d</definition>
        <argsstring>(X509_CRL *x, int nid, void *value, int crit, unsigned long flags)</argsstring>
        <name>X509_CRL_add1_ext_i2d</name>
        <param>
          <type><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1072" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8bc3eca7a2c5f1337b6d8ea56521d9ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_get_ext_count</definition>
        <argsstring>(X509_REVOKED *x)</argsstring>
        <name>X509_REVOKED_get_ext_count</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac9a0a918cdedf7ecb32f574de06bec15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_get_ext_by_NID</definition>
        <argsstring>(X509_REVOKED *x, int nid, int lastpos)</argsstring>
        <name>X509_REVOKED_get_ext_by_NID</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1076" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a40d33eab27174562e0a8ab58972ad0c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_get_ext_by_OBJ</definition>
        <argsstring>(X509_REVOKED *x, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509_REVOKED_get_ext_by_OBJ</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1077" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a7ce4683910ecef47c2c6b8da2e786548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_get_ext_by_critical</definition>
        <argsstring>(X509_REVOKED *x, int crit, int lastpos)</argsstring>
        <name>X509_REVOKED_get_ext_by_critical</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1078" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a75d3aaf6c1ebc043d406e60c866f8862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_REVOKED_get_ext</definition>
        <argsstring>(X509_REVOKED *x, int loc)</argsstring>
        <name>X509_REVOKED_get_ext</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae800c10f0b5c43615f5ae66844b4d8ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_REVOKED_delete_ext</definition>
        <argsstring>(X509_REVOKED *x, int loc)</argsstring>
        <name>X509_REVOKED_delete_ext</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1080" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1abfcf1982b6c39d1a42b721b2c4e67052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_add_ext</definition>
        <argsstring>(X509_REVOKED *x, X509_EXTENSION *ex, int loc)</argsstring>
        <name>X509_REVOKED_add_ext</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1081" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a19b00f4d9f3612a3c2c0b747a4daac06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_REVOKED_get_ext_d2i</definition>
        <argsstring>(X509_REVOKED *x, int nid, int *crit, int *idx)</argsstring>
        <name>X509_REVOKED_get_ext_d2i</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1082" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0a8f8798521496c4079fb3fc043f42f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_REVOKED_add1_ext_i2d</definition>
        <argsstring>(X509_REVOKED *x, int nid, void *value, int crit, unsigned long flags)</argsstring>
        <name>X509_REVOKED_add1_ext_i2d</name>
        <param>
          <type><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1083" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a017a2c8f4e1518004e57590420d6e57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_EXTENSION_create_by_NID</definition>
        <argsstring>(X509_EXTENSION **ex, int nid, int crit, ASN1_OCTET_STRING *data)</argsstring>
        <name>X509_EXTENSION_create_by_NID</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> **</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a510051e302fd41dc1cdb1b81c1b15551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
        <definition>X509_EXTENSION* X509_EXTENSION_create_by_OBJ</definition>
        <argsstring>(X509_EXTENSION **ex, ASN1_OBJECT *obj, int crit, ASN1_OCTET_STRING *data)</argsstring>
        <name>X509_EXTENSION_create_by_OBJ</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> **</type>
          <declname>ex</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac83d19eb2ad6a3bd6df798fe1b5fc7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_EXTENSION_set_object</definition>
        <argsstring>(X509_EXTENSION *ex, ASN1_OBJECT *obj)</argsstring>
        <name>X509_EXTENSION_set_object</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a83cf1b1cc3f7c0c4020bfa3dd2f2efae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_EXTENSION_set_critical</definition>
        <argsstring>(X509_EXTENSION *ex, int crit)</argsstring>
        <name>X509_EXTENSION_set_critical</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1091" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0b8134e81aa8d185b856a5c8714d6ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_EXTENSION_set_data</definition>
        <argsstring>(X509_EXTENSION *ex, ASN1_OCTET_STRING *data)</argsstring>
        <name>X509_EXTENSION_set_data</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1092" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a55c2c7fdc9dd534a910595647b57ae97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* X509_EXTENSION_get_object</definition>
        <argsstring>(X509_EXTENSION *ex)</argsstring>
        <name>X509_EXTENSION_get_object</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1094" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae29843cca069f9f479f912759dd8e75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref> *</type>
        <definition>ASN1_OCTET_STRING* X509_EXTENSION_get_data</definition>
        <argsstring>(X509_EXTENSION *ne)</argsstring>
        <name>X509_EXTENSION_get_data</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a76b533df287f86ebdcb87aa97c247364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_EXTENSION_get_critical</definition>
        <argsstring>(X509_EXTENSION *ex)</argsstring>
        <name>X509_EXTENSION_get_critical</name>
        <param>
          <type><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref> *</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3c8ef8e791784b7f32f37ff39b47779e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509at_get_attr_count</definition>
        <argsstring>(const STACK_OF(X509_ATTRIBUTE) *x)</argsstring>
        <name>X509at_get_attr_count</name>
        <param>
          <type>const STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1098" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac0d0ac602c377f4346016ccb9d08c68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509at_get_attr_by_NID</definition>
        <argsstring>(const STACK_OF(X509_ATTRIBUTE) *x, int nid, int lastpos)</argsstring>
        <name>X509at_get_attr_by_NID</name>
        <param>
          <type>const STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1099" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1acf2087bef0a8a83988c8286124369178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509at_get_attr_by_OBJ</definition>
        <argsstring>(const STACK_OF(X509_ATTRIBUTE) *sk, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>X509at_get_attr_by_OBJ</name>
        <param>
          <type>const STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a440a67ed2f108a351cf1f720d61593d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509at_get_attr</definition>
        <argsstring>(const STACK_OF(X509_ATTRIBUTE) *x, int loc)</argsstring>
        <name>X509at_get_attr</name>
        <param>
          <type>const STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aff2d5b43c2f9136218a058a7a5f4f2fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509at_delete_attr</definition>
        <argsstring>(STACK_OF(X509_ATTRIBUTE) *x, int loc)</argsstring>
        <name>X509at_delete_attr</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8fb2d1b046ed49ca0d923c17dabcef8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STACK_OF</definition>
        <argsstring>(X509_ATTRIBUTE) *X509at_add1_attr(STACK_OF(X509_ATTRIBUTE) **x</argsstring>
        <name>STACK_OF</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab13ec037c88fa3267b37df9b9148a6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509at_get0_data_by_OBJ</definition>
        <argsstring>(STACK_OF(X509_ATTRIBUTE) *x, ASN1_OBJECT *obj, int lastpos, int type)</argsstring>
        <name>X509at_get0_data_by_OBJ</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>) *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a844d70ff071f54221cd062c426766a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_ATTRIBUTE_create_by_NID</definition>
        <argsstring>(X509_ATTRIBUTE **attr, int nid, int atrtype, const void *data, int len)</argsstring>
        <name>X509_ATTRIBUTE_create_by_NID</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> **</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atrtype</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a525f369a000fc654a2ad1099dce6df4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_ATTRIBUTE_create_by_OBJ</definition>
        <argsstring>(X509_ATTRIBUTE **attr, const ASN1_OBJECT *obj, int atrtype, const void *data, int len)</argsstring>
        <name>X509_ATTRIBUTE_create_by_OBJ</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> **</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atrtype</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1afab6ffe51dc29e8d44b1c983934e401d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* X509_ATTRIBUTE_create_by_txt</definition>
        <argsstring>(X509_ATTRIBUTE **attr, const char *atrname, int type, const unsigned char *bytes, int len)</argsstring>
        <name>X509_ATTRIBUTE_create_by_txt</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> **</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>atrname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4d9d7685c976dd57d18980e4418852bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_ATTRIBUTE_set1_object</definition>
        <argsstring>(X509_ATTRIBUTE *attr, const ASN1_OBJECT *obj)</argsstring>
        <name>X509_ATTRIBUTE_set1_object</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad46f14bf163738e17060f7b6060b62f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_ATTRIBUTE_set1_data</definition>
        <argsstring>(X509_ATTRIBUTE *attr, int attrtype, const void *data, int len)</argsstring>
        <name>X509_ATTRIBUTE_set1_data</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>attrtype</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a995cf35c76c3eecad34eda6ee20cae9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* X509_ATTRIBUTE_get0_data</definition>
        <argsstring>(X509_ATTRIBUTE *attr, int idx, int atrtype, void *data)</argsstring>
        <name>X509_ATTRIBUTE_get0_data</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atrtype</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0a6ddbb72cdfb6e55b1caaa6ab93d03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_ATTRIBUTE_count</definition>
        <argsstring>(X509_ATTRIBUTE *attr)</argsstring>
        <name>X509_ATTRIBUTE_count</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad4ccc225f359723972474932e9d89ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
        <definition>ASN1_OBJECT* X509_ATTRIBUTE_get0_object</definition>
        <argsstring>(X509_ATTRIBUTE *attr)</argsstring>
        <name>X509_ATTRIBUTE_get0_object</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a572150452a0e60e8e83b6a76d933ad08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref> *</type>
        <definition>ASN1_TYPE* X509_ATTRIBUTE_get0_type</definition>
        <argsstring>(X509_ATTRIBUTE *attr, int idx)</argsstring>
        <name>X509_ATTRIBUTE_get0_type</name>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a98515f7a176fb511d15f0e9791c3e685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_get_attr_count</definition>
        <argsstring>(const EVP_PKEY *key)</argsstring>
        <name>EVP_PKEY_get_attr_count</name>
        <param>
          <type>const <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a311fac83ea91de708ee9be61c78e10e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_get_attr_by_NID</definition>
        <argsstring>(const EVP_PKEY *key, int nid, int lastpos)</argsstring>
        <name>EVP_PKEY_get_attr_by_NID</name>
        <param>
          <type>const <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5a7322d6bfac043ab708627aa1e8e63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_get_attr_by_OBJ</definition>
        <argsstring>(const EVP_PKEY *key, ASN1_OBJECT *obj, int lastpos)</argsstring>
        <name>EVP_PKEY_get_attr_by_OBJ</name>
        <param>
          <type>const <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac897ff05af781c70311f391ce3448437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* EVP_PKEY_get_attr</definition>
        <argsstring>(const EVP_PKEY *key, int loc)</argsstring>
        <name>EVP_PKEY_get_attr</name>
        <param>
          <type>const <ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac392ea2c7ad17d08f10d129c81a49239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
        <definition>X509_ATTRIBUTE* EVP_PKEY_delete_attr</definition>
        <argsstring>(EVP_PKEY *key, int loc)</argsstring>
        <name>EVP_PKEY_delete_attr</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a73decebbce0f1af663cb3084e8b2e97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_add1_attr</definition>
        <argsstring>(EVP_PKEY *key, X509_ATTRIBUTE *attr)</argsstring>
        <name>EVP_PKEY_add1_attr</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8e9f02a1fa2cb1fe0de6a18e45b8f368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_add1_attr_by_OBJ</definition>
        <argsstring>(EVP_PKEY *key, const ASN1_OBJECT *obj, int type, const unsigned char *bytes, int len)</argsstring>
        <name>EVP_PKEY_add1_attr_by_OBJ</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a62da3785b39acb7e24a6caeec92ba787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_add1_attr_by_NID</definition>
        <argsstring>(EVP_PKEY *key, int nid, int type, const unsigned char *bytes, int len)</argsstring>
        <name>EVP_PKEY_add1_attr_by_NID</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a2395573b966f3919e1a2e5c9bd6476c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVP_PKEY_add1_attr_by_txt</definition>
        <argsstring>(EVP_PKEY *key, const char *attrname, int type, const unsigned char *bytes, int len)</argsstring>
        <name>EVP_PKEY_add1_attr_by_txt</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a00794722daae3cb1e10ec00eda7c2c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_verify_cert</definition>
        <argsstring>(X509_STORE_CTX *ctx)</argsstring>
        <name>X509_verify_cert</name>
        <param>
          <type><ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a29ae26be9292e6f83fe639baeb5c7fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_find_by_issuer_and_serial</definition>
        <argsstring>(STACK_OF(X509) *sk, X509_NAME *name, ASN1_INTEGER *serial)</argsstring>
        <name>X509_find_by_issuer_and_serial</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref> *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a62b5466f9e00625bca2159f871c44d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
        <definition>X509* X509_find_by_subject</definition>
        <argsstring>(STACK_OF(X509) *sk, X509_NAME *name)</argsstring>
        <name>X509_find_by_subject</name>
        <param>
          <type>STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>) *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ab82c881c39fc30069d3c2feca0d4c11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PKCS5_pbe_set0_algor</definition>
        <argsstring>(X509_ALGOR *algor, int alg, int iter, const unsigned char *salt, int saltlen)</argsstring>
        <name>PKCS5_pbe_set0_algor</name>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
          <declname>algor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>saltlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1abdbf16f1861eadca04d7d2b4501ff9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* PKCS5_pbe_set</definition>
        <argsstring>(int alg, int iter, const unsigned char *salt, int saltlen)</argsstring>
        <name>PKCS5_pbe_set</name>
        <param>
          <type>int</type>
          <declname>alg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>saltlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a69551be1f46b5367144ed58e1fd0a87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* PKCS5_pbe2_set</definition>
        <argsstring>(const EVP_CIPHER *cipher, int iter, unsigned char *salt, int saltlen)</argsstring>
        <name>PKCS5_pbe2_set</name>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>saltlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a63834e5eb4ccbf41de2fa7bf6f00f8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* PKCS5_pbe2_set_iv</definition>
        <argsstring>(const EVP_CIPHER *cipher, int iter, unsigned char *salt, int saltlen, unsigned char *aiv, int prf_nid)</argsstring>
        <name>PKCS5_pbe2_set_iv</name>
        <param>
          <type>const <ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref> *</type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>aiv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prf_nid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a4e86df0216eae5d5c1b4f82e1af60777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> *</type>
        <definition>X509_ALGOR* PKCS5_pbkdf2_set</definition>
        <argsstring>(int iter, unsigned char *salt, int saltlen, int prf_nid, int keylen)</argsstring>
        <name>PKCS5_pbkdf2_set</name>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prf_nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keylen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a59fc781e243d0d9d15df6f6db2f03c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
        <definition>EVP_PKEY* EVP_PKCS82PKEY</definition>
        <argsstring>(PKCS8_PRIV_KEY_INFO *p8)</argsstring>
        <name>EVP_PKCS82PKEY</name>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac03da4b14f2f7766f463e67308752f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
        <definition>PKCS8_PRIV_KEY_INFO* EVP_PKEY2PKCS8</definition>
        <argsstring>(EVP_PKEY *pkey)</argsstring>
        <name>EVP_PKEY2PKCS8</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ad7e702ab1a7b17ca8aa471c1ac9af4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
        <definition>PKCS8_PRIV_KEY_INFO* EVP_PKEY2PKCS8_broken</definition>
        <argsstring>(EVP_PKEY *pkey, int broken)</argsstring>
        <name>EVP_PKEY2PKCS8_broken</name>
        <param>
          <type><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref> *</type>
          <declname>pkey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>broken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a205325741b9d3c3c5ff4c0dede2fa892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
        <definition>PKCS8_PRIV_KEY_INFO* PKCS8_set_broken</definition>
        <argsstring>(PKCS8_PRIV_KEY_INFO *p8, int broken)</argsstring>
        <name>PKCS8_set_broken</name>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>p8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>broken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af5621704b7d01ef0cf858402e0c3ffbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PKCS8_pkey_set0</definition>
        <argsstring>(PKCS8_PRIV_KEY_INFO *priv, ASN1_OBJECT *aobj, int version, int ptype, void *pval, unsigned char *penc, int penclen)</argsstring>
        <name>PKCS8_pkey_set0</name>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>priv</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>aobj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>penc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penclen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a28ef6384c90da97ac98ebfd29af2a81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PKCS8_pkey_get0</definition>
        <argsstring>(ASN1_OBJECT **ppkalg, const unsigned char **pk, int *ppklen, X509_ALGOR **pa, PKCS8_PRIV_KEY_INFO *p8)</argsstring>
        <name>PKCS8_pkey_get0</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> **</type>
          <declname>ppkalg</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ppklen</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> **</type>
          <declname>pa</declname>
        </param>
        <param>
          <type><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref> *</type>
          <declname>p8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a5b75193dbb9f0c9d6798c4da07139c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_PUBKEY_set0_param</definition>
        <argsstring>(X509_PUBKEY *pub, ASN1_OBJECT *aobj, int ptype, void *pval, unsigned char *penc, int penclen)</argsstring>
        <name>X509_PUBKEY_set0_param</name>
        <param>
          <type><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref> *</type>
          <declname>pub</declname>
        </param>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> *</type>
          <declname>aobj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pval</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>penc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penclen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ac3bfcaef6c8907c69a314f2cb5ecf903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_PUBKEY_get0_param</definition>
        <argsstring>(ASN1_OBJECT **ppkalg, const unsigned char **pk, int *ppklen, X509_ALGOR **pa, X509_PUBKEY *pub)</argsstring>
        <name>X509_PUBKEY_get0_param</name>
        <param>
          <type><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref> **</type>
          <declname>ppkalg</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ppklen</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref> **</type>
          <declname>pa</declname>
        </param>
        <param>
          <type><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref> *</type>
          <declname>pub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aca35b67143a58aac18e98914cb2af1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_check_trust</definition>
        <argsstring>(X509 *x, int id, int flags)</argsstring>
        <name>X509_check_trust</name>
        <param>
          <type><ref refid="structx509__st" kindref="compound">X509</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8b2a781fb7875d6294f5e9ad867ab7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_get_count</definition>
        <argsstring>(void)</argsstring>
        <name>X509_TRUST_get_count</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1af1dd6d4dc03d34f856802810add8fa3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref> *</type>
        <definition>X509_TRUST* X509_TRUST_get0</definition>
        <argsstring>(int idx)</argsstring>
        <name>X509_TRUST_get0</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a899f94796dcaa03edf563f74c6fa9ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_get_by_id</definition>
        <argsstring>(int id)</argsstring>
        <name>X509_TRUST_get_by_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a1e3f0f2d4a45b236ec232506a04eb5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_add</definition>
        <argsstring>(int id, int flags, int(*ck)(X509_TRUST *, X509 *, int), char *name, int arg1, void *arg2)</argsstring>
        <name>X509_TRUST_add</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref> *, <ref refid="structx509__st" kindref="compound">X509</ref> *, int)</type>
          <declname>ck</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1aaa9be9ebde4031e04f544cb614b4dbe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void X509_TRUST_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>X509_TRUST_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1ae8b2ac7e1fb4929edbf81511e16d1994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_get_flags</definition>
        <argsstring>(X509_TRUST *xp)</argsstring>
        <name>X509_TRUST_get_flags</name>
        <param>
          <type><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref> *</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a3a893bb8e51559b8b635199c5a270662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* X509_TRUST_get0_name</definition>
        <argsstring>(X509_TRUST *xp)</argsstring>
        <name>X509_TRUST_get0_name</name>
        <param>
          <type><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref> *</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a0e74bf974df954f310a7f866819a08ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int X509_TRUST_get_trust</definition>
        <argsstring>(X509_TRUST *xp)</argsstring>
        <name>X509_TRUST_get_trust</name>
        <param>
          <type><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref> *</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="x509_8h_1a8e4c631baac4a9d342fda466363bfbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERR_load_X509_strings</definition>
        <argsstring>(void)</argsstring>
        <name>ERR_load_X509_strings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/x509.h" line="1215" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/x509/x509.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>ALL<sp/>RIGHTS<sp/>RESERVED.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>ECDH<sp/>support<sp/>in<sp/>OpenSSL<sp/>originally<sp/>developed<sp/>by<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>SUN<sp/>MICROSYSTEMS,<sp/>INC.,<sp/>and<sp/>contributed<sp/>to<sp/>the<sp/>OpenSSL<sp/>project.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_X509_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_X509_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/e_os2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/symhacks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EVP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/stack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/safestack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_ECDSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ecdsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_ECDH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ecdh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/rsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/dsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/dh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_SHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/ossl_typ.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_SYS_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Under<sp/>Win32<sp/>these<sp/>are<sp/>defined<sp/>in<sp/>wincrypt.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X509_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X509_CERT_PAIR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X509_EXTENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FILETYPE_PEM<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FILETYPE_ASN1<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FILETYPE_DEFAULT<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_DIGITAL_SIGNATURE<sp/>0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_NON_REPUDIATION<sp/><sp/><sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_KEY_ENCIPHERMENT<sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_DATA_ENCIPHERMENT<sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_KEY_AGREEMENT<sp/><sp/><sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_KEY_CERT_SIGN<sp/><sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_CRL_SIGN<sp/><sp/><sp/><sp/><sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_ENCIPHER_ONLY<sp/><sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_DECIPHER_ONLY<sp/><sp/><sp/><sp/><sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509v3_KU_UNDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_x509__objects__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__objects__st" kindref="compound">X509_objects_st</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*a2i)(void);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*i2a)(void);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__objects__st" kindref="compound">X509_OBJECTS</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="struct_x509__algor__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_algor_st</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*algorithm;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*parameter;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_ALGOR<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)<sp/>X509_ALGORS;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="struct_x509__val__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__val__st" kindref="compound">X509_val_st</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*notBefore;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*notAfter;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__val__st" kindref="compound">X509_VAL</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="struct_x509__pubkey__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__pubkey__st" kindref="compound">X509_pubkey_st</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*public_key;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="struct_x509__sig__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__sig__st" kindref="compound">X509_sig_st</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*digest;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="struct_x509__name__entry__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_name_entry_st</ref></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*object;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*value;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temp<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>always<sp/>keep<sp/>X509_NAMEs<sp/>in<sp/>2<sp/>forms.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="struct_x509__name__st" refkind="compound"><highlight class="normal">struct<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_name_st</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref>)<sp/>*entries;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modified;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>&apos;bytes&apos;<sp/>needs<sp/>to<sp/>be<sp/>built<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuf__mem__st" kindref="compound">BUF_MEM</ref><sp/>*bytes;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>unsigned<sp/>long<sp/>hash;<sp/>Keep<sp/>the<sp/>hash<sp/>around<sp/>for<sp/>lookups<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*canon_enc;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>canon_enclen;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_NAME<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_EX_V_NETSCAPE_HACK<sp/><sp/><sp/><sp/><sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_EX_V_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="struct_x509__extension__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_extension_st</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*object;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_BOOLEAN<sp/>critical;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*value;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>X509_EXTENSIONS;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>sequence<sp/>of<sp/>these<sp/>are<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="structx509__attributes__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structx509__attributes__st" kindref="compound">x509_attributes_st</ref></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*object;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>single;<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>for<sp/>a<sp/>set,<sp/>1<sp/>for<sp/>a<sp/>single<sp/>item<sp/>(which<sp/>is<sp/>wrong)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref>)<sp/>*</highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>1<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/><sp/><sp/>*single;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="struct_x509__req__info__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="struct_x509__req__info__st" kindref="compound">X509_req_info_st</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING</ref><sp/>enc;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*version;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*subject;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*pubkey;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>d=2<sp/>hl=2<sp/>l=<sp/><sp/>0<sp/>cons:<sp/>cont:<sp/>00<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*attributes;<sp/></highlight><highlight class="comment">/*<sp/>[<sp/>0<sp/>]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__req__info__st" kindref="compound">X509_REQ_INFO</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="struct_x509__req__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__req__st" kindref="compound">X509_req_st</ref></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__req__info__st" kindref="compound">X509_REQ_INFO</ref><sp/>*req_info;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*sig_alg;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="structx509__cinf__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__cinf__st" kindref="compound">x509_cinf_st</ref></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*version;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>0<sp/>]<sp/>default<sp/>of<sp/>v1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serialNumber;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*signature;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*issuer;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__val__st" kindref="compound">X509_VAL</ref><sp/>*validity;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*subject;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*key;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*issuerUID;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>1<sp/>]<sp/>optional<sp/>in<sp/>v2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*subjectUID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>2<sp/>]<sp/>optional<sp/>in<sp/>v2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*extensions;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[<sp/>3<sp/>]<sp/>optional<sp/>in<sp/>v3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING</ref><sp/>enc;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__cinf__st" kindref="compound">X509_CINF</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>stuff<sp/>is<sp/>certificate<sp/>&quot;auxiliary<sp/>info&quot;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>it<sp/>contains<sp/>details<sp/>which<sp/>are<sp/>useful<sp/>in<sp/>certificate</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>stores<sp/>and<sp/>databases.<sp/>When<sp/>used<sp/>this<sp/>is<sp/>tagged<sp/>onto</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>the<sp/>end<sp/>of<sp/>the<sp/>certificate<sp/>itself</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="structx509__cert__aux__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__cert__aux__st" kindref="compound">x509_cert_aux_st</ref></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)<sp/>*trust;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trusted<sp/>uses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref>)<sp/>*reject;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rejected<sp/>uses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_UTF8STRING</ref><sp/>*alias;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;friendly<sp/>name&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*keyid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>key<sp/>id<sp/>of<sp/>private<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)<sp/>*other;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>other<sp/>unspecified<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structx509__cert__aux__st" kindref="compound">X509_CERT_AUX</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="structx509__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__st" kindref="compound">x509_st</ref></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__cinf__st" kindref="compound">X509_CINF</ref><sp/>*cert_info;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*sig_alg;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcrypto__ex__data__st" kindref="compound">CRYPTO_EX_DATA</ref><sp/>ex_data;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>contain<sp/>copies<sp/>of<sp/>various<sp/>extension<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_pathlen;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_pcpathlen;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_flags;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_kusage;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_xkusage;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ex_nscert;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*skid;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_u_t_h_o_r_i_t_y___k_e_y_i_d__st" kindref="compound">AUTHORITY_KEYID</ref><sp/>*akid;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>X509_POLICY_CACHE<sp/>*policy_cache;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_d_i_s_t___p_o_i_n_t__st" kindref="compound">DIST_POINT</ref>)<sp/>*crldp;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_g_e_n_e_r_a_l___n_a_m_e__st" kindref="compound">GENERAL_NAME</ref>)<sp/>*altname;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_n_a_m_e___c_o_n_s_t_r_a_i_n_t_s__st" kindref="compound">NAME_CONSTRAINTS</ref><sp/>*nc;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RFC3779</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_i_p_address_family__st" kindref="compound">IPAddressFamily</ref>)<sp/>*rfc3779_addr;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_s_identifiers__st" kindref="compound">ASIdentifiers_st</ref><sp/>*rfc3779_asid;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_SHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sha1_hash[SHA_DIGEST_LENGTH];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx509__cert__aux__st" kindref="compound">X509_CERT_AUX</ref><sp/>*aux;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structx509__st" kindref="compound">X509</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>used<sp/>for<sp/>a<sp/>table<sp/>of<sp/>trust<sp/>checking<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="structx509__trust__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structx509__trust__st" kindref="compound">x509_trust_st</ref><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*check_trust)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__trust__st" kindref="compound">x509_trust_st</ref><sp/>*,<sp/><ref refid="structx509__st" kindref="compound">X509</ref><sp/>*,<sp/>int);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}<sp/><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="structx509__cert__pair__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structx509__cert__pair__st" kindref="compound">x509_cert_pair_st</ref><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>X509<sp/>*forward;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>X509<sp/>*reverse;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}<sp/><ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>standard<sp/>trust<sp/>ids<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_DEFAULT<sp/><sp/>-1<sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>valid<sp/>in<sp/>purpose<sp/>settings<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_COMPAT<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_SSL_CLIENT<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_SSL_SERVER<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_EMAIL<sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_OBJECT_SIGN<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_OCSP_SIGN<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_OCSP_REQUEST<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_TSA<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Keep<sp/>these<sp/>up<sp/>to<sp/>date!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_MIN<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_MAX<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>trust_flags<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_DYNAMIC<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_DYNAMIC_NAME<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check_trust<sp/>return<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_TRUSTED<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_REJECTED<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_TRUST_UNTRUSTED<sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>for<sp/>X509_print_ex()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_COMPAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_HEADER<sp/><sp/><sp/><sp/><sp/>1L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_SERIAL<sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_SIGNAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_ISSUER<sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_VALIDITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_SUBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_PUBKEY<sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_EXTENSIONS<sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_SIGDUMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_AUX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_FLAG_NO_ATTRIBUTES<sp/><sp/><sp/><sp/><sp/>(1L<sp/>&lt;&lt;<sp/>11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>specific<sp/>to<sp/>X509_NAME_print_ex()<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>field<sp/>separator<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SEP_MASK<sp/><sp/><sp/><sp/>(0xf<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_COMPAT<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traditional<sp/>SSLeay:<sp/>use<sp/>old<sp/>X509_NAME_print<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SEP_COMMA_PLUS<sp/><sp/>(1<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC2253<sp/>,+<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SEP_CPLUS_SPC<sp/><sp/><sp/>(2<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>,+<sp/>spaced:<sp/>more<sp/>readable<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SEP_SPLUS_SPC<sp/><sp/><sp/>(3<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>;+<sp/>spaced<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SEP_MULTILINE<sp/><sp/><sp/>(4<sp/>&lt;&lt;<sp/>16)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>line<sp/>per<sp/>field<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_DN_REV<sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>20)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reverse<sp/>DN<sp/>order<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>How<sp/>the<sp/>field<sp/>name<sp/>is<sp/>shown<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_MASK<sp/><sp/><sp/><sp/><sp/>(0x3<sp/>&lt;&lt;<sp/>21)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_SN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Object<sp/>short<sp/>name<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_LN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>21)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Object<sp/>long<sp/>name<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_OID<sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>&lt;&lt;<sp/>21)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>use<sp/>OIDs<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_NONE<sp/><sp/><sp/><sp/><sp/>(3<sp/>&lt;&lt;<sp/>21)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>field<sp/>names<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_SPC_EQ<sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>23)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>spaces<sp/>round<sp/>&apos;=&apos;<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>determines<sp/>if<sp/>we<sp/>dump<sp/>fields<sp/>we<sp/>don&apos;t<sp/>recognise:</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>RFC2253<sp/>requires<sp/>this.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_DUMP_UNKNOWN_FIELDS<sp/>(1<sp/>&lt;&lt;<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_FN_ALIGN<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>25)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>field<sp/>names<sp/>to<sp/>20<sp/>characters<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Complete<sp/>set<sp/>of<sp/>RFC2253<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_RFC2253<sp/>(ASN1_STRFLGS_RFC2253<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_SEP_COMMA_PLUS<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_DN_REV<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_FN_SN<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_DUMP_UNKNOWN_FIELDS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>readable<sp/>oneline<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_ONELINE<sp/>(ASN1_STRFLGS_RFC2253<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_ESC_QUOTE<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_SEP_CPLUS_SPC<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_SPC_EQ<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_FN_SN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>readable<sp/>multiline<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XN_FLAG_MULTILINE<sp/>(ASN1_STRFLGS_ESC_CTRL<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_STRFLGS_ESC_MSB<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_SEP_MULTILINE<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_SPC_EQ<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_FN_LN<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XN_FLAG_FN_ALIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="structx509__revoked__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx509__revoked__st" kindref="compound">x509_revoked_st</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serialNumber;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*revocationDate;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal"><sp/>*extensions;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>if<sp/>indirect<sp/>CRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_g_e_n_e_r_a_l___n_a_m_e__st" kindref="compound">GENERAL_NAME</ref>)<sp/>*issuer;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Revocation<sp/>reason<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reason;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sequence;<sp/></highlight><highlight class="comment">/*<sp/>load<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">DECLARE_STACK_OF(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="struct_x509__crl__info__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="struct_x509__crl__info__st" kindref="compound">X509_crl_info_st</ref></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*version;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*sig_alg;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*issuer;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*lastUpdate;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*nextUpdate;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref>)<sp/>*revoked;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/></highlight><highlight class="comment">/*<sp/>[0]<sp/>*/</highlight><highlight class="normal"><sp/>*extensions;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_s_n1___e_n_c_o_d_i_n_g__st" kindref="compound">ASN1_ENCODING</ref><sp/>enc;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__crl__info__st" kindref="compound">X509_CRL_INFO</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="struct_x509__crl__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__crl__st" kindref="compound">X509_crl_st</ref></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>actual<sp/>signature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__crl__info__st" kindref="compound">X509_CRL_INFO</ref><sp/>*crl;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*sig_alg;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copies<sp/>of<sp/>various<sp/>extensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_u_t_h_o_r_i_t_y___k_e_y_i_d__st" kindref="compound">AUTHORITY_KEYID</ref><sp/>*akid;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_s_s_u_i_n_g___d_i_s_t___p_o_i_n_t__st" kindref="compound">ISSUING_DIST_POINT</ref><sp/>*idp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convenient<sp/>breakdown<sp/>of<sp/>IDP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idp_flags;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idp_reasons;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CRL<sp/>and<sp/>base<sp/>CRL<sp/>numbers<sp/>for<sp/>delta<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*crl_number;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*base_crl_number;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_SHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sha1_hash[SHA_DIGEST_LENGTH];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(GENERAL_NAMES)<sp/>*issuers;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_CRL_METHOD<sp/>*meth;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*meth_data;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X509_CRL<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">DECLARE_ASN1_SET_OF(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="structprivate__key__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structprivate__key__st" kindref="compound">private_key_st</ref></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>PKCS#8<sp/>data<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*enc_algor;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*enc_pkey;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>encrypted<sp/>pub<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>decrypted,<sp/>the<sp/>following<sp/>will<sp/>not<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*dec_pkey;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>encrypt<sp/>and<sp/>decrypt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_length;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_data;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_free;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>if<sp/>we<sp/>should<sp/>auto<sp/>free<sp/>key_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expanded<sp/>version<sp/>of<sp/>&apos;enc_algor&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref><sp/>cipher;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EVP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="struct_x509__info__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x509__info__st" kindref="compound">X509_info_st</ref></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>X509<sp/>*x509;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>*x_pkey;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structevp__cipher__info__st" kindref="compound">EVP_CIPHER_INFO</ref><sp/>enc_cipher;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enc_len;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_data;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>references;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">DECLARE_STACK_OF(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>next<sp/>2<sp/>structures<sp/>and<sp/>their<sp/>8<sp/>routines<sp/>were<sp/>sent<sp/>to<sp/>me<sp/>by</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>Pat<sp/>Richard<sp/>&lt;patr@x509.com&gt;<sp/>and<sp/>are<sp/>used<sp/>to<sp/>manipulate</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>Netscapes<sp/>spki<sp/>structures<sp/>-<sp/>useful<sp/>if<sp/>you<sp/>are<sp/>writing<sp/>a<sp/>CA<sp/>web<sp/>page</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="struct_netscape__spkac__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_netscape__spkac__st" kindref="compound">Netscape_spkac_st</ref></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*pubkey;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_IA5STRING</ref><sp/>*challenge;<sp/><sp/></highlight><highlight class="comment">/*<sp/>challenge<sp/>sent<sp/>in<sp/>atlas<sp/>&gt;=<sp/>PR2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_netscape__spkac__st" kindref="compound">NETSCAPE_SPKAC</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="struct_netscape__spki__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_netscape__spki__st" kindref="compound">Netscape_spki_st</ref></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_netscape__spkac__st" kindref="compound">NETSCAPE_SPKAC</ref><sp/>*spkac;<sp/><sp/></highlight><highlight class="comment">/*<sp/>signed<sp/>public<sp/>key<sp/>and<sp/>challenge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*sig_algor;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Netscape<sp/>certificate<sp/>sequence<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="struct_netscape__certificate__sequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_netscape__certificate__sequence" kindref="compound">Netscape_certificate_sequence</ref></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*type;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(X509)<sp/>*certs;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unused<sp/>(and<sp/>iv<sp/>length<sp/>is<sp/>wrong)</highlight></codeline>
<codeline lineno="552"><highlight class="comment">typedef<sp/>struct<sp/>CBCParameter_st</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>iv[8];</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>CBC_PARAM;</highlight></codeline>
<codeline lineno="556"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Password<sp/>based<sp/>encryption<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="struct_p_b_e_p_a_r_a_m__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_b_e_p_a_r_a_m__st" kindref="compound">PBEPARAM_st</ref><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*salt;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*iter;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}<sp/><ref refid="struct_p_b_e_p_a_r_a_m__st" kindref="compound">PBEPARAM</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Password<sp/>based<sp/>encryption<sp/>V2<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="struct_p_b_e2_p_a_r_a_m__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_b_e2_p_a_r_a_m__st" kindref="compound">PBE2PARAM_st</ref><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*keyfunc;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*encryption;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}<sp/><ref refid="struct_p_b_e2_p_a_r_a_m__st" kindref="compound">PBE2PARAM</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="struct_p_b_k_d_f2_p_a_r_a_m__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_b_k_d_f2_p_a_r_a_m__st" kindref="compound">PBKDF2PARAM_st</ref><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*salt;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Usually<sp/>OCTET<sp/>STRING<sp/>but<sp/>could<sp/>be<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*iter;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*keylength;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*prf;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}<sp/><ref refid="struct_p_b_k_d_f2_p_a_r_a_m__st" kindref="compound">PBKDF2PARAM</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PKCS#8<sp/>private<sp/>key<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="structpkcs8__priv__key__info__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">pkcs8_priv_key_info_st</ref></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>broken;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>for<sp/>various<sp/>broken<sp/>formats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS8_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS8_NO_OCTET<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS8_EMBEDDED_PARAM<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS8_NS_DB<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKCS8_NEG_PRIVKEY<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*version;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*pkeyalg;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*pkey;<sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>be<sp/>OCTET<sp/>STRING<sp/>but<sp/>some<sp/>are<sp/>broken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*attributes;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/x509_vfy.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/pkcs7.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_EXT_PACK_UNKNOWN<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_EXT_PACK_STRING<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_get_version(x)<sp/>ASN1_INTEGER_get((x)-&gt;cert_info-&gt;version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/><sp/>X509_get_serialNumber(x)<sp/>((x)-&gt;cert_info-&gt;serialNumber)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_get_notBefore(x)<sp/>((x)-&gt;cert_info-&gt;validity-&gt;notBefore)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_get_notAfter(x)<sp/>((x)-&gt;cert_info-&gt;validity-&gt;notAfter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_extract_key(x)<sp/>X509_get_pubkey(x)<sp/></highlight><highlight class="comment">/*****/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_REQ_get_version(x)<sp/>ASN1_INTEGER_get((x)-&gt;req_info-&gt;version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_REQ_get_subject_name(x)<sp/>((x)-&gt;req_info-&gt;subject)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_REQ_extract_key(a)<sp/>X509_REQ_get_pubkey(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_name_cmp(a,b)<sp/><sp/>X509_NAME_cmp((a),(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_get_signature_type(x)<sp/>EVP_PKEY_type(OBJ_obj2nid((x)-&gt;sig_alg-&gt;algorithm))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_CRL_get_version(x)<sp/>ASN1_INTEGER_get((x)-&gt;crl-&gt;version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_CRL_get_lastUpdate(x)<sp/>((x)-&gt;crl-&gt;lastUpdate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_CRL_get_nextUpdate(x)<sp/>((x)-&gt;crl-&gt;nextUpdate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_CRL_get_issuer(x)<sp/>((x)-&gt;crl-&gt;issuer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_CRL_get_REVOKED(x)<sp/>((x)-&gt;crl-&gt;revoked)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_CRL_set_default_method(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509_CRL_METHOD<sp/>*meth);</highlight></codeline>
<codeline lineno="628"><highlight class="normal">X509_CRL_METHOD<sp/>*X509_CRL_METHOD_new(</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*crl_init)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl),</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*crl_free)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl),</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*crl_lookup)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>**ret,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*ser,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*issuer),</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*crl_verify)(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pk));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_CRL_METHOD_free(X509_CRL_METHOD<sp/>*m);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_CRL_set_meth_data(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dat);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*X509_CRL_get_meth_data(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>one<sp/>is<sp/>only<sp/>used<sp/>so<sp/>that<sp/>a<sp/>binary<sp/>form<sp/>can<sp/>output,<sp/>as<sp/>in</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>i2d_X509_NAME(X509_get_X509_PUBKEY(x),&amp;buf)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>X509_get_X509_PUBKEY(x)<sp/>((x)-&gt;cert_info-&gt;key)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*X509_verify_cert_error_string(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EVP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_verify(X509<sp/>*a,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*r);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_verify(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*a,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*r);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_verify(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*a,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*r);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NETSCAPE_SPKI_verify(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*a,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*r);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*<sp/>NETSCAPE_SPKI_b64_decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>NETSCAPE_SPKI_b64_encode(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*x);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*NETSCAPE_SPKI_get_pubkey(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*x);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NETSCAPE_SPKI_set_pubkey(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NETSCAPE_SPKI_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*spki);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_signature_dump(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*sig,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_signature_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*alg,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*sig);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_sign(X509<sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_sign_ctx(X509<sp/>*x,<sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_sign(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_sign_ctx(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x,<sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_sign(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_sign_ctx(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NETSCAPE_SPKI_sign(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref><sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_pubkey_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*data,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*data,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*data,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*data,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*data,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">X509<sp/>*d2i_X509_fp(FILE<sp/>*fp,<sp/>X509<sp/>**x509);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_fp(FILE<sp/>*fp,X509<sp/>*x509);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*d2i_X509_CRL_fp(FILE<sp/>*fp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>**crl);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_CRL_fp(FILE<sp/>*fp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*d2i_X509_REQ_fp(FILE<sp/>*fp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>**req);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_REQ_fp(FILE<sp/>*fp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSAPrivateKey_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSAPrivateKey_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSAPublicKey_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSAPublicKey_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSA_PUBKEY_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSA_PUBKEY_fp(FILE<sp/>*fp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d2i_DSA_PUBKEY_fp(FILE<sp/>*fp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**dsa);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSA_PUBKEY_fp(FILE<sp/>*fp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d2i_DSAPrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**dsa);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSAPrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">EC_KEY<sp/>*d2i_EC_PUBKEY_fp(FILE<sp/>*fp,<sp/>EC_KEY<sp/>**eckey);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i2d_EC_PUBKEY_fp(FILE<sp/>*fp,<sp/>EC_KEY<sp/>*eckey);</highlight></codeline>
<codeline lineno="707"><highlight class="normal">EC_KEY<sp/>*d2i_ECPrivateKey_fp(FILE<sp/>*fp,<sp/>EC_KEY<sp/>**eckey);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i2d_ECPrivateKey_fp(FILE<sp/>*fp,<sp/>EC_KEY<sp/>*eckey);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>*d2i_PKCS8_fp(FILE<sp/>*fp,<ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>**p8);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8_fp(FILE<sp/>*fp,<ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>*p8);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*d2i_PKCS8_PRIV_KEY_INFO_fp(FILE<sp/>*fp,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>**p8inf);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8_PRIV_KEY_INFO_fp(FILE<sp/>*fp,<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*p8inf);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKeyInfo_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PrivateKey_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**a);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PUBKEY_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PUBKEY_fp(FILE<sp/>*fp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**a);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">X509<sp/>*d2i_X509_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,X509<sp/>**x509);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,X509<sp/>*x509);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*d2i_X509_CRL_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>**crl);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_CRL_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*d2i_X509_REQ_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>**req);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_X509_REQ_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSAPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSAPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSAPublicKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSAPublicKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*d2i_RSA_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**rsa);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_RSA_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*rsa);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d2i_DSA_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**dsa);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSA_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*d2i_DSAPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**dsa);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_DSAPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*dsa);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">EC_KEY<sp/>*d2i_EC_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/>EC_KEY<sp/>**eckey);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i2d_EC_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/>EC_KEY<sp/>*eckey);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">EC_KEY<sp/>*d2i_ECPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/>EC_KEY<sp/>**eckey);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i2d_ECPrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/>EC_KEY<sp/>*eckey);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>*d2i_PKCS8_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>**p8);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref><sp/>*p8);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*d2i_PKCS8_PRIV_KEY_INFO_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>**p8inf);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8_PRIV_KEY_INFO_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*p8inf);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PKCS8PrivateKeyInfo_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PrivateKey_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**a);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2d_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*d2i_PUBKEY_bio(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**a);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">X509<sp/>*X509_dup(X509<sp/>*x509);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_ATTRIBUTE_dup(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*xa);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_EXTENSION_dup(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*X509_CRL_dup(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*X509_REQ_dup(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*X509_ALGOR_dup(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*xn);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_ALGOR_set0(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*alg,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*aobj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pval);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_ALGOR_get0(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>**paobj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pptype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**ppval,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_ALGOR_set_md(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*alg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*X509_NAME_dup(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*xn);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_ENTRY_dup(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_cmp_time(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,<sp/>time_t<sp/>*t);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_cmp_current_time(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*<sp/>X509_time_adj(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>adj,<sp/>time_t<sp/>*t);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*<sp/>X509_time_adj_ex(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_day,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset_sec,<sp/>time_t<sp/>*t);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*<sp/>X509_gmtime_adj(<ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>adj);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_cert_area(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_cert_dir(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_cert_file(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_cert_dir_env(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_cert_file_env(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>X509_get_default_private_dir(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*<sp/><sp/>X509_to_X509_REQ(X509<sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);</highlight></codeline>
<codeline lineno="790"><highlight class="normal">X509<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>X509_REQ_to_X509(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">DECLARE_ASN1_ENCODE_FUNCTIONS(X509_ALGORS,<sp/>X509_ALGORS,<sp/>X509_ALGORS)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__val__st" kindref="compound">X509_VAL</ref>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref>)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_PUBKEY_set(<ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>**x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*<sp/><sp/>X509_PUBKEY_get(<ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*key);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_get_pubkey_parameters(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STACK_OF(X509)<sp/>*chain);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_PUBKEY(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*<sp/><sp/>d2i_PUBKEY(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_RSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_RSA_PUBKEY(<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_RSA_PUBKEY(<ref refid="structrsa__st" kindref="compound">RSA</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_DSA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_DSA_PUBKEY(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2i_DSA_PUBKEY(<ref refid="structdsa__st" kindref="compound">DSA</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_EC_PUBKEY(EC_KEY<sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">EC_KEY<sp/><sp/><sp/><sp/><sp/><sp/>*d2i_EC_PUBKEY(EC_KEY<sp/>**a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__sig__st" kindref="compound">X509_SIG</ref>)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__req__info__st" kindref="compound">X509_REQ_INFO</ref>)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref>)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_ATTRIBUTE_create(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atrtype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)</highlight></codeline>
<codeline lineno="829"><highlight class="normal">DECLARE_ASN1_ENCODE_FUNCTIONS(X509_EXTENSIONS,<sp/>X509_EXTENSIONS,<sp/>X509_EXTENSIONS)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref>)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_NAME_set(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>**xn,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structx509__cinf__st" kindref="compound">X509_CINF</ref>)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(X509)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structx509__cert__aux__st" kindref="compound">X509_CERT_AUX</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structx509__cert__pair__st" kindref="compound">X509_CERT_PAIR</ref>)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_get_ex_new_index(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>argl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp,<sp/>CRYPTO_EX_new<sp/>*new_func,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTO_EX_dup<sp/>*dup_func,<sp/>CRYPTO_EX_free<sp/>*free_func);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_set_ex_data(X509<sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*X509_get_ex_data(X509<sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_X509_AUX(X509<sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="849"><highlight class="normal">X509<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>d2i_X509_AUX(X509<sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_alias_set1(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_keyid_set1(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>X509_alias_get0(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>X509_keyid_get0(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">int<sp/>(*X509_TRUST_set_default(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*trust)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/>X509<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)))(int,<sp/>X509<sp/>*,<sp/>int);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_set(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trust);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_add1_trust_object(X509<sp/>*x,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_add1_reject_object(X509<sp/>*x,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_trust_clear(X509<sp/>*x);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_reject_clear(X509<sp/>*x);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref>)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__crl__info__st" kindref="compound">X509_CRL_INFO</ref>)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref>)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_add0_revoked(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*rev);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_get0_by_serial(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>**ret,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_get0_by_cert(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl,<sp/><ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>**ret,<sp/>X509<sp/>*x);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>*<sp/>X509_PKEY_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_PKEY_free(<ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>*a);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i2d_X509_PKEY(<ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>*a,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>*<sp/>d2i_X509_PKEY(<ref refid="structprivate__key__st" kindref="compound">X509_PKEY</ref><sp/>**a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pp,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_netscape__spki__st" kindref="compound">NETSCAPE_SPKI</ref>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_netscape__spkac__st" kindref="compound">NETSCAPE_SPKAC</ref>)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_netscape__certificate__sequence" kindref="compound">NETSCAPE_CERT_SEQUENCE</ref>)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_EVP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref><sp/>*<sp/>X509_INFO_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_INFO_free(<ref refid="struct_x509__info__st" kindref="compound">X509_INFO</ref><sp/>*a);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_oneline(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*a,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_verify(i2d_of_void<sp/>*i2d,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor1,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_digest(i2d_of_void<sp/>*i2d,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_sign(i2d_of_void<sp/>*i2d,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor1,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor2,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_digest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor1,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_sign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor1,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor2,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*type);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ASN1_item_sign_ctx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_s_n1___i_t_e_m__st" kindref="compound">ASN1_ITEM</ref><sp/>*it,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor1,<sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor2,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*signature,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*asn,<sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_version(X509<sp/>*x,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>version);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_serialNumber(X509<sp/>*x,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*<sp/><sp/>X509_get_serialNumber(X509<sp/>*x);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_issuer_name(X509<sp/>*x,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*<sp/>X509_get_issuer_name(X509<sp/>*a);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_subject_name(X509<sp/>*x,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*<sp/>X509_get_subject_name(X509<sp/>*a);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_notBefore(X509<sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*tm);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_notAfter(X509<sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*tm);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_set_pubkey(X509<sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*<sp/><sp/>X509_get_pubkey(X509<sp/>*x);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_BIT_STRING</ref><sp/>*<sp/>X509_get0_pubkey_bitstr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*x);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_certificate_type(X509<sp/>*x,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pubkey<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_set_version(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>version);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_set_subject_name(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_set_pubkey(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x,<sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*<sp/><sp/>X509_REQ_get_pubkey(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_extension_nid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_REQ_get_extension_nids(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_REQ_set_extension_nids(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nids);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*X509_REQ_get_extensions(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add_extensions_nid(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*exts,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add_extensions(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*exts);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_get_attr_count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_get_attr_by_NID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_get_attr_by_OBJ(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_REQ_get_attr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_REQ_delete_attr(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add1_attr(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,<sp/><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add1_attr_by_OBJ(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add1_attr_by_NID(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REQ_add1_attr_by_txt(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attrname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_set_version(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>version);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_set_issuer_name(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_set_lastUpdate(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*tm);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_set_nextUpdate(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*tm);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_CRL_sort(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*crl);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REVOKED_set_serialNumber(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_REVOKED_set_revocationDate(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*r,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_TIME</ref><sp/>*tm);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_check_private_key(<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x509,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_check_private_key(X509<sp/>*x509,<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_issuer_and_serial_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*b);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_issuer_and_serial_hash(X509<sp/>*a);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_issuer_name_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*b);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_issuer_name_hash(X509<sp/>*a);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_subject_name_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*b);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_subject_name_hash(X509<sp/>*x);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_MD5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_issuer_name_hash_old(X509<sp/>*a);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_subject_name_hash_old(X509<sp/>*x);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X509<sp/>*b);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_NAME_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*b);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_NAME_hash(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*x);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>X509_NAME_hash_old(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*x);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_cmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*b);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_match(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*b);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_FP_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_print_ex_fp(FILE<sp/>*bp,X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nmflag,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cflag);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_print_fp(FILE<sp/>*bp,X509<sp/>*x);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_print_fp(FILE<sp/>*bp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_print_fp(FILE<sp/>*bp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_print_ex_fp(FILE<sp/>*fp,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSSL_NO_BIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_NAME_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obase);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_print_ex(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*out,<sp/><ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_print_ex(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nmflag,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cflag);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,X509<sp/>*x);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_ocspid_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,X509<sp/>*x);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CERT_AUX_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="structx509__cert__aux__st" kindref="compound">X509_CERT_AUX</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_print_ex(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<sp/><ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nmflag,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cflag);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REQ_print(<ref refid="structbio__st" kindref="compound">BIO</ref><sp/>*bp,<ref refid="struct_x509__req__st" kindref="compound">X509_REQ</ref><sp/>*req);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_entry_count(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_get_text_by_NID(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_NAME_get_text_by_OBJ(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>you<sp/>should<sp/>be<sp/>passsing<sp/>-1,<sp/>not<sp/>0<sp/>as<sp/>lastpos.<sp/><sp/>The<sp/>functions<sp/>that<sp/>use</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*<sp/>lastpos,<sp/>search<sp/>after<sp/>that<sp/>position<sp/>on.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_get_index_by_NID(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_get_index_by_OBJ(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_get_entry(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_delete_entry(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_add_entry(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_add_entry_by_OBJ(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_add_entry_by_NID(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_ENTRY_create_by_txt(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>**ne,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_ENTRY_create_by_NID(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>**ne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_NAME_add_entry_by_txt(<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*X509_NAME_ENTRY_create_by_OBJ(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>**ne,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_ENTRY_set_object(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X509_NAME_ENTRY_set_data(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/>X509_NAME_ENTRY_get_object(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_STRING</ref><sp/>*<sp/><sp/><sp/>X509_NAME_ENTRY_get_data(<ref refid="struct_x509__name__entry__st" kindref="compound">X509_NAME_ENTRY</ref><sp/>*ne);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509v3_get_ext_count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509v3_get_ext_by_NID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509v3_get_ext_by_OBJ(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509v3_get_ext_by_critical(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509v3_get_ext(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509v3_delete_ext(STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>*X509v3_add_ext(STACK_OF(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref>)<sp/>**x,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_get_ext_count(X509<sp/>*x);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_get_ext_by_NID(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_get_ext_by_OBJ(X509<sp/>*x,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_get_ext_by_critical(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_get_ext(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_delete_ext(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_add_ext(X509<sp/>*x,<sp/><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>X509_get_ext_d2i(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*idx);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_add1_ext_i2d(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_get_ext_count(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_get_ext_by_NID(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_get_ext_by_OBJ(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_get_ext_by_critical(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_CRL_get_ext(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_CRL_delete_ext(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_add_ext(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>X509_CRL_get_ext_d2i(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*idx);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_CRL_add1_ext_i2d(<ref refid="struct_x509__crl__st" kindref="compound">X509_CRL</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_get_ext_count(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_get_ext_by_NID(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_get_ext_by_OBJ(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_get_ext_by_critical(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_REVOKED_get_ext(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_REVOKED_delete_ext(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_add_ext(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>X509_REVOKED_get_ext_d2i(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*crit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*idx);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_REVOKED_add1_ext_i2d(<ref refid="structx509__revoked__st" kindref="compound">X509_REVOKED</ref><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_EXTENSION_create_by_NID(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>**ex,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*data);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*X509_EXTENSION_create_by_OBJ(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>**ex,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit,<ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*data);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_EXTENSION_set_object(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_EXTENSION_set_critical(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_EXTENSION_set_data(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*data);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*<sp/><sp/><sp/>X509_EXTENSION_get_object(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><ref refid="structasn1__string__st" kindref="compound">ASN1_OCTET_STRING</ref><sp/>*X509_EXTENSION_get_data(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ne);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_EXTENSION_get_critical(<ref refid="struct_x509__extension__st" kindref="compound">X509_EXTENSION</ref><sp/>*ex);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509at_get_attr_count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*x);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509at_get_attr_by_NID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509at_get_attr_by_OBJ(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*sk,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509at_get_attr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509at_delete_attr(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*X509at_add1_attr(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>**x,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*X509at_add1_attr_by_OBJ(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>**x,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*X509at_add1_attr_by_NID(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>**x,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*X509at_add1_attr_by_txt(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>**x,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attrname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*X509at_get0_data_by_OBJ(STACK_OF(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref>)<sp/>*x,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_ATTRIBUTE_create_by_NID(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>**attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atrtype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_ATTRIBUTE_create_by_OBJ(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>**attr,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atrtype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*X509_ATTRIBUTE_create_by_txt(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>**attr,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*atrname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_ATTRIBUTE_set1_object(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_ATTRIBUTE_set1_data(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attrtype,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*X509_ATTRIBUTE_get0_data(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atrtype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_ATTRIBUTE_count(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*X509_ATTRIBUTE_get0_object(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><ref refid="structasn1__type__st" kindref="compound">ASN1_TYPE</ref><sp/>*X509_ATTRIBUTE_get0_type(<ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_get_attr_count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_get_attr_by_NID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_get_attr_by_OBJ(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastpos);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*EVP_PKEY_get_attr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*EVP_PKEY_delete_attr(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_add1_attr(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,<sp/><ref refid="structx509__attributes__st" kindref="compound">X509_ATTRIBUTE</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_add1_attr_by_OBJ(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_add1_attr_by_NID(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVP_PKEY_add1_attr_by_txt(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*key,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attrname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>X509_verify_cert(<ref refid="structx509__store__ctx__st" kindref="compound">X509_STORE_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lookup<sp/>a<sp/>cert<sp/>from<sp/>a<sp/>X509<sp/>STACK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal">X509<sp/>*X509_find_by_issuer_and_serial(STACK_OF(X509)<sp/>*sk,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasn1__string__st" kindref="compound">ASN1_INTEGER</ref><sp/>*serial);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">X509<sp/>*X509_find_by_subject(STACK_OF(X509)<sp/>*sk,<ref refid="struct_x509__name__st" kindref="compound">X509_NAME</ref><sp/>*name);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_p_b_e_p_a_r_a_m__st" kindref="compound">PBEPARAM</ref>)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_p_b_e2_p_a_r_a_m__st" kindref="compound">PBE2PARAM</ref>)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="struct_p_b_k_d_f2_p_a_r_a_m__st" kindref="compound">PBKDF2PARAM</ref>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PKCS5_pbe_set0_algor(<ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*algor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saltlen);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*PKCS5_pbe_set(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saltlen);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*PKCS5_pbe2_set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*cipher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saltlen);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*PKCS5_pbe2_set_iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structevp__cipher__st" kindref="compound">EVP_CIPHER</ref><sp/>*cipher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saltlen,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aiv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prf_nid);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>*PKCS5_pbkdf2_set(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*salt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saltlen,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prf_nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keylen);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PKCS#8<sp/>utilities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref>)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*EVP_PKCS82PKEY(<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*p8);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*EVP_PKEY2PKCS8(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*EVP_PKEY2PKCS8_broken(<ref refid="structevp__pkey__st" kindref="compound">EVP_PKEY</ref><sp/>*pkey,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>broken);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*PKCS8_set_broken(<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*p8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>broken);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PKCS8_pkey_set0(<ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*priv,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*aobj,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pval,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*penc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>penclen);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PKCS8_pkey_get0(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>**ppkalg,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ppklen,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>**pa,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpkcs8__priv__key__info__st" kindref="compound">PKCS8_PRIV_KEY_INFO</ref><sp/>*p8);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_PUBKEY_set0_param(<ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*pub,<sp/><ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>*aobj,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptype,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pval,</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*penc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>penclen);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_PUBKEY_get0_param(<ref refid="structasn1__object__st" kindref="compound">ASN1_OBJECT</ref><sp/>**ppkalg,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ppklen,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__algor__st" kindref="compound">X509_ALGOR</ref><sp/>**pa,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_x509__pubkey__st" kindref="compound">X509_PUBKEY</ref><sp/>*pub);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_check_trust(X509<sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_get_count(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref><sp/>*<sp/>X509_TRUST_get0(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_get_by_id(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_add(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*ck)(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref><sp/>*,<sp/>X509<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>X509_TRUST_cleanup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_get_flags(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref><sp/>*xp);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*X509_TRUST_get0_name(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref><sp/>*xp);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X509_TRUST_get_trust(<ref refid="structx509__trust__st" kindref="compound">X509_TRUST</ref><sp/>*xp);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BEGIN<sp/>ERROR<sp/>CODES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>lines<sp/>are<sp/>auto<sp/>generated<sp/>by<sp/>the<sp/>script<sp/>mkerr.pl.<sp/>Any<sp/>changes</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/>*<sp/>made<sp/>after<sp/>this<sp/>point<sp/>may<sp/>be<sp/>overwritten<sp/>when<sp/>the<sp/>script<sp/>is<sp/>next<sp/>run.</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ERR_load_X509_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>codes<sp/>for<sp/>the<sp/>X509<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_ADD_CERT_DIR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_BY_FILE_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_CHECK_POLICY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>145</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_DIR_CTRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_GET_CERT_BY_SUBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_NETSCAPE_SPKI_B64_DECODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_NETSCAPE_SPKI_B64_ENCODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509AT_ADD1_ATTR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>135</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509V3_ADD_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_ATTRIBUTE_CREATE_BY_NID<sp/><sp/><sp/><sp/><sp/><sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ<sp/><sp/><sp/><sp/><sp/><sp/>137</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_ATTRIBUTE_CREATE_BY_TXT<sp/><sp/><sp/><sp/><sp/><sp/>140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_ATTRIBUTE_GET0_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>139</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_ATTRIBUTE_SET1_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_CHECK_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_CRL_PRINT_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>147</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_EXTENSION_CREATE_BY_NID<sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_EXTENSION_CREATE_BY_OBJ<sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_GET_PUBKEY_PARAMETERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_LOAD_CERT_CRL_FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_LOAD_CERT_FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_LOAD_CRL_FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_ADD_ENTRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_ENTRY_CREATE_BY_NID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_ENTRY_CREATE_BY_TXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>131</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_ENTRY_SET_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_ONELINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_NAME_PRINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_PRINT_EX_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_PUBKEY_GET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_PUBKEY_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_REQ_CHECK_PRIVATE_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_REQ_PRINT_EX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_REQ_PRINT_FP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_REQ_TO_X509<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_ADD_CERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_ADD_CRL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_CTX_GET1_ISSUER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>146</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_CTX_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>143</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_CTX_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>142</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_STORE_CTX_PURPOSE_INHERIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>134</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_TO_X509_REQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_TRUST_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>133</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_TRUST_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>141</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_F_X509_VERIFY_CERT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reason<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_BAD_X509_FILETYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_BASE64_DECODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>118</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_CANT_CHECK_DH_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_CERT_ALREADY_IN_HASH_TABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_ERR_ASN1_LIB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_INVALID_DIRECTORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>113</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_INVALID_FIELD_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>119</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_INVALID_TRUST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_KEY_TYPE_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>115</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_KEY_VALUES_MISMATCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>116</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_LOADING_CERT_DIR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_LOADING_DEFAULTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>104</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_METHOD_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_NO_CERT_SET_FOR_US_TO_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_PUBLIC_KEY_DECODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_PUBLIC_KEY_ENCODE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>126</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_SHOULD_RETRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>106</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN<sp/><sp/><sp/><sp/>107</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>108</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNKNOWN_KEY_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>117</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNKNOWN_NID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>109</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNKNOWN_PURPOSE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>121</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNKNOWN_TRUST_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_UNSUPPORTED_ALGORITHM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_WRONG_LOOKUP_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X509_R_WRONG_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>122</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/x509.h"/>
  </compounddef>
</doxygen>
