<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ftsmooth_8c" kind="file" language="C++">
    <compoundname>ftsmooth.c</compoundname>
    <includes local="no">ft2build.h</includes>
    <includes refid="ftsmooth_8h" local="yes">ftsmooth.h</includes>
    <includes refid="ftgrays_8h" local="yes">ftgrays.h</includes>
    <includes refid="ftspic_8h" local="yes">ftspic.h</includes>
    <includes refid="ftsmerrs_8h" local="yes">ftsmerrs.h</includes>
    <includedby refid="smooth_8c" local="yes">thirdparty/freetype/src/smooth/smooth.c</includedby>
    <incdepgraph>
      <node id="80997">
        <label>ftsmerrs.h</label>
        <link refid="ftsmerrs_8h_source"/>
      </node>
      <node id="80995">
        <label>ftgrays.h</label>
        <link refid="ftgrays_8h_source"/>
        <childnode refid="80993" relation="include">
        </childnode>
      </node>
      <node id="80992">
        <label>thirdparty/freetype/src/smooth/ftsmooth.c</label>
        <link refid="ftsmooth_8c"/>
        <childnode refid="80993" relation="include">
        </childnode>
        <childnode refid="80994" relation="include">
        </childnode>
        <childnode refid="80995" relation="include">
        </childnode>
        <childnode refid="80996" relation="include">
        </childnode>
        <childnode refid="80997" relation="include">
        </childnode>
      </node>
      <node id="80994">
        <label>ftsmooth.h</label>
        <link refid="ftsmooth_8h_source"/>
        <childnode refid="80993" relation="include">
        </childnode>
      </node>
      <node id="80993">
        <label>ft2build.h</label>
      </node>
      <node id="80996">
        <label>ftspic.h</label>
        <link refid="ftspic_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="80998">
        <label>thirdparty/freetype/src/smooth/ftsmooth.c</label>
        <link refid="ftsmooth_8c"/>
        <childnode refid="80999" relation="include">
        </childnode>
      </node>
      <node id="80999">
        <label>thirdparty/freetype/src/smooth/smooth.c</label>
        <link refid="smooth_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ftsmooth_8c_1a11ece5a59dac64b880b1efc67b50e845" prot="public" static="no" mutable="no">
        <type></type>
        <definition>FT_MODULE_RENDERER</definition>
        <argsstring></argsstring>
        <name>FT_MODULE_RENDERER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="460" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1a110c151b35763fa712302c69659773d5" prot="public" static="no" mutable="no">
        <type>smooth</type>
        <definition>smooth lcd</definition>
        <argsstring></argsstring>
        <name>lcd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="463" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1a9b59b37b46c362088d4c3beb61592aaa" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor</type>
        <definition>smooth FT_Module_Constructor ft_smooth_init</definition>
        <argsstring></argsstring>
        <name>ft_smooth_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="469" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1a5f9ebf5a9b7d196ea2fabfe7e32b11cb" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor</type>
        <definition>smooth FT_Module_Constructor FT_Module_Destructor</definition>
        <argsstring></argsstring>
        <name>FT_Module_Destructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="470" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1acd5fa75e9d199e72dc49ca8eb45d77d8" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor</type>
        <definition>smooth FT_Module_Constructor FT_Module_Requester</definition>
        <argsstring></argsstring>
        <name>FT_Module_Requester</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="471" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1aa94141759107d69ced05c865050751ee" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor</type>
        <definition>smooth FT_Module_Constructor FT_GLYPH_FORMAT_OUTLINE</definition>
        <argsstring></argsstring>
        <name>FT_GLYPH_FORMAT_OUTLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="474" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1a6a0d6c7fd30d6951da98471943ef69b4" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor FT_Renderer_RenderFunc</type>
        <definition>smooth FT_Module_Constructor FT_Renderer_RenderFunc ft_smooth_render_lcd</definition>
        <argsstring></argsstring>
        <name>ft_smooth_render_lcd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="476" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1adee6e2326fb6075198228e239b5857a3" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc</type>
        <definition>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc ft_smooth_transform</definition>
        <argsstring></argsstring>
        <name>ft_smooth_transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="477" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1a8d89a20351dfafb1bf784d5de8b9b6c0" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc FT_Renderer_GetCBoxFunc</type>
        <definition>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc FT_Renderer_GetCBoxFunc ft_smooth_get_cbox</definition>
        <argsstring></argsstring>
        <name>ft_smooth_get_cbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="478" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ftsmooth_8c_1aae564bb2789f03c759e0309109b55882" prot="public" static="no" mutable="no">
        <type>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc FT_Renderer_GetCBoxFunc FT_Renderer_SetModeFunc</type>
        <definition>smooth FT_Module_Constructor FT_Renderer_RenderFunc FT_Renderer_TransformFunc FT_Renderer_GetCBoxFunc FT_Renderer_SetModeFunc ft_smooth_set_mode</definition>
        <argsstring></argsstring>
        <name>ft_smooth_set_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="479" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ftsmooth_8c_1a62fd62a581db0354a8d7649ac880fcff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_init</definition>
        <argsstring>(FT_Renderer render)</argsstring>
        <name>ft_smooth_init</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="32" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1a6bd5b74cb82c94ec9e30e798a4576a7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_set_mode</definition>
        <argsstring>(FT_Renderer render, FT_ULong mode_tag, FT_Pointer data)</argsstring>
        <name>ft_smooth_set_mode</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type>FT_ULong</type>
          <declname>mode_tag</declname>
        </param>
        <param>
          <type>FT_Pointer</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="47" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="47" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1ab325decb977651e44f1c0df349438f43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_transform</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, const FT_Matrix *matrix, const FT_Vector *delta)</argsstring>
        <name>ft_smooth_transform</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___matrix__" kindref="compound">FT_Matrix</ref> *</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="59" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="59" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1aaf77630abd0ee64b527821f4a4e56d75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ft_smooth_get_cbox</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, FT_BBox *cbox)</argsstring>
        <name>ft_smooth_get_cbox</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___b_box__" kindref="compound">FT_BBox</ref> *</type>
          <declname>cbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="86" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1ad266106276e29d0bf10cd7e826314a0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_render_generic</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, FT_Render_Mode mode, const FT_Vector *origin, FT_Render_Mode required_mode)</argsstring>
        <name>ft_smooth_render_generic</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>FT_Render_Mode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>FT_Render_Mode</type>
          <declname>required_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="99" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="99" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1ac2640e02b63c52e91d5e604c653c4e01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_render</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, FT_Render_Mode mode, const FT_Vector *origin)</argsstring>
        <name>ft_smooth_render</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>FT_Render_Mode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="382" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="382" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1ab1049baf273f76b13488db13b270d833" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_render_lcd</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, FT_Render_Mode mode, const FT_Vector *origin)</argsstring>
        <name>ft_smooth_render_lcd</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>FT_Render_Mode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="397" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="397" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1a852ea75651317542528628e7e070b59d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT_Error</type>
        <definition>static FT_Error ft_smooth_render_lcd_v</definition>
        <argsstring>(FT_Renderer render, FT_GlyphSlot slot, FT_Render_Mode mode, const FT_Vector *origin)</argsstring>
        <name>ft_smooth_render_lcd_v</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref></type>
          <declname>render</declname>
        </param>
        <param>
          <type><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>FT_Render_Mode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref> *</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="415" column="1" bodyfile="thirdparty/freetype/src/smooth/ftsmooth.c" bodystart="415" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1afdc9fe89c59004eec3bcb13e989dd8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FT_DEFINE_RENDERER</definition>
        <argsstring>(ft_smooth_renderer_class, FT_MODULE_RENDERER, sizeof(FT_RendererRec), &quot;smooth&quot;, 0x10000L, 0x20000L, 0,(FT_Module_Constructor) ft_smooth_init,(FT_Module_Destructor) 0,(FT_Module_Requester) 0, FT_GLYPH_FORMAT_OUTLINE,(FT_Renderer_RenderFunc) ft_smooth_render,(FT_Renderer_TransformFunc) ft_smooth_transform,(FT_Renderer_GetCBoxFunc) ft_smooth_get_cbox,(FT_Renderer_SetModeFunc) ft_smooth_set_mode,(FT_Raster_Funcs *) &amp;FT_GRAYS_RASTER_GET) FT_DEFINE_RENDERER(ft_smooth_lcd_renderer_class</argsstring>
        <name>FT_DEFINE_RENDERER</name>
        <param>
          <type>ft_smooth_renderer_class</type>
        </param>
        <param>
          <type>FT_MODULE_RENDERER</type>
        </param>
        <param>
          <type>sizeof(<ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_RendererRec</ref>)</type>
        </param>
        <param>
          <type>&quot;smooth&quot;</type>
        </param>
        <param>
          <type>0x10000L</type>
        </param>
        <param>
          <type>0x20000L</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>(FT_Module_Constructor)</type>
          <declname>ft_smooth_init</declname>
        </param>
        <param>
          <type>(FT_Module_Destructor)</type>
          <declname>0</declname>
        </param>
        <param>
          <type>(FT_Module_Requester)</type>
          <declname>0</declname>
        </param>
        <param>
          <type>FT_GLYPH_FORMAT_OUTLINE</type>
        </param>
        <param>
          <type>(FT_Renderer_RenderFunc)</type>
          <declname>ft_smooth_render</declname>
        </param>
        <param>
          <type>(FT_Renderer_TransformFunc)</type>
          <declname>ft_smooth_transform</declname>
        </param>
        <param>
          <type>(FT_Renderer_GetCBoxFunc)</type>
          <declname>ft_smooth_get_cbox</declname>
        </param>
        <param>
          <type>(FT_Renderer_SetModeFunc)</type>
          <declname>ft_smooth_set_mode</declname>
        </param>
        <param>
          <type>(<ref refid="struct_f_t___raster___funcs__" kindref="compound">FT_Raster_Funcs</ref> *) &amp;</type>
          <declname>FT_GRAYS_RASTER_GET</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ftsmooth_8c_1ae68dd7ad310a9691988f99872c800e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sizeof</definition>
        <argsstring>(FT_RendererRec)</argsstring>
        <name>sizeof</name>
        <param>
          <type><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_RendererRec</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/smooth/ftsmooth.c" line="461" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>ftsmooth.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Anti-aliasing<sp/>renderer<sp/>interface<sp/>(body).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2000-2015<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>David<sp/>Turner,<sp/>Robert<sp/>Wilhelm,<sp/>and<sp/>Werner<sp/>Lemberg.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeType<sp/>project,<sp/>and<sp/>may<sp/>only<sp/>be<sp/>used,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>FreeType<sp/>project<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license,<sp/>LICENSE.TXT.<sp/><sp/>By<sp/>continuing<sp/>to<sp/>use,<sp/>modify,<sp/>or<sp/>distribute<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>this<sp/>file<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/>have<sp/>read<sp/>the<sp/>license<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>understand<sp/>and<sp/>accept<sp/>it<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ft2build.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_OBJECTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_OUTLINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftsmooth.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftgrays.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftspic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftsmerrs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>renderer<sp/>--<sp/>init<sp/>its<sp/>raster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>ft_smooth_init(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/>render<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___library_rec__" kindref="compound">FT_Library</ref><sp/><sp/>library<sp/>=<sp/>FT_MODULE_LIBRARY(<sp/>render<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>render-&gt;clazz-&gt;raster_class-&gt;raster_reset(<sp/>render-&gt;raster,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library-&gt;raster_pool,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library-&gt;raster_pool_size<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sets<sp/>render-specific<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ft_smooth_set_mode(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/>render,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_ULong<sp/><sp/><sp/><sp/><sp/>mode_tag,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Pointer<sp/><sp/><sp/>data<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>simply<sp/>pass<sp/>it<sp/>to<sp/>the<sp/>raster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>render-&gt;clazz-&gt;raster_class-&gt;raster_set_mode(<sp/>render-&gt;raster,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode_tag,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>transform<sp/>a<sp/>given<sp/>glyph<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ft_smooth_transform(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___matrix__" kindref="compound">FT_Matrix</ref>*<sp/><sp/>matrix,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>delta<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error<sp/>=<sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;format<sp/>!=<sp/>render-&gt;glyph_format<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Invalid_Argument<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matrix<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Transform(<sp/>&amp;slot-&gt;outline,<sp/>matrix<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Translate(<sp/>&amp;slot-&gt;outline,<sp/>delta-&gt;x,<sp/>delta-&gt;y<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>Exit:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>glyph&apos;s<sp/>control<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ft_smooth_get_cbox(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___b_box__" kindref="compound">FT_BBox</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>cbox<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_MEM_ZERO(<sp/>cbox,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/>*cbox<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;format<sp/>==<sp/>render-&gt;glyph_format<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Get_CBox(<sp/>&amp;slot-&gt;outline,<sp/>cbox<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>a<sp/>slot&apos;s<sp/>glyph<sp/>image<sp/>into<sp/>a<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>ft_smooth_render_generic(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>origin,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/><sp/><sp/>required_mode<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___outline__" kindref="compound">FT_Outline</ref>*<sp/><sp/>outline<sp/>=<sp/>&amp;slot-&gt;outline;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___bitmap__" kindref="compound">FT_Bitmap</ref>*<sp/><sp/><sp/>bitmap<sp/><sp/>=<sp/>&amp;slot-&gt;bitmap;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/><sp/><sp/>memory<sp/><sp/>=<sp/>render-&gt;root.memory;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___b_box__" kindref="compound">FT_BBox</ref><sp/><sp/><sp/><sp/><sp/><sp/>cbox;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_left,<sp/>y_top;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,<sp/>pitch;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FT_CONFIG_OPTION_SUBPIXEL_RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_org,<sp/>width_org;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmul<sp/><sp/><sp/><sp/>=<sp/>mode<sp/>==<sp/>FT_RENDER_MODE_LCD;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmul<sp/><sp/><sp/><sp/>=<sp/>mode<sp/>==<sp/>FT_RENDER_MODE_LCD_V;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_t___raster___params__" kindref="compound">FT_Raster_Params</ref><sp/><sp/>params;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>have_outline_shifted<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Bool<sp/><sp/>have_buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>glyph<sp/>image<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;format<sp/>!=<sp/>render-&gt;glyph_format<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Invalid_Argument<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>!=<sp/>required_mode<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Cannot_Render_Glyph<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>origin<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>origin-&gt;x;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>origin-&gt;y;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>control<sp/>box,<sp/>and<sp/>grid<sp/>fit<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>origin<sp/>shift<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Outline_Get_CBox(<sp/>outline,<sp/>&amp;cbox<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>cbox.xMin<sp/>=<sp/>FT_PIX_FLOOR(<sp/>cbox.xMin<sp/>+<sp/>x_shift<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>cbox.yMin<sp/>=<sp/>FT_PIX_FLOOR(<sp/>cbox.yMin<sp/>+<sp/>y_shift<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>cbox.xMax<sp/>=<sp/>FT_PIX_CEIL(<sp/>cbox.xMax<sp/>+<sp/>x_shift<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>cbox.yMax<sp/>=<sp/>FT_PIX_CEIL(<sp/>cbox.yMax<sp/>+<sp/>y_shift<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>-=<sp/>cbox.xMin;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>-=<sp/>cbox.yMin;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>x_left<sp/><sp/>=<sp/>cbox.xMin<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>y_top<sp/><sp/><sp/>=<sp/>cbox.yMax<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/><sp/>=<sp/>(FT_ULong)(<sp/>cbox.xMax<sp/>-<sp/>cbox.xMin<sp/>)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(FT_ULong)(<sp/>cbox.yMax<sp/>-<sp/>cbox.yMin<sp/>)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FT_CONFIG_OPTION_SUBPIXEL_RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>width_org<sp/><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>height_org<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hmul<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/><sp/>=<sp/>FT_PAD_CEIL(<sp/>width,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vmul<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_CONFIG_OPTION_SUBPIXEL_RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;library-&gt;lcd_filter_func<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Int<sp/><sp/>extra<sp/>=<sp/>slot-&gt;library-&gt;lcd_extra;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hmul<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_shift<sp/>+=<sp/>64<sp/>*<sp/>(<sp/>extra<sp/>&gt;&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_left<sp/><sp/>-=<sp/>extra<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/><sp/><sp/>+=<sp/>3<sp/>*<sp/>extra;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/><sp/><sp/><sp/>=<sp/>FT_PAD_CEIL(<sp/>width,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vmul<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_shift<sp/>+=<sp/>64<sp/>*<sp/>(<sp/>extra<sp/>&gt;&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_top<sp/><sp/><sp/>+=<sp/>extra<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/><sp/>+=<sp/>3<sp/>*<sp/>extra;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>XXX:<sp/>on<sp/>16bit<sp/>system,<sp/>we<sp/>return<sp/>an<sp/>error<sp/>for<sp/>huge<sp/>bitmap</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>prevent<sp/>an<sp/>overflow.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x_left<sp/>&gt;<sp/>FT_INT_MAX<sp/>||<sp/>y_top<sp/>&gt;<sp/>FT_INT_MAX<sp/>||</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_left<sp/>&lt;<sp/>FT_INT_MIN<sp/>||<sp/>y_top<sp/>&lt;<sp/>FT_INT_MIN<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Invalid_Pixel_Size<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Required<sp/>check<sp/>is<sp/>(pitch<sp/>*<sp/>height<sp/>&lt;<sp/>FT_ULONG_MAX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>but<sp/>we<sp/>care<sp/>realistic<sp/>cases<sp/>only.<sp/><sp/>Always<sp/>pitch<sp/>&lt;=<sp/>width.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>width<sp/>&gt;<sp/>0x7FFF<sp/>||<sp/>height<sp/>&gt;<sp/>0x7FFF<sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_ERROR((<sp/></highlight><highlight class="stringliteral">&quot;ft_smooth_render_generic:<sp/>glyph<sp/>too<sp/>large:<sp/>%u<sp/>x<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height<sp/>));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_THROW(<sp/>Raster_Overflow<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>release<sp/>old<sp/>bitmap<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;internal-&gt;flags<sp/>&amp;<sp/>FT_GLYPH_OWN_BITMAP<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_FREE(<sp/>bitmap-&gt;buffer<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot-&gt;internal-&gt;flags<sp/>&amp;=<sp/>~FT_GLYPH_OWN_BITMAP;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>new<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>FT_ALLOC(<sp/>bitmap-&gt;buffer,<sp/>(FT_ULong)(<sp/>pitch<sp/>*<sp/>height<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>have_buffer<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>slot-&gt;internal-&gt;flags<sp/>|=<sp/>FT_GLYPH_OWN_BITMAP;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>slot-&gt;format<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FT_GLYPH_FORMAT_BITMAP;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>slot-&gt;bitmap_left<sp/>=<sp/>(FT_Int)x_left;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>slot-&gt;bitmap_top<sp/><sp/>=<sp/>(FT_Int)y_top;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;pixel_mode<sp/>=<sp/>FT_PIXEL_MODE_GRAY;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;num_grays<sp/><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;width<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)width;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;rows<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)height;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmap-&gt;pitch<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pitch;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>outline<sp/>to<sp/>render<sp/>it<sp/>into<sp/>the<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x_shift<sp/>||<sp/>y_shift<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Translate(<sp/>outline,<sp/>x_shift,<sp/>y_shift<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>have_outline_shifted<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>params.target<sp/>=<sp/>bitmap;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>params.source<sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>params.flags<sp/><sp/>=<sp/>FT_RASTER_FLAG_AA;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_CONFIG_OPTION_SUBPIXEL_RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>implode<sp/>outline<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>points<sp/><sp/><sp/><sp/><sp/>=<sp/>outline-&gt;points;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>points_end<sp/>=<sp/>points<sp/>+<sp/>outline-&gt;n_points;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>vec;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hmul<sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>vec<sp/>=<sp/>points;<sp/>vec<sp/>&lt;<sp/>points_end;<sp/>vec++<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;x<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>vmul<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>vec<sp/>=<sp/>points;<sp/>vec<sp/>&lt;<sp/>points_end;<sp/>vec++<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;y<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>render<sp/>outline<sp/>into<sp/>the<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>render-&gt;raster_render(<sp/>render-&gt;raster,<sp/>&amp;params<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>deflate<sp/>outline<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>points<sp/><sp/><sp/><sp/><sp/>=<sp/>outline-&gt;points;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>points_end<sp/>=<sp/>points<sp/>+<sp/>outline-&gt;n_points;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>vec;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hmul<sp/>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>vec<sp/>=<sp/>points;<sp/>vec<sp/>&lt;<sp/>points_end;<sp/>vec++<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;x<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>vmul<sp/>)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>vec<sp/>=<sp/>points;<sp/>vec<sp/>&lt;<sp/>points_end;<sp/>vec++<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;y<sp/>/=<sp/>3;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slot-&gt;library-&gt;lcd_filter_func<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot-&gt;library-&gt;lcd_filter_func(<sp/>bitmap,<sp/>mode,<sp/>slot-&gt;library<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!FT_CONFIG_OPTION_SUBPIXEL_RENDERING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>render<sp/>outline<sp/>into<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>render-&gt;raster_render(<sp/>render-&gt;raster,<sp/>&amp;params<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Exit;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expand<sp/>it<sp/>horizontally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hmul<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/>line<sp/>=<sp/>bitmap-&gt;buffer;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>hh;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>hh<sp/>=<sp/>height_org;<sp/>hh<sp/>&gt;<sp/>0;<sp/>hh--,<sp/>line<sp/>+=<sp/>pitch<sp/>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>xx;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/>end<sp/>=<sp/>line<sp/>+<sp/>width;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>xx<sp/>=<sp/>width_org;<sp/>xx<sp/>&gt;<sp/>0;<sp/>xx--<sp/>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/>pixel<sp/>=<sp/>line[xx-1];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end[-3]<sp/>=<sp/>(FT_Byte)pixel;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end[-2]<sp/>=<sp/>(FT_Byte)pixel;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end[-1]<sp/>=<sp/>(FT_Byte)pixel;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/><sp/><sp/><sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expand<sp/>it<sp/>vertically<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vmul<sp/>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/>read<sp/><sp/>=<sp/>bitmap-&gt;buffer<sp/>+<sp/>(<sp/>height<sp/>-<sp/>height_org<sp/>)<sp/>*<sp/>pitch;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Byte*<sp/><sp/>write<sp/>=<sp/>bitmap-&gt;buffer;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_UInt<sp/><sp/><sp/>hh;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>hh<sp/>=<sp/>height_org;<sp/>hh<sp/>&gt;<sp/>0;<sp/>hh--<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ft_memcpy(<sp/>write,<sp/>read,<sp/>pitch<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write<sp/>+=<sp/>pitch;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ft_memcpy(<sp/>write,<sp/>read,<sp/>pitch<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write<sp/>+=<sp/>pitch;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ft_memcpy(<sp/>write,<sp/>read,<sp/>pitch<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write<sp/>+=<sp/>pitch;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read<sp/><sp/>+=<sp/>pitch;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!FT_CONFIG_OPTION_SUBPIXEL_RENDERING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>everything<sp/>is<sp/>fine;<sp/>don&apos;t<sp/>deallocate<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>have_buffer<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>FT_Err_Ok;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>Exit:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>have_outline_shifted<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Outline_Translate(<sp/>outline,<sp/>-x_shift,<sp/>-y_shift<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>have_buffer<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_FREE(<sp/>bitmap-&gt;buffer<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot-&gt;internal-&gt;flags<sp/>&amp;=<sp/>~FT_GLYPH_OWN_BITMAP;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>a<sp/>slot&apos;s<sp/>glyph<sp/>image<sp/>into<sp/>a<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>ft_smooth_render(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>origin<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>==<sp/>FT_RENDER_MODE_LIGHT<sp/>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>FT_RENDER_MODE_NORMAL;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ft_smooth_render_generic(<sp/>render,<sp/>slot,<sp/>mode,<sp/>origin,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_RENDER_MODE_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>a<sp/>slot&apos;s<sp/>glyph<sp/>image<sp/>into<sp/>a<sp/>horizontal<sp/>LCD<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>ft_smooth_render_lcd(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>origin<sp/>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>ft_smooth_render_generic(<sp/>render,<sp/>slot,<sp/>mode,<sp/>origin,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_RENDER_MODE_LCD<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!error<sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot-&gt;bitmap.pixel_mode<sp/>=<sp/>FT_PIXEL_MODE_LCD;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>a<sp/>slot&apos;s<sp/>glyph<sp/>image<sp/>into<sp/>a<sp/>vertical<sp/>LCD<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FT_Error</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>ft_smooth_render_lcd_v(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_Renderer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_t___glyph_slot_rec__" kindref="compound">FT_GlyphSlot</ref><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Render_Mode<sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_t___vector__" kindref="compound">FT_Vector</ref>*<sp/><sp/>origin<sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>ft_smooth_render_generic(<sp/>render,<sp/>slot,<sp/>mode,<sp/>origin,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_RENDER_MODE_LCD_V<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!error<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slot-&gt;bitmap.pixel_mode<sp/>=<sp/>FT_PIXEL_MODE_LCD_V;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>FT_DEFINE_RENDERER(<sp/>ft_smooth_renderer_class,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_MODULE_RENDERER,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_RendererRec</ref><sp/>),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;smooth&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x10000L,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x20000L,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>module<sp/>specific<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Constructor)ft_smooth_init,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Destructor)<sp/>0,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Requester)<sp/><sp/>0</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_GLYPH_FORMAT_OUTLINE,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_RenderFunc)<sp/><sp/><sp/>ft_smooth_render,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_TransformFunc)ft_smooth_transform,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_GetCBoxFunc)<sp/><sp/>ft_smooth_get_cbox,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_SetModeFunc)<sp/><sp/>ft_smooth_set_mode,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="struct_f_t___raster___funcs__" kindref="compound">FT_Raster_Funcs</ref>*)<sp/><sp/><sp/><sp/>&amp;FT_GRAYS_RASTER_GET</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>FT_DEFINE_RENDERER(<sp/>ft_smooth_lcd_renderer_class,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_MODULE_RENDERER,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_RendererRec</ref><sp/>),</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;smooth-lcd&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x10000L,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x20000L,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>module<sp/>specific<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Constructor)ft_smooth_init,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Destructor)<sp/>0,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Requester)<sp/><sp/>0</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_GLYPH_FORMAT_OUTLINE,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_RenderFunc)<sp/><sp/><sp/>ft_smooth_render_lcd,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_TransformFunc)ft_smooth_transform,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_GetCBoxFunc)<sp/><sp/>ft_smooth_get_cbox,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_SetModeFunc)<sp/><sp/>ft_smooth_set_mode,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="struct_f_t___raster___funcs__" kindref="compound">FT_Raster_Funcs</ref>*)<sp/><sp/><sp/><sp/>&amp;FT_GRAYS_RASTER_GET</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>FT_DEFINE_RENDERER(<sp/>ft_smooth_lcdv_renderer_class,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_MODULE_RENDERER,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<sp/><ref refid="struct_f_t___renderer_rec__" kindref="compound">FT_RendererRec</ref><sp/>),</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;smooth-lcdv&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x10000L,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x20000L,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>module<sp/>specific<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Constructor)ft_smooth_init,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Destructor)<sp/>0,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(FT_Module_Requester)<sp/><sp/>0</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_GLYPH_FORMAT_OUTLINE,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_RenderFunc)<sp/><sp/><sp/>ft_smooth_render_lcd_v,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_TransformFunc)ft_smooth_transform,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_GetCBoxFunc)<sp/><sp/>ft_smooth_get_cbox,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>(FT_Renderer_SetModeFunc)<sp/><sp/>ft_smooth_set_mode,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="struct_f_t___raster___funcs__" kindref="compound">FT_Raster_Funcs</ref>*)<sp/><sp/><sp/><sp/>&amp;FT_GRAYS_RASTER_GET</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/smooth/ftsmooth.c"/>
  </compounddef>
</doxygen>
