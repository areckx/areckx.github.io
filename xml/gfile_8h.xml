<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gfile_8h" kind="file" language="C++">
    <compoundname>gfile.h</compoundname>
    <includes refid="poppler-config_8h" local="yes">poppler-config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="gtypes_8h" local="yes">gtypes.h</includes>
    <includedby refid="gfile_8cc" local="yes">thirdparty/poppler/goo/gfile.cc</includedby>
    <includedby refid="_cairo_font_engine_8cc" local="yes">thirdparty/poppler/poppler/CairoFontEngine.cc</includedby>
    <includedby refid="_cairo_output_dev_8cc" local="yes">thirdparty/poppler/poppler/CairoOutputDev.cc</includedby>
    <includedby refid="_char_code_to_unicode_8cc" local="yes">thirdparty/poppler/poppler/CharCodeToUnicode.cc</includedby>
    <includedby refid="_c_map_8cc" local="yes">thirdparty/poppler/poppler/CMap.cc</includedby>
    <includedby refid="_d_c_t_stream_8h" local="yes">thirdparty/poppler/poppler/DCTStream.h</includedby>
    <includedby refid="_flate_encoder_8h" local="yes">thirdparty/poppler/poppler/FlateEncoder.h</includedby>
    <includedby refid="_flate_stream_8h" local="yes">thirdparty/poppler/poppler/FlateStream.h</includedby>
    <includedby refid="_global_params_8cc" local="yes">thirdparty/poppler/poppler/GlobalParams.cc</includedby>
    <includedby refid="_global_params_win_8cc" local="yes">thirdparty/poppler/poppler/GlobalParamsWin.cc</includedby>
    <includedby refid="_p_d_f_doc_8cc" local="yes">thirdparty/poppler/poppler/PDFDoc.cc</includedby>
    <includedby refid="_splash_output_dev_8cc" local="yes">thirdparty/poppler/poppler/SplashOutputDev.cc</includedby>
    <includedby refid="_stream_8cc" local="yes">thirdparty/poppler/poppler/Stream.cc</includedby>
    <includedby refid="_unicode_map_8cc" local="yes">thirdparty/poppler/poppler/UnicodeMap.cc</includedby>
    <includedby refid="_x_ref_8cc" local="yes">thirdparty/poppler/poppler/XRef.cc</includedby>
    <includedby refid="_arthur_output_dev_8cc" local="yes">thirdparty/poppler/qt5/ArthurOutputDev.cc</includedby>
    <incdepgraph>
      <node id="84101">
        <label>thirdparty/poppler/goo/gfile.h</label>
        <link refid="gfile_8h"/>
        <childnode refid="84102" relation="include">
        </childnode>
        <childnode refid="84103" relation="include">
        </childnode>
        <childnode refid="84104" relation="include">
        </childnode>
        <childnode refid="84105" relation="include">
        </childnode>
        <childnode refid="84106" relation="include">
        </childnode>
        <childnode refid="84107" relation="include">
        </childnode>
        <childnode refid="84108" relation="include">
        </childnode>
      </node>
      <node id="84104">
        <label>stdlib.h</label>
      </node>
      <node id="84105">
        <label>stddef.h</label>
      </node>
      <node id="84102">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="84103" relation="include">
        </childnode>
      </node>
      <node id="84107">
        <label>sys/types.h</label>
      </node>
      <node id="84106">
        <label>unistd.h</label>
      </node>
      <node id="84108">
        <label>gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="84102" relation="include">
        </childnode>
      </node>
      <node id="84103">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="84122">
        <label>thirdparty/poppler/poppler/PDFDoc.cc</label>
        <link refid="_p_d_f_doc_8cc_source"/>
      </node>
      <node id="84111">
        <label>thirdparty/poppler/poppler/CairoFontEngine.cc</label>
        <link refid="_cairo_font_engine_8cc_source"/>
      </node>
      <node id="84117">
        <label>thirdparty/poppler/poppler/FlateEncoder.h</label>
        <link refid="_flate_encoder_8h_source"/>
        <childnode refid="84118" relation="include">
        </childnode>
      </node>
      <node id="84118">
        <label>thirdparty/poppler/poppler/FlateEncoder.cc</label>
        <link refid="_flate_encoder_8cc_source"/>
      </node>
      <node id="84109">
        <label>thirdparty/poppler/goo/gfile.h</label>
        <link refid="gfile_8h"/>
        <childnode refid="84110" relation="include">
        </childnode>
        <childnode refid="84111" relation="include">
        </childnode>
        <childnode refid="84112" relation="include">
        </childnode>
        <childnode refid="84113" relation="include">
        </childnode>
        <childnode refid="84114" relation="include">
        </childnode>
        <childnode refid="84115" relation="include">
        </childnode>
        <childnode refid="84117" relation="include">
        </childnode>
        <childnode refid="84119" relation="include">
        </childnode>
        <childnode refid="84120" relation="include">
        </childnode>
        <childnode refid="84121" relation="include">
        </childnode>
        <childnode refid="84122" relation="include">
        </childnode>
        <childnode refid="84123" relation="include">
        </childnode>
        <childnode refid="84124" relation="include">
        </childnode>
        <childnode refid="84125" relation="include">
        </childnode>
        <childnode refid="84126" relation="include">
        </childnode>
        <childnode refid="84127" relation="include">
        </childnode>
      </node>
      <node id="84121">
        <label>thirdparty/poppler/poppler/GlobalParamsWin.cc</label>
        <link refid="_global_params_win_8cc_source"/>
      </node>
      <node id="84112">
        <label>thirdparty/poppler/poppler/CairoOutputDev.cc</label>
        <link refid="_cairo_output_dev_8cc_source"/>
      </node>
      <node id="84125">
        <label>thirdparty/poppler/poppler/UnicodeMap.cc</label>
        <link refid="_unicode_map_8cc_source"/>
      </node>
      <node id="84126">
        <label>thirdparty/poppler/poppler/XRef.cc</label>
        <link refid="_x_ref_8cc_source"/>
      </node>
      <node id="84124">
        <label>thirdparty/poppler/poppler/Stream.cc</label>
        <link refid="_stream_8cc_source"/>
      </node>
      <node id="84115">
        <label>thirdparty/poppler/poppler/DCTStream.h</label>
        <link refid="_d_c_t_stream_8h_source"/>
        <childnode refid="84116" relation="include">
        </childnode>
      </node>
      <node id="84123">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="84119">
        <label>thirdparty/poppler/poppler/FlateStream.h</label>
        <link refid="_flate_stream_8h_source"/>
      </node>
      <node id="84114">
        <label>thirdparty/poppler/poppler/CMap.cc</label>
        <link refid="_c_map_8cc_source"/>
      </node>
      <node id="84113">
        <label>thirdparty/poppler/poppler/CharCodeToUnicode.cc</label>
        <link refid="_char_code_to_unicode_8cc_source"/>
      </node>
      <node id="84110">
        <label>thirdparty/poppler/goo/gfile.cc</label>
        <link refid="gfile_8cc_source"/>
      </node>
      <node id="84120">
        <label>thirdparty/poppler/poppler/GlobalParams.cc</label>
        <link refid="_global_params_8cc_source"/>
      </node>
      <node id="84127">
        <label>thirdparty/poppler/qt5/ArthurOutputDev.cc</label>
        <link refid="_arthur_output_dev_8cc_source"/>
      </node>
      <node id="84116">
        <label>thirdparty/poppler/poppler/DCTStream.cc</label>
        <link refid="_d_c_t_stream_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_goo_file" prot="public">GooFile</innerclass>
    <innerclass refid="class_g_dir_entry" prot="public">GDirEntry</innerclass>
    <innerclass refid="class_g_dir" prot="public">GDir</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="gfile_8h_1a89957e9be80ef12a50eb4eca72ecd888" prot="public" static="no">
        <name>dirent</name>
        <initializer>direct</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="61" column="23" bodyfile="thirdparty/poppler/goo/gfile.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gfile_8h_1a275138574f83ff6bcc6dd23520ec8963" prot="public" static="no">
        <name>NAMLEN</name>
        <param><defname>d</defname></param>
        <initializer>(d)-&gt;d_namlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="62" column="13" bodyfile="thirdparty/poppler/goo/gfile.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfile_8h_1a9b5b0fc609d97b54cc74d53611db8fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* getCurrentDir</definition>
        <argsstring>()</argsstring>
        <name>getCurrentDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="82" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="69" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1adbb4880015d59607365e5f8ea7dbf4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* appendToPath</definition>
        <argsstring>(GooString *path, const char *fileName)</argsstring>
        <name>appendToPath</name>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="86" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="87" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a6680f1dc3a0cc3132377afffb1d1224a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_goo_string" kindref="compound">GooString</ref> *</type>
        <definition>GooString* grabPath</definition>
        <argsstring>(char *fileName)</argsstring>
        <name>grabPath</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="90" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="253" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a8e62c6ece94f18ad23621f848c5fb2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool isAbsolutePath</definition>
        <argsstring>(char *path)</argsstring>
        <name>isAbsolutePath</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="93" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="302" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a41e916949508890858b41270beadaba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t getModTime</definition>
        <argsstring>(char *fileName)</argsstring>
        <name>getModTime</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="97" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="326" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1afcbb510fdc1bcacf6078ec3c6ef97fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GBool</type>
        <definition>GBool openTempFile</definition>
        <argsstring>(GooString **name, FILE **f, const char *mode)</argsstring>
        <name>openTempFile</name>
        <param>
          <type><ref refid="class_goo_string" kindref="compound">GooString</ref> **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>FILE **</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="105" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="340" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a60b2db98c3a583edb8b7edeb1e1aba41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* openFile</definition>
        <argsstring>(const char *path, const char *mode)</argsstring>
        <name>openFile</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="118" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="463" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a05fc4bae69a81e8f5960f502ae9ad6f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* getLine</definition>
        <argsstring>(char *buf, int size, FILE *f)</argsstring>
        <name>getLine</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="122" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="526" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a10d5102ca066e364de9212ac97870219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gfseek</definition>
        <argsstring>(FILE *f, Goffset offset, int whence)</argsstring>
        <name>Gfseek</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Goffset</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="125" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="555" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1ab68d40f24d3f3bdcab1a0b44de0560cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Goffset</type>
        <definition>Goffset Gftell</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>Gftell</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="126" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="569" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="gfile_8h_1a772d3ce412374d63f98740c4ebb7b620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Goffset</type>
        <definition>Goffset GoffsetMax</definition>
        <argsstring>()</argsstring>
        <name>GoffsetMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/goo/gfile.h" line="129" column="1" bodyfile="thirdparty/poppler/goo/gfile.cc" bodystart="583" bodyend="593"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gfile.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Miscellaneous<sp/>file<sp/>and<sp/>directory<sp/>name<sp/>manipulation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2003<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009,<sp/>2011,<sp/>2012<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Kovid<sp/>Goyal<sp/>&lt;kovid@kovidgoyal.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adam<sp/>Reichold<sp/>&lt;adamreichold@myopera.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2014<sp/>Bogdan<sp/>Cristea<sp/>&lt;cristeab@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2014<sp/>Peter<sp/>Breitenlohner<sp/>&lt;peb@mppmu.mpg.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GFILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GFILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;poppler-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>FPTEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;win32lib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifndef<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ACORN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(MACOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;ctime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>VMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&quot;vms_dirent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>elif<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>NAMLEN(d)<sp/>strlen((d)-&gt;d_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>dirent<sp/>direct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>NAMLEN(d)<sp/>(d)-&gt;d_namlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>HAVE_SYS_NDIR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;sys/ndir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>HAVE_SYS_DIR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;sys/dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>HAVE_NDIR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;ndir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_string" kindref="compound">GooString</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getCurrentDir();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Append<sp/>a<sp/>file<sp/>name<sp/>to<sp/>a<sp/>path<sp/>string.<sp/><sp/>&lt;path&gt;<sp/>may<sp/>be<sp/>an<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string,<sp/>denoting<sp/>the<sp/>current<sp/>directory).<sp/><sp/>Returns<sp/>&lt;path&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*appendToPath(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Grab<sp/>the<sp/>path<sp/>from<sp/>the<sp/>front<sp/>of<sp/>the<sp/>file<sp/>name.<sp/><sp/>If<sp/>there<sp/>is<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directory<sp/>component<sp/>in<sp/>&lt;fileName&gt;,<sp/>returns<sp/>an<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*grabPath(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>an<sp/>absolute<sp/>path<sp/>or<sp/>file<sp/>name?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>GBool<sp/>isAbsolutePath(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>modification<sp/>time<sp/>for<sp/>&lt;fileName&gt;.<sp/><sp/>Returns<sp/>0<sp/>if<sp/>there<sp/>is<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>time_t<sp/>getModTime(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>temporary<sp/>file<sp/>and<sp/>open<sp/>it<sp/>for<sp/>writing.<sp/><sp/>If<sp/>&lt;ext&gt;<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL,<sp/>it<sp/>will<sp/>be<sp/>used<sp/>as<sp/>the<sp/>file<sp/>name<sp/>extension.<sp/><sp/>Returns<sp/>both<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>name<sp/>and<sp/>the<sp/>file<sp/>pointer.<sp/><sp/>For<sp/>security<sp/>reasons,<sp/>all<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>done<sp/>to<sp/>the<sp/>returned<sp/>file<sp/>pointer;<sp/>the<sp/>file<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reopened<sp/>later<sp/>for<sp/>reading,<sp/>but<sp/>not<sp/>for<sp/>writing.<sp/><sp/>The<sp/>&lt;mode&gt;<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>&quot;w&quot;<sp/>or<sp/>&quot;wb&quot;.<sp/><sp/>Returns<sp/>true<sp/>on<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>GBool<sp/>openTempFile(<ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>**name,<sp/>FILE<sp/>**f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>file<sp/>name<sp/>from<sp/>Latin-1<sp/>to<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fileNameToUTF8(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>file<sp/>name<sp/>from<sp/>UCS-2<sp/>to<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fileNameToUTF8(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>file.<sp/><sp/>On<sp/>Windows,<sp/>this<sp/>converts<sp/>the<sp/>path<sp/>from<sp/>UTF-8<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UCS-2<sp/>and<sp/>calls<sp/>_wfopen<sp/>(if<sp/>available).<sp/><sp/>On<sp/>other<sp/>OSes,<sp/>this<sp/>simply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calls<sp/>fopen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FILE<sp/>*openFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Just<sp/>like<sp/>fgets,<sp/>but<sp/>handles<sp/>Unix,<sp/>Mac,<sp/>and/or<sp/>DOS<sp/>end-of-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conventions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getLine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>FILE<sp/>*f);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>fseek/ftell<sp/>but<sp/>uses<sp/>platform<sp/>specific<sp/>variants<sp/>that<sp/>support<sp/>large<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gfseek(FILE<sp/>*f,<sp/>Goffset<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Goffset<sp/>Gftell(FILE<sp/>*f);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Largest<sp/>offset<sp/>supported<sp/>by<sp/>Gfseek/Gftell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Goffset<sp/>GoffsetMax();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GooFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_goo_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goo_file" kindref="compound">GooFile</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>Goffset<sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>Goffset<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref><sp/>*open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fileName);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref><sp/>*open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*fileName);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>~<ref refid="class_goo_file" kindref="compound">GooFile</ref>()<sp/>{<sp/>CloseHandle(handle);<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref>(HANDLE<sp/>handleA):<sp/>handle(handleA)<sp/>{}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>HANDLE<sp/>handle;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>~<ref refid="class_goo_file" kindref="compound">GooFile</ref>()<sp/>{<sp/>close(fd);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="class_goo_file" kindref="compound">GooFile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fdA)<sp/>:<sp/>fd(fdA)<sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GDir<sp/>and<sp/>GDirEntry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_g_dir_entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirPath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nameA,<sp/>GBool<sp/>doStat);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>~<ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getName()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*getFullPath()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fullPath;<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>GBool<sp/>isDir()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dir/file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*fullPath;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>GBool<sp/>dir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>it<sp/>a<sp/>directory?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_g_dir" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_g_dir" kindref="compound">GDir</ref><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir" kindref="compound">GDir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>GBool<sp/>doStatA<sp/>=<sp/>gTrue);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>~<ref refid="class_g_dir" kindref="compound">GDir</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir_entry" kindref="compound">GDirEntry</ref><sp/>*getNextEntry();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rewind();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir" kindref="compound">GDir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_dir" kindref="compound">GDir</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="class_g_dir" kindref="compound">GDir</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_dir" kindref="compound">GDir</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="class_goo_string" kindref="compound">GooString</ref><sp/>*path;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directory<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>GBool<sp/>doStat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>stat()<sp/>for<sp/>each<sp/>entry?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>WIN32_FIND_DATA<sp/>ffd;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hnd;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ACORN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(MACOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>DIR<sp/>*dir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>DIR<sp/>structure<sp/>from<sp/>opendir()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>GBool<sp/>needParent;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>return<sp/>an<sp/>entry<sp/>for<sp/>[-]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/goo/gfile.h"/>
  </compounddef>
</doxygen>
