<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_music_xml_instr_list" kind="class" language="C++" prot="public">
    <compoundname>Ms::MusicXmlInstrList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::map&lt; Fraction, QString &gt;</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_music_xml_instr_list_1a3a802bfb1dbf1f930315fbeeef42f4b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Ms::MusicXmlInstrList::MusicXmlInstrList</definition>
        <argsstring>()</argsstring>
        <name>MusicXmlInstrList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importxmlfirstpass.h" line="25" column="1" bodyfile="mscore/importxmlfirstpass.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_xml_instr_list_1a2bcb3a867fdc7bf9b37d6e51ea0420f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString Ms::MusicXmlInstrList::instrument</definition>
        <argsstring>(const Fraction f) const</argsstring>
        <name>instrument</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importxmlfirstpass.h" line="26" column="1" bodyfile="mscore/importxmlfirstpass.cpp" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_music_xml_instr_list_1a7e50b83b07431a61731fb71e57909d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MusicXmlInstrList::setInstrument</definition>
        <argsstring>(const QString instr, const Fraction f)</argsstring>
        <name>setInstrument</name>
        <param>
          <type>const QString</type>
          <declname>instr</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importxmlfirstpass.h" line="27" column="1" bodyfile="mscore/importxmlfirstpass.cpp" bodystart="106" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10829">
        <label>Ms::MusicXmlInstrList</label>
        <link refid="class_ms_1_1_music_xml_instr_list"/>
        <childnode refid="10830" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10830">
        <label>std::map&lt; Fraction, QString &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10831">
        <label>Ms::MusicXmlInstrList</label>
        <link refid="class_ms_1_1_music_xml_instr_list"/>
        <childnode refid="10832" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10832">
        <label>std::map&lt; Fraction, QString &gt;</label>
      </node>
    </collaborationgraph>
    <location file="mscore/importxmlfirstpass.h" line="23" column="1" bodyfile="mscore/importxmlfirstpass.h" bodystart="23" bodyend="28"/>
    <listofallmembers>
      <member refid="class_ms_1_1_music_xml_instr_list_1a2bcb3a867fdc7bf9b37d6e51ea0420f1" prot="public" virt="non-virtual"><scope>Ms::MusicXmlInstrList</scope><name>instrument</name></member>
      <member refid="class_ms_1_1_music_xml_instr_list_1a3a802bfb1dbf1f930315fbeeef42f4b4" prot="public" virt="non-virtual"><scope>Ms::MusicXmlInstrList</scope><name>MusicXmlInstrList</name></member>
      <member refid="class_ms_1_1_music_xml_instr_list_1a7e50b83b07431a61731fb71e57909d57" prot="public" virt="non-virtual"><scope>Ms::MusicXmlInstrList</scope><name>setInstrument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
