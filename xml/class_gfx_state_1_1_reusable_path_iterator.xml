<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_gfx_state_1_1_reusable_path_iterator" kind="class" language="C++" prot="public">
    <compoundname>GfxState::ReusablePathIterator</compoundname>
    <includes refid="_gfx_state_8h" local="no">GfxState.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gfx_state_1_1_reusable_path_iterator_1a28c384f0ce92365bac2f332bf36fda0d" prot="private" static="no" mutable="no">
        <type><ref refid="class_gfx_path" kindref="compound">GfxPath</ref> *</type>
        <definition>GfxPath* GfxState::ReusablePathIterator::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1389" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gfx_state_1_1_reusable_path_iterator_1a7aec8906a68011e2d27cca9fac2b9cd3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GfxState::ReusablePathIterator::subPathOff</definition>
        <argsstring></argsstring>
        <name>subPathOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1390" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gfx_state_1_1_reusable_path_iterator_1a938c8d019d4b325b86d35a1203d408aa" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GfxState::ReusablePathIterator::coordOff</definition>
        <argsstring></argsstring>
        <name>coordOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1392" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gfx_state_1_1_reusable_path_iterator_1a057d1532149b203c100286959973ecd2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GfxState::ReusablePathIterator::numCoords</definition>
        <argsstring></argsstring>
        <name>numCoords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1393" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gfx_state_1_1_reusable_path_iterator_1a251f429c448e823ce327fa7229e7e413" prot="private" static="no" mutable="no">
        <type><ref refid="class_gfx_subpath" kindref="compound">GfxSubpath</ref> *</type>
        <definition>GfxSubpath* GfxState::ReusablePathIterator::curSubPath</definition>
        <argsstring></argsstring>
        <name>curSubPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1395" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1395" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gfx_state_1_1_reusable_path_iterator_1a5684cb7996f4e5d90618e82a508547ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfxState::ReusablePathIterator::ReusablePathIterator</definition>
        <argsstring>(GfxPath *path)</argsstring>
        <name>ReusablePathIterator</name>
        <param>
          <type><ref refid="class_gfx_path" kindref="compound">GfxPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the <ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref>. This should only be done from GfxState::getReusablePath().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path as it is used so far. Changing this path, deleting it or starting a new path from scratch will most likely invalidate the iterator (and may cause serious problems). Make sure the path&apos;s memory structure is not changed during the lifetime of the <ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1363" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="6583" bodyend="6594"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_state_1_1_reusable_path_iterator_1a044ed0b09dfce40f703700db98c6e1d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GfxState::ReusablePathIterator::isEnd</definition>
        <argsstring>() const</argsstring>
        <name>isEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if and only if the current iterator position is beyond the last valid point.</para><para>A call to <ref refid="class_gfx_state_1_1_reusable_path_iterator_1af4e893977b96e25d14e64d93bb8a76f1" kindref="member">setCoord()</ref> will be undefined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1371" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="6596" bodyend="6598"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_state_1_1_reusable_path_iterator_1a9ec26361635eb53e8803b38b0ad86cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GfxState::ReusablePathIterator::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advances the iterator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1376" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="6600" bodyend="6610"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_state_1_1_reusable_path_iterator_1af4e893977b96e25d14e64d93bb8a76f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GfxState::ReusablePathIterator::setCoord</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>setCoord</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the coordinates associated to the current iterator position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1382" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="6612" bodyend="6615"/>
      </memberdef>
      <memberdef kind="function" id="class_gfx_state_1_1_reusable_path_iterator_1a59f8f6d089eb2ae9b0f28e0b7a37342a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GfxState::ReusablePathIterator::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the iterator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/GfxState.h" line="1387" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.cc" bodystart="6617" bodyend="6622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>When GfxState::getReusablePath() is invoked, the currently active path is taken per reference and its coordinates can be re-edited.</para><para>A <ref refid="class_gfx_state_1_1_reusable_path_iterator" kindref="compound">ReusablePathIterator</ref> is intented to reduce overhead when the same path type is used a lot of times, only with different coordinates. It allows just to update the coordinates (occuring in the same order as in the original path). </para>    </detaileddescription>
    <location file="thirdparty/poppler/poppler/GfxState.h" line="1351" column="1" bodyfile="thirdparty/poppler/poppler/GfxState.h" bodystart="1351" bodyend="1396"/>
    <listofallmembers>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a938c8d019d4b325b86d35a1203d408aa" prot="private" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>coordOff</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a251f429c448e823ce327fa7229e7e413" prot="private" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>curSubPath</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a044ed0b09dfce40f703700db98c6e1d9" prot="public" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>isEnd</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a9ec26361635eb53e8803b38b0ad86cd9" prot="public" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>next</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a057d1532149b203c100286959973ecd2" prot="private" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>numCoords</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a28c384f0ce92365bac2f332bf36fda0d" prot="private" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>path</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a59f8f6d089eb2ae9b0f28e0b7a37342a" prot="public" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>reset</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a5684cb7996f4e5d90618e82a508547ab" prot="public" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>ReusablePathIterator</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1af4e893977b96e25d14e64d93bb8a76f1" prot="public" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>setCoord</name></member>
      <member refid="class_gfx_state_1_1_reusable_path_iterator_1a7aec8906a68011e2d27cca9fac2b9cd3" prot="private" virt="non-virtual"><scope>GfxState::ReusablePathIterator</scope><name>subPathOff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
