<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_ms_1_1_midi_lyrics" kind="namespace" language="C++">
    <compoundname>Ms::MidiLyrics</compoundname>
    <innerclass refid="struct_ms_1_1_midi_lyrics_1_1_best_track" prot="public">Ms::MidiLyrics::BestTrack</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="importmidi__lyrics_8cpp_1aaefd6dc60991b5d70321a61466d3a143" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Ms::MidiLyrics::META_PREFIX</definition>
        <argsstring></argsstring>
        <name>META_PREFIX</name>
        <initializer>= &quot;@&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="24" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="importmidi__lyrics_8cpp_1a0f0973d2a12aba56501ff316449b2e42" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Ms::MidiLyrics::TEXT_PREFIX</definition>
        <argsstring></argsstring>
        <name>TEXT_PREFIX</name>
        <initializer>= &quot;@T&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="25" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a4b4471e529ee3e0d220f617675aee1c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiLyrics::isMetaText</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>isMetaText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="28" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1aae3edf955762d634174420f8abec613f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiLyrics::isLyricText</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>isLyricText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="33" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a3fe600fbb5af1a9011c6ccf9373fb2c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiLyrics::isLyricEvent</definition>
        <argsstring>(const MidiEvent &amp;e)</argsstring>
        <name>isLyricEvent</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_event" kindref="compound">MidiEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="38" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a8b40dab4f9cbefcaef8c1b6c96488938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, std::string &gt;</type>
        <definition>std::multimap&lt;ReducedFraction, std::string&gt; Ms::MidiLyrics::extractLyricsFromTrack</definition>
        <argsstring>(const MidiTrack &amp;track, int division, bool isDivisionInTps)</argsstring>
        <name>extractLyricsFromTrack</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_track" kindref="compound">MidiTrack</ref> &amp;</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int</type>
          <declname>division</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isDivisionInTps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="45" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="45" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a25967edd0b79613af7c5f6f258afb101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_midi_lyrics_1_1_best_track" kindref="compound">BestTrack</ref></type>
        <definition>BestTrack Ms::MidiLyrics::findBestTrack</definition>
        <argsstring>(const QList&lt; MTrack &gt; &amp;tracks, const std::multimap&lt; ReducedFraction, std::string &gt; &amp;lyricTrack, const std::set&lt; int &gt; &amp;usedTracks)</argsstring>
        <name>findBestTrack</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, std::string &gt; &amp;</type>
          <declname>lyricTrack</declname>
        </param>
        <param>
          <type>const std::set&lt; int &gt; &amp;</type>
          <declname>usedTracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="100" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="100" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a4f3546df50107dfc0fa63886ac2e8235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::MidiLyrics::isTitlePrefix</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>isTitlePrefix</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="138" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1ab64116f7306ef064922507d19afb6712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::addTitleToScore</definition>
        <argsstring>(Score *score, const QString &amp;string, int textCounter)</argsstring>
        <name>addTitleToScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>textCounter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="143" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="143" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a2b314715dad7b9b101383143472b7981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::MidiLyrics::removeSlashes</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>removeSlashes</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="164" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="164" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1af1e9dcd14e7515b93894deffd72f10d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Ms::MidiLyrics::removeSlashes</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>removeSlashes</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="172" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a42677e7237e0bbe186f6e1b5c08598c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::addTitleIfAny</definition>
        <argsstring>(const std::multimap&lt; ReducedFraction, std::string &gt; &amp;lyricTrack, Score *score)</argsstring>
        <name>addTitleIfAny</name>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, std::string &gt; &amp;</type>
          <declname>lyricTrack</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="181" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="181" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1aa1829b75d28ff92287a12564a2fe8c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::addLyricsToScore</definition>
        <argsstring>(const std::multimap&lt; ReducedFraction, std::string &gt; &amp;lyricTrack, const std::vector&lt; std::pair&lt; ReducedFraction, ReducedFraction &gt;&gt; &amp;matchedLyricTimes, const Staff *staffAddTo)</argsstring>
        <name>addLyricsToScore</name>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, std::string &gt; &amp;</type>
          <declname>lyricTrack</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::pair&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &gt;&gt; &amp;</type>
          <declname>matchedLyricTimes</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staffAddTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="198" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="198" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1ab9e053c35bb5007d572c6168efafe0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::extractLyricsToMidiData</definition>
        <argsstring>(const MidiFile *mf)</argsstring>
        <name>extractLyricsToMidiData</name>
        <param>
          <type>const <ref refid="class_ms_1_1_midi_file" kindref="compound">MidiFile</ref> *</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="223" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a03fbeaa7556fee26d74580af6e282cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::setInitialLyricsFromMidiData</definition>
        <argsstring>(const QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>setInitialLyricsFromMidiData</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="232" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="232" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a1bab26d0841bc8eb92db96e421e76be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;ReducedFraction, ReducedFraction&gt; &gt; Ms::MidiLyrics::findMatchedLyricTimes</definition>
        <argsstring>(const std::multimap&lt; ReducedFraction, MidiChord &gt; &amp;chords, const std::multimap&lt; ReducedFraction, std::string &gt; &amp;lyricTrack)</argsstring>
        <name>findMatchedLyricTimes</name>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, <ref refid="class_ms_1_1_midi_chord" kindref="compound">MidiChord</ref> &gt; &amp;</type>
          <declname>chords</declname>
        </param>
        <param>
          <type>const std::multimap&lt; <ref refid="class_ms_1_1_reduced_fraction" kindref="compound">ReducedFraction</ref>, std::string &gt; &amp;</type>
          <declname>lyricTrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="252" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="252" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1ab2b16493219a5987416ba573b43008f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::setLyricsFromOperations</definition>
        <argsstring>(const QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>setLyricsFromOperations</name>
        <param>
          <type>const QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="270" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="270" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a07a1b9031637f2eabbe0c5b294a5a634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::MidiLyrics::setLyricsToScore</definition>
        <argsstring>(QList&lt; MTrack &gt; &amp;tracks)</argsstring>
        <name>setLyricsToScore</name>
        <param>
          <type>QList&lt; <ref refid="class_ms_1_1_m_track" kindref="compound">MTrack</ref> &gt; &amp;</type>
          <declname>tracks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="287" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="importmidi__lyrics_8cpp_1a85b4299dc5513d196d7c41e99de2e6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; std::string &gt;</type>
        <definition>QList&lt; std::string &gt; Ms::MidiLyrics::makeLyricsListForUI</definition>
        <argsstring>()</argsstring>
        <name>makeLyricsListForUI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mscore/importmidi/importmidi_lyrics.cpp" line="298" column="1" bodyfile="mscore/importmidi/importmidi_lyrics.cpp" bodystart="298" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="mscore/importmidi/importmidi_lyrics.cpp" line="22" column="1"/>
  </compounddef>
</doxygen>
