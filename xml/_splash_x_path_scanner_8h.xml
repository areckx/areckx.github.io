<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_splash_x_path_scanner_8h" kind="file" language="C++">
    <compoundname>SplashXPathScanner.h</compoundname>
    <includes refid="_splash_types_8h" local="yes">SplashTypes.h</includes>
    <includedby refid="_splash_8cc" local="yes">thirdparty/poppler/splash/Splash.cc</includedby>
    <includedby refid="_splash_clip_8h" local="yes">thirdparty/poppler/splash/SplashClip.h</includedby>
    <includedby refid="_splash_clip_8cc" local="yes">thirdparty/poppler/splash/SplashClip.cc</includedby>
    <includedby refid="_splash_x_path_scanner_8cc" local="yes">thirdparty/poppler/splash/SplashXPathScanner.cc</includedby>
    <incdepgraph>
      <node id="92873">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="92874" relation="include">
        </childnode>
      </node>
      <node id="92870">
        <label>thirdparty/poppler/splash/SplashXPathScanner.h</label>
        <link refid="_splash_x_path_scanner_8h"/>
        <childnode refid="92871" relation="include">
        </childnode>
      </node>
      <node id="92871">
        <label>SplashTypes.h</label>
        <link refid="_splash_types_8h_source"/>
        <childnode refid="92872" relation="include">
        </childnode>
      </node>
      <node id="92872">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="92873" relation="include">
        </childnode>
      </node>
      <node id="92874">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="92881">
        <label>thirdparty/poppler/splash/SplashFontEngine.cc</label>
        <link refid="_splash_font_engine_8cc_source"/>
      </node>
      <node id="92878">
        <label>thirdparty/poppler/splash/SplashFont.h</label>
        <link refid="_splash_font_8h_source"/>
        <childnode refid="92879" relation="include">
        </childnode>
        <childnode refid="92876" relation="include">
        </childnode>
        <childnode refid="92880" relation="include">
        </childnode>
        <childnode refid="92881" relation="include">
        </childnode>
      </node>
      <node id="92876">
        <label>thirdparty/poppler/splash/Splash.cc</label>
        <link refid="_splash_8cc_source"/>
      </node>
      <node id="92883">
        <label>thirdparty/poppler/splash/SplashClip.cc</label>
        <link refid="_splash_clip_8cc_source"/>
      </node>
      <node id="92875">
        <label>thirdparty/poppler/splash/SplashXPathScanner.h</label>
        <link refid="_splash_x_path_scanner_8h"/>
        <childnode refid="92876" relation="include">
        </childnode>
        <childnode refid="92877" relation="include">
        </childnode>
        <childnode refid="92883" relation="include">
        </childnode>
        <childnode refid="92885" relation="include">
        </childnode>
      </node>
      <node id="92882">
        <label>thirdparty/poppler/splash/Splash.h</label>
        <link refid="_splash_8h_source"/>
        <childnode refid="92879" relation="include">
        </childnode>
        <childnode refid="92876" relation="include">
        </childnode>
      </node>
      <node id="92879">
        <label>thirdparty/poppler/poppler/SplashOutputDev.cc</label>
        <link refid="_splash_output_dev_8cc_source"/>
      </node>
      <node id="92877">
        <label>thirdparty/poppler/splash/SplashClip.h</label>
        <link refid="_splash_clip_8h_source"/>
        <childnode refid="92878" relation="include">
        </childnode>
        <childnode refid="92882" relation="include">
        </childnode>
        <childnode refid="92883" relation="include">
        </childnode>
        <childnode refid="92884" relation="include">
        </childnode>
      </node>
      <node id="92885">
        <label>thirdparty/poppler/splash/SplashXPathScanner.cc</label>
        <link refid="_splash_x_path_scanner_8cc_source"/>
      </node>
      <node id="92884">
        <label>thirdparty/poppler/splash/SplashState.cc</label>
        <link refid="_splash_state_8cc_source"/>
      </node>
      <node id="92880">
        <label>thirdparty/poppler/splash/SplashFont.cc</label>
        <link refid="_splash_font_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_splash_x_path_scanner" prot="public">SplashXPathScanner</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashXPathScanner.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013,<sp/>2014<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPLASHXPATHSCANNER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLASHXPATHSCANNER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SplashTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_splash_intersect" kindref="compound">SplashIntersect</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SplashXPathScanner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_splash_x_path_scanner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>SplashXPathScanner<sp/>object.<sp/><sp/>&lt;xPathA&gt;<sp/>must<sp/>be<sp/>sorted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref>(<ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPathA,<sp/>GBool<sp/>eoA,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipYMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipYMax);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>~<ref refid="class_splash_x_path_scanner" kindref="compound">SplashXPathScanner</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>path&apos;s<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMaxA)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*xMinA<sp/>=<sp/>xMin;<sp/>*yMinA<sp/>=<sp/>yMin;<sp/>*xMaxA<sp/>=<sp/>xMax;<sp/>*yMaxA<sp/>=<sp/>yMax;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>path&apos;s<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getBBoxAA(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMinA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xMaxA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yMaxA);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>at<sp/>least<sp/>part<sp/>of<sp/>the<sp/>path<sp/>was<sp/>outside<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clipYMin/clipYMax<sp/>bounds<sp/>passed<sp/>to<sp/>the<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>GBool<sp/>hasPartialClip()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partialClip;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>min/max<sp/>x<sp/>values<sp/>for<sp/>the<sp/>span<sp/>at<sp/>&lt;y&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getSpanBounds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*spanXMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*spanXMax);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>(&lt;x&gt;,&lt;y&gt;)<sp/>is<sp/>inside<sp/>the<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>GBool<sp/>test(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>entire<sp/>span<sp/>([&lt;x0&gt;,&lt;x1&gt;],<sp/>&lt;y&gt;)<sp/>is<sp/>inside<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>GBool<sp/>testSpan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>next<sp/>span<sp/>inside<sp/>the<sp/>path<sp/>at<sp/>&lt;y&gt;.<sp/><sp/>If<sp/>&lt;y&gt;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>than<sp/>the<sp/>previous<sp/>call<sp/>to<sp/>getNextSpan,<sp/>this<sp/>returns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>span<sp/>at<sp/>&lt;y&gt;;<sp/>otherwise<sp/>it<sp/>returns<sp/>the<sp/>next<sp/>span<sp/>(relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>previous<sp/>call<sp/>to<sp/>getNextSpan).<sp/><sp/>Returns<sp/>false<sp/>if<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>spans<sp/>at<sp/>&lt;y&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>GBool<sp/>getNextSpan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Renders<sp/>one<sp/>anti-aliased<sp/>line<sp/>into<sp/>&lt;aaBuf&gt;.<sp/><sp/>Returns<sp/>the<sp/>min<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>x<sp/>coordinates<sp/>with<sp/>non-zero<sp/>pixels<sp/>in<sp/>&lt;x0&gt;<sp/>and<sp/>&lt;x1&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>renderAALine(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*aaBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>GBool<sp/>adjustVertLine<sp/>=<sp/>gFalse);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clips<sp/>an<sp/>anti-aliased<sp/>line<sp/>by<sp/>setting<sp/>pixels<sp/>to<sp/>zero.<sp/><sp/>On<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>non-zero<sp/>pixels<sp/>are<sp/>between<sp/>&lt;x0&gt;<sp/>and<sp/>&lt;x1&gt;.<sp/><sp/>This<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>update<sp/>&lt;x0&gt;<sp/>and<sp/>&lt;x1&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clipAALine(<ref refid="class_splash_bitmap" kindref="compound">SplashBitmap</ref><sp/>*aaBuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeIntersections();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>GBool<sp/>addIntersection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>segYMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>segYMax,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guint<sp/>segFlags,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="class_splash_x_path" kindref="compound">SplashXPath</ref><sp/>*xPath;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>GBool<sp/>eo;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/>yMin,<sp/>xMax,<sp/>yMax;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>GBool<sp/>partialClip;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="struct_splash_intersect" kindref="compound">SplashIntersect</ref><sp/>*allInter;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>intersections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allInterLen;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>intersections<sp/>in<sp/>&lt;allInter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allInterSize;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>&lt;allInter&gt;<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indexes<sp/>into<sp/>&lt;allInter&gt;<sp/>for<sp/>each<sp/>y<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interY;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>y<sp/>value<sp/>-<sp/>used<sp/>by<sp/>getNextSpan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interIdx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>index<sp/>into<sp/>&lt;inter&gt;<sp/>-<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>getNextSpan<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>EO/NZWN<sp/>counter<sp/>-<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>getNextSpan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/splash/SplashXPathScanner.h"/>
  </compounddef>
</doxygen>
