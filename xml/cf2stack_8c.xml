<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cf2stack_8c" kind="file" language="C++">
    <compoundname>cf2stack.c</compoundname>
    <includes refid="cf2ft_8h" local="yes">cf2ft.h</includes>
    <includes refid="cf2glue_8h" local="yes">cf2glue.h</includes>
    <includes refid="cf2font_8h" local="yes">cf2font.h</includes>
    <includes refid="cf2stack_8h" local="yes">cf2stack.h</includes>
    <includes refid="cf2error_8h" local="yes">cf2error.h</includes>
    <includedby refid="cff_8c" local="yes">thirdparty/freetype/src/cff/cff.c</includedby>
    <incdepgraph>
      <node id="79292">
        <label>cfftypes.h</label>
        <link refid="cfftypes_8h_source"/>
        <childnode refid="79284" relation="include">
        </childnode>
      </node>
      <node id="79291">
        <label>cffobjs.h</label>
        <link refid="cffobjs_8h_source"/>
        <childnode refid="79284" relation="include">
        </childnode>
        <childnode refid="79292" relation="include">
        </childnode>
      </node>
      <node id="79290">
        <label>cffgload.h</label>
        <link refid="cffgload_8h_source"/>
        <childnode refid="79284" relation="include">
        </childnode>
        <childnode refid="79291" relation="include">
        </childnode>
      </node>
      <node id="79283">
        <label>cf2types.h</label>
        <link refid="cf2types_8h_source"/>
        <childnode refid="79284" relation="include">
        </childnode>
      </node>
      <node id="79285">
        <label>cf2glue.h</label>
        <link refid="cf2glue_8h_source"/>
        <childnode refid="79286" relation="include">
        </childnode>
        <childnode refid="79287" relation="include">
        </childnode>
        <childnode refid="79288" relation="include">
        </childnode>
        <childnode refid="79289" relation="include">
        </childnode>
      </node>
      <node id="79282">
        <label>cf2ft.h</label>
        <link refid="cf2ft_8h_source"/>
        <childnode refid="79283" relation="include">
        </childnode>
        <childnode refid="79285" relation="include">
        </childnode>
        <childnode refid="79290" relation="include">
        </childnode>
      </node>
      <node id="79293">
        <label>cf2font.h</label>
        <link refid="cf2font_8h_source"/>
        <childnode refid="79282" relation="include">
        </childnode>
        <childnode refid="79294" relation="include">
        </childnode>
      </node>
      <node id="79289">
        <label>cf2read.h</label>
        <link refid="cf2read_8h_source"/>
      </node>
      <node id="79284">
        <label>ft2build.h</label>
      </node>
      <node id="79294">
        <label>cf2blues.h</label>
        <link refid="cf2blues_8h_source"/>
        <childnode refid="79285" relation="include">
        </childnode>
      </node>
      <node id="79287">
        <label>cf2fixed.h</label>
        <link refid="cf2fixed_8h_source"/>
      </node>
      <node id="79286">
        <label>cf2error.h</label>
        <link refid="cf2error_8h_source"/>
        <childnode refid="79282" relation="include">
        </childnode>
      </node>
      <node id="79288">
        <label>cf2arrst.h</label>
        <link refid="cf2arrst_8h_source"/>
        <childnode refid="79286" relation="include">
        </childnode>
      </node>
      <node id="79281">
        <label>thirdparty/freetype/src/cff/cf2stack.c</label>
        <link refid="cf2stack_8c"/>
        <childnode refid="79282" relation="include">
        </childnode>
        <childnode refid="79285" relation="include">
        </childnode>
        <childnode refid="79293" relation="include">
        </childnode>
        <childnode refid="79295" relation="include">
        </childnode>
        <childnode refid="79286" relation="include">
        </childnode>
      </node>
      <node id="79295">
        <label>cf2stack.h</label>
        <link refid="cf2stack_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="79297">
        <label>thirdparty/freetype/src/cff/cff.c</label>
        <link refid="cff_8c_source"/>
      </node>
      <node id="79296">
        <label>thirdparty/freetype/src/cff/cf2stack.c</label>
        <link refid="cf2stack_8c"/>
        <childnode refid="79297" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cf2stack_8c_1a14550bbd02ca43b8383999d6e61d7709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_init</definition>
        <argsstring>(FT_Memory memory, FT_Error *e)</argsstring>
        <name>cf2_stack_init</name>
        <param>
          <type>FT_Memory</type>
          <declname>memory</declname>
        </param>
        <param>
          <type>FT_Error *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="53" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a9ed19bd8eb43c5074fb195efec0273be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_free</definition>
        <argsstring>(CF2_Stack stack)</argsstring>
        <name>cf2_stack_free</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="74" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a5ada3113a566d94ec62eca9260475015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_count</definition>
        <argsstring>(CF2_Stack stack)</argsstring>
        <name>cf2_stack_count</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="88" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a394bb9424574fac337b4558261a90624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_pushInt</definition>
        <argsstring>(CF2_Stack stack, CF2_Int val)</argsstring>
        <name>cf2_stack_pushInt</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>CF2_Int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="95" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1ade2077b26017c2220c94a3ce17f7dea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_pushFixed</definition>
        <argsstring>(CF2_Stack stack, CF2_Fixed val)</argsstring>
        <name>cf2_stack_pushFixed</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>CF2_Fixed</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="111" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="111" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a88343c9cd43e172ba8f1fe2cefde6453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_popInt</definition>
        <argsstring>(CF2_Stack stack)</argsstring>
        <name>cf2_stack_popInt</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="128" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="128" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a4923dc66b5bb5f2d1b09851b4adf8eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_popFixed</definition>
        <argsstring>(CF2_Stack stack)</argsstring>
        <name>cf2_stack_popFixed</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="150" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="150" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1afe9c52558847e93f76fa9adf729ae605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_getReal</definition>
        <argsstring>(CF2_Stack stack, CF2_UInt idx)</argsstring>
        <name>cf2_stack_getReal</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>CF2_UInt</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="175" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="175" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="cf2stack_8c_1a6d0ae6d3009ca73fa3c32e863bbd9ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cf2_stack_clear</definition>
        <argsstring>(CF2_Stack stack)</argsstring>
        <name>cf2_stack_clear</name>
        <param>
          <type><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/freetype/src/cff/cf2stack.c" line="199" column="1" bodyfile="thirdparty/freetype/src/cff/cf2stack.c" bodystart="199" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>cf2stack.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Adobe&apos;s<sp/>code<sp/>for<sp/>emulating<sp/>a<sp/>CFF<sp/>stack<sp/>(body).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>2007-2013<sp/>Adobe<sp/>Systems<sp/>Incorporated.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>software,<sp/>and<sp/>all<sp/>works<sp/>of<sp/>authorship,<sp/>whether<sp/>in<sp/>source<sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>object<sp/>code<sp/>form<sp/>as<sp/>indicated<sp/>by<sp/>the<sp/>copyright<sp/>notice(s)<sp/>included<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>herein<sp/>(collectively,<sp/>the<sp/>&quot;Work&quot;)<sp/>is<sp/>made<sp/>available,<sp/>and<sp/>may<sp/>only<sp/>be<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>used,<sp/>modified,<sp/>and<sp/>distributed<sp/>under<sp/>the<sp/>FreeType<sp/>Project<sp/>License,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>LICENSE.TXT.<sp/><sp/>Additionally,<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License,<sp/>each<sp/>contributor<sp/>to<sp/>the<sp/>Work<sp/>hereby<sp/>grants<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>to<sp/>any<sp/>individual<sp/>or<sp/>legal<sp/>entity<sp/>exercising<sp/>permissions<sp/>granted<sp/>by<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>FreeType<sp/>Project<sp/>License<sp/>and<sp/>this<sp/>section<sp/>(hereafter,<sp/>&quot;You&quot;<sp/>or<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>&quot;Your&quot;)<sp/>a<sp/>perpetual,<sp/>worldwide,<sp/>non-exclusive,<sp/>no-charge,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>royalty-free,<sp/>irrevocable<sp/>(except<sp/>as<sp/>stated<sp/>in<sp/>this<sp/>section)<sp/>patent<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>license<sp/>to<sp/>make,<sp/>have<sp/>made,<sp/>use,<sp/>offer<sp/>to<sp/>sell,<sp/>sell,<sp/>import,<sp/>and<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>otherwise<sp/>transfer<sp/>the<sp/>Work,<sp/>where<sp/>such<sp/>license<sp/>applies<sp/>only<sp/>to<sp/>those<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>patent<sp/>claims<sp/>licensable<sp/>by<sp/>such<sp/>contributor<sp/>that<sp/>are<sp/>necessarily<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>infringed<sp/>by<sp/>their<sp/>contribution(s)<sp/>alone<sp/>or<sp/>by<sp/>combination<sp/>of<sp/>their<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>contribution(s)<sp/>with<sp/>the<sp/>Work<sp/>to<sp/>which<sp/>such<sp/>contribution(s)<sp/>was<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>submitted.<sp/><sp/>If<sp/>You<sp/>institute<sp/>patent<sp/>litigation<sp/>against<sp/>any<sp/>entity<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>(including<sp/>a<sp/>cross-claim<sp/>or<sp/>counterclaim<sp/>in<sp/>a<sp/>lawsuit)<sp/>alleging<sp/>that<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>Work<sp/>or<sp/>a<sp/>contribution<sp/>incorporated<sp/>within<sp/>the<sp/>Work<sp/>constitutes<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>direct<sp/>or<sp/>contributory<sp/>patent<sp/>infringement,<sp/>then<sp/>any<sp/>patent<sp/>licenses<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>granted<sp/>to<sp/>You<sp/>under<sp/>this<sp/>License<sp/>for<sp/>that<sp/>Work<sp/>shall<sp/>terminate<sp/>as<sp/>of<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>the<sp/>date<sp/>such<sp/>litigation<sp/>is<sp/>filed.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>By<sp/>using,<sp/>modifying,<sp/>or<sp/>distributing<sp/>the<sp/>Work<sp/>you<sp/>indicate<sp/>that<sp/>you<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>have<sp/>read<sp/>and<sp/>understood<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FreeType<sp/>Project<sp/>License<sp/>as<sp/>well<sp/>as<sp/>those<sp/>provided<sp/>in<sp/>this<sp/>section,<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>and<sp/>you<sp/>accept<sp/>them<sp/>fully.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2ft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>FT_INTERNAL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2glue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2font.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2stack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf2error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>initialize<sp/>an<sp/>instance<sp/>of<sp/>CF2_Stack.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>This<sp/>function<sp/>returns<sp/>NULL<sp/>on<sp/>error<sp/>(does<sp/>not<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>`error&apos;).<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>cf2_stack_init(<sp/>FT_Memory<sp/><sp/>memory,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Error*<sp/><sp/>e<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Error<sp/><sp/>error<sp/>=<sp/>FT_Err_Ok;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>FT_QNEW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!FT_QNEW(<sp/>stack<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>the<sp/>structure;<sp/>FT_QNEW<sp/>zeroes<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;memory<sp/>=<sp/>memory;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;error<sp/><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;top<sp/><sp/><sp/><sp/>=<sp/>&amp;stack-&gt;buffer[0];<sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>cf2_stack_free(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_Memory<sp/><sp/>memory<sp/>=<sp/>stack-&gt;memory;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>main<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FT_FREE(<sp/>stack<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_UInt<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>cf2_stack_count(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CF2_UInt)(<sp/>stack-&gt;top<sp/>-<sp/>&amp;stack-&gt;buffer[0]<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>cf2_stack_pushInt(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Int<sp/><sp/><sp/><sp/>val<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top<sp/>==<sp/>&amp;stack-&gt;buffer[CF2_OPERAND_STACK_SIZE]<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Stack_Overflow<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;top-&gt;u.i<sp/><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;top-&gt;type<sp/>=<sp/>CF2_NumberInt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>++stack-&gt;top;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>cf2_stack_pushFixed(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_Fixed<sp/><sp/>val<sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top<sp/>==<sp/>&amp;stack-&gt;buffer[CF2_OPERAND_STACK_SIZE]<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Stack_Overflow<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;top-&gt;u.r<sp/><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;top-&gt;type<sp/>=<sp/>CF2_NumberFixed;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>++stack-&gt;top;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>is<sp/>only<sp/>allowed<sp/>to<sp/>pop<sp/>an<sp/>integer<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Int<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>cf2_stack_popInt(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top<sp/>==<sp/>&amp;stack-&gt;buffer[0]<sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Stack_Underflow<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>underflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top[-1].type<sp/>!=<sp/>CF2_NumberInt<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Syntax_Error<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>mismatch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>--stack-&gt;top;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;top-&gt;u.i;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>type<sp/>mismatch<sp/>is<sp/>silently<sp/>cast<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>check<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>cf2_stack_popFixed(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top<sp/>==<sp/>&amp;stack-&gt;buffer[0]<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Stack_Underflow<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(<sp/>0<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>underflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>--stack-&gt;top;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;top-&gt;type<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CF2_NumberInt:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(<sp/>stack-&gt;top-&gt;u.i<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CF2_NumberFrac:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_fracToFixed(<sp/>stack-&gt;top-&gt;u.f<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;top-&gt;u.r;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>type<sp/>mismatch<sp/>is<sp/>silently<sp/>cast<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>check<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/>CF2_Fixed<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>cf2_stack_getReal(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CF2_UInt<sp/><sp/><sp/>idx<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_ASSERT(<sp/>cf2_stack_count(<sp/>stack<sp/>)<sp/>&lt;=<sp/>CF2_OPERAND_STACK_SIZE<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idx<sp/>&gt;=<sp/>cf2_stack_count(<sp/>stack<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CF2_SET_ERROR(<sp/>stack-&gt;error,<sp/>Stack_Overflow<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(<sp/>0<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bounds<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>stack-&gt;buffer[idx].type<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CF2_NumberInt:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_intToFixed(<sp/>stack-&gt;buffer[idx].u.i<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CF2_NumberFrac:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf2_fracToFixed(<sp/>stack-&gt;buffer[idx].u.f<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;buffer[idx].u.r;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>FT_LOCAL_DEF(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>cf2_stack_clear(<sp/><ref refid="struct_c_f2___stack_rec__" kindref="compound">CF2_Stack</ref><sp/><sp/>stack<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;top<sp/>=<sp/>&amp;stack-&gt;buffer[0];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/freetype/src/cff/cf2stack.c"/>
  </compounddef>
</doxygen>
