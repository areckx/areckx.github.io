<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_stitching_function" kind="class" language="C++" prot="public">
    <compoundname>StitchingFunction</compoundname>
    <basecompoundref refid="class_function" prot="public" virt="non-virtual">Function</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_stitching_function_1a91afa7fc971cda8e5d063c35927dfde8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int StitchingFunction::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="218" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_stitching_function_1acebf4b7d0de3e1d84bcf0ebe0cc93a2e" prot="private" static="no" mutable="no">
        <type><ref refid="class_function" kindref="compound">Function</ref> **</type>
        <definition>Function** StitchingFunction::funcs</definition>
        <argsstring></argsstring>
        <name>funcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="219" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_stitching_function_1a960e6614f686eb50f4c2082f8c96599e" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* StitchingFunction::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="220" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_stitching_function_1af6b1ec1bdc3d0dbe6de1a65dc9430bda" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* StitchingFunction::encode</definition>
        <argsstring></argsstring>
        <name>encode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="221" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_stitching_function_1a996f30aa717f9c7405d47a5e151202de" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* StitchingFunction::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="222" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_stitching_function_1a8605d1e4bbcc9a706ed9100812b826d4" prot="private" static="no" mutable="no">
        <type>GBool</type>
        <definition>GBool StitchingFunction::ok</definition>
        <argsstring></argsstring>
        <name>ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="223" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_stitching_function_1a95b383440567da883fdc84e1d2eb9ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StitchingFunction::StitchingFunction</definition>
        <argsstring>(Object *funcObj, Dict *dict, std::set&lt; int &gt; *usedParents)</argsstring>
        <name>StitchingFunction</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref> *</type>
          <declname>funcObj</declname>
        </param>
        <param>
          <type><ref refid="class_dict" kindref="compound">Dict</ref> *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::set&lt; int &gt; *</type>
          <declname>usedParents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="201" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="687" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a49dd6b56e6fea4a731f9233658ea86f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>StitchingFunction::~StitchingFunction</definition>
        <argsstring>()</argsstring>
        <name>~StitchingFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="202" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="820" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a29e1adb476ecb6cafa1ded449d99cf58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
        <definition>virtual Function* StitchingFunction::copy</definition>
        <argsstring>()</argsstring>
        <name>copy</name>
        <reimplements refid="class_function_1a7124f1598043122cc38639e33e80c97e">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="203" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1ac35bc844915b2ae31f348121e3588532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int StitchingFunction::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <reimplements refid="class_function_1a4787a45ad7d946ce4958d3ef5436a34d">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="204" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1aaa4fee6501c0914876f9a87baa30878e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void StitchingFunction::transform</definition>
        <argsstring>(double *in, double *out)</argsstring>
        <name>transform</name>
        <reimplements refid="class_function_1ab1d76848aed832e1919fadf2b57210b6">transform</reimplements>
        <param>
          <type>double *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="205" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="836" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1af67e5419ac987917444cba09dbd715ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>GBool</type>
        <definition>virtual GBool StitchingFunction::isOk</definition>
        <argsstring>()</argsstring>
        <name>isOk</name>
        <reimplements refid="class_function_1a3f407d8642ffac957855045725477cdd">isOk</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="206" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a552465ff78be9bea029ee96e5044c459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int StitchingFunction::getNumFuncs</definition>
        <argsstring>()</argsstring>
        <name>getNumFuncs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="208" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a65c9284b90e3c7893f5b2d9b26d68184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_function" kindref="compound">Function</ref> *</type>
        <definition>Function* StitchingFunction::getFunc</definition>
        <argsstring>(int i)</argsstring>
        <name>getFunc</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="209" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a8293689bd9f38795c3a7dd2b7f4a665a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* StitchingFunction::getBounds</definition>
        <argsstring>()</argsstring>
        <name>getBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="210" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1afcc275f89ac79ba7c4fdd33a78ab79ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* StitchingFunction::getEncode</definition>
        <argsstring>()</argsstring>
        <name>getEncode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="211" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_stitching_function_1a6d954176fe24ba6a7189a967ae91c35f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* StitchingFunction::getScale</definition>
        <argsstring>()</argsstring>
        <name>getScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="212" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="212" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_stitching_function_1a6229fdb6cf4f0e289d51a07e68903ee9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StitchingFunction::StitchingFunction</definition>
        <argsstring>(const StitchingFunction *func)</argsstring>
        <name>StitchingFunction</name>
        <param>
          <type>const <ref refid="class_stitching_function" kindref="compound">StitchingFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Function.h" line="216" column="1" bodyfile="thirdparty/poppler/poppler/Function.cc" bodystart="800" bodyend="818"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15968">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="15967">
        <label>StitchingFunction</label>
        <link refid="class_stitching_function"/>
        <childnode refid="15968" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15970">
        <label>Function</label>
        <link refid="class_function"/>
      </node>
      <node id="15969">
        <label>StitchingFunction</label>
        <link refid="class_stitching_function"/>
        <childnode refid="15970" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="thirdparty/poppler/poppler/Function.h" line="198" column="1" bodyfile="thirdparty/poppler/poppler/Function.h" bodystart="198" bodyend="224"/>
    <listofallmembers>
      <member refid="class_stitching_function_1a960e6614f686eb50f4c2082f8c96599e" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>bounds</name></member>
      <member refid="class_stitching_function_1a29e1adb476ecb6cafa1ded449d99cf58" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>copy</name></member>
      <member refid="class_function_1a3b17b3e90ca1b3cc162f2a79f5a02439" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>domain</name></member>
      <member refid="class_stitching_function_1af6b1ec1bdc3d0dbe6de1a65dc9430bda" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>encode</name></member>
      <member refid="class_stitching_function_1acebf4b7d0de3e1d84bcf0ebe0cc93a2e" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>funcs</name></member>
      <member refid="class_function_1ae206568fd4fd4c885e3ccff76345c4e6" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>Function</name></member>
      <member refid="class_function_1af5f9fab44f490ec95d06aea99beb528c" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>Function</name></member>
      <member refid="class_stitching_function_1a8293689bd9f38795c3a7dd2b7f4a665a" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getBounds</name></member>
      <member refid="class_function_1a3168767848a2a073835841640a84f754" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getDomainMax</name></member>
      <member refid="class_function_1a57c4c3228159a304c175324faa52ce28" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getDomainMin</name></member>
      <member refid="class_stitching_function_1afcc275f89ac79ba7c4fdd33a78ab79ff" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getEncode</name></member>
      <member refid="class_stitching_function_1a65c9284b90e3c7893f5b2d9b26d68184" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getFunc</name></member>
      <member refid="class_function_1a2382b79f8c097baea7961cd51e4f292a" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getHasRange</name></member>
      <member refid="class_function_1ad2541961d470c65a468d9a5be1238cd9" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getInputSize</name></member>
      <member refid="class_stitching_function_1a552465ff78be9bea029ee96e5044c459" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getNumFuncs</name></member>
      <member refid="class_function_1a5d8d90a099b865aa42c7f90ae076521f" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getOutputSize</name></member>
      <member refid="class_function_1a713fb58959968a9653b170d17ef93129" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getRangeMax</name></member>
      <member refid="class_function_1a08d9a249f6dea2bde2da3ed0bc17ee18" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getRangeMin</name></member>
      <member refid="class_stitching_function_1a6d954176fe24ba6a7189a967ae91c35f" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>getScale</name></member>
      <member refid="class_stitching_function_1ac35bc844915b2ae31f348121e3588532" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>getType</name></member>
      <member refid="class_function_1a45b8cff53bba65523631fc66aa0f9f63" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>hasDifferentResultSet</name></member>
      <member refid="class_function_1abf8f6a3b30732bbc1ecef56d28b3f4e2" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>hasRange</name></member>
      <member refid="class_function_1ad0636679b03ed395ebda1332d20db149" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>init</name></member>
      <member refid="class_stitching_function_1af67e5419ac987917444cba09dbd715ae" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>isOk</name></member>
      <member refid="class_stitching_function_1a91afa7fc971cda8e5d063c35927dfde8" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>k</name></member>
      <member refid="class_function_1ace602300f2adca1fcc07fc25326ce301" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>m</name></member>
      <member refid="class_function_1a2f582d2da9cb2af5507a55e17bc44083" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>n</name></member>
      <member refid="class_stitching_function_1a8605d1e4bbcc9a706ed9100812b826d4" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>ok</name></member>
      <member refid="class_function_1aa43a8ea82c3573a7c0c7b40ea58ea128" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>parse</name></member>
      <member refid="class_function_1a1ed4753bf0905efc7c1b1e15d7b1e4bf" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>parse</name></member>
      <member refid="class_function_1aae39c230b68a5b8e96145635b1831038" prot="protected" virt="non-virtual"><scope>StitchingFunction</scope><name>range</name></member>
      <member refid="class_stitching_function_1a996f30aa717f9c7405d47a5e151202de" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>scale</name></member>
      <member refid="class_stitching_function_1a95b383440567da883fdc84e1d2eb9ea5" prot="public" virt="non-virtual"><scope>StitchingFunction</scope><name>StitchingFunction</name></member>
      <member refid="class_stitching_function_1a6229fdb6cf4f0e289d51a07e68903ee9" prot="private" virt="non-virtual"><scope>StitchingFunction</scope><name>StitchingFunction</name></member>
      <member refid="class_stitching_function_1aaa4fee6501c0914876f9a87baa30878e" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>transform</name></member>
      <member refid="class_function_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>~Function</name></member>
      <member refid="class_stitching_function_1a49dd6b56e6fea4a731f9233658ea86f4" prot="public" virt="virtual"><scope>StitchingFunction</scope><name>~StitchingFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
