<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes refid="thirdparty_2rtf2html_2config_8h" local="yes">config.h</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <includedby refid="fmt__opts_8h" local="yes">thirdparty/rtf2html/fmt_opts.h</includedby>
    <includedby refid="rtf__table_8h" local="yes">thirdparty/rtf2html/rtf_table.h</includedby>
    <includedby refid="rtf__tools_8h" local="yes">thirdparty/rtf2html/rtf_tools.h</includedby>
    <incdepgraph>
      <node id="93168">
        <label>iomanip</label>
      </node>
      <node id="93166">
        <label>string</label>
      </node>
      <node id="93164">
        <label>thirdparty/rtf2html/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="93165" relation="include">
        </childnode>
        <childnode refid="93166" relation="include">
        </childnode>
        <childnode refid="93167" relation="include">
        </childnode>
        <childnode refid="93168" relation="include">
        </childnode>
      </node>
      <node id="93165">
        <label>config.h</label>
        <link refid="thirdparty_2rtf2html_2config_8h_source"/>
      </node>
      <node id="93167">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="93175">
        <label>thirdparty/rtf2html/rtf_tools.h</label>
        <link refid="rtf__tools_8h_source"/>
        <childnode refid="93172" relation="include">
        </childnode>
      </node>
      <node id="93172">
        <label>thirdparty/rtf2html/rtf2html.cpp</label>
        <link refid="rtf2html_8cpp_source"/>
      </node>
      <node id="93169">
        <label>thirdparty/rtf2html/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="93170" relation="include">
        </childnode>
        <childnode refid="93173" relation="include">
        </childnode>
        <childnode refid="93175" relation="include">
        </childnode>
      </node>
      <node id="93170">
        <label>thirdparty/rtf2html/fmt_opts.h</label>
        <link refid="fmt__opts_8h_source"/>
        <childnode refid="93171" relation="include">
        </childnode>
        <childnode refid="93172" relation="include">
        </childnode>
      </node>
      <node id="93171">
        <label>thirdparty/rtf2html/fmt_opts.cpp</label>
        <link refid="fmt__opts_8cpp_source"/>
      </node>
      <node id="93173">
        <label>thirdparty/rtf2html/rtf_table.h</label>
        <link refid="rtf__table_8h_source"/>
        <childnode refid="93172" relation="include">
        </childnode>
        <childnode refid="93174" relation="include">
        </childnode>
      </node>
      <node id="93174">
        <label>thirdparty/rtf2html/rtf_table.cpp</label>
        <link refid="rtf__table_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="common_8h_1a2d8df4d6f4c03fdbff26e25b93d783e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string from_int</definition>
        <argsstring>(int value)</argsstring>
        <name>from_int</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/rtf2html/common.h" line="19" column="1" bodyfile="thirdparty/rtf2html/common.h" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="common_8h_1a2d6180c75f9e996c24db80ade823c3f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hex</definition>
        <argsstring>(unsigned int value)</argsstring>
        <name>hex</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/rtf2html/common.h" line="26" column="1" bodyfile="thirdparty/rtf2html/common.h" bodystart="26" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__COMMON_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__COMMON_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(f-std::floor(f)&lt;0.5?std::floor(f):std::ceil(f));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>from_int(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>std::ostringstream<sp/>buf;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>buf&lt;&lt;value;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.str();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>hex(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>std::ostringstream<sp/>buf;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>buf&lt;&lt;std::setw(2)&lt;&lt;std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)&lt;&lt;std::hex&lt;&lt;value;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.str();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/rtf2html/common.h"/>
  </compounddef>
</doxygen>
