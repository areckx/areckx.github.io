<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_page_8cc" kind="file" language="C++">
    <compoundname>Page.cc</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="_global_params_8h" local="yes">GlobalParams.h</includes>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes refid="_array_8h" local="yes">Array.h</includes>
    <includes refid="_dict_8h" local="yes">Dict.h</includes>
    <includes refid="_p_d_f_doc_8h" local="yes">PDFDoc.h</includes>
    <includes refid="_x_ref_8h" local="yes">XRef.h</includes>
    <includes refid="_link_8h" local="yes">Link.h</includes>
    <includes refid="_output_dev_8h" local="yes">OutputDev.h</includes>
    <includes refid="_gfx_8h" local="yes">Gfx.h</includes>
    <includes refid="_gfx_state_8h" local="yes">GfxState.h</includes>
    <includes refid="_annot_8h" local="yes">Annot.h</includes>
    <includes refid="_text_output_dev_8h" local="yes">TextOutputDev.h</includes>
    <includes refid="_form_8h" local="yes">Form.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <includes refid="thirdparty_2poppler_2poppler_2page_8h" local="yes">Page.h</includes>
    <includes refid="_catalog_8h" local="yes">Catalog.h</includes>
    <incdepgraph>
      <node id="88656">
        <label>TextOutputDev.h</label>
        <link refid="_text_output_dev_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88657" relation="include">
        </childnode>
        <childnode refid="88653" relation="include">
        </childnode>
        <childnode refid="88649" relation="include">
        </childnode>
      </node>
      <node id="88633">
        <label>stdarg.h</label>
      </node>
      <node id="88654">
        <label>Function.h</label>
        <link refid="_function_8h_source"/>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88629" relation="include">
        </childnode>
      </node>
      <node id="88621">
        <label>assert.h</label>
      </node>
      <node id="88641">
        <label>XRef.h</label>
        <link refid="_x_ref_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88639" relation="include">
        </childnode>
        <childnode refid="88642" relation="include">
        </childnode>
      </node>
      <node id="88653">
        <label>GfxState.h</label>
        <link refid="_gfx_state_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88654" relation="include">
        </childnode>
        <childnode refid="88621" relation="include">
        </childnode>
        <childnode refid="88655" relation="include">
        </childnode>
      </node>
      <node id="88657">
        <label>GfxFont.h</label>
        <link refid="_gfx_font_8h_source"/>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88632" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88625" relation="include">
        </childnode>
      </node>
      <node id="88634">
        <label>stdlib.h</label>
      </node>
      <node id="88631">
        <label>goo/gmem.h</label>
        <link refid="gmem_8h_source"/>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88622" relation="include">
        </childnode>
      </node>
      <node id="88640">
        <label>PDFDoc.h</label>
        <link refid="_p_d_f_doc_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
        <childnode refid="88641" relation="include">
        </childnode>
        <childnode refid="88643" relation="include">
        </childnode>
        <childnode refid="88644" relation="include">
        </childnode>
        <childnode refid="88645" relation="include">
        </childnode>
        <childnode refid="88646" relation="include">
        </childnode>
        <childnode refid="88647" relation="include">
        </childnode>
        <childnode refid="88639" relation="include">
        </childnode>
      </node>
      <node id="88637">
        <label>Array.h</label>
        <link refid="_array_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
      </node>
      <node id="88643">
        <label>Catalog.h</label>
        <link refid="_catalog_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
        <childnode refid="88642" relation="include">
        </childnode>
      </node>
      <node id="88620">
        <label>GlobalParams.h</label>
        <link refid="_global_params_8h_source"/>
        <childnode refid="88621" relation="include">
        </childnode>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88625" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
      </node>
      <node id="88655">
        <label>map</label>
      </node>
      <node id="88636">
        <label>Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="88633" relation="include">
        </childnode>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88632" relation="include">
        </childnode>
      </node>
      <node id="88651">
        <label>Gfx.h</label>
        <link refid="_gfx_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88652" relation="include">
        </childnode>
        <childnode refid="88653" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88650" relation="include">
        </childnode>
        <childnode refid="88642" relation="include">
        </childnode>
      </node>
      <node id="88652">
        <label>goo/GooList.h</label>
        <link refid="_goo_list_8h_source"/>
        <childnode refid="88624" relation="include">
        </childnode>
      </node>
      <node id="88638">
        <label>Dict.h</label>
        <link refid="_dict_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
      </node>
      <node id="88645">
        <label>Annot.h</label>
        <link refid="_annot_8h_source"/>
        <childnode refid="88628" relation="include">
        </childnode>
      </node>
      <node id="88618">
        <label>stddef.h</label>
      </node>
      <node id="88644">
        <label>Page.h</label>
        <link refid="thirdparty_2poppler_2poppler_2page_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
      </node>
      <node id="88619">
        <label>limits.h</label>
      </node>
      <node id="88622">
        <label>poppler-config.h</label>
        <link refid="poppler-config_8h_source"/>
        <childnode refid="88623" relation="include">
        </childnode>
      </node>
      <node id="88635">
        <label>goo/GooLikely.h</label>
        <link refid="_goo_likely_8h_source"/>
      </node>
      <node id="88639">
        <label>Stream.h</label>
        <link refid="_stream_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88626" relation="include">
        </childnode>
      </node>
      <node id="88627">
        <label>pthread.h</label>
      </node>
      <node id="88650">
        <label>PopplerCache.h</label>
        <link refid="_poppler_cache_8h_source"/>
        <childnode refid="88628" relation="include">
        </childnode>
      </node>
      <node id="88630">
        <label>string.h</label>
      </node>
      <node id="88632">
        <label>goo/GooString.h</label>
        <link refid="_goo_string_8h_source"/>
        <childnode refid="88619" relation="include">
        </childnode>
        <childnode refid="88633" relation="include">
        </childnode>
        <childnode refid="88634" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
      </node>
      <node id="88646">
        <label>Form.h</label>
        <link refid="_form_8h_source"/>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88645" relation="include">
        </childnode>
        <childnode refid="88629" relation="include">
        </childnode>
      </node>
      <node id="88648">
        <label>Link.h</label>
        <link refid="_link_8h_source"/>
        <childnode refid="88628" relation="include">
        </childnode>
      </node>
      <node id="88628">
        <label>Object.h</label>
        <link refid="_object_8h_source"/>
        <childnode refid="88629" relation="include">
        </childnode>
        <childnode refid="88623" relation="include">
        </childnode>
        <childnode refid="88630" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88631" relation="include">
        </childnode>
        <childnode refid="88632" relation="include">
        </childnode>
        <childnode refid="88635" relation="include">
        </childnode>
        <childnode refid="88636" relation="include">
        </childnode>
        <childnode refid="88637" relation="include">
        </childnode>
        <childnode refid="88638" relation="include">
        </childnode>
        <childnode refid="88639" relation="include">
        </childnode>
      </node>
      <node id="88642">
        <label>vector</label>
      </node>
      <node id="88649">
        <label>OutputDev.h</label>
        <link refid="_output_dev_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
        <childnode refid="88624" relation="include">
        </childnode>
        <childnode refid="88625" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88650" relation="include">
        </childnode>
      </node>
      <node id="88616">
        <label>thirdparty/poppler/poppler/Page.cc</label>
        <link refid="_page_8cc"/>
        <childnode refid="88617" relation="include">
        </childnode>
        <childnode refid="88618" relation="include">
        </childnode>
        <childnode refid="88619" relation="include">
        </childnode>
        <childnode refid="88620" relation="include">
        </childnode>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88637" relation="include">
        </childnode>
        <childnode refid="88638" relation="include">
        </childnode>
        <childnode refid="88640" relation="include">
        </childnode>
        <childnode refid="88641" relation="include">
        </childnode>
        <childnode refid="88648" relation="include">
        </childnode>
        <childnode refid="88649" relation="include">
        </childnode>
        <childnode refid="88651" relation="include">
        </childnode>
        <childnode refid="88653" relation="include">
        </childnode>
        <childnode refid="88645" relation="include">
        </childnode>
        <childnode refid="88656" relation="include">
        </childnode>
        <childnode refid="88646" relation="include">
        </childnode>
        <childnode refid="88636" relation="include">
        </childnode>
        <childnode refid="88644" relation="include">
        </childnode>
        <childnode refid="88643" relation="include">
        </childnode>
      </node>
      <node id="88626">
        <label>goo/GooMutex.h</label>
        <link refid="_goo_mutex_8h_source"/>
        <childnode refid="88627" relation="include">
        </childnode>
      </node>
      <node id="88625">
        <label>CharTypes.h</label>
        <link refid="_char_types_8h_source"/>
      </node>
      <node id="88624">
        <label>goo/gtypes.h</label>
        <link refid="gtypes_8h_source"/>
        <childnode refid="88622" relation="include">
        </childnode>
      </node>
      <node id="88629">
        <label>set</label>
      </node>
      <node id="88617">
        <label>config.h</label>
      </node>
      <node id="88647">
        <label>OptionalContent.h</label>
        <link refid="_optional_content_8h_source"/>
        <childnode refid="88628" relation="include">
        </childnode>
        <childnode refid="88625" relation="include">
        </childnode>
      </node>
      <node id="88623">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_page_8cc_1af839ebb476b1b81e7ff291306be6dccf" prot="public" static="no">
        <name>pageLocker</name>
        <param></param>
        <initializer><ref refid="class_mutex_locker" kindref="compound">MutexLocker</ref> locker(&amp;mutex)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/poppler/poppler/Page.cc" line="65" column="11" bodyfile="thirdparty/poppler/poppler/Page.cc" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Page.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>1996-2007<sp/>Glyph<sp/>&amp;<sp/>Cog,<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>-<sp/>http://poppler.freedesktop.org</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>changes<sp/>made<sp/>under<sp/>the<sp/>Poppler<sp/>project<sp/>to<sp/>this<sp/>file<sp/>are<sp/>licensed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>GPL<sp/>version<sp/>2<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Kristian<sp/>Høgsberg<sp/>&lt;krh@redhat.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Jeff<sp/>Muizelaar<sp/>&lt;jeff@infidigm.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2005-2013,<sp/>2016<sp/>Albert<sp/>Astals<sp/>Cid<sp/>&lt;aacid@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2008<sp/>Pino<sp/>Toscano<sp/>&lt;pino@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Nickolay<sp/>V.<sp/>Shmyrev<sp/>&lt;nshmyrev@yandex.ru&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Scott<sp/>Turner<sp/>&lt;scotty1024@mac.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2006-2011,<sp/>2015<sp/>Carlos<sp/>Garcia<sp/>Campos<sp/>&lt;carlosgc@gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>Julien<sp/>Rebetez<sp/>&lt;julienr@svn.gnome.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Iñigo<sp/>Martínez<sp/>&lt;inigomartinez@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Brad<sp/>Hards<sp/>&lt;bradh@kde.org&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2008<sp/>Ilya<sp/>Gorenbein<sp/>&lt;igorenbein@finjan.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2012,<sp/>2013<sp/>Fabio<sp/>D&apos;Urso<sp/>&lt;fabiodurso@hotmail.it&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013,<sp/>2014<sp/>Thomas<sp/>Freitag<sp/>&lt;Thomas.Freitag@alfa.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Jason<sp/>Crain<sp/>&lt;jason@aquaticape.us&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Adrian<sp/>Johnson<sp/>&lt;ajohnson@redneon.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Philipp<sp/>Reinkemeier<sp/>&lt;philipp.reinkemeier@offis.de&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>see<sp/>a<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>please<sp/>see<sp/>the<sp/>Changelog<sp/>file<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>came<sp/>with<sp/>your<sp/>tarball<sp/>or<sp/>type<sp/>make<sp/>ChangeLog<sp/>if<sp/>you<sp/>are<sp/>building<sp/>from<sp/>git</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GCC_PRAGMAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GlobalParams.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Array.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Dict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PDFDoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;XRef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Link.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Gfx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GfxState.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Annot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TextOutputDev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Form.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Page.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Catalog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Form.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>pageLocker()<sp/><sp/><sp/>MutexLocker<sp/>locker(&amp;mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>pageLocker()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PDFRectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PDFRectangle::clipTo(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*rect)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>rect-&gt;x1)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>rect-&gt;x1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&gt;<sp/>rect-&gt;x2)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>rect-&gt;x2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&lt;<sp/>rect-&gt;x1)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>rect-&gt;x1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&gt;<sp/>rect-&gt;x2)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>rect-&gt;x2;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>rect-&gt;y1)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>rect-&gt;y1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;<sp/>rect-&gt;y2)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>rect-&gt;y2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>&lt;<sp/>rect-&gt;y1)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>rect-&gt;y1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>&gt;<sp/>rect-&gt;y2)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>rect-&gt;y2;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PageAttrs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">PageAttrs::PageAttrs(<ref refid="class_page_attrs" kindref="compound">PageAttrs</ref><sp/>*attrs,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>mBox;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GBool<sp/>isPage<sp/>=<sp/>dict-&gt;is(</highlight><highlight class="stringliteral">&quot;Page&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>old/default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attrs)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox<sp/>=<sp/>attrs-&gt;mediaBox;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>cropBox<sp/>=<sp/>attrs-&gt;cropBox;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>haveCropBox<sp/>=<sp/>attrs-&gt;haveCropBox;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>=<sp/>attrs-&gt;rotate;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>attrs-&gt;resources.copy(&amp;resources);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>default<sp/>MediaBox<sp/>to<sp/>8.5&quot;<sp/>x<sp/>11&quot;<sp/>--<sp/>this<sp/>shouldn&apos;t<sp/>be<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>some<sp/>(non-compliant)<sp/>PDF<sp/>files<sp/>don&apos;t<sp/>specify<sp/>a<sp/>MediaBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox.x1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox.y1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox.x2<sp/>=<sp/>612;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox.y2<sp/>=<sp/>792;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>cropBox.x1<sp/>=<sp/>cropBox.y1<sp/>=<sp/>cropBox.x2<sp/>=<sp/>cropBox.y2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>haveCropBox<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>resources.initNull();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>media<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readBox(dict,<sp/></highlight><highlight class="stringliteral">&quot;MediaBox&quot;</highlight><highlight class="normal">,<sp/>&amp;mBox))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mediaBox<sp/>=<sp/>mBox;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readBox(dict,<sp/></highlight><highlight class="stringliteral">&quot;CropBox&quot;</highlight><highlight class="normal">,<sp/>&amp;cropBox))<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>haveCropBox<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!haveCropBox)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>cropBox<sp/>=<sp/>mediaBox;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isPage)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cropBox<sp/>can<sp/>not<sp/>be<sp/>bigger<sp/>than<sp/>mediaBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cropBox.x2<sp/>-<sp/>cropBox.x1<sp/>&gt;<sp/>mediaBox.x2<sp/>-<sp/>mediaBox.x1)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cropBox.x1<sp/>=<sp/>mediaBox.x1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cropBox.x2<sp/>=<sp/>mediaBox.x2;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cropBox.y2<sp/>-<sp/>cropBox.y1<sp/>&gt;<sp/>mediaBox.y2<sp/>-<sp/>mediaBox.y1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cropBox.y1<sp/>=<sp/>mediaBox.y1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cropBox.y2<sp/>=<sp/>mediaBox.y2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>bleedBox<sp/>=<sp/>cropBox;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>readBox(dict,<sp/></highlight><highlight class="stringliteral">&quot;BleedBox&quot;</highlight><highlight class="normal">,<sp/>&amp;bleedBox);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>trimBox<sp/>=<sp/>cropBox;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>readBox(dict,<sp/></highlight><highlight class="stringliteral">&quot;TrimBox&quot;</highlight><highlight class="normal">,<sp/>&amp;trimBox);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>artBox<sp/>=<sp/>cropBox;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>readBox(dict,<sp/></highlight><highlight class="stringliteral">&quot;ArtBox&quot;</highlight><highlight class="normal">,<sp/>&amp;artBox);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rotate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Rotate&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isInt())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>=<sp/>obj1.getInt();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rotate<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rotate<sp/>&gt;=<sp/>360)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>misc<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;LastModified&quot;</highlight><highlight class="normal">,<sp/>&amp;lastModified);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;BoxColorInfo&quot;</highlight><highlight class="normal">,<sp/>&amp;boxColorInfo);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Group&quot;</highlight><highlight class="normal">,<sp/>&amp;group);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Metadata&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;PieceInfo&quot;</highlight><highlight class="normal">,<sp/>&amp;pieceInfo);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;SeparationInfo&quot;</highlight><highlight class="normal">,<sp/>&amp;separationInfo);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resource<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isDict())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>resources.free();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.copy(&amp;resources);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">PageAttrs::~PageAttrs()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>lastModified.free();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>boxColorInfo.free();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>group.free();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>metadata.free();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>pieceInfo.free();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>separationInfo.free();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>resources.free();</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PageAttrs::clipBoxes()<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>cropBox.clipTo(&amp;mediaBox);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>bleedBox.clipTo(&amp;mediaBox);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>trimBox.clipTo(&amp;mediaBox);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>artBox.clipTo(&amp;mediaBox);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">GBool<sp/>PageAttrs::readBox(<ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*box)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1,<sp/>obj2;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>GBool<sp/>ok;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(key,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isArray()<sp/>&amp;&amp;<sp/>obj1.arrayGetLength()<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.arrayGet(0,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isNum())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.x1<sp/>=<sp/>obj2.getNum();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.arrayGet(1,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isNum())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.y1<sp/>=<sp/>obj2.getNum();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.arrayGet(2,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isNum())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.x2<sp/>=<sp/>obj2.getNum();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.arrayGet(3,<sp/>&amp;obj2);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj2.isNum())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.y2<sp/>=<sp/>obj2.getNum();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>obj2.free();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.x1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tmp.x2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tmp.y1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>tmp.y2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.x1<sp/>&gt;<sp/>tmp.x2)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>tmp.x1;<sp/>tmp.x1<sp/>=<sp/>tmp.x2;<sp/>tmp.x2<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.y1<sp/>&gt;<sp/>tmp.y2)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>tmp.y1;<sp/>tmp.y1<sp/>=<sp/>tmp.y2;<sp/>tmp.y2<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*box<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">Page::Page(<ref refid="class_p_d_f_doc" kindref="compound">PDFDoc</ref><sp/>*docA,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numA,<sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*pageDict,<sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>pageRefA,<sp/><ref refid="class_page_attrs" kindref="compound">PageAttrs</ref><sp/>*attrsA,<sp/><ref refid="class_form" kindref="compound">Form</ref><sp/>*form)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>gInitMutex(&amp;mutex);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>ok<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>doc<sp/>=<sp/>docA;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>xref<sp/>=<sp/>doc-&gt;getXRef();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>num<sp/>=<sp/>numA;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>duration<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>annots<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>pageObj.initDict(pageDict);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>pageRef<sp/>=<sp/>pageRefA;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>attrs<sp/>=<sp/>attrsA;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>attrs-&gt;clipBoxes();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transtion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Trans&quot;</highlight><highlight class="normal">,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(trans.isRef()<sp/>||<sp/>trans.isDict()<sp/>||<sp/>trans.isNull()))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>transition<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>trans.getTypeName());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.free();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Dur&quot;</highlight><highlight class="normal">,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(tmp.isNum()<sp/>||<sp/>tmp.isNull()))<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>duration<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>tmp.getTypeName());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.isNum())<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>duration<sp/>=<sp/>tmp.getNum();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>tmp.free();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>annotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Annots&quot;</highlight><highlight class="normal">,<sp/>&amp;annotsObj);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(annotsObj.isRef()<sp/>||<sp/>annotsObj.isArray()<sp/>||<sp/>annotsObj.isNull()))<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>annotations<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>annotsObj.getTypeName());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>annotsObj.free();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err2;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Contents&quot;</highlight><highlight class="normal">,<sp/>&amp;contents);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(contents.isRef()<sp/>||<sp/>contents.isArray()<sp/>||</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.isNull()))<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>contents<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>contents.getTypeName());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.free();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thumb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Thumb&quot;</highlight><highlight class="normal">,<sp/>&amp;thumb);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(thumb.isStream()<sp/>||<sp/>thumb.isNull()<sp/>||<sp/>thumb.isRef()))<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>thumb<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>thumb.getTypeName());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thumb.free();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thumb.initNull();<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;AA&quot;</highlight><highlight class="normal">,<sp/>&amp;actions);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(actions.isDict()<sp/>||<sp/>actions.isNull()))<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errSyntaxError,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Page<sp/>additional<sp/>action<sp/>object<sp/>(page<sp/>{0:d})<sp/>is<sp/>wrong<sp/>type<sp/>({1:s})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num,<sp/>actions.getTypeName());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actions.free();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actions.initNull();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>trans.initNull();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/>err2:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>annotsObj.initNull();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/>err1:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>contents.initNull();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>ok<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">Page::~Page()<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>attrs;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>annots;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>pageObj.free();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>annotsObj.free();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>contents.free();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>trans.free();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>thumb.free();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>actions.free();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>gDestroyMutex(&amp;mutex);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*Page::getResourceDict()<sp/>{<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attrs-&gt;getResourceDict();</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*Page::getResourceDictCopy(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA)<sp/>{<sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>pageLocker();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict<sp/>=<sp/>attrs-&gt;getResourceDict();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict<sp/>?<sp/>dict-&gt;copy(xrefA)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::replaceXRef(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*pageDict<sp/>=<sp/>pageObj.getDict()-&gt;copy(xrefA);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>xref<sp/>=<sp/>xrefA;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>trans.free();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Trans&quot;</highlight><highlight class="normal">,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>annotsObj.free();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Annots&quot;</highlight><highlight class="normal">,<sp/>&amp;annotsObj);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>contents.free();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Contents&quot;</highlight><highlight class="normal">,<sp/>&amp;contents);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contents.isArray())<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>contents.free();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Contents&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1)-&gt;getArray()-&gt;copy(xrefA,<sp/>&amp;contents);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>thumb.free();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;Thumb&quot;</highlight><highlight class="normal">,<sp/>&amp;thumb);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>actions.free();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookupNF(</highlight><highlight class="stringliteral">&quot;AA&quot;</highlight><highlight class="normal">,<sp/>&amp;actions);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>pageDict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isDict())<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>attrs-&gt;replaceResource(obj1);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pageDict;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><ref refid="class_annots" kindref="compound">Annots</ref><sp/>*Page::getAnnots(<ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!annots)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>annots<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_annots" kindref="compound">Annots</ref>(doc,<sp/>num,<sp/>getAnnots(&amp;obj,<sp/>(xrefA<sp/>==<sp/>NULL)<sp/>?<sp/>xref<sp/>:<sp/>xrefA));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.free();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>annots;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::addAnnot(<ref refid="class_annot" kindref="compound">Annot</ref><sp/>*annot)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>annotRef<sp/>=<sp/>annot-&gt;getRef<sp/>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>have<sp/>annots<sp/>before<sp/>adding<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>it&apos;s<sp/>an<sp/>empty<sp/>list<sp/>so<sp/>that<sp/>we<sp/>can<sp/>safely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>annots-&gt;appendAnnot(annot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>pageLocker();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>getAnnots();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotsObj.isNull())<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>annotsRef;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>page<sp/>doesn&apos;t<sp/>have<sp/>annots<sp/>array,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.initArray(xref);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.arrayAdd(tmp.initRef<sp/>(annotRef.num,<sp/>annotRef.gen));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.free();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>annotsRef<sp/>=<sp/>xref-&gt;addIndirectObject<sp/>(&amp;obj1);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>annotsObj.initRef(annotsRef.num,<sp/>annotsRef.gen);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>pageObj.dictSet<sp/>(</highlight><highlight class="stringliteral">&quot;Annots&quot;</highlight><highlight class="normal">,<sp/>&amp;annotsObj);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>xref-&gt;setModifiedObject<sp/>(&amp;pageObj,<sp/>pageRef);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>getAnnots(&amp;obj1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isArray())<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj1.arrayAdd<sp/>(tmp.initRef<sp/>(annotRef.num,<sp/>annotRef.gen));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotsObj.isRef())</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xref-&gt;setModifiedObject<sp/>(&amp;obj1,<sp/>annotsObj.getRef());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xref-&gt;setModifiedObject<sp/>(&amp;pageObj,<sp/>pageRef);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Popup<sp/>annots<sp/>are<sp/>already<sp/>handled<sp/>by<sp/>markup<sp/>annots,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>add<sp/>to<sp/>the<sp/>list<sp/>only<sp/>Popup<sp/>annots<sp/>without<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>markup<sp/>annotation<sp/>associated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annot-&gt;getType()<sp/>!=<sp/>Annot::typePopup<sp/>||</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_annot_popup" kindref="compound">AnnotPopup</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(annot)-&gt;getParentNF()-&gt;isNull())<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>annots-&gt;appendAnnot(annot);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>annot-&gt;setPage(num,<sp/>gTrue);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="class_annot_markup" kindref="compound">AnnotMarkup</ref><sp/>*annotMarkup<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="class_annot_markup" kindref="compound">AnnotMarkup</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(annot);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotMarkup)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_annot_popup" kindref="compound">AnnotPopup</ref><sp/>*annotPopup<sp/>=<sp/>annotMarkup-&gt;getPopup();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotPopup)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addAnnot(annotPopup);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::removeAnnot(<ref refid="class_annot" kindref="compound">Annot</ref><sp/>*annot)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>annotRef<sp/>=<sp/>annot-&gt;getRef();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>annArray;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>pageLocker();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>getAnnots(&amp;annArray);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annArray.isArray())<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>annotation<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>idx<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>annArray.arrayGetLength();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annArray.arrayGetNF(i,<sp/>&amp;tmp)-&gt;isRef())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ref" kindref="compound">Ref</ref><sp/>currAnnot<sp/>=<sp/>tmp.getRef();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currAnnot.num<sp/>==<sp/>annotRef.num<sp/>&amp;&amp;<sp/>currAnnot.gen<sp/>==<sp/>annotRef.gen)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp.free();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error(errInternal,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Annotation<sp/>doesn&apos;t<sp/>belong<sp/>to<sp/>this<sp/>page&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>annArray.free();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>annots-&gt;removeAnnot(annot);<sp/></highlight><highlight class="comment">//<sp/>Gracefully<sp/>fails<sp/>on<sp/>popup<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>annArray.arrayRemove(idx);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>xref-&gt;removeIndirectObject(annotRef);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotsObj.isRef())<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xref-&gt;setModifiedObject<sp/>(&amp;annArray,<sp/>annotsObj.getRef());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xref-&gt;setModifiedObject<sp/>(&amp;pageObj,<sp/>pageRef);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>annArray.free();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>annot-&gt;removeReferencedObjects();<sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Might<sp/>recurse<sp/>in<sp/>removeAnnot<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>annot-&gt;setPage(0,<sp/>gFalse);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="class_links" kindref="compound">Links</ref><sp/>*Page::getLinks()<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_links" kindref="compound">Links</ref>(getAnnots());</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="class_form_page_widgets" kindref="compound">FormPageWidgets</ref><sp/>*Page::getFormWidgets()<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_form_page_widgets" kindref="compound">FormPageWidgets</ref>(getAnnots(),<sp/>num,<sp/>doc-&gt;getCatalog()-&gt;getForm());</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::display(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,<sp/>GBool<sp/>useMediaBox,<sp/>GBool<sp/>crop,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>printing,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*abortCheckCbk)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data),</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkData,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*annotDisplayDecideCbk)(<ref refid="class_annot" kindref="compound">Annot</ref><sp/>*annot,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data),</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*annotDisplayDecideCbkData,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>copyXRef)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>displaySlice(out,<sp/>hDPI,<sp/>vDPI,<sp/>rotate,<sp/>useMediaBox,<sp/>crop,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>printing,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortCheckCbk,<sp/>abortCheckCbkData,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotDisplayDecideCbk,<sp/>annotDisplayDecideCbkData,<sp/>copyXRef);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*Page::createGfx(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,<sp/>GBool<sp/>useMediaBox,<sp/>GBool<sp/>crop,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceY,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceW,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceH,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>printing,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*abortCheckCbk)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data),</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkData,<sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*xrefA)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*mediaBox,<sp/>*cropBox;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>box;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>rotate<sp/>+=<sp/>getRotate();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>&gt;=<sp/>360)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>makeBox(hDPI,<sp/>vDPI,<sp/>rotate,<sp/>useMediaBox,<sp/>out-&gt;upsideDown(),</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sliceX,<sp/>sliceY,<sp/>sliceW,<sp/>sliceH,<sp/>&amp;box,<sp/>&amp;crop);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>cropBox<sp/>=<sp/>getCropBox();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>mediaBox<sp/>=<sp/>getMediaBox();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalParams-&gt;getPrintCommands())<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>MediaBox<sp/>=<sp/>ll:%g,%g<sp/>ur:%g,%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mediaBox-&gt;x1,<sp/>mediaBox-&gt;y1,<sp/>mediaBox-&gt;x2,<sp/>mediaBox-&gt;y2);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>CropBox<sp/>=<sp/>ll:%g,%g<sp/>ur:%g,%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cropBox-&gt;x1,<sp/>cropBox-&gt;y1,<sp/>cropBox-&gt;x2,<sp/>cropBox-&gt;y2);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>Rotate<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>attrs-&gt;getRotate());</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!crop)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>crop<sp/>=<sp/>(box<sp/>==<sp/>*cropBox)<sp/>&amp;&amp;<sp/>out-&gt;needClipToCropBox();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>gfx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx" kindref="compound">Gfx</ref>(doc,<sp/>out,<sp/>num,<sp/>attrs-&gt;getResourceDict(),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hDPI,<sp/>vDPI,<sp/>&amp;box,<sp/>crop<sp/>?<sp/>cropBox<sp/>:<sp/>(<ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*)NULL,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotate,<sp/>abortCheckCbk,<sp/>abortCheckCbkData,<sp/>xrefA);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gfx;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::displaySlice(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,<sp/>GBool<sp/>useMediaBox,<sp/>GBool<sp/>crop,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceY,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceW,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceH,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>printing,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*abortCheckCbk)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data),</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*abortCheckCbkData,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>(*annotDisplayDecideCbk)(<ref refid="class_annot" kindref="compound">Annot</ref><sp/>*annot,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data),</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*annotDisplayDecideCbkData,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>copyXRef)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="class_annots" kindref="compound">Annots</ref><sp/>*annotList;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out-&gt;checkPageSlice(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>hDPI,<sp/>vDPI,<sp/>rotate,<sp/>useMediaBox,<sp/>crop,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliceX,<sp/>sliceY,<sp/>sliceW,<sp/>sliceH,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printing,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortCheckCbk,<sp/>abortCheckCbkData,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotDisplayDecideCbk,<sp/>annotDisplayDecideCbkData))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>pageLocker();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="class_x_ref" kindref="compound">XRef</ref><sp/>*localXRef<sp/>=<sp/>(copyXRef)<sp/>?<sp/>xref-&gt;copy()<sp/>:<sp/>xref;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyXRef)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>replaceXRef(localXRef);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>gfx<sp/>=<sp/>createGfx(out,<sp/>hDPI,<sp/>vDPI,<sp/>rotate,<sp/>useMediaBox,<sp/>crop,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliceX,<sp/>sliceY,<sp/>sliceW,<sp/>sliceH,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printing,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortCheckCbk,<sp/>abortCheckCbkData,<sp/>localXRef);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>contents.fetch(localXRef,<sp/>&amp;obj);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj.isNull())<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;saveState();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;display(&amp;obj);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;restoreState();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>pages<sp/>need<sp/>to<sp/>call<sp/>dump<sp/>to<sp/>do<sp/>any<sp/>setup<sp/>required<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OutputDev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;dump();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>obj.free();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>annotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>annotList<sp/>=<sp/>getAnnots();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(annotList-&gt;getNumAnnots()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalParams-&gt;getPrintCommands())<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>Annotations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>annotList-&gt;getNumAnnots();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_annot" kindref="compound">Annot</ref><sp/>*annot<sp/>=<sp/>annotList-&gt;getAnnot(i);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((annotDisplayDecideCbk<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*annotDisplayDecideCbk)(annot,<sp/>annotDisplayDecideCbkData))<sp/>||<sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!annotDisplayDecideCbk)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annotList-&gt;getAnnot(i)-&gt;draw(gfx,<sp/>printing);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;dump();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gfx;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyXRef)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>replaceXRef(doc-&gt;getXRef());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>localXRef;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::display(<ref refid="class_gfx" kindref="compound">Gfx</ref><sp/>*gfx)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>contents.fetch(xref,<sp/>&amp;obj);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obj.isNull())<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;saveState();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;display(&amp;obj);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx-&gt;restoreState();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>obj.free();</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">GBool<sp/>Page::loadThumb(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**data_out,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height_out,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*rowstride_out)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixbufdatasize;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height,<sp/>bits;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1,<sp/>fetched_thumb;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="class_dict" kindref="compound">Dict</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_color_space" kindref="compound">GfxColorSpace</ref><sp/>*colorSpace;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>GBool<sp/>success<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref><sp/>*str;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref><sp/>*colorMap;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>stream<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>pageLocker();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>thumb.fetch(xref,<sp/>&amp;fetched_thumb);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fetched_thumb.isStream())<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>fetched_thumb.free();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gFalse;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>dict<sp/>=<sp/>fetched_thumb.streamGetDict();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>fetched_thumb.getStream();<sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict-&gt;lookupInt(</highlight><highlight class="stringliteral">&quot;Width&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">,<sp/>&amp;width))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict-&gt;lookupInt(</highlight><highlight class="stringliteral">&quot;Height&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal">,<sp/>&amp;height))</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dict-&gt;lookupInt(</highlight><highlight class="stringliteral">&quot;BitsPerComponent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BPC&quot;</highlight><highlight class="normal">,<sp/>&amp;bits))</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>invalid<sp/>dimensions<sp/>and<sp/>integer<sp/>overflow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>0<sp/>||<sp/>height<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>INT_MAX<sp/>/<sp/>3<sp/>/<sp/>height)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>pixbufdatasize<sp/>=<sp/>width<sp/>*<sp/>height<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>color<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>dict-&gt;lookup<sp/>(</highlight><highlight class="stringliteral">&quot;ColorSpace&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isNull<sp/>())<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.free<sp/>();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>dict-&gt;lookup<sp/>(</highlight><highlight class="stringliteral">&quot;CS&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>colorSpace<sp/>=<sp/>GfxColorSpace::parse(NULL,<sp/>&amp;obj1,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!colorSpace)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Cannot<sp/>parse<sp/>color<sp/>space\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;Decode&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj1.isNull())<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>dict-&gt;lookup(</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/>&amp;obj1);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>colorMap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_image_color_map" kindref="compound">GfxImageColorMap</ref>(bits,<sp/>&amp;obj1,<sp/>colorSpace);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>obj1.free();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!colorMap-&gt;isOk())<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>invalid<sp/>colormap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>colorMap;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail1;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_out)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixbufdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>gmalloc(pixbufdatasize);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>pixbufdata;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_image_stream" kindref="compound">ImageStream</ref><sp/>*imgstr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_image_stream" kindref="compound">ImageStream</ref>(str,<sp/>width,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorMap-&gt;getNumPixelComps(),</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorMap-&gt;getBits());</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>imgstr-&gt;reset();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>height;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>width;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guchar<sp/>pix[gfxColorMaxComps];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_gfx_r_g_b" kindref="compound">GfxRGB</ref><sp/>rgb;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgstr-&gt;getPixel(pix);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorMap-&gt;getRGB(pix,<sp/>&amp;rgb);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>colToByte(rgb.r);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>colToByte(rgb.g);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>colToByte(rgb.b);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>*data_out<sp/>=<sp/>pixbufdata;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>imgstr-&gt;close();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>imgstr;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>success<sp/>=<sp/>gTrue;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_out)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>*width_out<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height_out)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_out<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowstride_out)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>*rowstride_out<sp/>=<sp/>width<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>colorMap;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/>fail1:</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>fetched_thumb.free();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::makeBox(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GBool<sp/>useMediaBox,<sp/>GBool<sp/>upsideDown,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sliceX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sliceY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sliceW,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sliceH,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*box,<sp/>GBool<sp/>*crop)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><ref refid="class_p_d_f_rectangle" kindref="compound">PDFRectangle</ref><sp/>*mediaBox,<sp/>*cropBox,<sp/>*baseBox;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kx,<sp/>ky;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>mediaBox<sp/>=<sp/>getMediaBox();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>cropBox<sp/>=<sp/>getCropBox();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sliceW<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>sliceH<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>baseBox<sp/>=<sp/>useMediaBox<sp/>?<sp/>mediaBox<sp/>:<sp/>cropBox;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>kx<sp/>=<sp/>72.0<sp/>/<sp/>hDPI;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ky<sp/>=<sp/>72.0<sp/>/<sp/>vDPI;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>==<sp/>90)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upsideDown)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>kx<sp/>*<sp/>sliceX;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>kx<sp/>*<sp/>(sliceX<sp/>+<sp/>sliceW);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>==<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>kx<sp/>*<sp/>(sliceX<sp/>+<sp/>sliceW);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>kx<sp/>*<sp/>sliceX;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upsideDown)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>==<sp/>270)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upsideDown)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x2<sp/>-<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>kx<sp/>*<sp/>(sliceX<sp/>+<sp/>sliceW);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>kx<sp/>*<sp/>sliceX;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x1<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>kx<sp/>*<sp/>sliceX;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x2<sp/>=<sp/>baseBox-&gt;x1<sp/>+<sp/>kx<sp/>*<sp/>(sliceX<sp/>+<sp/>sliceW);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upsideDown)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y2<sp/>-<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y1<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>ky<sp/>*<sp/>sliceY;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;y2<sp/>=<sp/>baseBox-&gt;y1<sp/>+<sp/>ky<sp/>*<sp/>(sliceY<sp/>+<sp/>sliceH);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useMediaBox)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>*box<sp/>=<sp/>*mediaBox;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>*box<sp/>=<sp/>*cropBox;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>*crop<sp/>=<sp/>gFalse;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::processLinks(<ref refid="class_output_dev" kindref="compound">OutputDev</ref><sp/>*out)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><ref refid="class_links" kindref="compound">Links</ref><sp/>*links;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>links<sp/>=<sp/>getLinks();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>links-&gt;getNumLinks();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;processLink(links-&gt;getLink(i));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>links;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Page::getDefaultCTM(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ctm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hDPI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vDPI,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotate,<sp/>GBool<sp/>useMediaBox,<sp/>GBool<sp/>upsideDown)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref><sp/>*state;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>rotate<sp/>+=<sp/>getRotate();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>&gt;=<sp/>360)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotate<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>rotate<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gfx_state" kindref="compound">GfxState</ref>(hDPI,<sp/>vDPI,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMediaBox<sp/>?<sp/>getMediaBox()<sp/>:<sp/>getCropBox(),</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotate,<sp/>upsideDown);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>ctm[i]<sp/>=<sp/>state-&gt;getCTM()[i];</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><ref refid="class_link_action" kindref="compound">LinkAction</ref>*<sp/>Page::getAdditionalAction(PageAdditionalActionsType<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>additionalActionsObject;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><ref refid="class_link_action" kindref="compound">LinkAction</ref><sp/>*linkAction<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actions.fetch(doc-&gt;getXRef(),<sp/>&amp;additionalActionsObject)-&gt;isDict())<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>(type<sp/>==<sp/>actionOpenPage<sp/>?<sp/><sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/>actionClosePage<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>actionObject;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additionalActionsObject.dictLookup(key,<sp/>&amp;actionObject)-&gt;isDict())</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linkAction<sp/>=<sp/>LinkAction::parseAction(&amp;actionObject,<sp/>doc-&gt;getCatalog()-&gt;getBaseURI());</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>actionObject.free();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>additionalActionsObject.free();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linkAction;</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="thirdparty/poppler/poppler/Page.cc"/>
  </compounddef>
</doxygen>
