<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="thirdparty_2beatroot_2event_8h" kind="file" language="C++">
    <compoundname>Event.h</compoundname>
    <includes local="no">list</includes>
    <includedby refid="_beat_tracker_8h" local="yes">thirdparty/beatroot/BeatTracker.h</includedby>
    <includedby refid="_agent_8h" local="yes">thirdparty/beatroot/Agent.h</includedby>
    <includedby refid="_agent_list_8h" local="yes">thirdparty/beatroot/AgentList.h</includedby>
    <includedby refid="_induction_8h" local="yes">thirdparty/beatroot/Induction.h</includedby>
    <incdepgraph>
      <node id="75952">
        <label>list</label>
      </node>
      <node id="75951">
        <label>thirdparty/beatroot/Event.h</label>
        <link refid="thirdparty_2beatroot_2event_8h"/>
        <childnode refid="75952" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="75957">
        <label>thirdparty/beatroot/BeatTracker.cpp</label>
        <link refid="_beat_tracker_8cpp_source"/>
      </node>
      <node id="75960">
        <label>thirdparty/beatroot/Induction.cpp</label>
        <link refid="_induction_8cpp_source"/>
      </node>
      <node id="75955">
        <label>mscore/importmidi/importmidi_beat.cpp</label>
        <link refid="importmidi__beat_8cpp_source"/>
      </node>
      <node id="75958">
        <label>thirdparty/beatroot/Agent.h</label>
        <link refid="_agent_8h_source"/>
        <childnode refid="75956" relation="include">
        </childnode>
        <childnode refid="75959" relation="include">
        </childnode>
        <childnode refid="75957" relation="include">
        </childnode>
        <childnode refid="75960" relation="include">
        </childnode>
      </node>
      <node id="75959">
        <label>thirdparty/beatroot/AgentList.cpp</label>
        <link refid="_agent_list_8cpp_source"/>
      </node>
      <node id="75956">
        <label>thirdparty/beatroot/Agent.cpp</label>
        <link refid="_agent_8cpp_source"/>
      </node>
      <node id="75962">
        <label>thirdparty/beatroot/Induction.h</label>
        <link refid="_induction_8h_source"/>
        <childnode refid="75957" relation="include">
        </childnode>
        <childnode refid="75960" relation="include">
        </childnode>
      </node>
      <node id="75953">
        <label>thirdparty/beatroot/Event.h</label>
        <link refid="thirdparty_2beatroot_2event_8h"/>
        <childnode refid="75954" relation="include">
        </childnode>
        <childnode refid="75958" relation="include">
        </childnode>
        <childnode refid="75961" relation="include">
        </childnode>
        <childnode refid="75962" relation="include">
        </childnode>
      </node>
      <node id="75961">
        <label>thirdparty/beatroot/AgentList.h</label>
        <link refid="_agent_list_8h_source"/>
        <childnode refid="75956" relation="include">
        </childnode>
        <childnode refid="75959" relation="include">
        </childnode>
        <childnode refid="75957" relation="include">
        </childnode>
        <childnode refid="75960" relation="include">
        </childnode>
      </node>
      <node id="75954">
        <label>thirdparty/beatroot/BeatTracker.h</label>
        <link refid="_beat_tracker_8h_source"/>
        <childnode refid="75955" relation="include">
        </childnode>
        <childnode refid="75956" relation="include">
        </childnode>
        <childnode refid="75957" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_event" prot="public">Event</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="thirdparty_2beatroot_2event_8h_1afa17222d05375dd8069a39215399983f" prot="public" static="no">
        <type>std::list&lt; <ref refid="struct_event" kindref="compound">Event</ref> &gt;</type>
        <definition>typedef std::list&lt;Event&gt; EventList</definition>
        <argsstring></argsstring>
        <name>EventList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/beatroot/Event.h" line="40" column="1" bodyfile="thirdparty/beatroot/Event.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Vamp<sp/>feature<sp/>extraction<sp/>plugin<sp/>for<sp/>the<sp/>BeatRoot<sp/>beat<sp/>tracker.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Centre<sp/>for<sp/>Digital<sp/>Music,<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>This<sp/>file<sp/>copyright<sp/>2011<sp/>Simon<sp/>Dixon,<sp/>Chris<sp/>Cannam<sp/>and<sp/>QMUL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/>See<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>COPYING<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_event" kindref="compound">Event</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>salience;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_event" kindref="compound">Event</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>time(0),<sp/>salience(0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_event" kindref="compound">Event</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>time(t),<sp/>salience(s)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_event" kindref="compound">Event</ref><sp/>&amp;e)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time<sp/>!=<sp/>e.time<sp/>||<sp/>salience<sp/>!=<sp/>e.salience;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;Event&gt;<sp/>EventList;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="thirdparty/beatroot/Event.h"/>
  </compounddef>
</doxygen>
