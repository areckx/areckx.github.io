<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_ms_1_1_score" kind="class" language="C++" prot="public">
    <compoundname>Ms::Score</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref refid="class_ms_1_1_score_element" prot="private" virt="non-virtual">Ms::ScoreElement</basecompoundref>
    <derivedcompoundref refid="class_ms_1_1_master_score" prot="public" virt="non-virtual">Ms::MasterScore</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4d" prot="public" static="no">
        <name>FileError</name>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da061a67e6391f7014c13cb77a03e1f7bb" prot="public">
          <name>FILE_NO_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da46c82d16f79f5d93bf336fe7ef8f9acb" prot="public">
          <name>FILE_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4dacd54d99c8efb3c2db794197045f5b83c" prot="public">
          <name>FILE_NOT_FOUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da08715903eca17abcd7ecdb74bc10aa4b" prot="public">
          <name>FILE_OPEN_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4daa27277b5817b9e70a9c96d61d241381b" prot="public">
          <name>FILE_BAD_FORMAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da2eb2472eb67b4e94a8aa2b6cccf98f99" prot="public">
          <name>FILE_UNKNOWN_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4dac0b82d02da170248e71a1c1fc978aa8c" prot="public">
          <name>FILE_NO_ROOTFILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da97f3a62570f88012f89d1285ff7303b4" prot="public">
          <name>FILE_TOO_OLD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da41be96a9a0585db6040f99907248c307" prot="public">
          <name>FILE_TOO_NEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da2cdc1eecb70cc6dabd09b6f9be6c72c8" prot="public">
          <name>FILE_CORRUPTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da869ff5722a87a240fb180def6fc78e0d" prot="public">
          <name>FILE_USER_ABORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4da042b020e14da3e6fa888b05c7b6809cf" prot="public">
          <name>FILE_IGNORE_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="365" column="1" bodyfile="libmscore/score.h" bodystart="365" bodyend="378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_ms_1_1_score_1aaa2cedab583a4376b980563239e847d5" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <read>duration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a8d88fa2de642c8f8400eb74d9222d2c8" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref></type>
        <definition>Measure * Ms::Score::firstMeasureMM</definition>
        <argsstring></argsstring>
        <name>firstMeasureMM</name>
        <read>firstMeasureMM</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a4c68c07c39d857a82fad499c0bc900ed" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::harmonyCount</definition>
        <argsstring></argsstring>
        <name>harmonyCount</name>
        <read>harmonyCount</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a3a9f681c928d73b9ee2ba233bea3c2e4" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Ms::Score::hasHarmonies</definition>
        <argsstring></argsstring>
        <name>hasHarmonies</name>
        <read>hasHarmonies</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a54ca8639b81f619bb06d3ed7e65fdd84" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Ms::Score::hasLyrics</definition>
        <argsstring></argsstring>
        <name>hasLyrics</name>
        <read>hasLyrics</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1afb50693f0bbe6d2fc07b0263d53ea017" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::keysig</definition>
        <argsstring></argsstring>
        <name>keysig</name>
        <read>keysig</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1aaf6255a6806f6abcc7fc675165b529cd" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref></type>
        <definition>Measure * Ms::Score::lastMeasure</definition>
        <argsstring></argsstring>
        <name>lastMeasure</name>
        <read>lastMeasure</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1aed4c276491165d33e254a8308e37863f" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref></type>
        <definition>Measure * Ms::Score::lastMeasureMM</definition>
        <argsstring></argsstring>
        <name>lastMeasureMM</name>
        <read>lastMeasureMM</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a059dc116e5336ee1210ee33c31c336e3" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Ms::Segment</ref></type>
        <definition>Segment * Ms::Score::lastSegment</definition>
        <argsstring></argsstring>
        <name>lastSegment</name>
        <read>lastSegment</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a2afdf85fb12f3b09b51899c8334b135d" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::lyricCount</definition>
        <argsstring></argsstring>
        <name>lyricCount</name>
        <read>lyricCount</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1ad00f0f63521a6ff16cc056f4bb4f427d" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::nmeasures</definition>
        <argsstring></argsstring>
        <name>nmeasures</name>
        <read>nmeasures</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a195dca9b1b7723e6c16877d98498dde0" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::npages</definition>
        <argsstring></argsstring>
        <name>npages</name>
        <read>npages</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1a9a57365ab6c124736b1c5fa0507671f0" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::nstaves</definition>
        <argsstring></argsstring>
        <name>nstaves</name>
        <read>nstaves</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_ms_1_1_score_1aab368312099ccba85cd4c6746bf76aa2" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Ms::Score::ntracks</definition>
        <argsstring></argsstring>
        <name>ntracks</name>
        <read>ntracks</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="315" column="1" bodyfile="libmscore/score.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_score_1ad8ed2e4e3cc8bdbc20326783d172ad31" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_linkId</definition>
        <argsstring></argsstring>
        <name>_linkId</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="381" column="1" bodyfile="libmscore/score.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a23a46b67f555373ddb4ebcafa31ce3f8" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
        <definition>MasterScore* Ms::Score::_masterScore</definition>
        <argsstring></argsstring>
        <name>_masterScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="382" column="1" bodyfile="libmscore/score.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a130b4e0c4ebf8e21b59f98da1a92f7bd" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_muse_score_view" kindref="compound">MuseScoreView</ref> * &gt;</type>
        <definition>QList&lt;MuseScoreView*&gt; Ms::Score::viewer</definition>
        <argsstring></argsstring>
        <name>viewer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="383" column="1" bodyfile="libmscore/score.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a1173c9c33e967b70978974f17d99b7e5" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> *</type>
        <definition>Excerpt* Ms::Score::_excerpt</definition>
        <argsstring></argsstring>
        <name>_excerpt</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="384" column="1" bodyfile="libmscore/score.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a5a0ec96141b6d4326d6c83e696c91873" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::_mscoreVersion</definition>
        <argsstring></argsstring>
        <name>_mscoreVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="386" column="1" bodyfile="libmscore/score.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a70593da3c40d5fa6eb68b6119f673d13" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_mscoreRevision</definition>
        <argsstring></argsstring>
        <name>_mscoreRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="387" column="1" bodyfile="libmscore/score.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a41fb8760fc2457ced89b47e01edda57b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::_layerTags[32]</definition>
        <argsstring>[32]</argsstring>
        <name>_layerTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="389" column="1" bodyfile="libmscore/score.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a31366d27908df1ff62529dccf0ca2295" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::_layerTagComments[32]</definition>
        <argsstring>[32]</argsstring>
        <name>_layerTagComments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="390" column="1" bodyfile="libmscore/score.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a7c141bccf3713e27da3f93064d2f9585" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="struct_ms_1_1_layer" kindref="compound">Layer</ref> &gt;</type>
        <definition>QList&lt;Layer&gt; Ms::Score::_layer</definition>
        <argsstring></argsstring>
        <name>_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="391" column="1" bodyfile="libmscore/score.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a7570b23c995ef2f38d45eafc7ead3c13" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_currentLayer</definition>
        <argsstring></argsstring>
        <name>_currentLayer</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="392" column="1" bodyfile="libmscore/score.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ac325e3d1dc5f2586dffaa79ef0f6950b" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_score_font" kindref="compound">ScoreFont</ref> *</type>
        <definition>ScoreFont* Ms::Score::_scoreFont</definition>
        <argsstring></argsstring>
        <name>_scoreFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="394" column="1" bodyfile="libmscore/score.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1aa77ad30e413eb09faaaf28ed54bcc86d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_pageNumberOffset</definition>
        <argsstring></argsstring>
        <name>_pageNumberOffset</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
<para>Offset for page numbers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="395" column="1" bodyfile="libmscore/score.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a6aa848eae01fce5b14a02ddb76acb8bd" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_update_state" kindref="compound">UpdateState</ref></type>
        <definition>UpdateState Ms::Score::_updateState</definition>
        <argsstring></argsstring>
        <name>_updateState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="397" column="1" bodyfile="libmscore/score.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1aa80687f73a99016833f49e44db47ae5f" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_measure_base_list" kindref="compound">MeasureBaseList</ref></type>
        <definition>MeasureBaseList Ms::Score::_measures</definition>
        <argsstring></argsstring>
        <name>_measures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="399" column="1" bodyfile="libmscore/score.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a52ff01b79235325e1073f7deac5a1925" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> * &gt;</type>
        <definition>QList&lt;Part*&gt; Ms::Score::_parts</definition>
        <argsstring></argsstring>
        <name>_parts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="400" column="1" bodyfile="libmscore/score.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a2bf2d8bb97e185e0230f52cfc550c8db" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> * &gt;</type>
        <definition>QList&lt;Staff*&gt; Ms::Score::_staves</definition>
        <argsstring></argsstring>
        <name>_staves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="401" column="1" bodyfile="libmscore/score.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a7001b471c0503bd447efe37b0518ced9" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_spanner_map" kindref="compound">SpannerMap</ref></type>
        <definition>SpannerMap Ms::Score::_spanner</definition>
        <argsstring></argsstring>
        <name>_spanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="403" column="1" bodyfile="libmscore/score.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a089fc60c82e4545af67d42ef3f805e15" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt;</type>
        <definition>std::set&lt;Spanner*&gt; Ms::Score::_unmanagedSpanner</definition>
        <argsstring></argsstring>
        <name>_unmanagedSpanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="404" column="1" bodyfile="libmscore/score.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a3f86faca23c67960a07eaebab3e0349e" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_page" kindref="compound">Page</ref> * &gt;</type>
        <definition>QList&lt;Page*&gt; Ms::Score::_pages</definition>
        <argsstring></argsstring>
        <name>_pages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="409" column="1" bodyfile="libmscore/score.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a7cfa9fe3b3082e10b3aafff548af29fc" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_ms_1_1_system" kindref="compound">System</ref> * &gt;</type>
        <definition>QList&lt;System*&gt; Ms::Score::_systems</definition>
        <argsstring></argsstring>
        <name>_systems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="410" column="1" bodyfile="libmscore/score.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a8470abb18a56f2dad27bbf2498a3af1a" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_input_state" kindref="compound">InputState</ref></type>
        <definition>InputState Ms::Score::_is</definition>
        <argsstring></argsstring>
        <name>_is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="412" column="1" bodyfile="libmscore/score.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a9bd795f1f46c86ab42dbca563eeb2f1e" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_m_style" kindref="compound">MStyle</ref></type>
        <definition>MStyle Ms::Score::_style</definition>
        <argsstring></argsstring>
        <name>_style</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="413" column="1" bodyfile="libmscore/score.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1af5f4ac5ffdbe90133c042fcbb1db182e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_created</definition>
        <argsstring></argsstring>
        <name>_created</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>file is never saved, has generated name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="415" column="1" bodyfile="libmscore/score.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a3aadab23336d999ae58485b7f130767f" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::_tmpName</definition>
        <argsstring></argsstring>
        <name>_tmpName</name>
        <briefdescription>
<para>auto saved with this name if not empty </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="416" column="1" bodyfile="libmscore/score.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1afc6fbf7b36515a2f6e930190baed3929" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::_importedFilePath</definition>
        <argsstring></argsstring>
        <name>_importedFilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="417" column="1" bodyfile="libmscore/score.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ad9825b4550710f34e85f7aa249d4f499" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showInvisible</definition>
        <argsstring></argsstring>
        <name>_showInvisible</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="419" column="1" bodyfile="libmscore/score.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1abdf5356d991c6e7b82f308cc49cf0d95" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showUnprintable</definition>
        <argsstring></argsstring>
        <name>_showUnprintable</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="420" column="1" bodyfile="libmscore/score.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1af2a18ba3ec9953f75c206d9955b6ccbd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showFrames</definition>
        <argsstring></argsstring>
        <name>_showFrames</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="421" column="1" bodyfile="libmscore/score.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a432b9f1374903482020fbfae794fe646" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showPageborders</definition>
        <argsstring></argsstring>
        <name>_showPageborders</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="422" column="1" bodyfile="libmscore/score.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a00f7a5331208e94c04cb63a026bf041a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_markIrregularMeasures</definition>
        <argsstring></argsstring>
        <name>_markIrregularMeasures</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="423" column="1" bodyfile="libmscore/score.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a83dbf3b4bf7490b8cd16cac2a5850058" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showInstrumentNames</definition>
        <argsstring></argsstring>
        <name>_showInstrumentNames</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="424" column="1" bodyfile="libmscore/score.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a84dfddee94c6532d6df8279129cb8384" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_showVBox</definition>
        <argsstring></argsstring>
        <name>_showVBox</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="425" column="1" bodyfile="libmscore/score.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ab3a8c7952253a5c8b38dbfac7add89e0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_printing</definition>
        <argsstring></argsstring>
        <name>_printing</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>True if we are drawing to a printer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="426" column="1" bodyfile="libmscore/score.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ac54da01bb963abb983f60eadea99f9ca" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_playlistDirty</definition>
        <argsstring></argsstring>
        <name>_playlistDirty</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="427" column="1" bodyfile="libmscore/score.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ae45c3ecd8fd7727b3b05e601994f13f2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_autosaveDirty</definition>
        <argsstring></argsstring>
        <name>_autosaveDirty</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="428" column="1" bodyfile="libmscore/score.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a7df35c3f1f11ff04621632f6b49d27e7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_savedCapture</definition>
        <argsstring></argsstring>
        <name>_savedCapture</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>True if we saved an image capture. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="429" column="1" bodyfile="libmscore/score.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a928601404a0cd9cbef95e943e7ce89d6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_saved</definition>
        <argsstring></argsstring>
        <name>_saved</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if project was already saved; only on first save a backup file will be created, subsequent saves will not overwrite the backup file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="430" column="1" bodyfile="libmscore/score.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1af552ce3f7ad0b127dda20928e1634b74" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_defaultsRead</definition>
        <argsstring></argsstring>
        <name>_defaultsRead</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>defaults were read at MusicXML import, allow export of defaults in convertermode </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="433" column="1" bodyfile="libmscore/score.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a8a7a2f67d2fc69a1c7952412b1138242" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_pos[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_pos</name>
        <briefdescription>
<para>0 - current, 1 - left loop, 2 - right loop </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="435" column="1" bodyfile="libmscore/score.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a49719c750637e67b99c37dfe071d4454" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Score::_foundPlayPosAfterRepeats</definition>
        <argsstring></argsstring>
        <name>_foundPlayPosAfterRepeats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temporary used during playback rendering indicating if playPos after expanded repeats has been calculated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="437" column="1" bodyfile="libmscore/score.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ac02bb72ce68df75fc38ee2c1222de735" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_mscVersion</definition>
        <argsstring></argsstring>
        <name>_mscVersion</name>
        <initializer>{ MSCVERSION }</initializer>
        <briefdescription>
<para>version of current loading *.msc file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="441" column="1" bodyfile="libmscore/score.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a06909cf3f396b4c8064a7cc864d12c02" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, QString &gt;</type>
        <definition>QMap&lt;QString, QString&gt; Ms::Score::_metaTags</definition>
        <argsstring></argsstring>
        <name>_metaTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="443" column="1" bodyfile="libmscore/score.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a5744ecf49cbfa1095aa28c9041b18f47" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_selection" kindref="compound">Selection</ref></type>
        <definition>Selection Ms::Score::_selection</definition>
        <argsstring></argsstring>
        <name>_selection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="446" column="1" bodyfile="libmscore/score.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a62f940e8267d2ee36118237b7b4e2874" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_selection_filter" kindref="compound">SelectionFilter</ref></type>
        <definition>SelectionFilter Ms::Score::_selectionFilter</definition>
        <argsstring></argsstring>
        <name>_selectionFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="447" column="1" bodyfile="libmscore/score.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a1838d6e9ad8c8b7953865fd26493fe2c" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_audio" kindref="compound">Audio</ref> *</type>
        <definition>Audio* Ms::Score::_audio</definition>
        <argsstring></argsstring>
        <name>_audio</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="448" column="1" bodyfile="libmscore/score.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1ad1ab11f4a82863a7c2fa52b7b99a4ede" prot="private" static="no" mutable="no">
        <type>PlayMode</type>
        <definition>PlayMode Ms::Score::_playMode</definition>
        <argsstring></argsstring>
        <name>_playMode</name>
        <initializer>{ PlayMode::SYNTHESIZER }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="449" column="1" bodyfile="libmscore/score.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a68245eebd2b78df8fce9ce35c05d98e1" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::Score::_noteHeadWidth</definition>
        <argsstring></argsstring>
        <name>_noteHeadWidth</name>
        <initializer>{ 0.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="451" column="1" bodyfile="libmscore/score.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a4ae80828c55b9e50f8cf9c1d8e70cfcc" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Score::accInfo</definition>
        <argsstring></argsstring>
        <name>accInfo</name>
        <briefdescription>
<para>information used by the screen-reader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="452" column="1" bodyfile="libmscore/score.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_ms_1_1_score_1aa9e7711d9767cd7f2a1bae8ea6b70799" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Score::_fileDivision</definition>
        <argsstring></argsstring>
        <name>_fileDivision</name>
        <briefdescription>
<para>division of current loading *.msc file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="514" column="1" bodyfile="libmscore/score.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1a0169fb17fae5207d537cb8f2c3a3951f" prot="protected" static="no" mutable="no">
        <type>LayoutMode</type>
        <definition>LayoutMode Ms::Score::_layoutMode</definition>
        <argsstring></argsstring>
        <name>_layoutMode</name>
        <initializer>{ LayoutMode::PAGE }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="515" column="1" bodyfile="libmscore/score.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_score_1af954720f93085f38895e4a8356a14793" prot="protected" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_synthesizer_state" kindref="compound">SynthesizerState</ref></type>
        <definition>SynthesizerState Ms::Score::_synthesizerState</definition>
        <argsstring></argsstring>
        <name>_synthesizerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="516" column="1" bodyfile="libmscore/score.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_ms_1_1_score_1aadd2df94d980026a94340005ffe51d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ChangeSynthesizerState</definition>
        <argsstring></argsstring>
        <name>ChangeSynthesizerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1147" column="1" bodyfile="libmscore/score.h" bodystart="1147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_ms_1_1_score_1ac7af8971e400658f64e6ddc407d27b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Chord</definition>
        <argsstring></argsstring>
        <name>Chord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1148" column="1" bodyfile="libmscore/score.h" bodystart="1148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_score_1a854e949646c089e0e195db4798642d1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::nextMeasure</definition>
        <argsstring>(ChordRest *element, bool selectBehavior=false, bool mmRest=false)</argsstring>
        <name>nextMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>selectBehavior</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mmRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="456" column="1" bodyfile="libmscore/navigate.cpp" bodystart="427" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af4327a46d184dd4b515364038eb51f5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::prevMeasure</definition>
        <argsstring>(ChordRest *element, bool mmRest=false)</argsstring>
        <name>prevMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mmRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="457" column="1" bodyfile="libmscore/navigate.cpp" bodystart="479" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a573bca52a969c4106816f06e95140657" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSetBeamMode</definition>
        <argsstring>(Beam::Mode)</argsstring>
        <name>cmdSetBeamMode</name>
        <param>
          <type>Beam::Mode</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="458" column="1" bodyfile="libmscore/edit.cpp" bodystart="1223" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeaed98a8b3ba45d555729612603d7a36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdFlip</definition>
        <argsstring>()</argsstring>
        <name>cmdFlip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="459" column="1" bodyfile="libmscore/edit.cpp" bodystart="1235" bodyend="1334"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0f745126ac59d7ad90931b116784c6bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::getSelectedNote</definition>
        <argsstring>()</argsstring>
        <name>getSelectedNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="460" column="1" bodyfile="libmscore/edit.cpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa1c3af2506288fcd42268594bde1497a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::upStaff</definition>
        <argsstring>(ChordRest *cr)</argsstring>
        <name>upStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="461" column="1" bodyfile="libmscore/navigate.cpp" bodystart="309" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a86d4abab4b399a7d1e8b7175fb172ee1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::downStaff</definition>
        <argsstring>(ChordRest *cr)</argsstring>
        <name>downStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="462" column="1" bodyfile="libmscore/navigate.cpp" bodystart="332" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a170acd4049d9a609794acc95d4e78c94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::nextTrack</definition>
        <argsstring>(ChordRest *cr)</argsstring>
        <name>nextTrack</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="463" column="1" bodyfile="libmscore/navigate.cpp" bodystart="359" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a414018856b253a3adf72db9916c41cba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::prevTrack</definition>
        <argsstring>(ChordRest *cr)</argsstring>
        <name>prevTrack</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="464" column="1" bodyfile="libmscore/navigate.cpp" bodystart="395" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a79246f84804d2a8ad1f6670ad1d93568" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::padToggle</definition>
        <argsstring>(Pad n)</argsstring>
        <name>padToggle</name>
        <param>
          <type>Pad</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="466" column="1" bodyfile="libmscore/score.cpp" bodystart="2531" bodyend="2669"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a21c169b370277636334195c227da0803" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addTempo</definition>
        <argsstring>()</argsstring>
        <name>addTempo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6a043a22ad4d9a93f6fbb9627a0adc92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addMetronome</definition>
        <argsstring>()</argsstring>
        <name>addMetronome</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a93496435282cca9b361d82f68f69d46a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdResetBeamMode</definition>
        <argsstring>()</argsstring>
        <name>cmdResetBeamMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="470" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1789" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4139fc6c38d62422bbe315515e7e3d0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdInsertClef</definition>
        <argsstring>(ClefType)</argsstring>
        <name>cmdInsertClef</name>
        <param>
          <type>ClefType</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="472" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2345" bodyend="2350"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afc23d2a36c48ef11b56e7f15a8874fd8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddGrace</definition>
        <argsstring>(NoteType, int)</argsstring>
        <name>cmdAddGrace</name>
        <param>
          <type>NoteType</type>
          <defname>graceType</defname>
        </param>
        <param>
          <type>int</type>
          <defname>duration</defname>
        </param>
        <briefdescription>
<para>adds grace note of specified type to selected notes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="473" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2368" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b756171329fcf5b8dab24ab7d2b5619" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeChordRest</definition>
        <argsstring>(ChordRest *cr, bool clearSegment)</argsstring>
        <name>removeChordRest</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearSegment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="474" column="1" bodyfile="libmscore/edit.cpp" bodystart="2394" bodyend="2418"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac727e8cbbc33658c0fcc830deece2157" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdMoveRest</definition>
        <argsstring>(Rest *, Direction)</argsstring>
        <name>cmdMoveRest</name>
        <param>
          <type><ref refid="class_ms_1_1_rest" kindref="compound">Rest</ref> *</type>
          <defname>rest</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_direction" kindref="compound">Direction</ref></type>
          <defname>dir</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="475" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2303" bodyend="2311"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a981d7bcefaf64f6b656280b7645a52a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdMoveLyrics</definition>
        <argsstring>(Lyrics *, Direction)</argsstring>
        <name>cmdMoveLyrics</name>
        <param>
          <type><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref> *</type>
          <defname>lyrics</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_direction" kindref="compound">Direction</ref></type>
          <defname>dir</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="476" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2317" bodyend="2339"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab4929fff1aea542e8cac92fa54e935d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdIncDecDuration</definition>
        <argsstring>(int nSteps, bool stepDotted=false)</argsstring>
        <name>cmdIncDecDuration</name>
        <param>
          <type>int</type>
          <declname>nSteps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stepDotted</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="477" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2244" bodyend="2272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a43f90a349cf52cb670c268bcd7051340" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddBracket</definition>
        <argsstring>()</argsstring>
        <name>cmdAddBracket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="478" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2278" bodyend="2296"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a844653f50ef44e3bded939c8e5e340f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::resetUserStretch</definition>
        <argsstring>()</argsstring>
        <name>resetUserStretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="479" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1679" bodyend="1704"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9551ba5c01bc3566e64c4cbf484519a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::layoutSystem</definition>
        <argsstring>(qreal &amp;minWidth, qreal w, bool, bool)</argsstring>
        <name>layoutSystem</name>
        <param>
          <type>qreal &amp;</type>
          <declname>minWidth</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>w</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4aefe9ae9c020b436a6dfca0a9129531" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createMMRest</definition>
        <argsstring>(Measure *, Measure *, const Fraction &amp;)</argsstring>
        <name>createMMRest</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>lm</defname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>len</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="482" column="1" bodyfile="libmscore/layout.cpp" bodystart="1658" bodyend="1901"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a47cde9387535524b63ffd6a6e5a58e32" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::layoutSystem1</definition>
        <argsstring>(qreal &amp;minWidth, bool, bool)</argsstring>
        <name>layoutSystem1</name>
        <param>
          <type>qreal &amp;</type>
          <declname>minWidth</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abc5b5de1c6d83954919de8fa0cbbae02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_system" kindref="compound">System</ref> * &gt;</type>
        <definition>QList&lt;System*&gt; Ms::Score::layoutSystemRow</definition>
        <argsstring>(qreal w, bool, bool)</argsstring>
        <name>layoutSystemRow</name>
        <param>
          <type>qreal</type>
          <declname>w</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a864ad984e2922bc06edd59dd0ac9a889" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_system" kindref="compound">System</ref> *</type>
        <definition>System * Ms::Score::getNextSystem</definition>
        <argsstring>(LayoutContext &amp;)</argsstring>
        <name>getNextSystem</name>
        <param>
          <type><ref refid="struct_ms_1_1_layout_context" kindref="compound">LayoutContext</ref> &amp;</type>
          <defname>lc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="485" column="1" bodyfile="libmscore/layout.cpp" bodystart="1628" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae88a1eb49a201df0c929e758b82aacbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::doReLayout</definition>
        <argsstring>()</argsstring>
        <name>doReLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a38ee585135744839b5ac1eb26f0da0f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::beamGraceNotes</definition>
        <argsstring>(Chord *, bool)</argsstring>
        <name>beamGraceNotes</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <defname>mainNote</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>after</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="488" column="1" bodyfile="libmscore/layout.cpp" bodystart="1110" bodyend="1172"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeb406ae3e71511fd168057f3f5b22bb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::hideEmptyStaves</definition>
        <argsstring>(System *system, bool isFirstSystem)</argsstring>
        <name>hideEmptyStaves</name>
        <param>
          <type><ref refid="class_ms_1_1_system" kindref="compound">System</ref> *</type>
          <declname>system</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFirstSystem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="490" column="1" bodyfile="libmscore/layout.cpp" bodystart="1210" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa97ae8300a80a691109207497a371b1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::checkSlurs</definition>
        <argsstring>()</argsstring>
        <name>checkSlurs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="492" column="1" bodyfile="libmscore/check.cpp" bodystart="32" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9374ac58d56384e12cdb05924b1d14fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::checkScore</definition>
        <argsstring>()</argsstring>
        <name>checkScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="493" column="1" bodyfile="libmscore/check.cpp" bodystart="64" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a215c252863dc8e5fde550e2960930af2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::rewriteMeasures</definition>
        <argsstring>(Measure *fm, Measure *lm, const Fraction &amp;, int staffIdx)</argsstring>
        <name>rewriteMeasures</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>fm</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>lm</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>ns</defname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="495" column="1" bodyfile="libmscore/edit.cpp" bodystart="392" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a15496916c53c8d467b73b21118d28fa5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::rewriteMeasures</definition>
        <argsstring>(Measure *fm, const Fraction &amp;ns, int staffIdx)</argsstring>
        <name>rewriteMeasures</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>fm</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="496" column="1" bodyfile="libmscore/edit.cpp" bodystart="524" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a282d4f8bfc6261d114cb945980f2a78e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::updateVelo</definition>
        <argsstring>()</argsstring>
        <name>updateVelo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="497" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="565" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5012506edb15a89ee98dc9a35d9678da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::swingAdjustParams</definition>
        <argsstring>(Chord *, int &amp;, int &amp;, int, int)</argsstring>
        <name>swingAdjustParams</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <defname>chord</defname>
        </param>
        <param>
          <type>int &amp;</type>
          <defname>gateTime</defname>
        </param>
        <param>
          <type>int &amp;</type>
          <defname>ontime</defname>
        </param>
        <param>
          <type>int</type>
          <defname>swingUnit</defname>
        </param>
        <param>
          <type>int</type>
          <defname>swingRatio</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="498" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="713" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afa786f14ccd080a1912d26c5af2a426a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::isSubdivided</definition>
        <argsstring>(ChordRest *, int)</argsstring>
        <name>isSubdivided</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>chord</defname>
        </param>
        <param>
          <type>int</type>
          <defname>swingUnit</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="499" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="751" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a63b047326fb6577164a235de86ef13eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addAudioTrack</definition>
        <argsstring>()</argsstring>
        <name>addAudioTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="500" column="1" bodyfile="libmscore/score.cpp" bodystart="2522" bodyend="2525"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a82388a52fd0c46582c6ad81f30ebebd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &gt;</type>
        <definition>QList&lt; Fraction &gt; Ms::Score::splitGapToMeasureBoundaries</definition>
        <argsstring>(ChordRest *, Fraction)</argsstring>
        <name>splitGapToMeasureBoundaries</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>cr</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>gap</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="501" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1038" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3b69f24c8edc5d633feda219496b0510" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::pasteChordRest</definition>
        <argsstring>(ChordRest *cr, int tick, const Interval &amp;)</argsstring>
        <name>pasteChordRest</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const <ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>srcTranspose</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="502" column="1" bodyfile="libmscore/paste.cpp" bodystart="459" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a729b81b6c9d101af18db70d05b42605f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::selectSingle</definition>
        <argsstring>(Element *e, int staffIdx)</argsstring>
        <name>selectSingle</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="504" column="1" bodyfile="libmscore/score.cpp" bodystart="2721" bodyend="2750"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1feb929233a2aaf7fc64b2a14f760067" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::selectAdd</definition>
        <argsstring>(Element *e)</argsstring>
        <name>selectAdd</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="505" column="1" bodyfile="libmscore/score.cpp" bodystart="2756" bodyend="2792"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b31e94641b1bb0886f89db5af76a406" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::selectRange</definition>
        <argsstring>(Element *e, int staffIdx)</argsstring>
        <name>selectRange</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="506" column="1" bodyfile="libmscore/score.cpp" bodystart="2799" bodyend="2928"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a669f38faac723dd9314c07cbc86e4611" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createBeams</definition>
        <argsstring>(Measure *)</argsstring>
        <name>createBeams</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>measure</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="508" column="1" bodyfile="libmscore/layout.cpp" bodystart="2064" bodyend="2223"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab988b4f9050379a46b65c8286ff603ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddPitch</definition>
        <argsstring>(const EditData &amp;, int note, bool addFlag, bool insert)</argsstring>
        <name>cmdAddPitch</name>
        <param>
          <type>const <ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <param>
          <type>int</type>
          <declname>note</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
        </param>
        <briefdescription>
<para>insert note or add note to chord </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="509" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3169" bodyend="3272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a66b3d3db5de0910b4c5a50f5f4a90e6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddFret</definition>
        <argsstring>(int fret)</argsstring>
        <name>cmdAddFret</name>
        <param>
          <type>int</type>
          <declname>fret</declname>
        </param>
        <briefdescription>
<para>insert note with given fret on current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="510" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3334" bodyend="3349"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa5948848219158efd8641f9bc5d1dbf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdToggleVisible</definition>
        <argsstring>()</argsstring>
        <name>cmdToggleVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="511" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3315" bodyend="3327"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ms_1_1_score_1a238e845d7b6a1e04230d35934cd00a74" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createPlayEvents</definition>
        <argsstring>(Chord *)</argsstring>
        <name>createPlayEvents</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <defname>chord</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="518" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="1602" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a13508aa492481d60223cd9b919839db0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createGraceNotesPlayEvents</definition>
        <argsstring>(int tick, Chord *chord, int &amp;ontime, int &amp;trailtime)</argsstring>
        <name>createGraceNotesPlayEvents</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ontime</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>trailtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="519" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="1495" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5688f77578f96d12e56f3aa69f70ffec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPitchUp</definition>
        <argsstring>()</argsstring>
        <name>cmdPitchUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="520" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2944" bodyend="2955"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a55f8ec78968f321afca7737d3785683f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPitchDown</definition>
        <argsstring>()</argsstring>
        <name>cmdPitchDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="521" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2961" bodyend="2972"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a312785d5c5f5d76fe8d5989faf6eadfd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPitchUpOctave</definition>
        <argsstring>()</argsstring>
        <name>cmdPitchUpOctave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="522" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2997" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abda2ce881c2ac1f14c41ee88347db34b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPitchDownOctave</definition>
        <argsstring>()</argsstring>
        <name>cmdPitchDownOctave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="523" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3010" bodyend="3017"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aaadebd0d85b363c17fccaef0576a2343" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPadNoteIncreaseTAB</definition>
        <argsstring>()</argsstring>
        <name>cmdPadNoteIncreaseTAB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="524" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3023" bodyend="3060"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a28d7ab642a1dfbc52f7082393195c917" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPadNoteDecreaseTAB</definition>
        <argsstring>()</argsstring>
        <name>cmdPadNoteDecreaseTAB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="525" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3066" bodyend="3103"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6eb8c669bccea2b906aa764ec2028510" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdToggleMmrest</definition>
        <argsstring>()</argsstring>
        <name>cmdToggleMmrest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="526" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3125" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a44c0ecc77a206b90ece32626a3f53046" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdToggleHideEmpty</definition>
        <argsstring>()</argsstring>
        <name>cmdToggleHideEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="527" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3136" bodyend="3141"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abf267287811f5ea50cf1393fb46480a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSetVisible</definition>
        <argsstring>()</argsstring>
        <name>cmdSetVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="528" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3147" bodyend="3151"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad4e0865836a18f7a49c7a97ed191e279" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdUnsetVisible</definition>
        <argsstring>()</argsstring>
        <name>cmdUnsetVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="529" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3157" bodyend="3161"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad33df9d484f72d4cb751475a0e5f3190" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdToggleLayoutBreak</definition>
        <argsstring>(LayoutBreak::Type)</argsstring>
        <name>cmdToggleLayoutBreak</name>
        <param>
          <type>LayoutBreak::Type</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="530" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3109" bodyend="3119"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2066b3224a23490004c66ebcd9c10440" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_movements" kindref="compound">Movements</ref> *</type>
        <definition>Movements * Ms::Score::movements</definition>
        <argsstring>()</argsstring>
        <name>movements</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a15c525dbfdfc64bc65ec97202bd71777">movements</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="531" column="1" bodyfile="libmscore/score.h" bodystart="1299" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a70e4f423e79c31e1ef4aac10bef745cc" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_ms_1_1_movements" kindref="compound">Movements</ref> *</type>
        <definition>const Movements * Ms::Score::movements</definition>
        <argsstring>() const</argsstring>
        <name>movements</name>
        <reimplementedby refid="class_ms_1_1_master_score_1ac22a31359d5f3f6fbaef40dc5bd2e7ed">movements</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="532" column="1" bodyfile="libmscore/score.h" bodystart="1300" bodyend="1300"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_ms_1_1_score_1a5eca553f5139e4255c50b6948627d7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::posChanged</definition>
        <argsstring>(POS, unsigned)</argsstring>
        <name>posChanged</name>
        <param>
          <type>POS</type>
          <defname>_t1</defname>
        </param>
        <param>
          <type>unsigned</type>
          <defname>_t2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="535" column="1" bodyfile="build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_score.cpp" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="signal" id="class_ms_1_1_score_1ace6ac838e61971b8e8fb3b9d2238c5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::playlistChanged</definition>
        <argsstring>()</argsstring>
        <name>playlistChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="536" column="1" bodyfile="build.release/libmscore/libmscore_autogen/EWIEGA46WW/moc_score.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_score_1a7fe75aa0819207bf92addf4c5db982fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Score::Score</definition>
        <argsstring>()</argsstring>
        <name>Score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="539" column="1" bodyfile="libmscore/score.cpp" bodystart="245" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2da4e3000773fe1bee12245f8b535922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Score::Score</definition>
        <argsstring>(MasterScore *)</argsstring>
        <name>Score</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="540" column="1" bodyfile="libmscore/score.cpp" bodystart="266" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a918d83112a4c5d7d50f7ace1f5f1d674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Score::Score</definition>
        <argsstring>(MasterScore *, const MStyle &amp;)</argsstring>
        <name>Score</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
          <defname>parent</defname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_m_style" kindref="compound">MStyle</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="541" column="1" bodyfile="libmscore/score.cpp" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a535e9c9c08669e42f51caeeb4071cd41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Ms::Score::~Score</definition>
        <argsstring>()</argsstring>
        <name>~Score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="542" column="1" bodyfile="libmscore/score.cpp" bodystart="311" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8eddd82040d61bffb0d863d6f26270d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Ms::Score::isMaster</definition>
        <argsstring>() const</argsstring>
        <name>isMaster</name>
        <reimplementedby refid="class_ms_1_1_master_score_1abeb590f501c59433c8ed11774caf9dce">isMaster</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="544" column="1" bodyfile="libmscore/score.h" bodystart="544" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab22894e59b8d1694e4d546393daa39d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> * &gt; &amp;</type>
        <definition>QList&lt; Excerpt * &gt; &amp; Ms::Score::excerpts</definition>
        <argsstring>()</argsstring>
        <name>excerpts</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a5e471a331aa2bee6d744e52960d8d14b">excerpts</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="546" column="1" bodyfile="libmscore/score.h" bodystart="1287" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7b4c2f75790573148bfa29a810f608da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> * &gt; &amp;</type>
        <definition>const QList&lt; Excerpt * &gt; &amp; Ms::Score::excerpts</definition>
        <argsstring>() const</argsstring>
        <name>excerpts</name>
        <reimplementedby refid="class_ms_1_1_master_score_1aeb1b90b68642106c2dad7449dc36b3de">excerpts</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="547" column="1" bodyfile="libmscore/score.h" bodystart="1288" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acff6952d015f5f2928c5c1e0050abc86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ElementType</type>
        <definition>virtual ElementType Ms::Score::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="class_ms_1_1_score_element_1a3dbb763c3cd4ec05d202d03115abe1d5">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="549" column="1" bodyfile="libmscore/score.h" bodystart="549" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a42043d12f931f0597ede4c070cafe75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::rebuildBspTree</definition>
        <argsstring>()</argsstring>
        <name>rebuildBspTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="551" column="1" bodyfile="libmscore/layout.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2ead0d028dc0dc6fb610ef07682c6a9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::noStaves</definition>
        <argsstring>() const</argsstring>
        <name>noStaves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="552" column="1" bodyfile="libmscore/score.h" bodystart="552" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7b974294ef6436bfd79d9e29054342d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::insertPart</definition>
        <argsstring>(Part *, int)</argsstring>
        <name>insertPart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <param>
          <type>int</type>
          <defname>idx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="553" column="1" bodyfile="libmscore/score.cpp" bodystart="2191" bodyend="2202"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af88bb57c174eb6a3e79495a3899b879e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removePart</definition>
        <argsstring>(Part *)</argsstring>
        <name>removePart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="554" column="1" bodyfile="libmscore/score.cpp" bodystart="2208" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0ceba2233bc3035aab01d9aac192f586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::insertStaff</definition>
        <argsstring>(Staff *, int)</argsstring>
        <name>insertStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <param>
          <type>int</type>
          <defname>ridx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="555" column="1" bodyfile="libmscore/score.cpp" bodystart="2217" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a31a3ce6f8e3a3436c10f76acbb842cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdRemoveStaff</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>cmdRemoveStaff</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="556" column="1" bodyfile="libmscore/score.cpp" bodystart="2383" bodyend="2428"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad77bdf8555f37b161135e873b0b81268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeStaff</definition>
        <argsstring>(Staff *)</argsstring>
        <name>removeStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="557" column="1" bodyfile="libmscore/score.cpp" bodystart="2261" bodyend="2293"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a650e2a8236e2c7e47958c09ab9bbce90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addMeasure</definition>
        <argsstring>(MeasureBase *, MeasureBase *)</argsstring>
        <name>addMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <defname>m</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="558" column="1" bodyfile="libmscore/score.cpp" bodystart="342" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8efebc203c8d22d66e83928158e1360a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::readStaff</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>readStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="559" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="276" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab1315f6648a4a069544e574bee9722c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::read</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="560" column="1" bodyfile="libmscore/read300.cpp" bodystart="39" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8f44073d4425a3634decdb7b9ad5a620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> *</type>
        <definition>Excerpt* Ms::Score::excerpt</definition>
        <argsstring>()</argsstring>
        <name>excerpt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="562" column="1" bodyfile="libmscore/score.h" bodystart="562" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6cb53961524b9b03c876f004291f106c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setExcerpt</definition>
        <argsstring>(Excerpt *e)</argsstring>
        <name>setExcerpt</name>
        <param>
          <type><ref refid="class_ms_1_1_excerpt" kindref="compound">Excerpt</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="563" column="1" bodyfile="libmscore/score.h" bodystart="563" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a393fe76e521cb4f1be1d6ab526b64bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_system" kindref="compound">System</ref> *</type>
        <definition>System * Ms::Score::collectSystem</definition>
        <argsstring>(LayoutContext &amp;)</argsstring>
        <name>collectSystem</name>
        <param>
          <type><ref refid="struct_ms_1_1_layout_context" kindref="compound">LayoutContext</ref> &amp;</type>
          <defname>lc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="565" column="1" bodyfile="libmscore/layout.cpp" bodystart="2728" bodyend="3189"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5504cca91c6aafce127cf4de5d0e49de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::getNextMeasure</definition>
        <argsstring>(LayoutContext &amp;)</argsstring>
        <name>getNextMeasure</name>
        <param>
          <type><ref refid="struct_ms_1_1_layout_context" kindref="compound">LayoutContext</ref> &amp;</type>
          <defname>lc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="566" column="1" bodyfile="libmscore/layout.cpp" bodystart="2229" bodyend="2509"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a77713d57c648bd0e035724cc6c0631bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdRemovePart</definition>
        <argsstring>(Part *)</argsstring>
        <name>cmdRemovePart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="568" column="1" bodyfile="libmscore/score.cpp" bodystart="2176" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a092ebb2a369e1a973e086131748e27e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddTie</definition>
        <argsstring>()</argsstring>
        <name>cmdAddTie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="569" column="1" bodyfile="libmscore/edit.cpp" bodystart="1036" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab3fc19ce9168d648919136e96f709d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddOttava</definition>
        <argsstring>(OttavaType)</argsstring>
        <name>cmdAddOttava</name>
        <param>
          <type>OttavaType</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="570" column="1" bodyfile="libmscore/edit.cpp" bodystart="1176" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac97c187c4f49fe2829b24ea2ae197119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddStretch</definition>
        <argsstring>(qreal)</argsstring>
        <name>cmdAddStretch</name>
        <param>
          <type>qreal</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="571" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1766" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab9e12d6961837362a1babbd4c88acc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdResetNoteAndRestGroupings</definition>
        <argsstring>()</argsstring>
        <name>cmdResetNoteAndRestGroupings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="572" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1822" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a50244a580e1c41c9a38925424b1e24b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdDoubleDuration</definition>
        <argsstring>()</argsstring>
        <name>cmdDoubleDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="573" column="1" bodyfile="libmscore/score.h" bodystart="573" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a42d7abd60474d8bfe8754c4adbdaf05d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdHalfDuration</definition>
        <argsstring>()</argsstring>
        <name>cmdHalfDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="574" column="1" bodyfile="libmscore/score.h" bodystart="574" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a56d18e3aafaac78ae38c2ed4428498ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdIncDurationDotted</definition>
        <argsstring>()</argsstring>
        <name>cmdIncDurationDotted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="575" column="1" bodyfile="libmscore/score.h" bodystart="575" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af64b5d63e7bbbbd37308f4c014877daa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdDecDurationDotted</definition>
        <argsstring>()</argsstring>
        <name>cmdDecDurationDotted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="576" column="1" bodyfile="libmscore/score.h" bodystart="576" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1adfc02ac3d2a322f33fb63521671f835d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addRemoveBreaks</definition>
        <argsstring>(int interval, bool lock)</argsstring>
        <name>addRemoveBreaks</name>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="578" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2859" bodyend="2917"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea491e23eb7398f6f414c8262a79f5db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::transpose</definition>
        <argsstring>(Note *n, Interval, bool useSharpsFlats)</argsstring>
        <name>transpose</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref></type>
          <defname>interval</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>useSharpsFlats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="580" column="1" bodyfile="libmscore/transpose.cpp" bodystart="218" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af4745c70eb31a06becb6220c28f0f8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::transposeKeys</definition>
        <argsstring>(int staffStart, int staffEnd, int tickStart, int tickEnd, const Interval &amp;, bool useInstrument=false, bool flip=false)</argsstring>
        <name>transposeKeys</name>
        <param>
          <type>int</type>
          <declname>staffStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffEnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tickStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tickEnd</declname>
        </param>
        <param>
          <type>const <ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>useInstrument</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>flip</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="581" column="1" bodyfile="libmscore/transpose.cpp" bodystart="493" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7eefd9fdb540ecc3da8ec892c66610f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::transpose</definition>
        <argsstring>(TransposeMode mode, TransposeDirection, Key transposeKey, int transposeInterval, bool trKeys, bool transposeChordNames, bool useDoubleSharpsFlats)</argsstring>
        <name>transpose</name>
        <param>
          <type>TransposeMode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>TransposeDirection</type>
          <defname>direction</defname>
        </param>
        <param>
          <type>Key</type>
          <declname>transposeKey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>transposeInterval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>trKeys</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposeChordNames</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useDoubleSharpsFlats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="582" column="1" bodyfile="libmscore/transpose.cpp" bodystart="240" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af3fdf5391d820ad3377bc9e0e44601bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::appendScore</definition>
        <argsstring>(Score *, bool addPageBreak=false, bool addSectionBreak=true)</argsstring>
        <name>appendScore</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <defname>score</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>addPageBreak</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>addSectionBreak</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="585" column="1" bodyfile="libmscore/score.cpp" bodystart="1878" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5963f11eed3489c1de114aabb35cabe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::write</definition>
        <argsstring>(XmlWriter &amp;, bool onlySelection)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="587" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="257" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af64430c4612b9826184ee4417455b085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::writeMovement</definition>
        <argsstring>(XmlWriter &amp;, bool onlySelection)</argsstring>
        <name>writeMovement</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="588" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="80" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aaa9eed88d78a41f6cef322c1e3b663a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> * &gt; &amp;</type>
        <definition>QList&lt;Staff*&gt;&amp; Ms::Score::staves</definition>
        <argsstring>()</argsstring>
        <name>staves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="590" column="1" bodyfile="libmscore/score.h" bodystart="590" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac4baf4f5709a6b685a04522b9cb8b80b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> * &gt; &amp;</type>
        <definition>const QList&lt;Staff*&gt;&amp; Ms::Score::staves</definition>
        <argsstring>() const</argsstring>
        <name>staves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="591" column="1" bodyfile="libmscore/score.h" bodystart="591" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab39888225a9fe0533558a379b1545cb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::nstaves</definition>
        <argsstring>() const</argsstring>
        <name>nstaves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="592" column="1" bodyfile="libmscore/score.h" bodystart="592" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa7ea8f4f050ba44ed0cf95ad4f5d3c06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::ntracks</definition>
        <argsstring>() const</argsstring>
        <name>ntracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="593" column="1" bodyfile="libmscore/score.h" bodystart="593" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa4353d2ea4660f134a9030dbf9216b25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::staffIdx</definition>
        <argsstring>(const Part *) const</argsstring>
        <name>staffIdx</name>
        <param>
          <type>const <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <briefdescription>
<para>Return index for the first staff of <emphasis>part</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="595" column="1" bodyfile="libmscore/score.cpp" bodystart="4390" bodyend="4399"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad1de1c246a7f35e5b63781630e3c7d58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
        <definition>Staff* Ms::Score::staff</definition>
        <argsstring>(int n) const</argsstring>
        <name>staff</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="596" column="1" bodyfile="libmscore/score.h" bodystart="596" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4c35c150fe004e1b2cb82cb2b87954a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::pos2measure</definition>
        <argsstring>(const QPointF &amp;, int *staffIdx, int *pitch, Segment **, QPointF *offset) const</argsstring>
        <name>pos2measure</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> **</type>
          <defname>seg</defname>
        </param>
        <param>
          <type>QPointF *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="598" column="1" bodyfile="libmscore/score.cpp" bodystart="496" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa3d8e1a8aa1e60f403ba25bc3d3913ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::dragPosition</definition>
        <argsstring>(const QPointF &amp;, int *staffIdx, Segment **) const</argsstring>
        <name>dragPosition</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> **</type>
          <defname>seg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="599" column="1" bodyfile="libmscore/score.cpp" bodystart="580" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a88d1556bac485bde9b2d6ae3c1e6bd77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoAddElement</definition>
        <argsstring>(Element *element)</argsstring>
        <name>undoAddElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="601" column="1" bodyfile="libmscore/edit.cpp" bodystart="3663" bodyend="4161"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa2ad7c34c11bcdbbe1ace3c81560e3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoAddCR</definition>
        <argsstring>(ChordRest *element, Measure *, int tick)</argsstring>
        <name>undoAddCR</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>measure</defname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="602" column="1" bodyfile="libmscore/edit.cpp" bodystart="4167" bodyend="4291"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a365e5013395d4a660672ad8fff61a864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRemoveElement</definition>
        <argsstring>(Element *element)</argsstring>
        <name>undoRemoveElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="603" column="1" bodyfile="libmscore/edit.cpp" bodystart="4297" bodyend="4313"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa356de836bf4f8602c1bec8ec9ac798a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeElement</definition>
        <argsstring>(Element *oldElement, Element *newElement)</argsstring>
        <name>undoChangeElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>oldElement</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>newElement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="604" column="1" bodyfile="libmscore/edit.cpp" bodystart="3181" bodyend="3187"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab346deeb3a55ac605ff1f26fe5747bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangePitch</definition>
        <argsstring>(Note *note, int pitch, int tpc1, int tpc2)</argsstring>
        <name>undoChangePitch</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="605" column="1" bodyfile="libmscore/edit.cpp" bodystart="3193" bodyend="3199"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8e849142ce49c824684d5b733ec9adfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeFretting</definition>
        <argsstring>(Note *note, int pitch, int string, int fret, int tpc1, int tpc2)</argsstring>
        <name>undoChangeFretting</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fret</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="606" column="1" bodyfile="libmscore/edit.cpp" bodystart="3210" bodyend="3221"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2fd69dbe3d6edc93fcb8469b2c2f74da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::spellNotelist</definition>
        <argsstring>(std::vector&lt; Note *&gt; &amp;notes)</argsstring>
        <name>spellNotelist</name>
        <param>
          <type>std::vector&lt; <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *&gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="607" column="1" bodyfile="libmscore/pitchspelling.cpp" bodystart="763" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3386de4a92d42387f9bb6642b91b3e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeTpc</definition>
        <argsstring>(Note *note, int tpc)</argsstring>
        <name>undoChangeTpc</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="608" column="1" bodyfile="libmscore/edit.cpp" bodystart="4334" bodyend="4337"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0fd138463e632ae153e1175408105787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeChordRestLen</definition>
        <argsstring>(ChordRest *cr, const TDuration &amp;)</argsstring>
        <name>undoChangeChordRestLen</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="609" column="1" bodyfile="libmscore/edit.cpp" bodystart="3464" bodyend="3478"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3527902def850d9a3244040d39e446f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoTransposeHarmony</definition>
        <argsstring>(Harmony *, int, int)</argsstring>
        <name>undoTransposeHarmony</name>
        <param>
          <type><ref refid="class_ms_1_1_harmony" kindref="compound">Harmony</ref> *</type>
          <defname>h</defname>
        </param>
        <param>
          <type>int</type>
          <defname>rootTpc</defname>
        </param>
        <param>
          <type>int</type>
          <defname>baseTpc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="610" column="1" bodyfile="libmscore/edit.cpp" bodystart="3484" bodyend="3487"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab8bcd531d8973b01c2530a5d53336d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoExchangeVoice</definition>
        <argsstring>(Measure *measure, int val1, int val2, int staff1, int staff2)</argsstring>
        <name>undoExchangeVoice</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="611" column="1" bodyfile="libmscore/edit.cpp" bodystart="3493" bodyend="3586"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8153db814fc0ff578f51ce9787d4a872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRemovePart</definition>
        <argsstring>(Part *part, int idx)</argsstring>
        <name>undoRemovePart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="612" column="1" bodyfile="libmscore/edit.cpp" bodystart="3592" bodyend="3595"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa69082215da1a690aafb91b5aa6e1643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoInsertPart</definition>
        <argsstring>(Part *part, int idx)</argsstring>
        <name>undoInsertPart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="613" column="1" bodyfile="libmscore/edit.cpp" bodystart="3601" bodyend="3604"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6374ed442267c53209a31c5aa381643e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRemoveStaff</definition>
        <argsstring>(Staff *staff)</argsstring>
        <name>undoRemoveStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="614" column="1" bodyfile="libmscore/edit.cpp" bodystart="3611" bodyend="3625"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1f017664884eee5656da6164646cab01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoInsertStaff</definition>
        <argsstring>(Staff *staff, int idx, bool createRests=true)</argsstring>
        <name>undoInsertStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createRests</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="615" column="1" bodyfile="libmscore/edit.cpp" bodystart="3632" bodyend="3647"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5f743294bdfdd937710e4b0a304a7f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeInvisible</definition>
        <argsstring>(Element *, bool)</argsstring>
        <name>undoChangeInvisible</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="616" column="1" bodyfile="libmscore/edit.cpp" bodystart="3653" bodyend="3657"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a286c0095d5c5c30e69d2273bc25dcd1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeTuning</definition>
        <argsstring>(Note *, qreal)</argsstring>
        <name>undoChangeTuning</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>n</defname>
        </param>
        <param>
          <type>qreal</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="617" column="1" bodyfile="libmscore/edit.cpp" bodystart="4319" bodyend="4322"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afd581fc4ef488febb5047b7803433117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeUserMirror</definition>
        <argsstring>(Note *, MScore::DirectionH)</argsstring>
        <name>undoChangeUserMirror</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>n</defname>
        </param>
        <param>
          <type>MScore::DirectionH</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="618" column="1" bodyfile="libmscore/edit.cpp" bodystart="4324" bodyend="4327"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0d06785a9315abedba3781d85528f676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeKeySig</definition>
        <argsstring>(Staff *ostaff, int tick, KeySigEvent)</argsstring>
        <name>undoChangeKeySig</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>ostaff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_key_sig_event" kindref="compound">KeySigEvent</ref></type>
          <defname>key</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="619" column="1" bodyfile="libmscore/edit.cpp" bodystart="3227" bodyend="3272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a408449f312a338551f166e436823cca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeClef</definition>
        <argsstring>(Staff *ostaff, Segment *, ClefType st)</argsstring>
        <name>undoChangeClef</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>ostaff</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>seg</defname>
        </param>
        <param>
          <type>ClefType</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="620" column="1" bodyfile="libmscore/edit.cpp" bodystart="3281" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa659d0e01523e7185811428c808acf14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeProperty</definition>
        <argsstring>(ScoreElement *, P_ID, const QVariant &amp;, PropertyFlags ps=PropertyFlags::NOSTYLE)</argsstring>
        <name>undoChangeProperty</name>
        <param>
          <type><ref refid="class_ms_1_1_score_element" kindref="compound">ScoreElement</ref> *</type>
          <defname>e</defname>
        </param>
        <param>
          <type>P_ID</type>
          <defname>t</defname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <defname>st</defname>
        </param>
        <param>
          <type>PropertyFlags</type>
          <declname>ps</declname>
          <defval>PropertyFlags::NOSTYLE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="621" column="1" bodyfile="libmscore/edit.cpp" bodystart="3121" bodyend="3133"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab777cc886842d61e8be5d72268f3728d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoPropertyChanged</definition>
        <argsstring>(Element *, P_ID, const QVariant &amp;v)</argsstring>
        <name>undoPropertyChanged</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <param>
          <type>P_ID</type>
          <defname>t</defname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="622" column="1" bodyfile="libmscore/edit.cpp" bodystart="3139" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5551e8e460a64241f20bfd1bd9f50665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoPropertyChanged</definition>
        <argsstring>(ScoreElement *, P_ID, const QVariant &amp;v)</argsstring>
        <name>undoPropertyChanged</name>
        <param>
          <type><ref refid="class_ms_1_1_score_element" kindref="compound">ScoreElement</ref> *</type>
          <defname>e</defname>
        </param>
        <param>
          <type>P_ID</type>
          <defname>t</defname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="623" column="1" bodyfile="libmscore/edit.cpp" bodystart="3162" bodyend="3166"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4c440ead22c45d35ba0ac4af33d76b93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_undo_stack" kindref="compound">UndoStack</ref> *</type>
        <definition>UndoStack * Ms::Score::undoStack</definition>
        <argsstring>() const</argsstring>
        <name>undoStack</name>
        <reimplementedby refid="class_ms_1_1_master_score_1abcdb47196b14ad5f99065317a65e88a8">undoStack</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="624" column="1" bodyfile="libmscore/score.h" bodystart="1283" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a638691b3520258aed47a5f3d2b67ad24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undo</definition>
        <argsstring>(UndoCommand *, EditData *=0) const</argsstring>
        <name>undo</name>
        <param>
          <type><ref refid="class_ms_1_1_undo_command" kindref="compound">UndoCommand</ref> *</type>
          <defname>cmd</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> *</type>
          <defname>ed</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="625" column="1" bodyfile="libmscore/score.cpp" bodystart="3296" bodyend="3299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1d8adc0068d948648e4f91a97a47988b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRemoveMeasures</definition>
        <argsstring>(Measure *, Measure *)</argsstring>
        <name>undoRemoveMeasures</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m1</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="626" column="1" bodyfile="libmscore/edit.cpp" bodystart="4487" bodyend="4511"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a587ff2a9a991ca9ada426c721427af0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoAddBracket</definition>
        <argsstring>(Staff *staff, int level, BracketType type, int span)</argsstring>
        <name>undoAddBracket</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>BracketType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="627" column="1" bodyfile="libmscore/edit.cpp" bodystart="4343" bodyend="4346"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad1685622b443f2c3ba31cbde1a610232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRemoveBracket</definition>
        <argsstring>(Bracket *)</argsstring>
        <name>undoRemoveBracket</name>
        <param>
          <type><ref refid="class_ms_1_1_bracket" kindref="compound">Bracket</ref> *</type>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="628" column="1" bodyfile="libmscore/edit.cpp" bodystart="4352" bodyend="4355"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2ff209ce4bc8273c8ab9ead29a0711b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoInsertTime</definition>
        <argsstring>(int tick, int len)</argsstring>
        <name>undoInsertTime</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="629" column="1" bodyfile="libmscore/edit.cpp" bodystart="4362" bodyend="4481"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9a7d9060363e277edd89c50bf9fc7d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeBarLine</definition>
        <argsstring>(Measure *, BarLineType, SegmentType type)</argsstring>
        <name>undoChangeBarLine</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>measure</defname>
        </param>
        <param>
          <type>BarLineType</type>
          <defname>barType</defname>
        </param>
        <param>
          <type>SegmentType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="630" column="1" bodyfile="libmscore/edit.cpp" bodystart="4517" bodyend="4576"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa769ea6a14772fee5546ff834abbeba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoChangeStyleVal</definition>
        <argsstring>(StyleIdx idx, const QVariant &amp;v)</argsstring>
        <name>undoChangeStyleVal</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="631" column="1" bodyfile="libmscore/edit.cpp" bodystart="3172" bodyend="3175"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a86eedc66142a7fadf8ad5446433fcf0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setGraceNote</definition>
        <argsstring>(Chord *, int pitch, NoteType type, int len)</argsstring>
        <name>setGraceNote</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <defname>ch</defname>
        </param>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>NoteType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a grace note in front of a normal note. <itemizedlist>
<listitem><para>ch is the chord of the normal note </para></listitem>
<listitem><para>pitch is the pitch of the grace note </para></listitem>
<listitem><para>is the grace note type  is the visual duration of the grace note (1/16 or 1/32) </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="633" column="1" bodyfile="libmscore/cmd.cpp" bodystart="510" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a640ea5e6b3f31341d45c4d2a269d04cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::setNoteRest</definition>
        <argsstring>(Segment *, int track, NoteVal nval, Fraction, Direction stemDirection=Direction::AUTO)</argsstring>
        <name>setNoteRest</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>segment</defname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref></type>
          <declname>nval</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>sd</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_direction" kindref="compound">Direction</ref></type>
          <declname>stemDirection</declname>
          <defval>Direction::AUTO</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="635" column="1" bodyfile="libmscore/cmd.cpp" bodystart="595" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abed144c6603a689d80de01f095ed80e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::changeCRlen</definition>
        <argsstring>(ChordRest *cr, const TDuration &amp;)</argsstring>
        <name>changeCRlen</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="636" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1076" bodyend="1084"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeb1636292599faf1ed5d66e13b565bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::changeCRlen</definition>
        <argsstring>(ChordRest *cr, const Fraction &amp;, bool fillWithRest=true)</argsstring>
        <name>changeCRlen</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>dstF</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>fillWithRest</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="637" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1086" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1a6ad10244250d0c160c21852b300b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createCRSequence</definition>
        <argsstring>(Fraction f, ChordRest *cr, int tick)</argsstring>
        <name>createCRSequence</name>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="638" column="1" bodyfile="libmscore/cmd.cpp" bodystart="559" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac9b443671d212bb7ee20d42efbef6b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Score::makeGap</definition>
        <argsstring>(Segment *, int track, const Fraction &amp;, Tuplet *, bool keepChord=false)</argsstring>
        <name>makeGap</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>segment</defname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>_sd</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <defname>tuplet</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepChord</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="640" column="1" bodyfile="libmscore/cmd.cpp" bodystart="733" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6fe426d2b6ac77ca53a7375428c9fefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::makeGap1</definition>
        <argsstring>(int baseTick, int staffIdx, Fraction len, int voiceOffset[VOICES])</argsstring>
        <name>makeGap1</name>
        <param>
          <type>int</type>
          <declname>baseTick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>voiceOffset</declname>
          <array>[VOICES]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="641" column="1" bodyfile="libmscore/cmd.cpp" bodystart="903" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b208db85dfbbfc0d265c2dee6076536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::makeGapVoice</definition>
        <argsstring>(Segment *seg, int track, Fraction len, int tick)</argsstring>
        <name>makeGapVoice</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="642" column="1" bodyfile="libmscore/cmd.cpp" bodystart="929" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1adb80880ebda6ead4b0517a0570e73930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_rest" kindref="compound">Rest</ref> *</type>
        <definition>Rest * Ms::Score::addRest</definition>
        <argsstring>(int tick, int track, TDuration, Tuplet *)</argsstring>
        <name>addRest</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref></type>
          <defname>d</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <defname>tuplet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="644" column="1" bodyfile="libmscore/edit.cpp" bodystart="165" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7ed91d115ab1813254eb12a6170e802d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_rest" kindref="compound">Rest</ref> *</type>
        <definition>Rest * Ms::Score::addRest</definition>
        <argsstring>(Segment *seg, int track, TDuration d, Tuplet *)</argsstring>
        <name>addRest</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <defname>tuplet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="645" column="1" bodyfile="libmscore/edit.cpp" bodystart="183" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a51dbf79cba1bdf8c082a38ad4c882693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
        <definition>Chord * Ms::Score::addChord</definition>
        <argsstring>(int tick, TDuration d, Chord *oc, bool genTie, Tuplet *tuplet)</argsstring>
        <name>addChord</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>oc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>genTie</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <declname>tuplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="646" column="1" bodyfile="libmscore/edit.cpp" bodystart="205" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a67d9cdaee46d39976b4c58e0ae1a7db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::addClone</definition>
        <argsstring>(ChordRest *cr, int tick, const TDuration &amp;d)</argsstring>
        <name>addClone</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="648" column="1" bodyfile="libmscore/edit.cpp" bodystart="252" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae8ea3a700a5c0b05ec4c0f0a3061dca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_rest" kindref="compound">Rest</ref> *</type>
        <definition>Rest * Ms::Score::setRest</definition>
        <argsstring>(int tick, int track, Fraction, bool useDots, Tuplet *tuplet, bool useFullMeasureRest=true)</argsstring>
        <name>setRest</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>l</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>useDots</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <declname>tuplet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useFullMeasureRest</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="649" column="1" bodyfile="libmscore/edit.cpp" bodystart="275" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7c6f99b935e5d58e642250d876d5ec55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::upDown</definition>
        <argsstring>(bool up, UpDownMode)</argsstring>
        <name>upDown</name>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <param>
          <type>UpDownMode</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>Increment/decrement pitch of note by one or by an octave. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="651" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1306" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3825732053906cdda49ac11a7f03daa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::searchNote</definition>
        <argsstring>(int tick, int track) const</argsstring>
        <name>searchNote</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="652" column="1" bodyfile="libmscore/edit.cpp" bodystart="938" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa8aee4a4a8019696426c48f33e540b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addArticulation</definition>
        <argsstring>(SymId)</argsstring>
        <name>addArticulation</name>
        <param>
          <type>SymId</type>
          <defname>attr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add attribute <emphasis>attr</emphasis> to all selected notes/rests.</para><para>Called from padToggle() to add note prefix/accent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="655" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1488" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b794e0d6c85e2faa6799fe863609602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::addArticulation</definition>
        <argsstring>(Element *, Articulation *atr)</argsstring>
        <name>addArticulation</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>el</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_articulation" kindref="compound">Articulation</ref> *</type>
          <declname>atr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="656" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1655" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae15192465613fd2cfb2daf4054a92e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::changeAccidental</definition>
        <argsstring>(AccidentalType)</argsstring>
        <name>changeAccidental</name>
        <param>
          <type>AccidentalType</type>
          <defname>idx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change accidental to subtype <emphasis>idx</emphasis> for all selected notes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="657" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1516" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abc8c7ac07ffae5fcf314118f416527e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::changeAccidental</definition>
        <argsstring>(Note *oNote, Ms::AccidentalType)</argsstring>
        <name>changeAccidental</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>oNote</declname>
          <defname>note</defname>
        </param>
        <param>
          <type>Ms::AccidentalType</type>
          <defname>accidental</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change accidental to subtype  for note <emphasis>note</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="658" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1582" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac1ed7b10bdb1a93929c135025dc400ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addElement</definition>
        <argsstring>(Element *)</argsstring>
        <name>addElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add <emphasis>element</emphasis> to its parent.</para><para>Several elements (clef, keysig, timesig) need special handling, as they may cause changes throughout the score. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="660" column="1" bodyfile="libmscore/score.cpp" bodystart="1247" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3582dc9e196e1e25bd9ed582fd818fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeElement</definition>
        <argsstring>(Element *)</argsstring>
        <name>removeElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove <emphasis>element</emphasis> from its parent. Several elements (clef, keysig, timesig) need special handling, as they may cause changes throughout the score. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="661" column="1" bodyfile="libmscore/score.cpp" bodystart="1375" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8b991452f2e8fbcf40827d9a52f3bd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::addPitch</definition>
        <argsstring>(NoteVal &amp;, bool addFlag)</argsstring>
        <name>addPitch</name>
        <param>
          <type><ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref> &amp;</type>
          <defname>nval</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="663" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="124" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0f9358a4730c1bce0a2ce07a2a44807a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addPitch</definition>
        <argsstring>(int pitch, bool addFlag, bool insert)</argsstring>
        <name>addPitch</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa096756048529fb46c811f33fb42262a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::addTiedMidiPitch</definition>
        <argsstring>(int pitch, bool addFlag, Chord *prevChord)</argsstring>
        <name>addTiedMidiPitch</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>prevChord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="665" column="1" bodyfile="libmscore/edit.cpp" bodystart="895" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a475003d21c912eab8a053b5a8ceab213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::addMidiPitch</definition>
        <argsstring>(int pitch, bool addFlag)</argsstring>
        <name>addMidiPitch</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="666" column="1" bodyfile="libmscore/edit.cpp" bodystart="917" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a27d20532d1cae88c3954b7a77957e3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::addNote</definition>
        <argsstring>(Chord *, NoteVal &amp;noteVal)</argsstring>
        <name>addNote</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <defname>chord</defname>
        </param>
        <param>
          <type><ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref> &amp;</type>
          <declname>noteVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="667" column="1" bodyfile="libmscore/edit.cpp" bodystart="367" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af4c3ed969255d787cda474d8bdca57cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref></type>
        <definition>NoteVal Ms::Score::noteValForPosition</definition>
        <argsstring>(Position pos, bool &amp;error)</argsstring>
        <name>noteValForPosition</name>
        <param>
          <type><ref refid="struct_ms_1_1_position" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="669" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="35" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acbe93935ce8e51c9f10ef49af83128b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deleteItem</definition>
        <argsstring>(Element *)</argsstring>
        <name>deleteItem</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>el</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="671" column="1" bodyfile="libmscore/edit.cpp" bodystart="1340" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abf57b3e9c33706b82271133edcf9ec58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deleteMeasures</definition>
        <argsstring>(MeasureBase *firstMeasure, MeasureBase *lastMeasure)</argsstring>
        <name>deleteMeasures</name>
        <param>
          <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <declname>firstMeasure</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <declname>lastMeasure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="672" column="1" bodyfile="libmscore/edit.cpp" bodystart="1694" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5adb01174d92d69ef6936dc9aed2f386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdDeleteSelection</definition>
        <argsstring>()</argsstring>
        <name>cmdDeleteSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="673" column="1" bodyfile="libmscore/edit.cpp" bodystart="1833" bodyend="2060"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a51844649070c58af8f9a6351ee25e4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdFullMeasureRest</definition>
        <argsstring>()</argsstring>
        <name>cmdFullMeasureRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="674" column="1" bodyfile="libmscore/edit.cpp" bodystart="2066" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afd4ddbc60bc7516a6f72c7df3d44aa33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::putNote</definition>
        <argsstring>(const QPointF &amp;, bool replace, bool insert)</argsstring>
        <name>putNote</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>pos</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="676" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="279" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4adfa682f7d0f6b8968ba83d8b5b4861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::putNote</definition>
        <argsstring>(const Position &amp;, bool replace)</argsstring>
        <name>putNote</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="677" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="297" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea057533f9e701367bba47a662312294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::insertChord</definition>
        <argsstring>(const Position &amp;)</argsstring>
        <name>insertChord</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="678" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="510" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3805ec8a23bb86659792b17453c2a4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::localInsertChord</definition>
        <argsstring>(const Position &amp;)</argsstring>
        <name>localInsertChord</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="679" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="535" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3d4e23099f4f77d177afa0636b8b83bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::globalInsertChord</definition>
        <argsstring>(const Position &amp;)</argsstring>
        <name>globalInsertChord</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="680" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="596" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4038fd2972e3ef44fecb7b97491fff5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cloneVoice</definition>
        <argsstring>(int strack, int dtrack, Segment *sf, int lTick, bool link=true, bool spanner=true)</argsstring>
        <name>cloneVoice</name>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtrack</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lTick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>link</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>spanner</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="682" column="1" bodyfile="libmscore/edit.cpp" bodystart="2855" bodyend="3115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a062936aa4a1aecbc0f7a66a935163fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::repitchNote</definition>
        <argsstring>(const Position &amp;pos, bool replace)</argsstring>
        <name>repitchNote</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="684" column="1" bodyfile="libmscore/noteentry.cpp" bodystart="397" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a772c8b32f4c7ab4eba3c0843bb505e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::regroupNotesAndRests</definition>
        <argsstring>(int startTick, int endTick, int track)</argsstring>
        <name>regroupNotesAndRests</name>
        <param>
          <type>int</type>
          <declname>startTick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="685" column="1" bodyfile="libmscore/edit.cpp" bodystart="962" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acac581a1d514d0fafcb389566dee6d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::timeDelete</definition>
        <argsstring>(Measure *, Segment *, const Fraction &amp;)</argsstring>
        <name>timeDelete</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>startSegment</defname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="686" column="1" bodyfile="libmscore/edit.cpp" bodystart="2794" bodyend="2849"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::startCmd</definition>
        <argsstring>()</argsstring>
        <name>startCmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a GUI command by clearing the redraw area and starting a user-visble undo. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="688" column="1" bodyfile="libmscore/cmd.cpp" bodystart="127" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::endCmd</definition>
        <argsstring>(bool rollback=false)</argsstring>
        <name>endCmd</name>
        <param>
          <type>bool</type>
          <declname>rollback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End a GUI command by (if <emphasis>undo</emphasis>) ending a user-visble undo and (always) updating the redraw area. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="689" column="1" bodyfile="libmscore/cmd.cpp" bodystart="167" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac2de19af18b9b8b1195a22d7ba774704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="690" column="1" bodyfile="libmscore/cmd.cpp" bodystart="214" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac9fb890f1394f4e9609770125498ae78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::undoRedo</definition>
        <argsstring>(bool undo, EditData &amp;)</argsstring>
        <name>undoRedo</name>
        <param>
          <type>bool</type>
          <declname>undo</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="691" column="1" bodyfile="libmscore/cmd.cpp" bodystart="149" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae0ca39576ed5a45c2bbcb3946be5c896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdRemoveTimeSig</definition>
        <argsstring>(TimeSig *)</argsstring>
        <name>cmdRemoveTimeSig</name>
        <param>
          <type><ref refid="class_ms_1_1_time_sig" kindref="compound">TimeSig</ref> *</type>
          <defname>ts</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="693" column="1" bodyfile="libmscore/edit.cpp" bodystart="830" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3c7c70831c54cc4be5349805b1a3aa20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddTimeSig</definition>
        <argsstring>(Measure *, int staffIdx, TimeSig *, bool local)</argsstring>
        <name>cmdAddTimeSig</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>fm</defname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_time_sig" kindref="compound">TimeSig</ref> *</type>
          <defname>ts</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="694" column="1" bodyfile="libmscore/edit.cpp" bodystart="670" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9225363a2bf667d4218f00d350e14559" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Score::setUpdateAll</definition>
        <argsstring>()</argsstring>
        <name>setUpdateAll</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a4eff9c555cbf7ba2796edeb32ade9c48">setUpdateAll</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="696" column="1" bodyfile="libmscore/score.h" bodystart="1292" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a913b812ff545eb1f2e75d6c93a001321" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Score::setLayoutAll</definition>
        <argsstring>()</argsstring>
        <name>setLayoutAll</name>
        <reimplementedby refid="class_ms_1_1_master_score_1acde585e72289ec5ce33af5d6f5df9e09">setLayoutAll</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="697" column="1" bodyfile="libmscore/score.h" bodystart="1293" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af2c431011cce1ee38a73c4782a9d3665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Score::setLayout</definition>
        <argsstring>(int)</argsstring>
        <name>setLayout</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a4189fc6258701fbe148f0cabfc97e089">setLayout</reimplementedby>
        <param>
          <type>int</type>
          <defname>tick</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="698" column="1" bodyfile="libmscore/score.h" bodystart="1294" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a07fa204a412636070028f2b159771574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_cmd_state" kindref="compound">CmdState</ref> &amp;</type>
        <definition>CmdState &amp; Ms::Score::cmdState</definition>
        <argsstring>()</argsstring>
        <name>cmdState</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a997adfa0b4dcd4185284cb2f8b50117b">cmdState</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="699" column="1" bodyfile="libmscore/score.h" bodystart="1296" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5cd035ab8792b0a583bd308f2bb03b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Score::addLayoutFlags</definition>
        <argsstring>(LayoutFlags)</argsstring>
        <name>addLayoutFlags</name>
        <reimplementedby refid="class_ms_1_1_master_score_1ae43aeeeaaf12c9b0c277840f53bfcf72">addLayoutFlags</reimplementedby>
        <param>
          <type>LayoutFlags</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="700" column="1" bodyfile="libmscore/score.h" bodystart="1297" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac8ddca73e2096e2a086cb926c5004df9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Score::setInstrumentsChanged</definition>
        <argsstring>(bool)</argsstring>
        <name>setInstrumentsChanged</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a3846150ffb354bf8cff864674d899525">setInstrumentsChanged</reimplementedby>
        <param>
          <type>bool</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="701" column="1" bodyfile="libmscore/score.h" bodystart="1298" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa7c5a89c6e934aeb0722444605c39347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addRefresh</definition>
        <argsstring>(const QRectF &amp;)</argsstring>
        <name>addRefresh</name>
        <param>
          <type>const QRectF &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="702" column="1" bodyfile="libmscore/score.cpp" bodystart="4378" bodyend="4382"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa3d9f6c66ba4fbc566bd2de39c69213b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::playNote</definition>
        <argsstring>() const</argsstring>
        <name>playNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="704" column="1" bodyfile="libmscore/score.h" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a30ccf7ad66b60ea7cbb670850bc9edfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPlayNote</definition>
        <argsstring>(bool v)</argsstring>
        <name>setPlayNote</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="705" column="1" bodyfile="libmscore/score.h" bodystart="705" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af2b208821dc6a6f19d4786a882372e5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::playChord</definition>
        <argsstring>() const</argsstring>
        <name>playChord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="706" column="1" bodyfile="libmscore/score.h" bodystart="706" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afe065fc6ab404a52234aa463aa3ed8c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPlayChord</definition>
        <argsstring>(bool v)</argsstring>
        <name>setPlayChord</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="707" column="1" bodyfile="libmscore/score.h" bodystart="707" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a21f98e7bbc4391c52e5a9fdb3dffa21a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::selectionChanged</definition>
        <argsstring>() const</argsstring>
        <name>selectionChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="708" column="1" bodyfile="libmscore/score.h" bodystart="708" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac7157fd475a0865b1b319270eff75571" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSelectionChanged</definition>
        <argsstring>(bool val)</argsstring>
        <name>setSelectionChanged</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="709" column="1" bodyfile="libmscore/score.h" bodystart="709" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afe3fa6e1b09168647dc041eba019443c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deleteLater</definition>
        <argsstring>(ScoreElement *e)</argsstring>
        <name>deleteLater</name>
        <param>
          <type><ref refid="class_ms_1_1_score_element" kindref="compound">ScoreElement</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="710" column="1" bodyfile="libmscore/score.h" bodystart="710" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6f375a03156a451cdf22f6554189fac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deletePostponed</definition>
        <argsstring>()</argsstring>
        <name>deletePostponed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="711" column="1" bodyfile="libmscore/cmd.cpp" bodystart="256" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a58c7d8543a08ccb7c815ea4cc74d3e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::changeVoice</definition>
        <argsstring>(int)</argsstring>
        <name>changeVoice</name>
        <param>
          <type>int</type>
          <defname>voice</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="713" column="1" bodyfile="libmscore/score.cpp" bodystart="4034" bodyend="4167"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9d9d571c93af388eeaac53ac8839bf6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::colorItem</definition>
        <argsstring>(Element *)</argsstring>
        <name>colorItem</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="715" column="1" bodyfile="libmscore/edit.cpp" bodystart="2305" bodyend="2328"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1841b7b85ea311bdb366fd3e0c117333" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> * &gt; &amp;</type>
        <definition>QList&lt;Part*&gt;&amp; Ms::Score::parts</definition>
        <argsstring>()</argsstring>
        <name>parts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="716" column="1" bodyfile="libmscore/score.h" bodystart="716" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac808459a49654e82a3a00f65cdd572a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_part" kindref="compound">Part</ref> * &gt; &amp;</type>
        <definition>const QList&lt;Part*&gt;&amp; Ms::Score::parts</definition>
        <argsstring>() const</argsstring>
        <name>parts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="717" column="1" bodyfile="libmscore/score.h" bodystart="717" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a46d20f7ea12cfb3b443497f14b6f1803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::appendPart</definition>
        <argsstring>(Part *p)</argsstring>
        <name>appendPart</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="719" column="1" bodyfile="libmscore/score.cpp" bodystart="869" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a130eac9abae12bb04141d7221c42273c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::updateStaffIndex</definition>
        <argsstring>()</argsstring>
        <name>updateStaffIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8900162613fb97d2a70bdf615a93f1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::sortStaves</definition>
        <argsstring>(QList&lt; int &gt; &amp;dst)</argsstring>
        <name>sortStaves</name>
        <param>
          <type>QList&lt; int &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="721" column="1" bodyfile="libmscore/score.cpp" bodystart="2434" bodyend="2470"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7bfc764d7779912986da5039d90739c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showInvisible</definition>
        <argsstring>() const</argsstring>
        <name>showInvisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="723" column="1" bodyfile="libmscore/score.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a49888022b62126cb1c37bc8f4a482b61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showUnprintable</definition>
        <argsstring>() const</argsstring>
        <name>showUnprintable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="724" column="1" bodyfile="libmscore/score.h" bodystart="724" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2d15a6824092dc2ef7657111deea7e93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showFrames</definition>
        <argsstring>() const</argsstring>
        <name>showFrames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="725" column="1" bodyfile="libmscore/score.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0c8396041597e31a35801b0f7138ad83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showPageborders</definition>
        <argsstring>() const</argsstring>
        <name>showPageborders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="726" column="1" bodyfile="libmscore/score.h" bodystart="726" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a74e32239c787f97dc091f1d14eece040" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::markIrregularMeasures</definition>
        <argsstring>() const</argsstring>
        <name>markIrregularMeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="727" column="1" bodyfile="libmscore/score.h" bodystart="727" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af7268aca744525a7c22930ebe9e19a6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showInstrumentNames</definition>
        <argsstring>() const</argsstring>
        <name>showInstrumentNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="728" column="1" bodyfile="libmscore/score.h" bodystart="728" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7d3d474e477e8e273bd1176347c81261" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::showVBox</definition>
        <argsstring>() const</argsstring>
        <name>showVBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="729" column="1" bodyfile="libmscore/score.h" bodystart="729" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6431d9e34c4c80eb3fc4816acd055e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowInvisible</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowInvisible</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="730" column="1" bodyfile="libmscore/score.cpp" bodystart="673" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a204ce150e6597a06776e98d68a45ebd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowUnprintable</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowUnprintable</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="731" column="1" bodyfile="libmscore/score.cpp" bodystart="685" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aafcadc1428f4029ae73918c5c8ad6883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowFrames</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowFrames</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="732" column="1" bodyfile="libmscore/score.cpp" bodystart="696" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6c44b902ceb5a971bff615ba794ce7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowPageborders</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowPageborders</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="733" column="1" bodyfile="libmscore/score.cpp" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a66e7c2f311d78c2cf1e0438aa4b2c509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMarkIrregularMeasures</definition>
        <argsstring>(bool v)</argsstring>
        <name>setMarkIrregularMeasures</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="734" column="1" bodyfile="libmscore/score.cpp" bodystart="718" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2b4bdd605f8fe82e99a51dc1d6d8ebd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowInstrumentNames</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowInstrumentNames</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="735" column="1" bodyfile="libmscore/score.h" bodystart="735" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4e044974d77dd5cb3f174c5683ff9ce7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setShowVBox</definition>
        <argsstring>(bool v)</argsstring>
        <name>setShowVBox</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="736" column="1" bodyfile="libmscore/score.h" bodystart="736" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a276c3a2869ad468f5f88efdbef4f5bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saveFile</definition>
        <argsstring>(QFileInfo &amp;info)</argsstring>
        <name>saveFile</name>
        <param>
          <type>QFileInfo &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="738" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="617" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1cd1acd375ae755c3acae493fa927e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saveFile</definition>
        <argsstring>(QIODevice *f, bool msczFormat, bool onlySelection=false)</argsstring>
        <name>saveFile</name>
        <param>
          <type>QIODevice *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>msczFormat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelection</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="739" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="689" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8f15d4fc1172d560f6538089bd7b3329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saveCompressedFile</definition>
        <argsstring>(QFileInfo &amp;, bool onlySelection)</argsstring>
        <name>saveCompressedFile</name>
        <param>
          <type>QFileInfo &amp;</type>
          <defname>info</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="740" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="471" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad7765481846fde641d3a5143bb10db72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saveCompressedFile</definition>
        <argsstring>(QIODevice *, QFileInfo &amp;, bool onlySelection, bool createThumbnail=true)</argsstring>
        <name>saveCompressedFile</name>
        <param>
          <type>QIODevice *</type>
          <defname>f</defname>
        </param>
        <param>
          <type>QFileInfo &amp;</type>
          <defname>info</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelection</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createThumbnail</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="741" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="529" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af1aaa631e33f4a4bc2fe305175305da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::exportFile</definition>
        <argsstring>()</argsstring>
        <name>exportFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="742" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa592fede56dc483703b3d9ed3818e3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::print</definition>
        <argsstring>(QPainter *printer, int page)</argsstring>
        <name>print</name>
        <param>
          <type>QPainter *</type>
          <declname>printer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>page</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="744" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="948" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af5e6bac5107fc313d59d07c8dbe28dfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::getSelectedChordRest</definition>
        <argsstring>() const</argsstring>
        <name>getSelectedChordRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="745" column="1" bodyfile="libmscore/edit.cpp" bodystart="77" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a45f203d4720642f1765b382b237d51b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; <ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> * &gt;</type>
        <definition>QSet&lt; ChordRest * &gt; Ms::Score::getSelectedChordRests</definition>
        <argsstring>() const</argsstring>
        <name>getSelectedChordRests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="746" column="1" bodyfile="libmscore/edit.cpp" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a348f636c943423766568255b2657ec71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::getSelectedChordRest2</definition>
        <argsstring>(ChordRest **cr1, ChordRest **cr2) const</argsstring>
        <name>getSelectedChordRest2</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> **</type>
          <declname>cr1</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> **</type>
          <declname>cr2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="747" column="1" bodyfile="libmscore/edit.cpp" bodystart="96" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa3b85eb58a8f7f4476fbd05b59253585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::select</definition>
        <argsstring>(Element *obj, SelectType=SelectType::SINGLE, int staff=0)</argsstring>
        <name>select</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>SelectType</type>
          <defname>type</defname>
          <defval>SelectType::SINGLE</defval>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="749" column="1" bodyfile="libmscore/score.cpp" bodystart="2688" bodyend="2714"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0026e69afb8428dad9e48566a2130aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::selectSimilar</definition>
        <argsstring>(Element *e, bool sameStaff)</argsstring>
        <name>selectSimilar</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sameStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="750" column="1" bodyfile="libmscore/score.cpp" bodystart="3007" bodyend="3032"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1509252b972a17cdc49340433f5bac1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::selectSimilarInRange</definition>
        <argsstring>(Element *e)</argsstring>
        <name>selectSimilarInRange</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="751" column="1" bodyfile="libmscore/score.cpp" bodystart="3038" bodyend="3064"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac6710dc304e8f163b23b002ea1000b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deselect</definition>
        <argsstring>(Element *obj)</argsstring>
        <name>deselect</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="754" column="1" bodyfile="libmscore/score.cpp" bodystart="2675" bodyend="2681"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3861e93f660f6647290c56dc195f2caf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::deselectAll</definition>
        <argsstring>()</argsstring>
        <name>deselectAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="755" column="1" bodyfile="libmscore/score.h" bodystart="755" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8ab164a57c03d2ce4bd173e00eef2247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::updateSelection</definition>
        <argsstring>()</argsstring>
        <name>updateSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="756" column="1" bodyfile="libmscore/score.h" bodystart="756" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3606ad504a055013fd8c9867b2f2f146" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element* Ms::Score::getSelectedElement</definition>
        <argsstring>() const</argsstring>
        <name>getSelectedElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="757" column="1" bodyfile="libmscore/score.h" bodystart="757" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afdedce94ce766c0c71bbd30ae610752b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_selection" kindref="compound">Selection</ref> &amp;</type>
        <definition>const Selection&amp; Ms::Score::selection</definition>
        <argsstring>() const</argsstring>
        <name>selection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="758" column="1" bodyfile="libmscore/score.h" bodystart="758" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5253ebdcde68b9d45218fadb1044c059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_selection" kindref="compound">Selection</ref> &amp;</type>
        <definition>Selection&amp; Ms::Score::selection</definition>
        <argsstring>()</argsstring>
        <name>selection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="759" column="1" bodyfile="libmscore/score.h" bodystart="759" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6ef9e26b4ec9e2de85f48e73dda1d1aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_selection_filter" kindref="compound">SelectionFilter</ref> &amp;</type>
        <definition>SelectionFilter&amp; Ms::Score::selectionFilter</definition>
        <argsstring>()</argsstring>
        <name>selectionFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="760" column="1" bodyfile="libmscore/score.h" bodystart="760" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a709d63eff8e2051e2aa2c4c54e01267f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSelection</definition>
        <argsstring>(const Selection &amp;s)</argsstring>
        <name>setSelection</name>
        <param>
          <type>const <ref refid="class_ms_1_1_selection" kindref="compound">Selection</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="761" column="1" bodyfile="libmscore/score.cpp" bodystart="1729" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a29bf40ad2e76f304b694766d504bce8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::pos</definition>
        <argsstring>()</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="763" column="1" bodyfile="libmscore/edit.cpp" bodystart="138" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a109ba45b66f5237756a83aa7cfdddea9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::tick2measure</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2measure</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="764" column="1" bodyfile="libmscore/utils.cpp" bodystart="46" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac6424f3fb8183318bf76b1e710167a75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::tick2measureMM</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2measureMM</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="765" column="1" bodyfile="libmscore/utils.cpp" bodystart="69" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a99c24fa92caf7b00f9312b69d7582f91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
        <definition>MeasureBase * Ms::Score::tick2measureBase</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2measureBase</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="766" column="1" bodyfile="libmscore/utils.cpp" bodystart="91" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeab9889d28452718e6ebbc6e73d19def" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segment</definition>
        <argsstring>(int tick, bool first, SegmentType st, bool useMMrest=false) const</argsstring>
        <name>tick2segment</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <param>
          <type>SegmentType</type>
          <declname>st</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useMMrest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="767" column="1" bodyfile="libmscore/utils.cpp" bodystart="121" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a93090d7e5b2f889bc282dc92379a5ad3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segment</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2segment</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="768" column="1" bodyfile="libmscore/utils.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac41612f9ff731494476cad45aec63a70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segment</definition>
        <argsstring>(int tick, bool first) const</argsstring>
        <name>tick2segment</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="769" column="1" bodyfile="libmscore/utils.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad50ede7ef676e0e97793c0004d0219f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segmentMM</definition>
        <argsstring>(int tick, bool first, SegmentType st) const</argsstring>
        <name>tick2segmentMM</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <param>
          <type>SegmentType</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="770" column="1" bodyfile="libmscore/utils.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1d8766eff1657dcc6be0f2b4cb4f59da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segmentMM</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2segmentMM</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="771" column="1" bodyfile="libmscore/utils.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a10b87406ff9247fc087271ccac32f499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segmentMM</definition>
        <argsstring>(int tick, bool first) const</argsstring>
        <name>tick2segmentMM</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="772" column="1" bodyfile="libmscore/utils.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a125c1e9940f71c2cb59e4d49df6a8244" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2segmentEnd</definition>
        <argsstring>(int track, int tick) const</argsstring>
        <name>tick2segmentEnd</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a segment containing a note or rest in <emphasis>track</emphasis> ending at <emphasis>tick</emphasis> Return the segment or null </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="773" column="1" bodyfile="libmscore/utils.cpp" bodystart="167" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a99f40d5c26372dc67b3d028816de5917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2leftSegment</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2leftSegment</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the segment at this tick position if any or the first segment <emphasis>before</emphasis> this tick position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="774" column="1" bodyfile="libmscore/utils.cpp" bodystart="201" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1797883498364c2b08ec6648d9849f29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::tick2rightSegment</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tick2rightSegment</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the segment at this tick position if any or the first segment <emphasis>after</emphasis> this tick position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="775" column="1" bodyfile="libmscore/utils.cpp" bodystart="226" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab28ccdab6936e04e389008607ad70a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::fixTicks</definition>
        <argsstring>()</argsstring>
        <name>fixTicks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is needed after<itemizedlist>
<listitem><para>inserting or removing a measure</para></listitem><listitem><para>changing the sigmap</para></listitem><listitem><para>after inserting/deleting time (changes the sigmap) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="776" column="1" bodyfile="libmscore/score.cpp" bodystart="363" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3cc228c2074c8f0f5b5b7a34424f8f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmd</definition>
        <argsstring>(const QAction *, EditData &amp;)</argsstring>
        <name>cmd</name>
        <param>
          <type>const QAction *</type>
          <defname>a</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="778" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3355" bodyend="3517"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5985c2f6efa3511417b23cd1e26f317e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::fileDivision</definition>
        <argsstring>(int t) const</argsstring>
        <name>fileDivision</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="779" column="1" bodyfile="libmscore/score.h" bodystart="779" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5c36f2f1d4913eb0951233fb54878f39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setFileDivision</definition>
        <argsstring>(int t)</argsstring>
        <name>setFileDivision</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="780" column="1" bodyfile="libmscore/score.h" bodystart="780" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad9b37e5c43d6a0c6a8636e3856303008" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::importedFilePath</definition>
        <argsstring>() const</argsstring>
        <name>importedFilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="782" column="1" bodyfile="libmscore/score.h" bodystart="782" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abb35a9b9c9dc49b968782a867c49f66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setImportedFilePath</definition>
        <argsstring>(const QString &amp;filePath)</argsstring>
        <name>setImportedFilePath</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="783" column="1" bodyfile="libmscore/score.cpp" bodystart="3648" bodyend="3651"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad97d501ce5f321a795d09e168ed67dab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::dirty</definition>
        <argsstring>() const</argsstring>
        <name>dirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="785" column="1" bodyfile="libmscore/score.cpp" bodystart="729" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0bd2668f716bc9e352416b81299e7725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setCreated</definition>
        <argsstring>(bool val)</argsstring>
        <name>setCreated</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="786" column="1" bodyfile="libmscore/score.h" bodystart="786" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3bf2c1efcb303bf3fc422844b0952ef7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::created</definition>
        <argsstring>() const</argsstring>
        <name>created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="787" column="1" bodyfile="libmscore/score.h" bodystart="787" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acb4df233390b3642cef7fe528019cbfd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::savedCapture</definition>
        <argsstring>() const</argsstring>
        <name>savedCapture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="788" column="1" bodyfile="libmscore/score.h" bodystart="788" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad2692cb879366df123d9fe99643d876b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saved</definition>
        <argsstring>() const</argsstring>
        <name>saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="789" column="1" bodyfile="libmscore/score.h" bodystart="789" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0ec7c8229d253416c43a5a4358f90a27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSaved</definition>
        <argsstring>(bool v)</argsstring>
        <name>setSaved</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="790" column="1" bodyfile="libmscore/score.h" bodystart="790" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae4bd75edfd2754456603d79d2ef63c94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSavedCapture</definition>
        <argsstring>(bool v)</argsstring>
        <name>setSavedCapture</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="791" column="1" bodyfile="libmscore/score.h" bodystart="791" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2c6bd82f3fd40695c55157402b2c1462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::printing</definition>
        <argsstring>() const</argsstring>
        <name>printing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="792" column="1" bodyfile="libmscore/score.h" bodystart="792" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a34d45c73f8eb67e220b03b0244ce8d72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPrinting</definition>
        <argsstring>(bool val)</argsstring>
        <name>setPrinting</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="793" column="1" bodyfile="libmscore/score.h" bodystart="793" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1adf70fe6c78510967acf7911332409c42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setAutosaveDirty</definition>
        <argsstring>(bool v)</argsstring>
        <name>setAutosaveDirty</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="794" column="1" bodyfile="libmscore/score.h" bodystart="794" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aaf84471c9b62433cd8072db72beca0b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::autosaveDirty</definition>
        <argsstring>() const</argsstring>
        <name>autosaveDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="795" column="1" bodyfile="libmscore/score.h" bodystart="795" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0fc725397789b1c041ab75c256f81349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::playlistDirty</definition>
        <argsstring>()</argsstring>
        <name>playlistDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="796" column="1" bodyfile="libmscore/score.h" bodystart="796" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab35c14f602fd1936a0f223df94639f37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPlaylistDirty</definition>
        <argsstring>()</argsstring>
        <name>setPlaylistDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="797" column="1" bodyfile="libmscore/score.h" bodystart="797" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae073d3d83b8548cbf8bb8e812e638766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::spell</definition>
        <argsstring>()</argsstring>
        <name>spell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="799" column="1" bodyfile="libmscore/score.cpp" bodystart="738" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a14c70588afb5f510f4a5d798546b51ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::spell</definition>
        <argsstring>(int startStaff, int endStaff, Segment *startSegment, Segment *endSegment)</argsstring>
        <name>spell</name>
        <param>
          <type>int</type>
          <declname>startStaff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endStaff</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>startSegment</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>endSegment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="800" column="1" bodyfile="libmscore/score.cpp" bodystart="757" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a26db5303a9abb9e4070fac31e706e8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::spell</definition>
        <argsstring>(Note *)</argsstring>
        <name>spell</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>note</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="801" column="1" bodyfile="libmscore/score.cpp" bodystart="842" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6275bc3816154e386a919a4950131a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::nextSeg</definition>
        <argsstring>(int tick, int track)</argsstring>
        <name>nextSeg</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="802" column="1" bodyfile="libmscore/utils.cpp" bodystart="279" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a69bb5a25e3e1c714788540ce57f92a71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_m_style" kindref="compound">MStyle</ref> &amp;</type>
        <definition>virtual MStyle&amp; Ms::Score::style</definition>
        <argsstring>()</argsstring>
        <name>style</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a03f9af0ba12ddf29071716d800cea0c6">style</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="804" column="1" bodyfile="libmscore/score.h" bodystart="804" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a125afd277dd4fa51c8575a77586baa53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_ms_1_1_m_style" kindref="compound">MStyle</ref> &amp;</type>
        <definition>virtual const MStyle&amp; Ms::Score::style</definition>
        <argsstring>() const</argsstring>
        <name>style</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a3af67842905f3f7ab3b326d303bf1d39">style</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="805" column="1" bodyfile="libmscore/score.h" bodystart="805" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a117b214c9121ab2e3e38deb2d88e7bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setStyle</definition>
        <argsstring>(const MStyle &amp;s)</argsstring>
        <name>setStyle</name>
        <param>
          <type>const <ref refid="class_ms_1_1_m_style" kindref="compound">MStyle</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="807" column="1" bodyfile="libmscore/score.cpp" bodystart="4245" bodyend="4248"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acd61b435cbced8736e00c27ecb4b8273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::loadStyle</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>loadStyle</name>
        <param>
          <type>const QString &amp;</type>
          <defname>fn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="808" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="635" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa197fa6c0ecc790426814fd50c76368d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::saveStyle</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>saveStyle</name>
        <param>
          <type>const QString &amp;</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="809" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="657" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0e33a5c1c22a4d4d32aff1839ca1d3ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Score::styleV</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleV</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="811" column="1" bodyfile="libmscore/score.h" bodystart="811" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a050937043774be9ba315eaa24bf2528f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
        <definition>Spatium Ms::Score::styleS</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleS</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="812" column="1" bodyfile="libmscore/score.h" bodystart="812" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8fe52b38ea518db8d70fcf15d9296b7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::styleP</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleP</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="813" column="1" bodyfile="libmscore/score.h" bodystart="813" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad6c4a007b889ec7bb515fb64e4b68c75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::styleSt</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleSt</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="814" column="1" bodyfile="libmscore/score.h" bodystart="814" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af0809e660db6f16274558c1179913aa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::styleB</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleB</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="815" column="1" bodyfile="libmscore/score.h" bodystart="815" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aaad043c69034265076988d49d0a78d42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::styleD</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleD</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="816" column="1" bodyfile="libmscore/score.h" bodystart="816" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0477b6417c332a3815aec4535c7a226b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::styleI</definition>
        <argsstring>(StyleIdx idx) const</argsstring>
        <name>styleI</name>
        <param>
          <type>StyleIdx</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="817" column="1" bodyfile="libmscore/score.h" bodystart="817" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aaa20fcc0a0a1f86b0b0d859648341c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::spatium</definition>
        <argsstring>() const</argsstring>
        <name>spatium</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="819" column="1" bodyfile="libmscore/score.h" bodystart="819" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abcc4af4da3908bb461399741542eaa99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSpatium</definition>
        <argsstring>(qreal v)</argsstring>
        <name>setSpatium</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="820" column="1" bodyfile="libmscore/score.h" bodystart="820" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad87c3bd56c82cef72f5550e324936696" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::genCourtesyTimesig</definition>
        <argsstring>() const</argsstring>
        <name>genCourtesyTimesig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="822" column="1" bodyfile="libmscore/score.h" bodystart="822" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a527adbffa7a3d74f0c31ad51ca8db6cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::genCourtesyClef</definition>
        <argsstring>() const</argsstring>
        <name>genCourtesyClef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="823" column="1" bodyfile="libmscore/score.h" bodystart="823" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5a7fc922b76382046fb0f9747eae5173" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::playPos</definition>
        <argsstring>() const</argsstring>
        <name>playPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="826" column="1" bodyfile="libmscore/score.h" bodystart="826" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ada71958961647035fd1e87fb028a1d01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPlayPos</definition>
        <argsstring>(int tick)</argsstring>
        <name>setPlayPos</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="827" column="1" bodyfile="libmscore/score.h" bodystart="827" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1840607912cbc97a1992a3fb306b70d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::loopInTick</definition>
        <argsstring>() const</argsstring>
        <name>loopInTick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="828" column="1" bodyfile="libmscore/score.h" bodystart="828" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5e183d7f88bc441ae6fe2e8db0d95444" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::loopOutTick</definition>
        <argsstring>() const</argsstring>
        <name>loopOutTick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="829" column="1" bodyfile="libmscore/score.h" bodystart="829" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acb544be662f57f108299a951bd7daa55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setLoopInTick</definition>
        <argsstring>(int tick)</argsstring>
        <name>setLoopInTick</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="830" column="1" bodyfile="libmscore/score.h" bodystart="830" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2022d1bcf62460d2108c7f969fc38552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setLoopOutTick</definition>
        <argsstring>(int tick)</argsstring>
        <name>setLoopOutTick</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="831" column="1" bodyfile="libmscore/score.h" bodystart="831" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5c4e7de12865d390097893be65d23866" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::pos</definition>
        <argsstring>(POS pos) const</argsstring>
        <name>pos</name>
        <param>
          <type>POS</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="833" column="1" bodyfile="libmscore/score.h" bodystart="833" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a07b8ff32c6a6496bfdd6eafbbf51c578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPos</definition>
        <argsstring>(POS pos, int tick)</argsstring>
        <name>setPos</name>
        <param>
          <type>POS</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="834" column="1" bodyfile="libmscore/score.cpp" bodystart="3506" bodyend="3516"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ace9b3f1fe203ea5466ba06fc132a4815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::noteEntryMode</definition>
        <argsstring>() const</argsstring>
        <name>noteEntryMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="836" column="1" bodyfile="libmscore/score.h" bodystart="836" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa9330af62dd7be391dacc2edf05b2b02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setNoteEntryMode</definition>
        <argsstring>(bool val)</argsstring>
        <name>setNoteEntryMode</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="837" column="1" bodyfile="libmscore/score.h" bodystart="837" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9fa70f95c17cf60b21d43c9bc77a4fee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NoteEntryMethod</type>
        <definition>NoteEntryMethod Ms::Score::noteEntryMethod</definition>
        <argsstring>() const</argsstring>
        <name>noteEntryMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="838" column="1" bodyfile="libmscore/score.h" bodystart="838" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab4dc5295c8ac5c6731d60f2f5f31c381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setNoteEntryMethod</definition>
        <argsstring>(NoteEntryMethod m)</argsstring>
        <name>setNoteEntryMethod</name>
        <param>
          <type>NoteEntryMethod</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="839" column="1" bodyfile="libmscore/score.h" bodystart="839" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a73eaa5933ff2af136b6f30bb0f750d1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::usingNoteEntryMethod</definition>
        <argsstring>(NoteEntryMethod m)</argsstring>
        <name>usingNoteEntryMethod</name>
        <param>
          <type>NoteEntryMethod</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="840" column="1" bodyfile="libmscore/score.h" bodystart="840" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac59728c5f4b28d9ddf500b3d8e93f36f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::inputPos</definition>
        <argsstring>() const</argsstring>
        <name>inputPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="841" column="1" bodyfile="libmscore/score.cpp" bodystart="1671" bodyend="1674"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac70657c844eaf6e44a8c55865179af9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::inputTrack</definition>
        <argsstring>() const</argsstring>
        <name>inputTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="842" column="1" bodyfile="libmscore/score.h" bodystart="842" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a67a1f22da74237b491206ae705ebb688" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_input_state" kindref="compound">InputState</ref> &amp;</type>
        <definition>const InputState&amp; Ms::Score::inputState</definition>
        <argsstring>() const</argsstring>
        <name>inputState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="843" column="1" bodyfile="libmscore/score.h" bodystart="843" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a58ccce5bead61b703a06fad9625e2743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_input_state" kindref="compound">InputState</ref> &amp;</type>
        <definition>InputState&amp; Ms::Score::inputState</definition>
        <argsstring>()</argsstring>
        <name>inputState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="844" column="1" bodyfile="libmscore/score.h" bodystart="844" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abce1515f6d4ed6cad207e57308b0b656" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setInputState</definition>
        <argsstring>(const InputState &amp;st)</argsstring>
        <name>setInputState</name>
        <param>
          <type>const <ref refid="class_ms_1_1_input_state" kindref="compound">InputState</ref> &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="845" column="1" bodyfile="libmscore/score.h" bodystart="845" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a809f6d6ba1ba10213224379c041d4594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setInputTrack</definition>
        <argsstring>(int t)</argsstring>
        <name>setInputTrack</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="846" column="1" bodyfile="libmscore/score.h" bodystart="846" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad66b0f2da90900f71d32d390cb1286cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::spatiumChanged</definition>
        <argsstring>(qreal oldValue, qreal newValue)</argsstring>
        <name>spatiumChanged</name>
        <param>
          <type>qreal</type>
          <declname>oldValue</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="848" column="1" bodyfile="libmscore/score.cpp" bodystart="1179" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa9d29bdcde59d2a8c3a002469a0fe61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::styleChanged</definition>
        <argsstring>()</argsstring>
        <name>styleChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="849" column="1" bodyfile="libmscore/score.cpp" bodystart="1204" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3a68a8fec04a156765d5031ae2fbc6df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdPaste</definition>
        <argsstring>(const QMimeData *ms, MuseScoreView *view)</argsstring>
        <name>cmdPaste</name>
        <param>
          <type>const QMimeData *</type>
          <declname>ms</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_muse_score_view" kindref="compound">MuseScoreView</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="851" column="1" bodyfile="libmscore/paste.cpp" bodystart="812" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2099e35c20667c5566657eb66b8c4cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::pasteStaff</definition>
        <argsstring>(XmlReader &amp;, Segment *dst, int staffIdx)</argsstring>
        <name>pasteStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="852" column="1" bodyfile="libmscore/paste.cpp" bodystart="78" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6f6e255734da22dadb0f032176f34b04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::pasteSymbols</definition>
        <argsstring>(XmlReader &amp;e, ChordRest *dst)</argsstring>
        <name>pasteSymbols</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="853" column="1" bodyfile="libmscore/paste.cpp" bodystart="586" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ada5c54ca9b2fcf9e48c536fed516706c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::renderMidi</definition>
        <argsstring>(EventMap *events)</argsstring>
        <name>renderMidi</name>
        <param>
          <type><ref refid="class_ms_1_1_event_map" kindref="compound">EventMap</ref> *</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="854" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="1701" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab8a8089a73603e95aa4a972229bd8332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::renderStaff</definition>
        <argsstring>(EventMap *events, Staff *)</argsstring>
        <name>renderStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_event_map" kindref="compound">EventMap</ref> *</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="855" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="629" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0b3f4d3f0ad4423cddadc2dde5907faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::renderSpanners</definition>
        <argsstring>(EventMap *events, int staffIdx)</argsstring>
        <name>renderSpanners</name>
        <param>
          <type><ref refid="class_ms_1_1_event_map" kindref="compound">EventMap</ref> *</type>
          <declname>events</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="856" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="655" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8d0c6f549385df52263c37dfd6eaac70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::renderMetronome</definition>
        <argsstring>(EventMap *events, Measure *m, int tickOffset)</argsstring>
        <name>renderMetronome</name>
        <param>
          <type><ref refid="class_ms_1_1_event_map" kindref="compound">EventMap</ref> *</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tickOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="857" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="1672" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae558537f2f5efb08bf54933776d7d9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BeatType</type>
        <definition>BeatType Ms::Score::tick2beatType</definition>
        <argsstring>(int tick)</argsstring>
        <name>tick2beatType</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="859" column="1" bodyfile="libmscore/utils.cpp" bodystart="245" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a42745779b8f9591ed2ef83abed766e14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::mscVersion</definition>
        <argsstring>() const</argsstring>
        <name>mscVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="861" column="1" bodyfile="libmscore/score.h" bodystart="861" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afe266e8b428563451538e5c60a2e40e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMscVersion</definition>
        <argsstring>(int v)</argsstring>
        <name>setMscVersion</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="862" column="1" bodyfile="libmscore/score.h" bodystart="862" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aba2c008de2e96910fda3bd30c714bf84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addLyrics</definition>
        <argsstring>(int tick, int staffIdx, const QString &amp;)</argsstring>
        <name>addLyrics</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <defname>txt</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="864" column="1" bodyfile="libmscore/score.cpp" bodystart="3148" bodyend="3177"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afdff58f0c0f64e237bc4ebb7c1187b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::updateSwing</definition>
        <argsstring>()</argsstring>
        <name>updateSwing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="866" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="79" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3a8e9a09cfce3cedc970e3fa6da4dfd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createPlayEvents</definition>
        <argsstring>()</argsstring>
        <name>createPlayEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="867" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="1649" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a800b18cf10876b1497e1bc43a2a72ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdConcertPitchChanged</definition>
        <argsstring>(bool, bool)</argsstring>
        <name>cmdConcertPitchChanged</name>
        <param>
          <type>bool</type>
          <defname>flag</defname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="869" column="1" bodyfile="libmscore/score.cpp" bodystart="2476" bodyend="2516"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abf9caf87cad8882df7d58e0a39777350" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_tempo_map" kindref="compound">TempoMap</ref> *</type>
        <definition>TempoMap * Ms::Score::tempomap</definition>
        <argsstring>() const</argsstring>
        <name>tempomap</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a4b452620bc5f19ddff503a1deb1fe8b1">tempomap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="871" column="1" bodyfile="libmscore/score.h" bodystart="1285" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac7138320b76ac3bcaccc773416461d47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_time_sig_map" kindref="compound">TimeSigMap</ref> *</type>
        <definition>TimeSigMap * Ms::Score::sigmap</definition>
        <argsstring>() const</argsstring>
        <name>sigmap</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a50fdcb2b8607ddf6517a2b008b7bc609">sigmap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="872" column="1" bodyfile="libmscore/score.h" bodystart="1286" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7a9fdb8bf36af6e7d9b8468cedd3d079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setTempo</definition>
        <argsstring>(Segment *, qreal)</argsstring>
        <name>setTempo</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>segment</defname>
        </param>
        <param>
          <type>qreal</type>
          <defname>tempo</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="874" column="1" bodyfile="libmscore/score.cpp" bodystart="3184" bodyend="3187"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad27c4b247ef8d90f284caad6d75beefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setTempo</definition>
        <argsstring>(int tick, qreal bps)</argsstring>
        <name>setTempo</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>bps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="875" column="1" bodyfile="libmscore/score.cpp" bodystart="3189" bodyend="3193"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4836824a7d186ac31fb6c1c6acb97771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeTempo</definition>
        <argsstring>(int tick)</argsstring>
        <name>removeTempo</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="876" column="1" bodyfile="libmscore/score.cpp" bodystart="3199" bodyend="3203"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab22f34f7982ddc3b6b4d9f1a3273f326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPause</definition>
        <argsstring>(int tick, qreal seconds)</argsstring>
        <name>setPause</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="877" column="1" bodyfile="libmscore/score.cpp" bodystart="3209" bodyend="3213"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7b24075c4e9fa3052f43cc4f1f76be60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::tempo</definition>
        <argsstring>(int tick) const</argsstring>
        <name>tempo</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="878" column="1" bodyfile="libmscore/score.cpp" bodystart="3219" bodyend="3222"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a833ac1045a645cf8960b5133c3871e41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::defaultsRead</definition>
        <argsstring>() const</argsstring>
        <name>defaultsRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="880" column="1" bodyfile="libmscore/score.h" bodystart="880" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a72897197c84520356af12ef6928cdf6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setDefaultsRead</definition>
        <argsstring>(bool b)</argsstring>
        <name>setDefaultsRead</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="881" column="1" bodyfile="libmscore/score.h" bodystart="881" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0365482294f603c1dff69bbf0893b179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> *</type>
        <definition>Text * Ms::Score::getText</definition>
        <argsstring>(SubStyle subtype)</argsstring>
        <name>getText</name>
        <param>
          <type>SubStyle</type>
          <declname>subtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="882" column="1" bodyfile="libmscore/score.cpp" bodystart="1742" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6347c9f3342488d629fe5d59c3e619bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::lassoSelect</definition>
        <argsstring>(const QRectF &amp;)</argsstring>
        <name>lassoSelect</name>
        <param>
          <type>const QRectF &amp;</type>
          <defname>bbox</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="884" column="1" bodyfile="libmscore/score.cpp" bodystart="3070" bodyend="3091"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5b031112e363ca008bce17d67a423843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::lassoSelectEnd</definition>
        <argsstring>()</argsstring>
        <name>lassoSelectEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="885" column="1" bodyfile="libmscore/score.cpp" bodystart="3097" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a37fd5655183c36af965385ef2493d012" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_page" kindref="compound">Page</ref> *</type>
        <definition>Page * Ms::Score::searchPage</definition>
        <argsstring>(const QPointF &amp;) const</argsstring>
        <name>searchPage</name>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="887" column="1" bodyfile="libmscore/score.cpp" bodystart="879" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8960889a57e2be841c3d531f77ed8580" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_system" kindref="compound">System</ref> * &gt;</type>
        <definition>QList&lt; System * &gt; Ms::Score::searchSystem</definition>
        <argsstring>(const QPointF &amp;p) const</argsstring>
        <name>searchSystem</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="888" column="1" bodyfile="libmscore/score.cpp" bodystart="895" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acaee032dba7858fac9ea118a847c9686" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::searchMeasure</definition>
        <argsstring>(const QPointF &amp;p) const</argsstring>
        <name>searchMeasure</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="889" column="1" bodyfile="libmscore/score.cpp" bodystart="938" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8e9d8c397c7b5fbba92028b977575490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::getPosition</definition>
        <argsstring>(Position *pos, const QPointF &amp;, int voice) const</argsstring>
        <name>getPosition</name>
        <param>
          <type><ref refid="struct_ms_1_1_position" kindref="compound">Position</ref> *</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <defname>p</defname>
        </param>
        <param>
          <type>int</type>
          <declname>voice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="891" column="1" bodyfile="libmscore/score.cpp" bodystart="1017" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a59b11937728ba323f39b06afefb1ea2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdDeleteTuplet</definition>
        <argsstring>(Tuplet *, bool replaceWithRest)</argsstring>
        <name>cmdDeleteTuplet</name>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <defname>tuplet</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>replaceWithRest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="893" column="1" bodyfile="libmscore/edit.cpp" bodystart="2425" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b452773453d974024e0a92a0b8a06c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::getCreateMeasure</definition>
        <argsstring>(int tick)</argsstring>
        <name>getCreateMeasure</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="896" column="1" bodyfile="libmscore/score.cpp" bodystart="1217" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea8638fe119abb62bb95db65d2ced187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::adjustBracketsDel</definition>
        <argsstring>(int sidx, int eidx)</argsstring>
        <name>adjustBracketsDel</name>
        <param>
          <type>int</type>
          <declname>sidx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eidx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="898" column="1" bodyfile="libmscore/score.cpp" bodystart="2299" bodyend="2320"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0da213290de10b9351c4b1d220d1f9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::adjustBracketsIns</definition>
        <argsstring>(int sidx, int eidx)</argsstring>
        <name>adjustBracketsIns</name>
        <param>
          <type>int</type>
          <declname>sidx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eidx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="899" column="1" bodyfile="libmscore/score.cpp" bodystart="2326" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5b2ea63710f3048cb0e181c2a0bc96b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::adjustKeySigs</definition>
        <argsstring>(int sidx, int eidx, KeyList km)</argsstring>
        <name>adjustKeySigs</name>
        <param>
          <type>int</type>
          <declname>sidx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eidx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_key_list" kindref="compound">KeyList</ref></type>
          <declname>km</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="900" column="1" bodyfile="libmscore/score.cpp" bodystart="2353" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a640064eecdd5092868477bd7876134ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::searchLabel</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>searchLabel</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="902" column="1" bodyfile="libmscore/repeatlist.cpp" bodystart="46" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aacdfe7e7d0a26ed23f30e9a3e983faa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Score::searchLabelWithinSectionFirst</definition>
        <argsstring>(const QString &amp;s, Measure *sectionStartMeasure, Measure *sectionEndMeasure)</argsstring>
        <name>searchLabelWithinSectionFirst</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>sectionStartMeasure</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>sectionEndMeasure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="903" column="1" bodyfile="libmscore/repeatlist.cpp" bodystart="68" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a86c74b2377855e9cc2211a5eb9e5881d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_repeat_list" kindref="compound">RepeatList</ref> *</type>
        <definition>RepeatList * Ms::Score::repeatList</definition>
        <argsstring>() const</argsstring>
        <name>repeatList</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a857d4d724dfb7a6aa871aa29c8a39331">repeatList</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="904" column="1" bodyfile="libmscore/score.h" bodystart="1284" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad3fc94b5c48558d9108f913ce6bb00db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::utick2utime</definition>
        <argsstring>(int tick) const</argsstring>
        <name>utick2utime</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="905" column="1" bodyfile="libmscore/score.cpp" bodystart="1653" bodyend="1656"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3d546f29f5fa5f23f2c834632de90208" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::utime2utick</definition>
        <argsstring>(qreal utime) const</argsstring>
        <name>utime2utick</name>
        <param>
          <type>qreal</type>
          <declname>utime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="906" column="1" bodyfile="libmscore/score.cpp" bodystart="1662" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea2de837460a33bf793051885e68cc50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Ms::Score::updateRepeatList</definition>
        <argsstring>(bool expandRepeats)</argsstring>
        <name>updateRepeatList</name>
        <param>
          <type>bool</type>
          <declname>expandRepeats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="908" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="449" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4b8b143144168f4879fb99826c38913b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::nextInputPos</definition>
        <argsstring>(ChordRest *cr, bool)</argsstring>
        <name>nextInputPos</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>bool</type>
          <defname>doSelect</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="910" column="1" bodyfile="libmscore/edit.cpp" bodystart="2443" bodyend="2459"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aca34c18412a45065782e9d60aa1b7ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdMirrorNoteHead</definition>
        <argsstring>()</argsstring>
        <name>cmdMirrorNoteHead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="911" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2218" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afd4b28e5752dc085c8e0e4203631a1c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::loWidth</definition>
        <argsstring>() const</argsstring>
        <name>loWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="913" column="1" bodyfile="libmscore/score.cpp" bodystart="3228" bodyend="3231"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acc471f15d19ad2e742abb8433c071fcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::loHeight</definition>
        <argsstring>() const</argsstring>
        <name>loHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="914" column="1" bodyfile="libmscore/score.cpp" bodystart="3237" bodyend="3240"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a291718ca12053bd8e663a8fcd756bd6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Ms::Score::npages</definition>
        <argsstring>() const</argsstring>
        <name>npages</name>
        <reimplementedby refid="class_ms_1_1_master_score_1ace3c07c2bb220563663c7b411697763b">npages</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="916" column="1" bodyfile="libmscore/score.h" bodystart="916" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a89471772ad4e890e3e4f38f2c67e6318" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Ms::Score::pageIdx</definition>
        <argsstring>(Page *page) const</argsstring>
        <name>pageIdx</name>
        <reimplementedby refid="class_ms_1_1_master_score_1aa3f8b4ff8ce039852e083503dc8f399b">pageIdx</reimplementedby>
        <param>
          <type><ref refid="class_ms_1_1_page" kindref="compound">Page</ref> *</type>
          <declname>page</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="917" column="1" bodyfile="libmscore/score.h" bodystart="917" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a528c9e0eefcf6ffa27fb49d32e4f64c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_page" kindref="compound">Page</ref> * &gt; &amp;</type>
        <definition>virtual const QList&lt;Page*&gt;&amp; Ms::Score::pages</definition>
        <argsstring>() const</argsstring>
        <name>pages</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a8250801f8f048a2140d3c117179c23ae">pages</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="918" column="1" bodyfile="libmscore/score.h" bodystart="918" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1adcfe769e126ca898bb32ac883660d847" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_page" kindref="compound">Page</ref> * &gt; &amp;</type>
        <definition>virtual QList&lt;Page*&gt;&amp; Ms::Score::pages</definition>
        <argsstring>()</argsstring>
        <name>pages</name>
        <reimplementedby refid="class_ms_1_1_master_score_1af2f4ccd6c074d4a737b8849238773cca">pages</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="919" column="1" bodyfile="libmscore/score.h" bodystart="919" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae550ee02f05637cd42d972c95bb6985d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_system" kindref="compound">System</ref> * &gt; &amp;</type>
        <definition>const QList&lt;System*&gt;&amp; Ms::Score::systems</definition>
        <argsstring>() const</argsstring>
        <name>systems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="921" column="1" bodyfile="libmscore/score.h" bodystart="921" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a4b614ee8c1286f61c1c6d332f3423ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_system" kindref="compound">System</ref> * &gt; &amp;</type>
        <definition>QList&lt;System*&gt;&amp; Ms::Score::systems</definition>
        <argsstring>()</argsstring>
        <name>systems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="922" column="1" bodyfile="libmscore/score.h" bodystart="922" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab2347f55630666c0a3e699b6c91bbf80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base_list" kindref="compound">MeasureBaseList</ref> *</type>
        <definition>MeasureBaseList* Ms::Score::measures</definition>
        <argsstring>()</argsstring>
        <name>measures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="924" column="1" bodyfile="libmscore/score.h" bodystart="924" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1d805bc938b47e0172dbd20dfa846d8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::checkHasMeasures</definition>
        <argsstring>() const</argsstring>
        <name>checkHasMeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="925" column="1" bodyfile="libmscore/score.cpp" bodystart="1141" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a67489cfbd278731da0a5ed2934c7efd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
        <definition>MeasureBase * Ms::Score::first</definition>
        <argsstring>() const</argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="926" column="1" bodyfile="libmscore/measurebase.cpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af5dbd605ebbe5fc8292ba3ec87134f28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
        <definition>MeasureBase * Ms::Score::firstMM</definition>
        <argsstring>() const</argsstring>
        <name>firstMM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="927" column="1" bodyfile="libmscore/score.cpp" bodystart="1541" bodyend="1551"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9a782ad57ba6f6f813a9caff2992df92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
        <definition>MeasureBase * Ms::Score::last</definition>
        <argsstring>() const</argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="928" column="1" bodyfile="libmscore/measurebase.cpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3888570668d289ec09dd850d4c169e1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE <ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref> *</type>
        <definition>Measure * Ms::Score::firstMeasure</definition>
        <argsstring>() const</argsstring>
        <name>firstMeasure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="929" column="1" bodyfile="libmscore/score.cpp" bodystart="1516" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8728dad010db5f4e271029dbcf2b1650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref> *</type>
        <definition>Ms::Measure* Ms::Score::firstMeasureMM</definition>
        <argsstring>() const</argsstring>
        <name>firstMeasureMM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aad95161dc0554fb77a5cfd37d16ed505" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref> *</type>
        <definition>Ms::Measure* Ms::Score::lastMeasure</definition>
        <argsstring>() const</argsstring>
        <name>lastMeasure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8700ccfc801e93d7bd9a54f9618dff04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Ms::Measure</ref> *</type>
        <definition>Ms::Measure* Ms::Score::lastMeasureMM</definition>
        <argsstring>() const</argsstring>
        <name>lastMeasureMM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a617ab3f074400ef5ba92e9f3b441e940" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
        <definition>MeasureBase * Ms::Score::measure</definition>
        <argsstring>(int idx) const</argsstring>
        <name>measure</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="933" column="1" bodyfile="libmscore/score.cpp" bodystart="1557" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a990f875f7fe6d284c0d0c71b51bd45a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::endTick</definition>
        <argsstring>() const</argsstring>
        <name>endTick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="935" column="1" bodyfile="libmscore/score.cpp" bodystart="1599" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeb1a034f75cd5b9e6ba3cf3af695ad19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::firstSegment</definition>
        <argsstring>(SegmentType s) const</argsstring>
        <name>firstSegment</name>
        <param>
          <type>SegmentType</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="937" column="1" bodyfile="libmscore/score.cpp" bodystart="1609" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a44f98a5887a534109b2627bfe67358da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Score::firstSegmentMM</definition>
        <argsstring>(SegmentType s) const</argsstring>
        <name>firstSegmentMM</name>
        <param>
          <type>SegmentType</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="938" column="1" bodyfile="libmscore/score.cpp" bodystart="1633" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a00f52cd4792f9dc8a1d8cac0ffaaf534" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Score::lastSegment</definition>
        <argsstring>() const</argsstring>
        <name>lastSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae50d0b620dca99b269dea62ddcf71f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::connectTies</definition>
        <argsstring>(bool silent=false)</argsstring>
        <name>connectTies</name>
        <param>
          <type>bool</type>
          <declname>silent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Rebuild tie connections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="941" column="1" bodyfile="libmscore/layout.cpp" bodystart="1301" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5f5d5ef10af2f4fa914ce2ef6ba1cdbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::point</definition>
        <argsstring>(const Spatium sp) const</argsstring>
        <name>point</name>
        <param>
          <type>const <ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="943" column="1" bodyfile="libmscore/score.h" bodystart="943" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9d89706532afe386d2d07cc5eb4c90d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::scanElements</definition>
        <argsstring>(void *data, void(*func)(void *, Element *), bool all=true)</argsstring>
        <name>scanElements</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *, <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="945" column="1" bodyfile="libmscore/score.cpp" bodystart="1681" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a54c1b6374db90858a189dc8ffd28d723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::scanElementsInRange</definition>
        <argsstring>(void *data, void(*func)(void *, Element *), bool all=true)</argsstring>
        <name>scanElementsInRange</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *, <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="946" column="1" bodyfile="libmscore/score.cpp" bodystart="1703" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0dda845ec7e2fbd60df17960cf8b9f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray Ms::Score::buildCanonical</definition>
        <argsstring>(int track)</argsstring>
        <name>buildCanonical</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="947" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a940af93575995e7f4879631ef7eb18f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::fileDivision</definition>
        <argsstring>() const</argsstring>
        <name>fileDivision</name>
        <briefdescription>
<para>division of current loading *.msc file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="948" column="1" bodyfile="libmscore/score.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6ffcbbfc3496ad040af5343e718d5b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::splitStaff</definition>
        <argsstring>(int staffIdx, int splitPoint)</argsstring>
        <name>splitStaff</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>splitPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="949" column="1" bodyfile="libmscore/score.cpp" bodystart="2025" bodyend="2170"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a307b30884396d6b5f2631ef8d2b94d94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::tmpName</definition>
        <argsstring>() const</argsstring>
        <name>tmpName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="950" column="1" bodyfile="libmscore/score.h" bodystart="950" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a49660451e23381379e005bc3e4512e40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setTmpName</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>setTmpName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="951" column="1" bodyfile="libmscore/score.h" bodystart="951" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad5f964606310a59392dc934d0ebb712d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::processMidiInput</definition>
        <argsstring>()</argsstring>
        <name>processMidiInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="952" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1853" bodyend="1947"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad2751ba4e517efbcbd92b4d285b008c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_lyrics" kindref="compound">Lyrics</ref> *</type>
        <definition>Lyrics * Ms::Score::addLyrics</definition>
        <argsstring>()</argsstring>
        <name>addLyrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="953" column="1" bodyfile="libmscore/edit.cpp" bodystart="2186" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a81bde69ca9cf6a9bade63ac525eac9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_figured_bass" kindref="compound">FiguredBass</ref> *</type>
        <definition>FiguredBass * Ms::Score::addFiguredBass</definition>
        <argsstring>()</argsstring>
        <name>addFiguredBass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="954" column="1" bodyfile="libmscore/figuredbass.cpp" bodystart="1762" bodyend="1791"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7086ddf7be29d10261f14cc0ddeb7235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::expandVoice</definition>
        <argsstring>(Segment *s, int track)</argsstring>
        <name>expandVoice</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="955" column="1" bodyfile="libmscore/cmd.cpp" bodystart="373" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1abd34a56c1075653303d90e31031f72db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::expandVoice</definition>
        <argsstring>()</argsstring>
        <name>expandVoice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="956" column="1" bodyfile="libmscore/cmd.cpp" bodystart="429" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a64bcbb3dbfc6a89701c5c2d560d6fff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::selectMove</definition>
        <argsstring>(const QString &amp;cmd)</argsstring>
        <name>selectMove</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="958" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2160" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a229ec32c64e743ef265e720ac0c44df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::move</definition>
        <argsstring>(const QString &amp;cmd)</argsstring>
        <name>move</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="959" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1954" bodyend="2154"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6d0c52f5aed3ecd287da5d72766b76cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdEnterRest</definition>
        <argsstring>(const TDuration &amp;d)</argsstring>
        <name>cmdEnterRest</name>
        <param>
          <type>const <ref refid="class_ms_1_1_t_duration" kindref="compound">TDuration</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="960" column="1" bodyfile="libmscore/edit.cpp" bodystart="2364" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3a7ad4b062f625d9f7192c335ddfe289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddInterval</definition>
        <argsstring>(int, const std::vector&lt; Note *&gt; &amp;)</argsstring>
        <name>cmdAddInterval</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *&gt; &amp;</type>
          <defname>nl</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="961" column="1" bodyfile="libmscore/cmd.cpp" bodystart="440" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3d96b673e1e5c8a6037d63ab97b99560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdCreateTuplet</definition>
        <argsstring>(ChordRest *, Tuplet *)</argsstring>
        <name>cmdCreateTuplet</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>ocr</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <defname>tuplet</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="962" column="1" bodyfile="libmscore/edit.cpp" bodystart="2243" bodyend="2299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1decbb1a420564aba93734430e02e28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeAudio</definition>
        <argsstring>()</argsstring>
        <name>removeAudio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="963" column="1" bodyfile="libmscore/score.cpp" bodystart="1868" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a50e6e934be473faa8cc345e9d66b1a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::doLayout</definition>
        <argsstring>()</argsstring>
        <name>doLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="965" column="1" bodyfile="libmscore/layout.cpp" bodystart="3373" bodyend="3379"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a214a5125ec6ee8aa3adc75370ff4c748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::doLayoutRange</definition>
        <argsstring>(int, int)</argsstring>
        <name>doLayoutRange</name>
        <param>
          <type>int</type>
          <defname>stick</defname>
        </param>
        <param>
          <type>int</type>
          <defname>etick</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="966" column="1" bodyfile="libmscore/layout.cpp" bodystart="3385" bodyend="3537"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a779fa71d1ad532f4fe7f280b3e886913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutLinear</definition>
        <argsstring>(LayoutContext &amp;lc)</argsstring>
        <name>layoutLinear</name>
        <param>
          <type><ref refid="struct_ms_1_1_layout_context" kindref="compound">LayoutContext</ref> &amp;</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="967" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a812950264227aabe24fcc915814dbba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutSystemsUndoRedo</definition>
        <argsstring>()</argsstring>
        <name>layoutSystemsUndoRedo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a588185e96d270ac7180feb46b2d548ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutPagesUndoRedo</definition>
        <argsstring>()</argsstring>
        <name>layoutPagesUndoRedo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="970" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aabf8eae8fbefcade6724ea507c16a9ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutChords1</definition>
        <argsstring>(Segment *segment, int staffIdx)</argsstring>
        <name>layoutChords1</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="972" column="1" bodyfile="libmscore/layout.cpp" bodystart="90" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a047fa69a68b80e772ad8fd9f85d2c837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::layoutChords2</definition>
        <argsstring>(std::vector&lt; Note *&gt; &amp;notes, bool up)</argsstring>
        <name>layoutChords2</name>
        <param>
          <type>std::vector&lt; <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *&gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="973" column="1" bodyfile="libmscore/layout.cpp" bodystart="527" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac801c8ac2033b7062c849f7e4e821463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutChords3</definition>
        <argsstring>(std::vector&lt; Note *&gt; &amp;, Staff *, Segment *)</argsstring>
        <name>layoutChords3</name>
        <param>
          <type>std::vector&lt; <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *&gt; &amp;</type>
          <defname>notes</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>segment</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="974" column="1" bodyfile="libmscore/layout.cpp" bodystart="755" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1d01889b6f6a2b4c1d0f60ca5dd62cbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_synthesizer_state" kindref="compound">SynthesizerState</ref> &amp;</type>
        <definition>SynthesizerState&amp; Ms::Score::synthesizerState</definition>
        <argsstring>()</argsstring>
        <name>synthesizerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="976" column="1" bodyfile="libmscore/score.h" bodystart="976" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a396591a0c12082444b37f33b0e37524a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setSynthesizerState</definition>
        <argsstring>(const SynthesizerState &amp;s)</argsstring>
        <name>setSynthesizerState</name>
        <param>
          <type>const <ref refid="class_ms_1_1_synthesizer_state" kindref="compound">SynthesizerState</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="977" column="1" bodyfile="libmscore/score.cpp" bodystart="1858" bodyend="1862"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a303f77fe71adf45cca59cfd0214afaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::updateHairpin</definition>
        <argsstring>(Hairpin *)</argsstring>
        <name>updateHairpin</name>
        <param>
          <type><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> *</type>
          <defname>h</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="979" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="477" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a44f9771adde9f16428e0dcb95195a77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeHairpin</definition>
        <argsstring>(Hairpin *)</argsstring>
        <name>removeHairpin</name>
        <param>
          <type><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> *</type>
          <defname>h</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="980" column="1" bodyfile="libmscore/rendermidi.cpp" bodystart="534" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3fc69bd8fdef8dee41807ab4363674da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_volta" kindref="compound">Volta</ref> *</type>
        <definition>Volta * Ms::Score::searchVolta</definition>
        <argsstring>(int tick) const</argsstring>
        <name>searchVolta</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="981" column="1" bodyfile="libmscore/repeatlist.cpp" bodystart="29" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aac5cfbf34cbd22da196fd31944a260da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
        <definition>MasterScore* Ms::Score::masterScore</definition>
        <argsstring>() const</argsstring>
        <name>masterScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="982" column="1" bodyfile="libmscore/score.h" bodystart="982" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8d80b3fac7f3ce953e8a6a7bba35baad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMasterScore</definition>
        <argsstring>(MasterScore *s)</argsstring>
        <name>setMasterScore</name>
        <param>
          <type><ref refid="class_ms_1_1_master_score" kindref="compound">MasterScore</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="983" column="1" bodyfile="libmscore/score.h" bodystart="983" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae429073049b54476891e1ea08ea4f66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::createRevision</definition>
        <argsstring>()</argsstring>
        <name>createRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="984" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="1024" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa92c03cb7fcc41d65935b519188e382c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::writeSegments</definition>
        <argsstring>(XmlWriter &amp;xml, int strack, int etrack, Segment *first, Segment *last, bool, bool, bool, bool)</argsstring>
        <name>writeSegments</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>etrack</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>last</declname>
        </param>
        <param>
          <type>bool</type>
          <defname>writeSystemElements</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>clip</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>needFirstTick</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>forceTimeSig</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="985" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="1055" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a77f6d8a8b8da64e43a7ceb2447d14bc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QMap&lt; QString, QString &gt; &amp;</type>
        <definition>const QMap&lt;QString, QString&gt;&amp; Ms::Score::metaTags</definition>
        <argsstring>() const</argsstring>
        <name>metaTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="987" column="1" bodyfile="libmscore/score.h" bodystart="987" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a31524c4f1af6c4859fdbee457e8ee98e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QMap&lt; QString, QString &gt; &amp;</type>
        <definition>QMap&lt;QString, QString&gt;&amp; Ms::Score::metaTags</definition>
        <argsstring>()</argsstring>
        <name>metaTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="988" column="1" bodyfile="libmscore/score.h" bodystart="988" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa48241b9d4f93aaab0347f693477fdec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMetaTags</definition>
        <argsstring>(const QMap&lt; QString, QString &gt; &amp;t)</argsstring>
        <name>setMetaTags</name>
        <param>
          <type>const QMap&lt; QString, QString &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="989" column="1" bodyfile="libmscore/score.h" bodystart="989" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a33c34750195b4427512931b735ce6cba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE QString</type>
        <definition>QString Ms::Score::metaTag</definition>
        <argsstring>(const QString &amp;tag) const</argsstring>
        <name>metaTag</name>
        <param>
          <type>const QString &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="992" column="1" bodyfile="libmscore/score.cpp" bodystart="1758" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0ecec63806ef4b6a348d99f22e467dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Ms::Score::setMetaTag</definition>
        <argsstring>(const QString &amp;tag, const QString &amp;val)</argsstring>
        <name>setMetaTag</name>
        <param>
          <type>const QString &amp;</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="994" column="1" bodyfile="libmscore/score.cpp" bodystart="1769" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac4ec0a0b6466642c3ded222399790040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSplitMeasure</definition>
        <argsstring>(ChordRest *)</argsstring>
        <name>cmdSplitMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>cr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="996" column="1" bodyfile="libmscore/splitMeasure.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a224305fa1d51915d23afabf5c1b46cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::splitMeasure</definition>
        <argsstring>(Segment *)</argsstring>
        <name>splitMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>segment</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="997" column="1" bodyfile="libmscore/splitMeasure.cpp" bodystart="39" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aba6085db1523002d9aee019775846aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdJoinMeasure</definition>
        <argsstring>(Measure *, Measure *)</argsstring>
        <name>cmdJoinMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m1</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="998" column="1" bodyfile="libmscore/joinMeasure.cpp" bodystart="26" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8226b0d61543b1fca19861ca748900ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::pageNumberOffset</definition>
        <argsstring>() const</argsstring>
        <name>pageNumberOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="999" column="1" bodyfile="libmscore/score.h" bodystart="999" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0932d7d5757a579bcf9cfc2f8892fcd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPageNumberOffset</definition>
        <argsstring>(int v)</argsstring>
        <name>setPageNumberOffset</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1000" column="1" bodyfile="libmscore/score.h" bodystart="1000" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ae3dd545ff5c9a02d72df8d9d3f058e08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::mscoreVersion</definition>
        <argsstring>() const</argsstring>
        <name>mscoreVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1002" column="1" bodyfile="libmscore/score.h" bodystart="1002" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a497c9f24fbe494d5414f0918ad27d955" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::mscoreRevision</definition>
        <argsstring>() const</argsstring>
        <name>mscoreRevision</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1003" column="1" bodyfile="libmscore/score.h" bodystart="1003" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a29eb44f210fbd0232928b178f6ea827b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMscoreVersion</definition>
        <argsstring>(const QString &amp;val)</argsstring>
        <name>setMscoreVersion</name>
        <param>
          <type>const QString &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1004" column="1" bodyfile="libmscore/score.h" bodystart="1004" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad5b692892355c17c1305faa0dbdf4464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setMscoreRevision</definition>
        <argsstring>(int val)</argsstring>
        <name>setMscoreRevision</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1005" column="1" bodyfile="libmscore/score.h" bodystart="1005" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5fe5849053e609944418782e5140f723" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Ms::Score::currentLayerMask</definition>
        <argsstring>() const</argsstring>
        <name>currentLayerMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1007" column="1" bodyfile="libmscore/score.h" bodystart="1007" bodyend="1007"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad3c3c212c81e446bc31d60eb8d36873b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setCurrentLayer</definition>
        <argsstring>(int val)</argsstring>
        <name>setCurrentLayer</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1008" column="1" bodyfile="libmscore/score.h" bodystart="1008" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2d4afa6682974ad93eb40340c5f951c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::currentLayer</definition>
        <argsstring>() const</argsstring>
        <name>currentLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1009" column="1" bodyfile="libmscore/score.h" bodystart="1009" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab6fe3c81f6be8f49726dd6b4e4928912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString *</type>
        <definition>QString* Ms::Score::layerTags</definition>
        <argsstring>()</argsstring>
        <name>layerTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1010" column="1" bodyfile="libmscore/score.h" bodystart="1010" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afbbf10f98745807046a016e09d03b98a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString *</type>
        <definition>QString* Ms::Score::layerTagComments</definition>
        <argsstring>()</argsstring>
        <name>layerTagComments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1011" column="1" bodyfile="libmscore/score.h" bodystart="1011" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a67e0858003e10756b560df981bea9b61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="struct_ms_1_1_layer" kindref="compound">Layer</ref> &gt; &amp;</type>
        <definition>QList&lt;Layer&gt;&amp; Ms::Score::layer</definition>
        <argsstring>()</argsstring>
        <name>layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1012" column="1" bodyfile="libmscore/score.h" bodystart="1012" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a258303b5b7e72f05a8213255d4d2efcb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="struct_ms_1_1_layer" kindref="compound">Layer</ref> &gt; &amp;</type>
        <definition>const QList&lt;Layer&gt;&amp; Ms::Score::layer</definition>
        <argsstring>() const</argsstring>
        <name>layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1013" column="1" bodyfile="libmscore/score.h" bodystart="1013" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1cb640ef003e3e86fe1631e56465cc22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::tagIsValid</definition>
        <argsstring>(uint tag) const</argsstring>
        <name>tagIsValid</name>
        <param>
          <type>uint</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1014" column="1" bodyfile="libmscore/score.h" bodystart="1014" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab53d6e1fa1a9c0652a3101613d126fef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addViewer</definition>
        <argsstring>(MuseScoreView *v)</argsstring>
        <name>addViewer</name>
        <param>
          <type><ref refid="class_ms_1_1_muse_score_view" kindref="compound">MuseScoreView</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1016" column="1" bodyfile="libmscore/score.h" bodystart="1016" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8d4c17f0d115b9501be41346e3d4e68f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeViewer</definition>
        <argsstring>(MuseScoreView *v)</argsstring>
        <name>removeViewer</name>
        <param>
          <type><ref refid="class_ms_1_1_muse_score_view" kindref="compound">MuseScoreView</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1017" column="1" bodyfile="libmscore/score.h" bodystart="1017" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aab97c3e32db9ffed7379a1f71716cd59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_ms_1_1_muse_score_view" kindref="compound">MuseScoreView</ref> * &gt; &amp;</type>
        <definition>const QList&lt;MuseScoreView*&gt;&amp; Ms::Score::getViewer</definition>
        <argsstring>() const</argsstring>
        <name>getViewer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1018" column="1" bodyfile="libmscore/score.h" bodystart="1018" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a48d54ab45d94e4ef6a420f94d2612f18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>LayoutMode</type>
        <definition>LayoutMode Ms::Score::layoutMode</definition>
        <argsstring>() const</argsstring>
        <name>layoutMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1020" column="1" bodyfile="libmscore/score.h" bodystart="1020" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a29d3fbb8368a73421a48c09060bf5978" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setLayoutMode</definition>
        <argsstring>(LayoutMode lm)</argsstring>
        <name>setLayoutMode</name>
        <param>
          <type>LayoutMode</type>
          <declname>lm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1021" column="1" bodyfile="libmscore/score.h" bodystart="1021" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a982c38c0f5c51bc4de1df82480400673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::floatMode</definition>
        <argsstring>() const</argsstring>
        <name>floatMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1023" column="1" bodyfile="libmscore/score.h" bodystart="1023" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a2be3e167f5b0eb35a4bd192f792a37f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::pageMode</definition>
        <argsstring>() const</argsstring>
        <name>pageMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1024" column="1" bodyfile="libmscore/score.h" bodystart="1024" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7e623a06766698ff471836eac2f3fa57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::lineMode</definition>
        <argsstring>() const</argsstring>
        <name>lineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1025" column="1" bodyfile="libmscore/score.h" bodystart="1025" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a23247c225d8a1605c1093eee60a85bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
        <definition>Tuplet * Ms::Score::searchTuplet</definition>
        <argsstring>(XmlReader &amp;e, int id)</argsstring>
        <name>searchTuplet</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1027" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="1251" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab600bfbe5b47f929590ec168ecff8bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSelectAll</definition>
        <argsstring>()</argsstring>
        <name>cmdSelectAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1028" column="1" bodyfile="libmscore/score.cpp" bodystart="3246" bodyend="3259"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a96abc755f1344422a20c67ec190d8c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSelectSection</definition>
        <argsstring>()</argsstring>
        <name>cmdSelectSection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1029" column="1" bodyfile="libmscore/score.cpp" bodystart="3265" bodyend="3290"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5dc40137cd531f03daad7bdca7ab68e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::respace</definition>
        <argsstring>(std::vector&lt; ChordRest *&gt; *elements)</argsstring>
        <name>respace</name>
        <param>
          <type>std::vector&lt; <ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *&gt; *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1030" column="1" bodyfile="libmscore/layout.cpp" bodystart="1536" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a88af620e956ef066f3d33c71d0564b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::transposeSemitone</definition>
        <argsstring>(int semitone)</argsstring>
        <name>transposeSemitone</name>
        <param>
          <type>int</type>
          <declname>semitone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1031" column="1" bodyfile="libmscore/transpose.cpp" bodystart="556" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac95fe1624625a906014772dd2d3421e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::insertMeasure</definition>
        <argsstring>(ElementType type, MeasureBase *, bool createEmptyMeasures=false)</argsstring>
        <name>insertMeasure</name>
        <param>
          <type>ElementType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure_base" kindref="compound">MeasureBase</ref> *</type>
          <defname>measure</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>createEmptyMeasures</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1032" column="1" bodyfile="libmscore/edit.cpp" bodystart="2468" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa2628219dfb18c317f684c4a2e3e025f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_audio" kindref="compound">Audio</ref> *</type>
        <definition>Audio* Ms::Score::audio</definition>
        <argsstring>() const</argsstring>
        <name>audio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1033" column="1" bodyfile="libmscore/score.h" bodystart="1033" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a29fa428537a44ec8e65cc2c1a73de55b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setAudio</definition>
        <argsstring>(Audio *a)</argsstring>
        <name>setAudio</name>
        <param>
          <type><ref refid="class_ms_1_1_audio" kindref="compound">Audio</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1034" column="1" bodyfile="libmscore/score.h" bodystart="1034" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0cd52a6186e4d365406c36843bba414b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PlayMode</type>
        <definition>PlayMode Ms::Score::playMode</definition>
        <argsstring>() const</argsstring>
        <name>playMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1035" column="1" bodyfile="libmscore/score.h" bodystart="1035" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a59c9340fe7f8877da3afb5e28da661b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setPlayMode</definition>
        <argsstring>(PlayMode v)</argsstring>
        <name>setPlayMode</name>
        <param>
          <type>PlayMode</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1036" column="1" bodyfile="libmscore/score.h" bodystart="1036" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a72dca0fa1de8bf4cc0e5107313f29048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::linkId</definition>
        <argsstring>()</argsstring>
        <name>linkId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1038" column="1" bodyfile="libmscore/score.cpp" bodystart="3305" bodyend="3308"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad8a87b2137e53382685385d7593265ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::linkId</definition>
        <argsstring>(int)</argsstring>
        <name>linkId</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1039" column="1" bodyfile="libmscore/score.cpp" bodystart="3311" bodyend="3316"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aed33fb2e90c8e92209edb8f336dca32a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::getLinkId</definition>
        <argsstring>() const</argsstring>
        <name>getLinkId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1040" column="1" bodyfile="libmscore/score.h" bodystart="1040" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab1cc5664f333c87c1ad6d216f612701a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_ms_1_1_score" kindref="compound">Score</ref> * &gt;</type>
        <definition>QList&lt; Score * &gt; Ms::Score::scoreList</definition>
        <argsstring>()</argsstring>
        <name>scoreList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1042" column="1" bodyfile="libmscore/score.cpp" bodystart="3324" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1b7e3d806aa0f23133a365906a467044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::switchLayer</definition>
        <argsstring>(const QString &amp;s)</argsstring>
        <name>switchLayer</name>
        <param>
          <type>const QString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1043" column="1" bodyfile="libmscore/score.cpp" bodystart="3340" bodyend="3351"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a11e640e35e56a7a987c78282779dc841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Ms::Score::appendPart</definition>
        <argsstring>(const QString &amp;)</argsstring>
        <name>appendPart</name>
        <param>
          <type>const QString &amp;</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1045" column="1" bodyfile="libmscore/score.cpp" bodystart="3357" bodyend="3397"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a75b32a60ddd88a00317f89e8c17e7942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Ms::Score::appendMeasures</definition>
        <argsstring>(int)</argsstring>
        <name>appendMeasures</name>
        <param>
          <type>int</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1047" column="1" bodyfile="libmscore/score.cpp" bodystart="3403" bodyend="3407"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af8d5f9d4a8333ebdc23180529f8439db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::multimap&lt; int, <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt; &amp;</type>
        <definition>const std::multimap&lt;int, Spanner*&gt;&amp; Ms::Score::spanner</definition>
        <argsstring>() const</argsstring>
        <name>spanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1054" column="1" bodyfile="libmscore/score.h" bodystart="1054" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aec3ae8afe6d74337ccdaf50a735f4c92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spanner_map" kindref="compound">SpannerMap</ref> &amp;</type>
        <definition>SpannerMap&amp; Ms::Score::spannerMap</definition>
        <argsstring>()</argsstring>
        <name>spannerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1055" column="1" bodyfile="libmscore/score.h" bodystart="1055" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa813f467a125e2b95285721c7a3a5be4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::isSpannerStartEnd</definition>
        <argsstring>(int tick, int track) const</argsstring>
        <name>isSpannerStartEnd</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1056" column="1" bodyfile="libmscore/score.cpp" bodystart="3465" bodyend="3474"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a833328ecd82a8eb1b178de718633ac71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>removeSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1057" column="1" bodyfile="libmscore/score.cpp" bodystart="3454" bodyend="3457"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5b01bf9c87984133ce60b9385c42dcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>addSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1058" column="1" bodyfile="libmscore/score.cpp" bodystart="3445" bodyend="3448"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab01daf935a2b52b7c4bd01c8b39594d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddSpanner</definition>
        <argsstring>(Spanner *spanner, const QPointF &amp;pos)</argsstring>
        <name>cmdAddSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>spanner</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1059" column="1" bodyfile="libmscore/cmd.cpp" bodystart="277" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a906e1c4b5f0159637acdb887d92da119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddSpanner</definition>
        <argsstring>(Spanner *spanner, int staffIdx, Segment *startSegment, Segment *endSegment)</argsstring>
        <name>cmdAddSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>spanner</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>startSegment</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>endSegment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1060" column="1" bodyfile="libmscore/cmd.cpp" bodystart="322" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3240120ab59a1bb5ed8a8437ab753e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::checkSpanner</definition>
        <argsstring>(int startTick, int lastTick)</argsstring>
        <name>checkSpanner</name>
        <param>
          <type>int</type>
          <declname>startTick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastTick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1061" column="1" bodyfile="libmscore/edit.cpp" bodystart="2654" bodyend="2706"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a09bcc21988411c175885e0bc6dc2de7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::set&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt;</type>
        <definition>const std::set&lt;Spanner*&gt; Ms::Score::unmanagedSpanners</definition>
        <argsstring>()</argsstring>
        <name>unmanagedSpanners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1062" column="1" bodyfile="libmscore/score.h" bodystart="1062" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9b861dc22d459a8848c3335c90cce9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::addUnmanagedSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>addUnmanagedSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1063" column="1" bodyfile="libmscore/score.cpp" bodystart="3488" bodyend="3491"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1afeeee3da12c597e12bba336e527bff97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::removeUnmanagedSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>removeUnmanagedSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1064" column="1" bodyfile="libmscore/score.cpp" bodystart="3497" bodyend="3500"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a85b8b8d575225f3650af2841060f2f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_hairpin" kindref="compound">Hairpin</ref> *</type>
        <definition>Hairpin * Ms::Score::addHairpin</definition>
        <argsstring>(HairpinType, int tickStart, int tickEnd, int track)</argsstring>
        <name>addHairpin</name>
        <param>
          <type>HairpinType</type>
          <defname>t</defname>
        </param>
        <param>
          <type>int</type>
          <declname>tickStart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tickEnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1066" column="1" bodyfile="libmscore/edit.cpp" bodystart="2218" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a671c77e8cc37edd717b9747203bae02f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::findCR</definition>
        <argsstring>(int tick, int track) const</argsstring>
        <name>findCR</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1068" column="1" bodyfile="libmscore/score.cpp" bodystart="3549" bodyend="3575"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea7a06f6de25d561eddce4394b482ae2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Score::findCRinStaff</definition>
        <argsstring>(int tick, int staffIdx) const</argsstring>
        <name>findCRinStaff</name>
        <param>
          <type>int</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1069" column="1" bodyfile="libmscore/score.cpp" bodystart="3582" bodyend="3621"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad1acde8b6e66c83bdc08e020a1518a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::layoutSpanner</definition>
        <argsstring>()</argsstring>
        <name>layoutSpanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1070" column="1" bodyfile="libmscore/layout.cpp" bodystart="1179" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a609a217eeaf10bf329b9a1537410a526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::insertTime</definition>
        <argsstring>(int tickPos, int tickLen)</argsstring>
        <name>insertTime</name>
        <param>
          <type>int</type>
          <declname>tickPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tickLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1071" column="1" bodyfile="libmscore/score.cpp" bodystart="3476" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6b28dcc84bca9dab3f01ee993d301285" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_score_font" kindref="compound">ScoreFont</ref> *</type>
        <definition>ScoreFont* Ms::Score::scoreFont</definition>
        <argsstring>() const</argsstring>
        <name>scoreFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1073" column="1" bodyfile="libmscore/score.h" bodystart="1073" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8cce5e6de5f0a4b9a16aa1b3e6aef7b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setScoreFont</definition>
        <argsstring>(ScoreFont *f)</argsstring>
        <name>setScoreFont</name>
        <param>
          <type><ref refid="class_ms_1_1_score_font" kindref="compound">ScoreFont</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1074" column="1" bodyfile="libmscore/score.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aebf61ce48548d4c61db23b0d94e184ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Score::noteHeadWidth</definition>
        <argsstring>() const</argsstring>
        <name>noteHeadWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1076" column="1" bodyfile="libmscore/score.h" bodystart="1076" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a35ebcb1cff57477d55fc1dc9bc8508c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setNoteHeadWidth</definition>
        <argsstring>(qreal n)</argsstring>
        <name>setNoteHeadWidth</name>
        <param>
          <type>qreal</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1077" column="1" bodyfile="libmscore/score.h" bodystart="1077" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a38ccfa4e38d7b302f0f888d22dc23196" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt; int &gt; Ms::Score::uniqueStaves</definition>
        <argsstring>() const</argsstring>
        <name>uniqueStaves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1079" column="1" bodyfile="libmscore/score.cpp" bodystart="3522" bodyend="3542"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7de3d21e0ba4f280d72e78661a8ca205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::transpositionChanged</definition>
        <argsstring>(Part *, Interval, int tickStart=0, int tickEnd=-1)</argsstring>
        <name>transpositionChanged</name>
        <param>
          <type><ref refid="class_ms_1_1_part" kindref="compound">Part</ref> *</type>
          <defname>part</defname>
        </param>
        <param>
          <type><ref refid="struct_ms_1_1_interval" kindref="compound">Interval</ref></type>
          <defname>oldV</defname>
        </param>
        <param>
          <type>int</type>
          <declname>tickStart</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>tickEnd</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1080" column="1" bodyfile="libmscore/transpose.cpp" bodystart="671" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a42bc8186d9c05767fcc585b4e0b8eb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::moveUp</definition>
        <argsstring>(ChordRest *)</argsstring>
        <name>moveUp</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>cr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1082" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1710" bodyend="1730"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7d7f12f78fa77fa82109180eb8aeec00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::moveDown</definition>
        <argsstring>(ChordRest *)</argsstring>
        <name>moveDown</name>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <defname>cr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1083" column="1" bodyfile="libmscore/cmd.cpp" bodystart="1736" bodyend="1760"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ad3571dd2769ff183c2beba6f7cdb3313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::upAlt</definition>
        <argsstring>(Element *)</argsstring>
        <name>upAlt</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1084" column="1" bodyfile="libmscore/navigate.cpp" bodystart="190" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a139c3b3e2e59f504eb23157f2bcec731" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::upAltCtrl</definition>
        <argsstring>(Note *) const</argsstring>
        <name>upAltCtrl</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>note</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1085" column="1" bodyfile="libmscore/navigate.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab88c19ed2126343d40f3a118d71a2bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::downAlt</definition>
        <argsstring>(Element *)</argsstring>
        <name>downAlt</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1086" column="1" bodyfile="libmscore/navigate.cpp" bodystart="233" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a10b3dcb51582bccbc41e61a39df811df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Score::downAltCtrl</definition>
        <argsstring>(Note *) const</argsstring>
        <name>downAltCtrl</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>note</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1087" column="1" bodyfile="libmscore/navigate.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab6e838ff87e4780ca0b72e54fb374ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::firstElement</definition>
        <argsstring>()</argsstring>
        <name>firstElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1089" column="1" bodyfile="libmscore/navigate.cpp" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab79ad61252d32b9a5368ce6b91bb923c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Score::lastElement</definition>
        <argsstring>()</argsstring>
        <name>lastElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1090" column="1" bodyfile="libmscore/navigate.cpp" bodystart="284" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa8b5bd8b7ee54b9cb3e521522a79a902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::nmeasures</definition>
        <argsstring>()</argsstring>
        <name>nmeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1092" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac27fa352ab08110e989fe5dd3c82a3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::hasLyrics</definition>
        <argsstring>()</argsstring>
        <name>hasLyrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1093" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a27ed67a32e3b8231c26b4b4bc7e3e752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::hasHarmonies</definition>
        <argsstring>()</argsstring>
        <name>hasHarmonies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1094" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8d051d17a937e8adf1d681cae48ed770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::lyricCount</definition>
        <argsstring>()</argsstring>
        <name>lyricCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af487501d0c134da66173b5e91d412aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::harmonyCount</definition>
        <argsstring>()</argsstring>
        <name>harmonyCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acd59f4a1d21bdebb52088fede67edcc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE QString</type>
        <definition>QString Ms::Score::extractLyrics</definition>
        <argsstring>()</argsstring>
        <name>extractLyrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1097" column="1" bodyfile="libmscore/score.cpp" bodystart="3813" bodyend="3886"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a48aed46cd58412bc7d48b2db151f34cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::keysig</definition>
        <argsstring>()</argsstring>
        <name>keysig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1098" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a32d6f8657ae7e488852d8e599a8fc9ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Score::duration</definition>
        <argsstring>()</argsstring>
        <name>duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1099" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa09bec8aa52a0c784f94a685c91ad14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdInsertClef</definition>
        <argsstring>(Clef *clef, ChordRest *cr)</argsstring>
        <name>cmdInsertClef</name>
        <param>
          <type><ref refid="class_ms_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1101" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2357" bodyend="2361"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a327fe748e4d30f7f47f138e6285322f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdExplode</definition>
        <argsstring>()</argsstring>
        <name>cmdExplode</name>
        <briefdescription>
<para>explodes contents of top selected staff into subsequent staves </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1103" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2383" bodyend="2524"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aea42629d00680cfa44bd1a9a4dd7b3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdImplode</definition>
        <argsstring>()</argsstring>
        <name>cmdImplode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>implodes contents of selected staves into top staff for single staff, merge voices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1104" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2532" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a11139016b2d8ed42c4897959d560b6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSlashFill</definition>
        <argsstring>()</argsstring>
        <name>cmdSlashFill</name>
        <briefdescription>
<para>fills selected region with slashes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1105" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2661" bodyend="2771"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a07f0926817f90f19172599a29947c421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdSlashRhythm</definition>
        <argsstring>()</argsstring>
        <name>cmdSlashRhythm</name>
        <briefdescription>
<para>converts rhythms in selected region to slashes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1106" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2778" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1a542e214626dcb7ae103e6494f197b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdResequenceRehearsalMarks</definition>
        <argsstring>()</argsstring>
        <name>cmdResequenceRehearsalMarks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resequences rehearsal marks within a range selection or, if nothing is selected, the entire score </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1107" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2823" bodyend="2849"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5f2717556f4e1306732074baf6ccc0f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdExchangeVoice</definition>
        <argsstring>(int, int)</argsstring>
        <name>cmdExchangeVoice</name>
        <param>
          <type>int</type>
          <defname>s</defname>
        </param>
        <param>
          <type>int</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1108" column="1" bodyfile="libmscore/edit.cpp" bodystart="2334" bodyend="2358"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ac8712e7dc1698f035db93ddf3321cc2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdRemoveEmptyTrailingMeasures</definition>
        <argsstring>()</argsstring>
        <name>cmdRemoveEmptyTrailingMeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1109" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2923" bodyend="2938"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acbc539be27e9c43888ef8ad4142da70d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setAccessibleInfo</definition>
        <argsstring>(QString s)</argsstring>
        <name>setAccessibleInfo</name>
        <param>
          <type>QString</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1111" column="1" bodyfile="libmscore/score.h" bodystart="1111" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a7ebfeb32758625ca8bc5c5162c7d42e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::accessibleInfo</definition>
        <argsstring>() const</argsstring>
        <name>accessibleInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1112" column="1" bodyfile="libmscore/score.h" bodystart="1112" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a3b715542e2a7289d2128366a319acd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QImage</type>
        <definition>QImage Ms::Score::createThumbnail</definition>
        <argsstring>()</argsstring>
        <name>createThumbnail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1114" column="1" bodyfile="libmscore/scorefile.cpp" bodystart="486" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a1a4ab2597966504f84a14f61bee6f24e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::createRehearsalMarkText</definition>
        <argsstring>(RehearsalMark *current) const</argsstring>
        <name>createRehearsalMarkText</name>
        <param>
          <type><ref refid="class_ms_1_1_rehearsal_mark" kindref="compound">RehearsalMark</ref> *</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1115" column="1" bodyfile="libmscore/score.cpp" bodystart="3924" bodyend="3966"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aacc407f7df73f7b6a5fe7130763140d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Score::nextRehearsalMarkText</definition>
        <argsstring>(RehearsalMark *previous, RehearsalMark *current) const</argsstring>
        <name>nextRehearsalMarkText</name>
        <param>
          <type><ref refid="class_ms_1_1_rehearsal_mark" kindref="compound">RehearsalMark</ref> *</type>
          <declname>previous</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_rehearsal_mark" kindref="compound">RehearsalMark</ref> *</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1116" column="1" bodyfile="libmscore/score.cpp" bodystart="3979" bodyend="4027"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a8d56731ad980436072214e9ee5bb35b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::sanityCheck</definition>
        <argsstring>(const QString &amp;name=QString())</argsstring>
        <name>sanityCheck</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check that voice 1 is complete Check that voices &gt; 1 contains less than measure duration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1120" column="1" bodyfile="libmscore/check.cpp" bodystart="171" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab7b341aa35812d4033a968bceae32c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::checkKeys</definition>
        <argsstring>()</argsstring>
        <name>checkKeys</name>
        <briefdescription>
<para>check that key map is in sync with actual keys </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1122" column="1" bodyfile="libmscore/check.cpp" bodystart="258" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af0c6917c68d2ec2c770c65d78070a42c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::checkClefs</definition>
        <argsstring>()</argsstring>
        <name>checkClefs</name>
        <briefdescription>
<para>check that clef map is in sync with actual clefs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1123" column="1" bodyfile="libmscore/check.cpp" bodystart="285" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1af265a0dac8be4d719060cc5812380691" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Score::getProperty</definition>
        <argsstring>(P_ID) const override</argsstring>
        <name>getProperty</name>
        <reimplements refid="class_ms_1_1_score_element_1ada88227d12d5b1e95dcae610bec7671a">getProperty</reimplements>
        <param>
          <type>P_ID</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1125" column="1" bodyfile="libmscore/score.cpp" bodystart="4205" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1acf92bbaf4f5cbe8c51e41914b6c3bd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Score::setProperty</definition>
        <argsstring>(P_ID, const QVariant &amp;) override</argsstring>
        <name>setProperty</name>
        <reimplements refid="class_ms_1_1_score_element_1a3e73dcc73230ac5456b4ed35a5a46725">setProperty</reimplements>
        <param>
          <type>P_ID</type>
          <defname>id</defname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1126" column="1" bodyfile="libmscore/score.cpp" bodystart="4218" bodyend="4227"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a68cb4247075bb90537098663118fcd40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Score::propertyDefault</definition>
        <argsstring>(P_ID) const override</argsstring>
        <name>propertyDefault</name>
        <reimplements refid="class_ms_1_1_score_element_1a2751e3ad597d76d0ee8107d8515285ed">propertyDefault</reimplements>
        <param>
          <type>P_ID</type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1127" column="1" bodyfile="libmscore/score.cpp" bodystart="4233" bodyend="4239"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a65b7669f11a258b17912ea3116ab13ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QQueue&lt; <ref refid="struct_ms_1_1_midi_input_event" kindref="compound">MidiInputEvent</ref> &gt; *</type>
        <definition>QQueue&lt; MidiInputEvent &gt; * Ms::Score::midiInputQueue</definition>
        <argsstring>()</argsstring>
        <name>midiInputQueue</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a7d5f75c10fce6694d6ce139f7e2ab547">midiInputQueue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1129" column="1" bodyfile="libmscore/score.h" bodystart="1289" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0df4b07507ff26dd2c5cdbe1bafa5823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::list&lt; <ref refid="struct_ms_1_1_midi_input_event" kindref="compound">MidiInputEvent</ref> &gt; *</type>
        <definition>std::list&lt; MidiInputEvent &gt; * Ms::Score::activeMidiPitches</definition>
        <argsstring>()</argsstring>
        <name>activeMidiPitches</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a981c6bbbd5cf1ffc1572351a2faeb9d5">activeMidiPitches</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1130" column="1" bodyfile="libmscore/score.h" bodystart="1290" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a28f4e3b1538ab7ae2fa0b439a174958c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Score::title</definition>
        <argsstring>() const</argsstring>
        <name>title</name>
        <reimplementedby refid="class_ms_1_1_master_score_1a89cdb0a9735004f1b1df6f040307c5ea">title</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1132" column="1" bodyfile="libmscore/score.cpp" bodystart="4369" bodyend="4372"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a5d52a15763c5bbd75a7947895f5a0d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdTimeDelete</definition>
        <argsstring>()</argsstring>
        <name>cmdTimeDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1134" column="1" bodyfile="libmscore/cmd.cpp" bodystart="2978" bodyend="2991"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1ab1ec87904e2fecbe2383a51513259cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::localTimeDelete</definition>
        <argsstring>()</argsstring>
        <name>localTimeDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1135" column="1" bodyfile="libmscore/edit.cpp" bodystart="2723" bodyend="2788"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa0db5300872f4abf151b4d95ae8a12c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::globalTimeDelete</definition>
        <argsstring>()</argsstring>
        <name>globalTimeDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1136" column="1" bodyfile="libmscore/edit.cpp" bodystart="2714" bodyend="2717"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aa75165bcf05e70e7980c00a8386c39a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Score::isTopScore</definition>
        <argsstring>() const</argsstring>
        <name>isTopScore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1138" column="1" bodyfile="libmscore/score.cpp" bodystart="4433" bodyend="4436"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1aeade5ee13ce29cf066a0d61d35f92174" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> *</type>
        <definition>Text* Ms::Score::headerText</definition>
        <argsstring>() const</argsstring>
        <name>headerText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1140" column="1" bodyfile="libmscore/score.h" bodystart="1140" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a9d930aea2e6c450c6b946f1d455882c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> *</type>
        <definition>Text* Ms::Score::footerText</definition>
        <argsstring>() const</argsstring>
        <name>footerText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1141" column="1" bodyfile="libmscore/score.h" bodystart="1141" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a6704723927e76243c2987d8e9a7544cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setHeaderText</definition>
        <argsstring>(Text *t)</argsstring>
        <name>setHeaderText</name>
        <param>
          <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1142" column="1" bodyfile="libmscore/score.h" bodystart="1142" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a38d4a82883ecf7ce53ddc15cd34f2577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::setFooterText</definition>
        <argsstring>(Text *t)</argsstring>
        <name>setFooterText</name>
        <param>
          <type><ref refid="class_ms_1_1_text" kindref="compound">Text</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1143" column="1" bodyfile="libmscore/score.h" bodystart="1143" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a0433d8def6cc4a66c74503fae85800ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::cmdAddPitch</definition>
        <argsstring>(int note, bool addFlag, bool insert)</argsstring>
        <name>cmdAddPitch</name>
        <param>
          <type>int</type>
          <declname>note</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>addFlag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="1145" column="1" bodyfile="libmscore/cmd.cpp" bodystart="3274" bodyend="3309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_score_1ac06723b35f05379b041a0fac67ea1e67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::collectMatch</definition>
        <argsstring>(void *data, Element *e)</argsstring>
        <name>collectMatch</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="752" column="1" bodyfile="libmscore/score.cpp" bodystart="2934" bodyend="2970"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_score_1a30e8633c9ce76a5e08378952f5d786e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Score::collectNoteMatch</definition>
        <argsstring>(void *data, Element *e)</argsstring>
        <name>collectNoteMatch</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmscore/score.h" line="753" column="1" bodyfile="libmscore/score.cpp" bodystart="2976" bodyend="3000"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14420">
        <label>QObject</label>
      </node>
      <node id="14422">
        <label>Ms::MasterScore</label>
        <link refid="class_ms_1_1_master_score"/>
        <childnode refid="14419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14421">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
      </node>
      <node id="14419">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="14420" relation="public-inheritance">
        </childnode>
        <childnode refid="14421" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14424">
        <label>QObject</label>
      </node>
      <node id="14429">
        <label>std::list&lt; SynthesizerGroup &gt;</label>
      </node>
      <node id="14428">
        <label>Ms::SynthesizerState</label>
        <link refid="class_ms_1_1_synthesizer_state"/>
        <childnode refid="14429" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14425">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="14426" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="14426">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="14427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14423">
        <label>Ms::Score</label>
        <link refid="class_ms_1_1_score"/>
        <childnode refid="14424" relation="public-inheritance">
        </childnode>
        <childnode refid="14425" relation="private-inheritance">
        </childnode>
        <childnode refid="14428" relation="usage">
          <edgelabel>_synthesizerState</edgelabel>
        </childnode>
      </node>
      <node id="14427">
        <label>QList&lt; ScoreElement *&gt;</label>
      </node>
    </collaborationgraph>
    <location file="libmscore/score.h" line="344" column="1" bodyfile="libmscore/score.h" bodystart="344" bodyend="1149"/>
    <listofallmembers>
      <member refid="class_ms_1_1_score_1a1838d6e9ad8c8b7953865fd26493fe2c" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_audio</name></member>
      <member refid="class_ms_1_1_score_1ae45c3ecd8fd7727b3b05e601994f13f2" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_autosaveDirty</name></member>
      <member refid="class_ms_1_1_score_1af5f4ac5ffdbe90133c042fcbb1db182e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_created</name></member>
      <member refid="class_ms_1_1_score_1a7570b23c995ef2f38d45eafc7ead3c13" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_currentLayer</name></member>
      <member refid="class_ms_1_1_score_1af552ce3f7ad0b127dda20928e1634b74" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_defaultsRead</name></member>
      <member refid="class_ms_1_1_score_1a1173c9c33e967b70978974f17d99b7e5" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_excerpt</name></member>
      <member refid="class_ms_1_1_score_1aa9e7711d9767cd7f2a1bae8ea6b70799" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>_fileDivision</name></member>
      <member refid="class_ms_1_1_score_1a49719c750637e67b99c37dfe071d4454" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_foundPlayPosAfterRepeats</name></member>
      <member refid="class_ms_1_1_score_1afc6fbf7b36515a2f6e930190baed3929" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_importedFilePath</name></member>
      <member refid="class_ms_1_1_score_1a8470abb18a56f2dad27bbf2498a3af1a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_is</name></member>
      <member refid="class_ms_1_1_score_1a7c141bccf3713e27da3f93064d2f9585" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_layer</name></member>
      <member refid="class_ms_1_1_score_1a31366d27908df1ff62529dccf0ca2295" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_layerTagComments</name></member>
      <member refid="class_ms_1_1_score_1a41fb8760fc2457ced89b47e01edda57b" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_layerTags</name></member>
      <member refid="class_ms_1_1_score_1a0169fb17fae5207d537cb8f2c3a3951f" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>_layoutMode</name></member>
      <member refid="class_ms_1_1_score_1ad8ed2e4e3cc8bdbc20326783d172ad31" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_linkId</name></member>
      <member refid="class_ms_1_1_score_element_1a405b151c60a010237414678a0e0952af" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_links</name></member>
      <member refid="class_ms_1_1_score_1a00f7a5331208e94c04cb63a026bf041a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_markIrregularMeasures</name></member>
      <member refid="class_ms_1_1_score_1a23a46b67f555373ddb4ebcafa31ce3f8" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_masterScore</name></member>
      <member refid="class_ms_1_1_score_1aa80687f73a99016833f49e44db47ae5f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_measures</name></member>
      <member refid="class_ms_1_1_score_1a06909cf3f396b4c8064a7cc864d12c02" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_metaTags</name></member>
      <member refid="class_ms_1_1_score_1a70593da3c40d5fa6eb68b6119f673d13" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_mscoreRevision</name></member>
      <member refid="class_ms_1_1_score_1a5a0ec96141b6d4326d6c83e696c91873" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_mscoreVersion</name></member>
      <member refid="class_ms_1_1_score_1ac02bb72ce68df75fc38ee2c1222de735" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_mscVersion</name></member>
      <member refid="class_ms_1_1_score_1a68245eebd2b78df8fce9ce35c05d98e1" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_noteHeadWidth</name></member>
      <member refid="class_ms_1_1_score_1aa77ad30e413eb09faaaf28ed54bcc86d" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_pageNumberOffset</name></member>
      <member refid="class_ms_1_1_score_1a3f86faca23c67960a07eaebab3e0349e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_pages</name></member>
      <member refid="class_ms_1_1_score_1a52ff01b79235325e1073f7deac5a1925" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_parts</name></member>
      <member refid="class_ms_1_1_score_1ac54da01bb963abb983f60eadea99f9ca" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_playlistDirty</name></member>
      <member refid="class_ms_1_1_score_1ad1ab11f4a82863a7c2fa52b7b99a4ede" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_playMode</name></member>
      <member refid="class_ms_1_1_score_1a8a7a2f67d2fc69a1c7952412b1138242" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_pos</name></member>
      <member refid="class_ms_1_1_score_1ab3a8c7952253a5c8b38dbfac7add89e0" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_printing</name></member>
      <member refid="class_ms_1_1_score_1a928601404a0cd9cbef95e943e7ce89d6" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_saved</name></member>
      <member refid="class_ms_1_1_score_1a7df35c3f1f11ff04621632f6b49d27e7" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_savedCapture</name></member>
      <member refid="class_ms_1_1_score_1ac325e3d1dc5f2586dffaa79ef0f6950b" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_scoreFont</name></member>
      <member refid="class_ms_1_1_score_1a5744ecf49cbfa1095aa28c9041b18f47" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_selection</name></member>
      <member refid="class_ms_1_1_score_1a62f940e8267d2ee36118237b7b4e2874" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_selectionFilter</name></member>
      <member refid="class_ms_1_1_score_1af2a18ba3ec9953f75c206d9955b6ccbd" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showFrames</name></member>
      <member refid="class_ms_1_1_score_1a83dbf3b4bf7490b8cd16cac2a5850058" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showInstrumentNames</name></member>
      <member refid="class_ms_1_1_score_1ad9825b4550710f34e85f7aa249d4f499" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showInvisible</name></member>
      <member refid="class_ms_1_1_score_1a432b9f1374903482020fbfae794fe646" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showPageborders</name></member>
      <member refid="class_ms_1_1_score_1abdf5356d991c6e7b82f308cc49cf0d95" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showUnprintable</name></member>
      <member refid="class_ms_1_1_score_1a84dfddee94c6532d6df8279129cb8384" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_showVBox</name></member>
      <member refid="class_ms_1_1_score_1a7001b471c0503bd447efe37b0518ced9" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_spanner</name></member>
      <member refid="class_ms_1_1_score_1a2bf2d8bb97e185e0230f52cfc550c8db" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_staves</name></member>
      <member refid="class_ms_1_1_score_1a9bd795f1f46c86ab42dbca563eeb2f1e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_style</name></member>
      <member refid="class_ms_1_1_score_1af954720f93085f38895e4a8356a14793" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>_synthesizerState</name></member>
      <member refid="class_ms_1_1_score_1a7cfa9fe3b3082e10b3aafff548af29fc" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_systems</name></member>
      <member refid="class_ms_1_1_score_1a3aadab23336d999ae58485b7f130767f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_tmpName</name></member>
      <member refid="class_ms_1_1_score_1a089fc60c82e4545af67d42ef3f805e15" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_unmanagedSpanner</name></member>
      <member refid="class_ms_1_1_score_1a6aa848eae01fce5b14a02ddb76acb8bd" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>_updateState</name></member>
      <member refid="class_ms_1_1_score_1a7ebfeb32758625ca8bc5c5162c7d42e4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>accessibleInfo</name></member>
      <member refid="class_ms_1_1_score_1a4ae80828c55b9e50f8cf9c1d8e70cfcc" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>accInfo</name></member>
      <member refid="class_ms_1_1_score_1a0df4b07507ff26dd2c5cdbe1bafa5823" prot="public" virt="virtual"><scope>Ms::Score</scope><name>activeMidiPitches</name></member>
      <member refid="class_ms_1_1_score_1aa8aee4a4a8019696426c48f33e540b53" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addArticulation</name></member>
      <member refid="class_ms_1_1_score_1a6b794e0d6c85e2faa6799fe863609602" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addArticulation</name></member>
      <member refid="class_ms_1_1_score_1a63b047326fb6577164a235de86ef13eb" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>addAudioTrack</name></member>
      <member refid="class_ms_1_1_score_1a51dbf79cba1bdf8c082a38ad4c882693" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addChord</name></member>
      <member refid="class_ms_1_1_score_1a67d9cdaee46d39976b4c58e0ae1a7db6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addClone</name></member>
      <member refid="class_ms_1_1_score_1ac1ed7b10bdb1a93929c135025dc400ee" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addElement</name></member>
      <member refid="class_ms_1_1_score_1a81bde69ca9cf6a9bade63ac525eac9ce" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addFiguredBass</name></member>
      <member refid="class_ms_1_1_score_1a85b8b8d575225f3650af2841060f2f04" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addHairpin</name></member>
      <member refid="class_ms_1_1_score_1a5cd035ab8792b0a583bd308f2bb03b26" prot="public" virt="virtual"><scope>Ms::Score</scope><name>addLayoutFlags</name></member>
      <member refid="class_ms_1_1_score_1aba2c008de2e96910fda3bd30c714bf84" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addLyrics</name></member>
      <member refid="class_ms_1_1_score_1ad2751ba4e517efbcbd92b4d285b008c1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addLyrics</name></member>
      <member refid="class_ms_1_1_score_1a650e2a8236e2c7e47958c09ab9bbce90" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addMeasure</name></member>
      <member refid="class_ms_1_1_score_1a6a043a22ad4d9a93f6fbb9627a0adc92" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>addMetronome</name></member>
      <member refid="class_ms_1_1_score_1a475003d21c912eab8a053b5a8ceab213" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addMidiPitch</name></member>
      <member refid="class_ms_1_1_score_1a27d20532d1cae88c3954b7a77957e3f3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addNote</name></member>
      <member refid="class_ms_1_1_score_1a8b991452f2e8fbcf40827d9a52f3bd50" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addPitch</name></member>
      <member refid="class_ms_1_1_score_1a0f9358a4730c1bce0a2ce07a2a44807a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addPitch</name></member>
      <member refid="class_ms_1_1_score_1aa7c5a89c6e934aeb0722444605c39347" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addRefresh</name></member>
      <member refid="class_ms_1_1_score_1adfc02ac3d2a322f33fb63521671f835d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addRemoveBreaks</name></member>
      <member refid="class_ms_1_1_score_1adb80880ebda6ead4b0517a0570e73930" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addRest</name></member>
      <member refid="class_ms_1_1_score_1a7ed91d115ab1813254eb12a6170e802d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addRest</name></member>
      <member refid="class_ms_1_1_score_1a5b01bf9c87984133ce60b9385c42dcbf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addSpanner</name></member>
      <member refid="class_ms_1_1_score_1a21c169b370277636334195c227da0803" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>addTempo</name></member>
      <member refid="class_ms_1_1_score_1aa096756048529fb46c811f33fb42262a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addTiedMidiPitch</name></member>
      <member refid="class_ms_1_1_score_1a9b861dc22d459a8848c3335c90cce9a1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addUnmanagedSpanner</name></member>
      <member refid="class_ms_1_1_score_1ab53d6e1fa1a9c0652a3101613d126fef" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>addViewer</name></member>
      <member refid="class_ms_1_1_score_1aea8638fe119abb62bb95db65d2ced187" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>adjustBracketsDel</name></member>
      <member refid="class_ms_1_1_score_1a0da213290de10b9351c4b1d220d1f9e9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>adjustBracketsIns</name></member>
      <member refid="class_ms_1_1_score_1a5b2ea63710f3048cb0e181c2a0bc96b8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>adjustKeySigs</name></member>
      <member refid="class_ms_1_1_score_1a75b32a60ddd88a00317f89e8c17e7942" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>appendMeasures</name></member>
      <member refid="class_ms_1_1_score_1a46d20f7ea12cfb3b443497f14b6f1803" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>appendPart</name></member>
      <member refid="class_ms_1_1_score_1a11e640e35e56a7a987c78282779dc841" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>appendPart</name></member>
      <member refid="class_ms_1_1_score_1af3fdf5391d820ad3377bc9e0e44601bc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>appendScore</name></member>
      <member refid="class_ms_1_1_score_1aa2628219dfb18c317f684c4a2e3e025f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>audio</name></member>
      <member refid="class_ms_1_1_score_1aaf84471c9b62433cd8072db72beca0b8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>autosaveDirty</name></member>
      <member refid="class_ms_1_1_score_1a38ee585135744839b5ac1eb26f0da0f5" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>beamGraceNotes</name></member>
      <member refid="class_ms_1_1_score_1a0dda845ec7e2fbd60df17960cf8b9f15" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>buildCanonical</name></member>
      <member refid="class_ms_1_1_score_1ae15192465613fd2cfb2daf4054a92e12" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>changeAccidental</name></member>
      <member refid="class_ms_1_1_score_1abc8c7ac07ffae5fcf314118f416527e2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>changeAccidental</name></member>
      <member refid="class_ms_1_1_score_1abed144c6603a689d80de01f095ed80e8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>changeCRlen</name></member>
      <member refid="class_ms_1_1_score_1aeb1636292599faf1ed5d66e13b565bac" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>changeCRlen</name></member>
      <member refid="class_ms_1_1_score_1aadd2df94d980026a94340005ffe51d48" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>ChangeSynthesizerState</name></member>
      <member refid="class_ms_1_1_score_1a58c7d8543a08ccb7c815ea4cc74d3e38" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>changeVoice</name></member>
      <member refid="class_ms_1_1_score_1af0c6917c68d2ec2c770c65d78070a42c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>checkClefs</name></member>
      <member refid="class_ms_1_1_score_1a1d805bc938b47e0172dbd20dfa846d8e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>checkHasMeasures</name></member>
      <member refid="class_ms_1_1_score_1ab7b341aa35812d4033a968bceae32c09" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>checkKeys</name></member>
      <member refid="class_ms_1_1_score_1a9374ac58d56384e12cdb05924b1d14fa" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>checkScore</name></member>
      <member refid="class_ms_1_1_score_1aa97ae8300a80a691109207497a371b1e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>checkSlurs</name></member>
      <member refid="class_ms_1_1_score_1a3240120ab59a1bb5ed8a8437ab753e15" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>checkSpanner</name></member>
      <member refid="class_ms_1_1_score_1ac7af8971e400658f64e6ddc407d27b05" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>Chord</name></member>
      <member refid="class_ms_1_1_score_1a4038fd2972e3ef44fecb7b97491fff5a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cloneVoice</name></member>
      <member refid="class_ms_1_1_score_1a3cc228c2074c8f0f5b5b7a34424f8f80" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmd</name></member>
      <member refid="class_ms_1_1_score_1a43f90a349cf52cb670c268bcd7051340" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddBracket</name></member>
      <member refid="class_ms_1_1_score_1a66b3d3db5de0910b4c5a50f5f4a90e6b" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddFret</name></member>
      <member refid="class_ms_1_1_score_1afc23d2a36c48ef11b56e7f15a8874fd8" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddGrace</name></member>
      <member refid="class_ms_1_1_score_1a3a7ad4b062f625d9f7192c335ddfe289" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddInterval</name></member>
      <member refid="class_ms_1_1_score_1ab3fc19ce9168d648919136e96f709d4b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddOttava</name></member>
      <member refid="class_ms_1_1_score_1ab988b4f9050379a46b65c8286ff603ce" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddPitch</name></member>
      <member refid="class_ms_1_1_score_1a0433d8def6cc4a66c74503fae85800ed" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddPitch</name></member>
      <member refid="class_ms_1_1_score_1ab01daf935a2b52b7c4bd01c8b39594d8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddSpanner</name></member>
      <member refid="class_ms_1_1_score_1a906e1c4b5f0159637acdb887d92da119" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddSpanner</name></member>
      <member refid="class_ms_1_1_score_1ac97c187c4f49fe2829b24ea2ae197119" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddStretch</name></member>
      <member refid="class_ms_1_1_score_1a092ebb2a369e1a973e086131748e27e5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddTie</name></member>
      <member refid="class_ms_1_1_score_1a3c7c70831c54cc4be5349805b1a3aa20" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdAddTimeSig</name></member>
      <member refid="class_ms_1_1_score_1a800b18cf10876b1497e1bc43a2a72ac0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdConcertPitchChanged</name></member>
      <member refid="class_ms_1_1_score_1a3d96b673e1e5c8a6037d63ab97b99560" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdCreateTuplet</name></member>
      <member refid="class_ms_1_1_score_1af64b5d63e7bbbbd37308f4c014877daa" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdDecDurationDotted</name></member>
      <member refid="class_ms_1_1_score_1a5adb01174d92d69ef6936dc9aed2f386" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdDeleteSelection</name></member>
      <member refid="class_ms_1_1_score_1a59b11937728ba323f39b06afefb1ea2a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdDeleteTuplet</name></member>
      <member refid="class_ms_1_1_score_1a50244a580e1c41c9a38925424b1e24b4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdDoubleDuration</name></member>
      <member refid="class_ms_1_1_score_1a6d0c52f5aed3ecd287da5d72766b76cb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdEnterRest</name></member>
      <member refid="class_ms_1_1_score_1a5f2717556f4e1306732074baf6ccc0f5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdExchangeVoice</name></member>
      <member refid="class_ms_1_1_score_1a327fe748e4d30f7f47f138e6285322f4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdExplode</name></member>
      <member refid="class_ms_1_1_score_1aeaed98a8b3ba45d555729612603d7a36" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdFlip</name></member>
      <member refid="class_ms_1_1_score_1a51844649070c58af8f9a6351ee25e4ee" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdFullMeasureRest</name></member>
      <member refid="class_ms_1_1_score_1a42d7abd60474d8bfe8754c4adbdaf05d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdHalfDuration</name></member>
      <member refid="class_ms_1_1_score_1aea42629d00680cfa44bd1a9a4dd7b3f2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdImplode</name></member>
      <member refid="class_ms_1_1_score_1ab4929fff1aea542e8cac92fa54e935d3" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdIncDecDuration</name></member>
      <member refid="class_ms_1_1_score_1a56d18e3aafaac78ae38c2ed4428498ed" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdIncDurationDotted</name></member>
      <member refid="class_ms_1_1_score_1a4139fc6c38d62422bbe315515e7e3d0c" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdInsertClef</name></member>
      <member refid="class_ms_1_1_score_1aa09bec8aa52a0c784f94a685c91ad14c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdInsertClef</name></member>
      <member refid="class_ms_1_1_score_1aba6085db1523002d9aee019775846aec" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdJoinMeasure</name></member>
      <member refid="class_ms_1_1_score_1aca34c18412a45065782e9d60aa1b7ad3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdMirrorNoteHead</name></member>
      <member refid="class_ms_1_1_score_1a981d7bcefaf64f6b656280b7645a52a0" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdMoveLyrics</name></member>
      <member refid="class_ms_1_1_score_1ac727e8cbbc33658c0fcc830deece2157" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdMoveRest</name></member>
      <member refid="class_ms_1_1_score_1a28d7ab642a1dfbc52f7082393195c917" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPadNoteDecreaseTAB</name></member>
      <member refid="class_ms_1_1_score_1aaadebd0d85b363c17fccaef0576a2343" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPadNoteIncreaseTAB</name></member>
      <member refid="class_ms_1_1_score_1a3a68a8fec04a156765d5031ae2fbc6df" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPaste</name></member>
      <member refid="class_ms_1_1_score_1a55f8ec78968f321afca7737d3785683f" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPitchDown</name></member>
      <member refid="class_ms_1_1_score_1abda2ce881c2ac1f14c41ee88347db34b" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPitchDownOctave</name></member>
      <member refid="class_ms_1_1_score_1a5688f77578f96d12e56f3aa69f70ffec" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPitchUp</name></member>
      <member refid="class_ms_1_1_score_1a312785d5c5f5d76fe8d5989faf6eadfd" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdPitchUpOctave</name></member>
      <member refid="class_ms_1_1_score_1ac8712e7dc1698f035db93ddf3321cc2e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdRemoveEmptyTrailingMeasures</name></member>
      <member refid="class_ms_1_1_score_1a77713d57c648bd0e035724cc6c0631bc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdRemovePart</name></member>
      <member refid="class_ms_1_1_score_1a31a3ce6f8e3a3436c10f76acbb842cb4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdRemoveStaff</name></member>
      <member refid="class_ms_1_1_score_1ae0ca39576ed5a45c2bbcb3946be5c896" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdRemoveTimeSig</name></member>
      <member refid="class_ms_1_1_score_1a1a542e214626dcb7ae103e6494f197b9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdResequenceRehearsalMarks</name></member>
      <member refid="class_ms_1_1_score_1a93496435282cca9b361d82f68f69d46a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdResetBeamMode</name></member>
      <member refid="class_ms_1_1_score_1ab9e12d6961837362a1babbd4c88acc2d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdResetNoteAndRestGroupings</name></member>
      <member refid="class_ms_1_1_score_1ab600bfbe5b47f929590ec168ecff8bd0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSelectAll</name></member>
      <member refid="class_ms_1_1_score_1a96abc755f1344422a20c67ec190d8c3f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSelectSection</name></member>
      <member refid="class_ms_1_1_score_1a573bca52a969c4106816f06e95140657" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSetBeamMode</name></member>
      <member refid="class_ms_1_1_score_1abf267287811f5ea50cf1393fb46480a4" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSetVisible</name></member>
      <member refid="class_ms_1_1_score_1a11139016b2d8ed42c4897959d560b6dd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSlashFill</name></member>
      <member refid="class_ms_1_1_score_1a07f0926817f90f19172599a29947c421" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSlashRhythm</name></member>
      <member refid="class_ms_1_1_score_1ac4ec0a0b6466642c3ded222399790040" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdSplitMeasure</name></member>
      <member refid="class_ms_1_1_score_1a07fa204a412636070028f2b159771574" prot="public" virt="virtual"><scope>Ms::Score</scope><name>cmdState</name></member>
      <member refid="class_ms_1_1_score_1a5d52a15763c5bbd75a7947895f5a0d48" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>cmdTimeDelete</name></member>
      <member refid="class_ms_1_1_score_1a44c0ecc77a206b90ece32626a3f53046" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdToggleHideEmpty</name></member>
      <member refid="class_ms_1_1_score_1ad33df9d484f72d4cb751475a0e5f3190" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdToggleLayoutBreak</name></member>
      <member refid="class_ms_1_1_score_1a6eb8c669bccea2b906aa764ec2028510" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdToggleMmrest</name></member>
      <member refid="class_ms_1_1_score_1aa5948848219158efd8641f9bc5d1dbf1" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>cmdToggleVisible</name></member>
      <member refid="class_ms_1_1_score_1ad4e0865836a18f7a49c7a97ed191e279" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>cmdUnsetVisible</name></member>
      <member refid="class_ms_1_1_score_1ac06723b35f05379b041a0fac67ea1e67" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>collectMatch</name></member>
      <member refid="class_ms_1_1_score_1a30e8633c9ce76a5e08378952f5d786e8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>collectNoteMatch</name></member>
      <member refid="class_ms_1_1_score_1a393fe76e521cb4f1be1d6ab526b64bdf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>collectSystem</name></member>
      <member refid="class_ms_1_1_score_1a9d9d571c93af388eeaac53ac8839bf6c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>colorItem</name></member>
      <member refid="class_ms_1_1_score_1ae50d0b620dca99b269dea62ddcf71f5a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>connectTies</name></member>
      <member refid="class_ms_1_1_score_1a669f38faac723dd9314c07cbc86e4611" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>createBeams</name></member>
      <member refid="class_ms_1_1_score_1a1a6ad10244250d0c160c21852b300b22" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>createCRSequence</name></member>
      <member refid="class_ms_1_1_score_1a3bf2c1efcb303bf3fc422844b0952ef7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>created</name></member>
      <member refid="class_ms_1_1_score_1a13508aa492481d60223cd9b919839db0" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>createGraceNotesPlayEvents</name></member>
      <member refid="class_ms_1_1_score_1a4aefe9ae9c020b436a6dfca0a9129531" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>createMMRest</name></member>
      <member refid="class_ms_1_1_score_1a238e845d7b6a1e04230d35934cd00a74" prot="protected" virt="non-virtual"><scope>Ms::Score</scope><name>createPlayEvents</name></member>
      <member refid="class_ms_1_1_score_1a3a8e9a09cfce3cedc970e3fa6da4dfd9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>createPlayEvents</name></member>
      <member refid="class_ms_1_1_score_1a1a4ab2597966504f84a14f61bee6f24e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>createRehearsalMarkText</name></member>
      <member refid="class_ms_1_1_score_1ae429073049b54476891e1ea08ea4f66f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>createRevision</name></member>
      <member refid="class_ms_1_1_score_1a3b715542e2a7289d2128366a319acd88" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>createThumbnail</name></member>
      <member refid="class_ms_1_1_score_1a2d4afa6682974ad93eb40340c5f951c1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>currentLayer</name></member>
      <member refid="class_ms_1_1_score_1a5fe5849053e609944418782e5140f723" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>currentLayerMask</name></member>
      <member refid="class_ms_1_1_score_1a833ac1045a645cf8960b5133c3871e41" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>defaultsRead</name></member>
      <member refid="class_ms_1_1_score_1acbe93935ce8e51c9f10ef49af83128b4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deleteItem</name></member>
      <member refid="class_ms_1_1_score_1afe3fa6e1b09168647dc041eba019443c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deleteLater</name></member>
      <member refid="class_ms_1_1_score_1abf57b3e9c33706b82271133edcf9ec58" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deleteMeasures</name></member>
      <member refid="class_ms_1_1_score_1a6f375a03156a451cdf22f6554189fac4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deletePostponed</name></member>
      <member refid="class_ms_1_1_score_1ac6710dc304e8f163b23b002ea1000b00" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deselect</name></member>
      <member refid="class_ms_1_1_score_1a3861e93f660f6647290c56dc195f2caf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>deselectAll</name></member>
      <member refid="class_ms_1_1_score_1ad97d501ce5f321a795d09e168ed67dab" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>dirty</name></member>
      <member refid="class_ms_1_1_score_1a50e6e934be473faa8cc345e9d66b1a7a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>doLayout</name></member>
      <member refid="class_ms_1_1_score_1a214a5125ec6ee8aa3adc75370ff4c748" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>doLayoutRange</name></member>
      <member refid="class_ms_1_1_score_1ae88a1eb49a201df0c929e758b82aacbc" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>doReLayout</name></member>
      <member refid="class_ms_1_1_score_1ab88c19ed2126343d40f3a118d71a2bd2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>downAlt</name></member>
      <member refid="class_ms_1_1_score_1a10b3dcb51582bccbc41e61a39df811df" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>downAltCtrl</name></member>
      <member refid="class_ms_1_1_score_1a86d4abab4b399a7d1e8b7175fb172ee1" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>downStaff</name></member>
      <member refid="class_ms_1_1_score_1aa3d8e1a8aa1e60f403ba25bc3d3913ad" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>dragPosition</name></member>
      <member refid="class_ms_1_1_score_1aaa2cedab583a4376b980563239e847d5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>duration</name></member>
      <member refid="class_ms_1_1_score_1a32d6f8657ae7e488852d8e599a8fc9ed" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>duration</name></member>
      <member refid="class_ms_1_1_score_1ae629bd6513248811b5c7823836982ee8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>endCmd</name></member>
      <member refid="class_ms_1_1_score_1a990f875f7fe6d284c0d0c71b51bd45a8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>endTick</name></member>
      <member refid="class_ms_1_1_score_1a8f44073d4425a3634decdb7b9ad5a620" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>excerpt</name></member>
      <member refid="class_ms_1_1_score_1ab22894e59b8d1694e4d546393daa39d9" prot="public" virt="virtual"><scope>Ms::Score</scope><name>excerpts</name></member>
      <member refid="class_ms_1_1_score_1a7b4c2f75790573148bfa29a810f608da" prot="public" virt="virtual"><scope>Ms::Score</scope><name>excerpts</name></member>
      <member refid="class_ms_1_1_score_1a7086ddf7be29d10261f14cc0ddeb7235" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>expandVoice</name></member>
      <member refid="class_ms_1_1_score_1abd34a56c1075653303d90e31031f72db" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>expandVoice</name></member>
      <member refid="class_ms_1_1_score_1af1aaa631e33f4a4bc2fe305175305da3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>exportFile</name></member>
      <member refid="class_ms_1_1_score_1acd59f4a1d21bdebb52088fede67edcc9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>extractLyrics</name></member>
      <member refid="class_ms_1_1_score_1a5985c2f6efa3511417b23cd1e26f317e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>fileDivision</name></member>
      <member refid="class_ms_1_1_score_1a940af93575995e7f4879631ef7eb18f0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>fileDivision</name></member>
      <member refid="class_ms_1_1_score_1a8d59eafa85868a96e516b4f3acc03b4d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>FileError</name></member>
      <member refid="class_ms_1_1_score_1a671c77e8cc37edd717b9747203bae02f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>findCR</name></member>
      <member refid="class_ms_1_1_score_1aea7a06f6de25d561eddce4394b482ae2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>findCRinStaff</name></member>
      <member refid="class_ms_1_1_score_1a67489cfbd278731da0a5ed2934c7efd6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>first</name></member>
      <member refid="class_ms_1_1_score_1ab6e838ff87e4780ca0b72e54fb374ea6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstElement</name></member>
      <member refid="class_ms_1_1_score_1a3888570668d289ec09dd850d4c169e1c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstMeasure</name></member>
      <member refid="class_ms_1_1_score_1a8d88fa2de642c8f8400eb74d9222d2c8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstMeasureMM</name></member>
      <member refid="class_ms_1_1_score_1a8728dad010db5f4e271029dbcf2b1650" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstMeasureMM</name></member>
      <member refid="class_ms_1_1_score_1af5dbd605ebbe5fc8292ba3ec87134f28" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstMM</name></member>
      <member refid="class_ms_1_1_score_1aeb1a034f75cd5b9e6ba3cf3af695ad19" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstSegment</name></member>
      <member refid="class_ms_1_1_score_1a44f98a5887a534109b2627bfe67358da" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>firstSegmentMM</name></member>
      <member refid="class_ms_1_1_score_1ab28ccdab6936e04e389008607ad70a52" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>fixTicks</name></member>
      <member refid="class_ms_1_1_score_1a982c38c0f5c51bc4de1df82480400673" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>floatMode</name></member>
      <member refid="class_ms_1_1_score_1a9d930aea2e6c450c6b946f1d455882c9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>footerText</name></member>
      <member refid="class_ms_1_1_score_1a527adbffa7a3d74f0c31ad51ca8db6cf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>genCourtesyClef</name></member>
      <member refid="class_ms_1_1_score_1ad87c3bd56c82cef72f5550e324936696" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>genCourtesyTimesig</name></member>
      <member refid="class_ms_1_1_score_1a6b452773453d974024e0a92a0b8a06c4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getCreateMeasure</name></member>
      <member refid="class_ms_1_1_score_1aed33fb2e90c8e92209edb8f336dca32a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getLinkId</name></member>
      <member refid="class_ms_1_1_score_1a5504cca91c6aafce127cf4de5d0e49de" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getNextMeasure</name></member>
      <member refid="class_ms_1_1_score_1a864ad984e2922bc06edd59dd0ac9a889" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>getNextSystem</name></member>
      <member refid="class_ms_1_1_score_1a8e9d8c397c7b5fbba92028b977575490" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getPosition</name></member>
      <member refid="class_ms_1_1_score_1af265a0dac8be4d719060cc5812380691" prot="public" virt="virtual"><scope>Ms::Score</scope><name>getProperty</name></member>
      <member refid="class_ms_1_1_score_element_1ac70559cf9efa9e503dcafd3a6d82c7a0" prot="private" virt="virtual"><scope>Ms::Score</scope><name>getPropertyStyle</name></member>
      <member refid="class_ms_1_1_score_1af5e6bac5107fc313d59d07c8dbe28dfe" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getSelectedChordRest</name></member>
      <member refid="class_ms_1_1_score_1a348f636c943423766568255b2657ec71" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getSelectedChordRest2</name></member>
      <member refid="class_ms_1_1_score_1a45f203d4720642f1765b382b237d51b8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getSelectedChordRests</name></member>
      <member refid="class_ms_1_1_score_1a3606ad504a055013fd8c9867b2f2f146" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getSelectedElement</name></member>
      <member refid="class_ms_1_1_score_1a0f745126ac59d7ad90931b116784c6bc" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>getSelectedNote</name></member>
      <member refid="class_ms_1_1_score_1a0365482294f603c1dff69bbf0893b179" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getText</name></member>
      <member refid="class_ms_1_1_score_1aab97c3e32db9ffed7379a1f71716cd59" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>getViewer</name></member>
      <member refid="class_ms_1_1_score_1a3d4e23099f4f77d177afa0636b8b83bf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>globalInsertChord</name></member>
      <member refid="class_ms_1_1_score_1aa0db5300872f4abf151b4d95ae8a12c1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>globalTimeDelete</name></member>
      <member refid="class_ms_1_1_score_1a4c68c07c39d857a82fad499c0bc900ed" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>harmonyCount</name></member>
      <member refid="class_ms_1_1_score_1af487501d0c134da66173b5e91d412aba" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>harmonyCount</name></member>
      <member refid="class_ms_1_1_score_1a3a9f681c928d73b9ee2ba233bea3c2e4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>hasHarmonies</name></member>
      <member refid="class_ms_1_1_score_1a27ed67a32e3b8231c26b4b4bc7e3e752" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>hasHarmonies</name></member>
      <member refid="class_ms_1_1_score_1a54ca8639b81f619bb06d3ed7e65fdd84" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>hasLyrics</name></member>
      <member refid="class_ms_1_1_score_1ac27fa352ab08110e989fe5dd3c82a3fd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>hasLyrics</name></member>
      <member refid="class_ms_1_1_score_1aeade5ee13ce29cf066a0d61d35f92174" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>headerText</name></member>
      <member refid="class_ms_1_1_score_1aeb406ae3e71511fd168057f3f5b22bb9" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>hideEmptyStaves</name></member>
      <member refid="class_ms_1_1_score_1ad9b37e5c43d6a0c6a8636e3856303008" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>importedFilePath</name></member>
      <member refid="class_ms_1_1_score_1ac59728c5f4b28d9ddf500b3d8e93f36f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>inputPos</name></member>
      <member refid="class_ms_1_1_score_1a67a1f22da74237b491206ae705ebb688" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>inputState</name></member>
      <member refid="class_ms_1_1_score_1a58ccce5bead61b703a06fad9625e2743" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>inputState</name></member>
      <member refid="class_ms_1_1_score_1ac70657c844eaf6e44a8c55865179af9e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>inputTrack</name></member>
      <member refid="class_ms_1_1_score_1aea057533f9e701367bba47a662312294" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>insertChord</name></member>
      <member refid="class_ms_1_1_score_1ac95fe1624625a906014772dd2d3421e9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>insertMeasure</name></member>
      <member refid="class_ms_1_1_score_1a7b974294ef6436bfd79d9e29054342d7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>insertPart</name></member>
      <member refid="class_ms_1_1_score_1a0ceba2233bc3035aab01d9aac192f586" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>insertStaff</name></member>
      <member refid="class_ms_1_1_score_1a609a217eeaf10bf329b9a1537410a526" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>insertTime</name></member>
      <member refid="class_ms_1_1_score_element_1a997e1063786d8c705c74b3d66c54f269" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isBox</name></member>
      <member refid="class_ms_1_1_score_element_1accef1c91df491a43c54e70474deea60c" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isChordRest</name></member>
      <member refid="class_ms_1_1_score_element_1a203290a59b13861b957d2943f65a4cf0" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isDurationElement</name></member>
      <member refid="class_ms_1_1_score_1a8eddd82040d61bffb0d863d6f26270d6" prot="public" virt="virtual"><scope>Ms::Score</scope><name>isMaster</name></member>
      <member refid="class_ms_1_1_score_element_1a06e5d7c169bf6eb01f5f723cbdae973f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isMeasureBase</name></member>
      <member refid="class_ms_1_1_score_element_1a4de90a044cdd2a7030d707f2b081c8a4" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isSLine</name></member>
      <member refid="class_ms_1_1_score_element_1acf35020b5e670ac13791697e65b679d4" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isSLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a372dfc0678c5194028e61b6a9a24ab62" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isSlurTieSegment</name></member>
      <member refid="class_ms_1_1_score_1aa813f467a125e2b95285721c7a3a5be4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>isSpannerStartEnd</name></member>
      <member refid="class_ms_1_1_score_element_1a2a2f39185cea69203227cdbbf781f402" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isStaffText</name></member>
      <member refid="class_ms_1_1_score_1afa786f14ccd080a1912d26c5af2a426a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isSubdivided</name></member>
      <member refid="class_ms_1_1_score_element_1a979c3d0bfaab90c64947e709eca66371" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>isText</name></member>
      <member refid="class_ms_1_1_score_1aa75165bcf05e70e7980c00a8386c39a0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>isTopScore</name></member>
      <member refid="class_ms_1_1_score_1afb50693f0bbe6d2fc07b0263d53ea017" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>keysig</name></member>
      <member refid="class_ms_1_1_score_1a48aed46cd58412bc7d48b2db151f34cb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>keysig</name></member>
      <member refid="class_ms_1_1_score_1a6347c9f3342488d629fe5d59c3e619bd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lassoSelect</name></member>
      <member refid="class_ms_1_1_score_1a5b031112e363ca008bce17d67a423843" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lassoSelectEnd</name></member>
      <member refid="class_ms_1_1_score_1a9a782ad57ba6f6f813a9caff2992df92" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>last</name></member>
      <member refid="class_ms_1_1_score_1ab79ad61252d32b9a5368ce6b91bb923c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastElement</name></member>
      <member refid="class_ms_1_1_score_1aaf6255a6806f6abcc7fc675165b529cd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastMeasure</name></member>
      <member refid="class_ms_1_1_score_1aad95161dc0554fb77a5cfd37d16ed505" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastMeasure</name></member>
      <member refid="class_ms_1_1_score_1aed4c276491165d33e254a8308e37863f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastMeasureMM</name></member>
      <member refid="class_ms_1_1_score_1a8700ccfc801e93d7bd9a54f9618dff04" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastMeasureMM</name></member>
      <member refid="class_ms_1_1_score_1a059dc116e5336ee1210ee33c31c336e3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastSegment</name></member>
      <member refid="class_ms_1_1_score_1a00f52cd4792f9dc8a1d8cac0ffaaf534" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lastSegment</name></member>
      <member refid="class_ms_1_1_score_1a67e0858003e10756b560df981bea9b61" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layer</name></member>
      <member refid="class_ms_1_1_score_1a258303b5b7e72f05a8213255d4d2efcb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layer</name></member>
      <member refid="class_ms_1_1_score_1afbbf10f98745807046a016e09d03b98a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layerTagComments</name></member>
      <member refid="class_ms_1_1_score_1ab6fe3c81f6be8f49726dd6b4e4928912" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layerTags</name></member>
      <member refid="class_ms_1_1_score_1aabf8eae8fbefcade6724ea507c16a9ed" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutChords1</name></member>
      <member refid="class_ms_1_1_score_1a047fa69a68b80e772ad8fd9f85d2c837" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutChords2</name></member>
      <member refid="class_ms_1_1_score_1ac801c8ac2033b7062c849f7e4e821463" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutChords3</name></member>
      <member refid="class_ms_1_1_score_1a779fa71d1ad532f4fe7f280b3e886913" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutLinear</name></member>
      <member refid="class_ms_1_1_score_1a48d54ab45d94e4ef6a420f94d2612f18" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutMode</name></member>
      <member refid="class_ms_1_1_score_1a588185e96d270ac7180feb46b2d548ab" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutPagesUndoRedo</name></member>
      <member refid="class_ms_1_1_score_1ad1acde8b6e66c83bdc08e020a1518a72" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutSpanner</name></member>
      <member refid="class_ms_1_1_score_1a9551ba5c01bc3566e64c4cbf484519a2" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>layoutSystem</name></member>
      <member refid="class_ms_1_1_score_1a47cde9387535524b63ffd6a6e5a58e32" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>layoutSystem1</name></member>
      <member refid="class_ms_1_1_score_1abc5b5de1c6d83954919de8fa0cbbae02" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>layoutSystemRow</name></member>
      <member refid="class_ms_1_1_score_1a812950264227aabe24fcc915814dbba4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>layoutSystemsUndoRedo</name></member>
      <member refid="class_ms_1_1_score_element_1ad9b69df1d2c04f2b298520bb649a8c55" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>lid</name></member>
      <member refid="class_ms_1_1_score_1a7e623a06766698ff471836eac2f3fa57" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lineMode</name></member>
      <member refid="class_ms_1_1_score_1a72dca0fa1de8bf4cc0e5107313f29048" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>linkId</name></member>
      <member refid="class_ms_1_1_score_1ad8a87b2137e53382685385d7593265ad" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>linkId</name></member>
      <member refid="class_ms_1_1_score_element_1a2f0ed55c566c19cb483d77250cb52450" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>linkList</name></member>
      <member refid="class_ms_1_1_score_element_1a38f371d2c830610ab93e74c813d55e07" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>links</name></member>
      <member refid="class_ms_1_1_score_element_1a1dad93f0591eb31f69854e8f141b051e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>linkTo</name></member>
      <member refid="class_ms_1_1_score_1acd61b435cbced8736e00c27ecb4b8273" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>loadStyle</name></member>
      <member refid="class_ms_1_1_score_1a3805ec8a23bb86659792b17453c2a4ab" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>localInsertChord</name></member>
      <member refid="class_ms_1_1_score_1ab1ec87904e2fecbe2383a51513259cb7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>localTimeDelete</name></member>
      <member refid="class_ms_1_1_score_1acc471f15d19ad2e742abb8433c071fcb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>loHeight</name></member>
      <member refid="class_ms_1_1_score_1a1840607912cbc97a1992a3fb306b70d5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>loopInTick</name></member>
      <member refid="class_ms_1_1_score_1a5e183d7f88bc441ae6fe2e8db0d95444" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>loopOutTick</name></member>
      <member refid="class_ms_1_1_score_1afd4b28e5752dc085c8e0e4203631a1c0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>loWidth</name></member>
      <member refid="class_ms_1_1_score_1a2afdf85fb12f3b09b51899c8334b135d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lyricCount</name></member>
      <member refid="class_ms_1_1_score_1a8d051d17a937e8adf1d681cae48ed770" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>lyricCount</name></member>
      <member refid="class_ms_1_1_score_1ac9b443671d212bb7ee20d42efbef6b5b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>makeGap</name></member>
      <member refid="class_ms_1_1_score_1a6fe426d2b6ac77ca53a7375428c9fefc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>makeGap1</name></member>
      <member refid="class_ms_1_1_score_1a6b208db85dfbbfc0d265c2dee6076536" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>makeGapVoice</name></member>
      <member refid="class_ms_1_1_score_1a74e32239c787f97dc091f1d14eece040" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>markIrregularMeasures</name></member>
      <member refid="class_ms_1_1_score_1aac5cfbf34cbd22da196fd31944a260da" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>masterScore</name></member>
      <member refid="class_ms_1_1_score_1a617ab3f074400ef5ba92e9f3b441e940" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>measure</name></member>
      <member refid="class_ms_1_1_score_1ab2347f55630666c0a3e699b6c91bbf80" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>measures</name></member>
      <member refid="class_ms_1_1_score_1a33c34750195b4427512931b735ce6cba" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>metaTag</name></member>
      <member refid="class_ms_1_1_score_1a77f6d8a8b8da64e43a7ceb2447d14bc4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>metaTags</name></member>
      <member refid="class_ms_1_1_score_1a31524c4f1af6c4859fdbee457e8ee98e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>metaTags</name></member>
      <member refid="class_ms_1_1_score_1a65b7669f11a258b17912ea3116ab13ff" prot="public" virt="virtual"><scope>Ms::Score</scope><name>midiInputQueue</name></member>
      <member refid="class_ms_1_1_score_1a229ec32c64e743ef265e720ac0c44df3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>move</name></member>
      <member refid="class_ms_1_1_score_1a7d7f12f78fa77fa82109180eb8aeec00" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>moveDown</name></member>
      <member refid="class_ms_1_1_score_1a2066b3224a23490004c66ebcd9c10440" prot="protected" virt="virtual"><scope>Ms::Score</scope><name>movements</name></member>
      <member refid="class_ms_1_1_score_1a70e4f423e79c31e1ef4aac10bef745cc" prot="protected" virt="virtual"><scope>Ms::Score</scope><name>movements</name></member>
      <member refid="class_ms_1_1_score_1a42bc8186d9c05767fcc585b4e0b8eb5a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>moveUp</name></member>
      <member refid="class_ms_1_1_score_1a497c9f24fbe494d5414f0918ad27d955" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>mscoreRevision</name></member>
      <member refid="class_ms_1_1_score_1ae3dd545ff5c9a02d72df8d9d3f058e08" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>mscoreVersion</name></member>
      <member refid="class_ms_1_1_score_1a42745779b8f9591ed2ef83abed766e14" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>mscVersion</name></member>
      <member refid="class_ms_1_1_score_element_1ad80dda73306d6b784b0cac4626f797d4" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1ab6ded8e7ff6dcb45db0036a57f9f9d26" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1a3a355967d09b12bbce9e361e5c7f32cb" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_score_1a4b8b143144168f4879fb99826c38913b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nextInputPos</name></member>
      <member refid="class_ms_1_1_score_1a854e949646c089e0e195db4798642d1e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>nextMeasure</name></member>
      <member refid="class_ms_1_1_score_1aacc407f7df73f7b6a5fe7130763140d6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nextRehearsalMarkText</name></member>
      <member refid="class_ms_1_1_score_1a6275bc3816154e386a919a4950131a44" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nextSeg</name></member>
      <member refid="class_ms_1_1_score_1a170acd4049d9a609794acc95d4e78c94" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>nextTrack</name></member>
      <member refid="class_ms_1_1_score_1ad00f0f63521a6ff16cc056f4bb4f427d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nmeasures</name></member>
      <member refid="class_ms_1_1_score_1aa8b5bd8b7ee54b9cb3e521522a79a902" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nmeasures</name></member>
      <member refid="class_ms_1_1_score_1a2ead0d028dc0dc6fb610ef07682c6a9c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>noStaves</name></member>
      <member refid="class_ms_1_1_score_1a9fa70f95c17cf60b21d43c9bc77a4fee" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>noteEntryMethod</name></member>
      <member refid="class_ms_1_1_score_1ace9b3f1fe203ea5466ba06fc132a4815" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>noteEntryMode</name></member>
      <member refid="class_ms_1_1_score_1aebf61ce48548d4c61db23b0d94e184ae" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>noteHeadWidth</name></member>
      <member refid="class_ms_1_1_score_1af4c3ed969255d787cda474d8bdca57cd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>noteValForPosition</name></member>
      <member refid="class_ms_1_1_score_1a195dca9b1b7723e6c16877d98498dde0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>npages</name></member>
      <member refid="class_ms_1_1_score_1a291718ca12053bd8e663a8fcd756bd6b" prot="public" virt="virtual"><scope>Ms::Score</scope><name>npages</name></member>
      <member refid="class_ms_1_1_score_1a9a57365ab6c124736b1c5fa0507671f0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nstaves</name></member>
      <member refid="class_ms_1_1_score_1ab39888225a9fe0533558a379b1545cb1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>nstaves</name></member>
      <member refid="class_ms_1_1_score_1aab368312099ccba85cd4c6746bf76aa2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>ntracks</name></member>
      <member refid="class_ms_1_1_score_1aa7ea8f4f050ba44ed0cf95ad4f5d3c06" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>ntracks</name></member>
      <member refid="class_ms_1_1_score_1a79246f84804d2a8ad1f6670ad1d93568" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>padToggle</name></member>
      <member refid="class_ms_1_1_score_1a89471772ad4e890e3e4f38f2c67e6318" prot="public" virt="virtual"><scope>Ms::Score</scope><name>pageIdx</name></member>
      <member refid="class_ms_1_1_score_1a2be3e167f5b0eb35a4bd192f792a37f6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pageMode</name></member>
      <member refid="class_ms_1_1_score_1a8226b0d61543b1fca19861ca748900ba" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pageNumberOffset</name></member>
      <member refid="class_ms_1_1_score_1a528c9e0eefcf6ffa27fb49d32e4f64c0" prot="public" virt="virtual"><scope>Ms::Score</scope><name>pages</name></member>
      <member refid="class_ms_1_1_score_1adcfe769e126ca898bb32ac883660d847" prot="public" virt="virtual"><scope>Ms::Score</scope><name>pages</name></member>
      <member refid="class_ms_1_1_score_1a1841b7b85ea311bdb366fd3e0c117333" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>parts</name></member>
      <member refid="class_ms_1_1_score_1ac808459a49654e82a3a00f65cdd572a1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>parts</name></member>
      <member refid="class_ms_1_1_score_1a3b69f24c8edc5d633feda219496b0510" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>pasteChordRest</name></member>
      <member refid="class_ms_1_1_score_1a2099e35c20667c5566657eb66b8c4cf1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pasteStaff</name></member>
      <member refid="class_ms_1_1_score_1a6f6e255734da22dadb0f032176f34b04" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pasteSymbols</name></member>
      <member refid="class_ms_1_1_score_1af2b208821dc6a6f19d4786a882372e5b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playChord</name></member>
      <member refid="class_ms_1_1_score_1ace6ac838e61971b8e8fb3b9d2238c5a4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playlistChanged</name></member>
      <member refid="class_ms_1_1_score_1a0fc725397789b1c041ab75c256f81349" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playlistDirty</name></member>
      <member refid="class_ms_1_1_score_1a0cd52a6186e4d365406c36843bba414b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playMode</name></member>
      <member refid="class_ms_1_1_score_1aa3d9f6c66ba4fbc566bd2de39c69213b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playNote</name></member>
      <member refid="class_ms_1_1_score_1a5a7fc922b76382046fb0f9747eae5173" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>playPos</name></member>
      <member refid="class_ms_1_1_score_1a5f5d5ef10af2f4fa914ce2ef6ba1cdbb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>point</name></member>
      <member refid="class_ms_1_1_score_1a29bf40ad2e76f304b694766d504bce8c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pos</name></member>
      <member refid="class_ms_1_1_score_1a5c4e7de12865d390097893be65d23866" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pos</name></member>
      <member refid="class_ms_1_1_score_1a4c35c150fe004e1b2cb82cb2b87954a6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>pos2measure</name></member>
      <member refid="class_ms_1_1_score_1a5eca553f5139e4255c50b6948627d7df" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>posChanged</name></member>
      <member refid="class_ms_1_1_score_1af4327a46d184dd4b515364038eb51f5f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>prevMeasure</name></member>
      <member refid="class_ms_1_1_score_1a414018856b253a3adf72db9916c41cba" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>prevTrack</name></member>
      <member refid="class_ms_1_1_score_1aa592fede56dc483703b3d9ed3818e3b3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>print</name></member>
      <member refid="class_ms_1_1_score_1a2c6bd82f3fd40695c55157402b2c1462" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>printing</name></member>
      <member refid="class_ms_1_1_score_1ad5f964606310a59392dc934d0ebb712d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>processMidiInput</name></member>
      <member refid="class_ms_1_1_score_1a68cb4247075bb90537098663118fcd40" prot="public" virt="virtual"><scope>Ms::Score</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_score_element_1a1ccb82c8170c0b8ca5748879bffc44e6" prot="private" virt="virtual"><scope>Ms::Score</scope><name>propertyFlags</name></member>
      <member refid="class_ms_1_1_score_1afd4ddbc60bc7516a6f72c7df3d44aa33" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>putNote</name></member>
      <member refid="class_ms_1_1_score_1a4adfa682f7d0f6b8968ba83d8b5b4861" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>putNote</name></member>
      <member refid="class_ms_1_1_score_1ab1315f6648a4a069544e574bee9722c9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>read</name></member>
      <member refid="class_ms_1_1_score_1a8efebc203c8d22d66e83928158e1360a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>readStaff</name></member>
      <member refid="class_ms_1_1_score_1a42043d12f931f0597ede4c070cafe75a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>rebuildBspTree</name></member>
      <member refid="class_ms_1_1_score_1a772c8b32f4c7ab4eba3c0843bb505e8c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>regroupNotesAndRests</name></member>
      <member refid="class_ms_1_1_score_1a1decbb1a420564aba93734430e02e28a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeAudio</name></member>
      <member refid="class_ms_1_1_score_1a6b756171329fcf5b8dab24ab7d2b5619" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>removeChordRest</name></member>
      <member refid="class_ms_1_1_score_1a3582dc9e196e1e25bd9ed582fd818fa0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeElement</name></member>
      <member refid="class_ms_1_1_score_1a44f9771adde9f16428e0dcb95195a77b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeHairpin</name></member>
      <member refid="class_ms_1_1_score_1af88bb57c174eb6a3e79495a3899b879e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removePart</name></member>
      <member refid="class_ms_1_1_score_1a833328ecd82a8eb1b178de718633ac71" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeSpanner</name></member>
      <member refid="class_ms_1_1_score_1ad77bdf8555f37b161135e873b0b81268" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeStaff</name></member>
      <member refid="class_ms_1_1_score_1a4836824a7d186ac31fb6c1c6acb97771" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeTempo</name></member>
      <member refid="class_ms_1_1_score_1afeeee3da12c597e12bba336e527bff97" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeUnmanagedSpanner</name></member>
      <member refid="class_ms_1_1_score_1a8d4c17f0d115b9501be41346e3d4e68f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>removeViewer</name></member>
      <member refid="class_ms_1_1_score_1a8d0c6f549385df52263c37dfd6eaac70" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>renderMetronome</name></member>
      <member refid="class_ms_1_1_score_1ada5c54ca9b2fcf9e48c536fed516706c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>renderMidi</name></member>
      <member refid="class_ms_1_1_score_1a0b3f4d3f0ad4423cddadc2dde5907faa" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>renderSpanners</name></member>
      <member refid="class_ms_1_1_score_1ab8a8089a73603e95aa4a972229bd8332" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>renderStaff</name></member>
      <member refid="class_ms_1_1_score_1a86c74b2377855e9cc2211a5eb9e5881d" prot="public" virt="virtual"><scope>Ms::Score</scope><name>repeatList</name></member>
      <member refid="class_ms_1_1_score_1a062936aa4a1aecbc0f7a66a935163fbf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>repitchNote</name></member>
      <member refid="class_ms_1_1_score_element_1ae84a49e39a49427d4b859e0f2eac0a0c" prot="private" virt="virtual"><scope>Ms::Score</scope><name>resetProperty</name></member>
      <member refid="class_ms_1_1_score_1a844653f50ef44e3bded939c8e5e340f2" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>resetUserStretch</name></member>
      <member refid="class_ms_1_1_score_1a5dc40137cd531f03daad7bdca7ab68e6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>respace</name></member>
      <member refid="class_ms_1_1_score_1a215c252863dc8e5fde550e2960930af2" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>rewriteMeasures</name></member>
      <member refid="class_ms_1_1_score_1a15496916c53c8d467b73b21118d28fa5" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>rewriteMeasures</name></member>
      <member refid="class_ms_1_1_score_1a8d56731ad980436072214e9ee5bb35b2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>sanityCheck</name></member>
      <member refid="class_ms_1_1_score_1a8f15d4fc1172d560f6538089bd7b3329" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saveCompressedFile</name></member>
      <member refid="class_ms_1_1_score_1ad7765481846fde641d3a5143bb10db72" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saveCompressedFile</name></member>
      <member refid="class_ms_1_1_score_1ad2692cb879366df123d9fe99643d876b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saved</name></member>
      <member refid="class_ms_1_1_score_1acb4df233390b3642cef7fe528019cbfd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>savedCapture</name></member>
      <member refid="class_ms_1_1_score_1a276c3a2869ad468f5f88efdbef4f5bf0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saveFile</name></member>
      <member refid="class_ms_1_1_score_1a1cd1acd375ae755c3acae493fa927e73" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saveFile</name></member>
      <member refid="class_ms_1_1_score_1aa197fa6c0ecc790426814fd50c76368d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>saveStyle</name></member>
      <member refid="class_ms_1_1_score_1a9d89706532afe386d2d07cc5eb4c90d8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>scanElements</name></member>
      <member refid="class_ms_1_1_score_1a54c1b6374db90858a189dc8ffd28d723" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>scanElementsInRange</name></member>
      <member refid="class_ms_1_1_score_element_1a70883d048b0884821ac779d9ab168151" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>score</name></member>
      <member refid="class_ms_1_1_score_1a7fe75aa0819207bf92addf4c5db982fd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>Score</name></member>
      <member refid="class_ms_1_1_score_1a2da4e3000773fe1bee12245f8b535922" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>Score</name></member>
      <member refid="class_ms_1_1_score_1a918d83112a4c5d7d50f7ace1f5f1d674" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>Score</name></member>
      <member refid="class_ms_1_1_score_element_1a3fed4ec5f58054eb578ff9c7bb80d72f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_element_1ac2b2cb70fe954ba2b1cce6d35743edf2" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_1a6b28dcc84bca9dab3f01ee993d301285" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>scoreFont</name></member>
      <member refid="class_ms_1_1_score_1ab1cc5664f333c87c1ad6d216f612701a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>scoreList</name></member>
      <member refid="class_ms_1_1_score_1a640064eecdd5092868477bd7876134ae" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchLabel</name></member>
      <member refid="class_ms_1_1_score_1aacdfe7e7d0a26ed23f30e9a3e983faa5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchLabelWithinSectionFirst</name></member>
      <member refid="class_ms_1_1_score_1acaee032dba7858fac9ea118a847c9686" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchMeasure</name></member>
      <member refid="class_ms_1_1_score_1a3825732053906cdda49ac11a7f03daa3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchNote</name></member>
      <member refid="class_ms_1_1_score_1a37fd5655183c36af965385ef2493d012" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchPage</name></member>
      <member refid="class_ms_1_1_score_1a8960889a57e2be841c3d531f77ed8580" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchSystem</name></member>
      <member refid="class_ms_1_1_score_1a23247c225d8a1605c1093eee60a85bcc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchTuplet</name></member>
      <member refid="class_ms_1_1_score_1a3fc69bd8fdef8dee41807ab4363674da" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>searchVolta</name></member>
      <member refid="class_ms_1_1_score_1aa3b85eb58a8f7f4476fbd05b59253585" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>select</name></member>
      <member refid="class_ms_1_1_score_1a1feb929233a2aaf7fc64b2a14f760067" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>selectAdd</name></member>
      <member refid="class_ms_1_1_score_1afdedce94ce766c0c71bbd30ae610752b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selection</name></member>
      <member refid="class_ms_1_1_score_1a5253ebdcde68b9d45218fadb1044c059" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selection</name></member>
      <member refid="class_ms_1_1_score_1a21f98e7bbc4391c52e5a9fdb3dffa21a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selectionChanged</name></member>
      <member refid="class_ms_1_1_score_1a6ef9e26b4ec9e2de85f48e73dda1d1aa" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selectionFilter</name></member>
      <member refid="class_ms_1_1_score_1a64bcbb3dbfc6a89701c5c2d560d6fff2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selectMove</name></member>
      <member refid="class_ms_1_1_score_1a6b31e94641b1bb0886f89db5af76a406" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>selectRange</name></member>
      <member refid="class_ms_1_1_score_1a0026e69afb8428dad9e48566a2130aa4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selectSimilar</name></member>
      <member refid="class_ms_1_1_score_1a1509252b972a17cdc49340433f5bac1c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>selectSimilarInRange</name></member>
      <member refid="class_ms_1_1_score_1a729b81b6c9d101af18db70d05b42605f" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>selectSingle</name></member>
      <member refid="class_ms_1_1_score_1acbc539be27e9c43888ef8ad4142da70d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setAccessibleInfo</name></member>
      <member refid="class_ms_1_1_score_1a29fa428537a44ec8e65cc2c1a73de55b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setAudio</name></member>
      <member refid="class_ms_1_1_score_1adf70fe6c78510967acf7911332409c42" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setAutosaveDirty</name></member>
      <member refid="class_ms_1_1_score_1a0bd2668f716bc9e352416b81299e7725" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setCreated</name></member>
      <member refid="class_ms_1_1_score_1ad3c3c212c81e446bc31d60eb8d36873b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setCurrentLayer</name></member>
      <member refid="class_ms_1_1_score_1a72897197c84520356af12ef6928cdf6a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setDefaultsRead</name></member>
      <member refid="class_ms_1_1_score_1a6cb53961524b9b03c876f004291f106c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setExcerpt</name></member>
      <member refid="class_ms_1_1_score_1a5c36f2f1d4913eb0951233fb54878f39" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setFileDivision</name></member>
      <member refid="class_ms_1_1_score_1a38d4a82883ecf7ce53ddc15cd34f2577" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setFooterText</name></member>
      <member refid="class_ms_1_1_score_1a86eedc66142a7fadf8ad5446433fcf0b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setGraceNote</name></member>
      <member refid="class_ms_1_1_score_1a6704723927e76243c2987d8e9a7544cf" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setHeaderText</name></member>
      <member refid="class_ms_1_1_score_1abb35a9b9c9dc49b968782a867c49f66e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setImportedFilePath</name></member>
      <member refid="class_ms_1_1_score_1abce1515f6d4ed6cad207e57308b0b656" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setInputState</name></member>
      <member refid="class_ms_1_1_score_1a809f6d6ba1ba10213224379c041d4594" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setInputTrack</name></member>
      <member refid="class_ms_1_1_score_1ac8ddca73e2096e2a086cb926c5004df9" prot="public" virt="virtual"><scope>Ms::Score</scope><name>setInstrumentsChanged</name></member>
      <member refid="class_ms_1_1_score_1af2c431011cce1ee38a73c4782a9d3665" prot="public" virt="virtual"><scope>Ms::Score</scope><name>setLayout</name></member>
      <member refid="class_ms_1_1_score_1a913b812ff545eb1f2e75d6c93a001321" prot="public" virt="virtual"><scope>Ms::Score</scope><name>setLayoutAll</name></member>
      <member refid="class_ms_1_1_score_1a29d3fbb8368a73421a48c09060bf5978" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setLayoutMode</name></member>
      <member refid="class_ms_1_1_score_element_1ae1e16c1a83100a1ea23b05bfb1642283" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>setLinks</name></member>
      <member refid="class_ms_1_1_score_1acb544be662f57f108299a951bd7daa55" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setLoopInTick</name></member>
      <member refid="class_ms_1_1_score_1a2022d1bcf62460d2108c7f969fc38552" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setLoopOutTick</name></member>
      <member refid="class_ms_1_1_score_1a66e7c2f311d78c2cf1e0438aa4b2c509" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMarkIrregularMeasures</name></member>
      <member refid="class_ms_1_1_score_1a8d80b3fac7f3ce953e8a6a7bba35baad" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMasterScore</name></member>
      <member refid="class_ms_1_1_score_1a0ecec63806ef4b6a348d99f22e467dec" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMetaTag</name></member>
      <member refid="class_ms_1_1_score_1aa48241b9d4f93aaab0347f693477fdec" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMetaTags</name></member>
      <member refid="class_ms_1_1_score_1ad5b692892355c17c1305faa0dbdf4464" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMscoreRevision</name></member>
      <member refid="class_ms_1_1_score_1a29eb44f210fbd0232928b178f6ea827b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMscoreVersion</name></member>
      <member refid="class_ms_1_1_score_1afe266e8b428563451538e5c60a2e40e9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setMscVersion</name></member>
      <member refid="class_ms_1_1_score_1ab4dc5295c8ac5c6731d60f2f5f31c381" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setNoteEntryMethod</name></member>
      <member refid="class_ms_1_1_score_1aa9330af62dd7be391dacc2edf05b2b02" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setNoteEntryMode</name></member>
      <member refid="class_ms_1_1_score_1a35ebcb1cff57477d55fc1dc9bc8508c0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setNoteHeadWidth</name></member>
      <member refid="class_ms_1_1_score_1a640ea5e6b3f31341d45c4d2a269d04cb" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setNoteRest</name></member>
      <member refid="class_ms_1_1_score_1a0932d7d5757a579bcf9cfc2f8892fcd8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPageNumberOffset</name></member>
      <member refid="class_ms_1_1_score_1ab22f34f7982ddc3b6b4d9f1a3273f326" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPause</name></member>
      <member refid="class_ms_1_1_score_1afe065fc6ab404a52234aa463aa3ed8c3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPlayChord</name></member>
      <member refid="class_ms_1_1_score_1ab35c14f602fd1936a0f223df94639f37" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPlaylistDirty</name></member>
      <member refid="class_ms_1_1_score_1a59c9340fe7f8877da3afb5e28da661b4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPlayMode</name></member>
      <member refid="class_ms_1_1_score_1a30ccf7ad66b60ea7cbb670850bc9edfd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPlayNote</name></member>
      <member refid="class_ms_1_1_score_1ada71958961647035fd1e87fb028a1d01" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPlayPos</name></member>
      <member refid="class_ms_1_1_score_1a07b8ff32c6a6496bfdd6eafbbf51c578" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_score_1a34d45c73f8eb67e220b03b0244ce8d72" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setPrinting</name></member>
      <member refid="class_ms_1_1_score_1acf92bbaf4f5cbe8c51e41914b6c3bd69" prot="public" virt="virtual"><scope>Ms::Score</scope><name>setProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a8ad551ed64d5ee466ff0b4d5992ae252" prot="private" virt="virtual"><scope>Ms::Score</scope><name>setPropertyFlags</name></member>
      <member refid="class_ms_1_1_score_1ae8ea3a700a5c0b05ec4c0f0a3061dca4" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setRest</name></member>
      <member refid="class_ms_1_1_score_1a0ec7c8229d253416c43a5a4358f90a27" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSaved</name></member>
      <member refid="class_ms_1_1_score_1ae4bd75edfd2754456603d79d2ef63c94" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSavedCapture</name></member>
      <member refid="class_ms_1_1_score_element_1a6a1e59c49777e28459d2270981fc97df" prot="private" virt="virtual"><scope>Ms::Score</scope><name>setScore</name></member>
      <member refid="class_ms_1_1_score_1a8cce5e6de5f0a4b9a16aa1b3e6aef7b6" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setScoreFont</name></member>
      <member refid="class_ms_1_1_score_1a709d63eff8e2051e2aa2c4c54e01267f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSelection</name></member>
      <member refid="class_ms_1_1_score_1ac7157fd475a0865b1b319270eff75571" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSelectionChanged</name></member>
      <member refid="class_ms_1_1_score_1aafcadc1428f4029ae73918c5c8ad6883" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowFrames</name></member>
      <member refid="class_ms_1_1_score_1a2b4bdd605f8fe82e99a51dc1d6d8ebd7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowInstrumentNames</name></member>
      <member refid="class_ms_1_1_score_1a6431d9e34c4c80eb3fc4816acd055e4f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowInvisible</name></member>
      <member refid="class_ms_1_1_score_1a6c44b902ceb5a971bff615ba794ce7e1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowPageborders</name></member>
      <member refid="class_ms_1_1_score_1a204ce150e6597a06776e98d68a45ebd0" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowUnprintable</name></member>
      <member refid="class_ms_1_1_score_1a4e044974d77dd5cb3f174c5683ff9ce7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setShowVBox</name></member>
      <member refid="class_ms_1_1_score_1abcc4af4da3908bb461399741542eaa99" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSpatium</name></member>
      <member refid="class_ms_1_1_score_1a117b214c9121ab2e3e38deb2d88e7bab" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setStyle</name></member>
      <member refid="class_ms_1_1_score_1a396591a0c12082444b37f33b0e37524a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setSynthesizerState</name></member>
      <member refid="class_ms_1_1_score_1a7a9fdb8bf36af6e7d9b8468cedd3d079" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setTempo</name></member>
      <member refid="class_ms_1_1_score_1ad27c4b247ef8d90f284caad6d75beefc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setTempo</name></member>
      <member refid="class_ms_1_1_score_1a49660451e23381379e005bc3e4512e40" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>setTmpName</name></member>
      <member refid="class_ms_1_1_score_1a9225363a2bf667d4218f00d350e14559" prot="public" virt="virtual"><scope>Ms::Score</scope><name>setUpdateAll</name></member>
      <member refid="class_ms_1_1_score_1a2d15a6824092dc2ef7657111deea7e93" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showFrames</name></member>
      <member refid="class_ms_1_1_score_1af7268aca744525a7c22930ebe9e19a6f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showInstrumentNames</name></member>
      <member refid="class_ms_1_1_score_1a7bfc764d7779912986da5039d90739c2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showInvisible</name></member>
      <member refid="class_ms_1_1_score_1a0c8396041597e31a35801b0f7138ad83" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showPageborders</name></member>
      <member refid="class_ms_1_1_score_1a49888022b62126cb1c37bc8f4a482b61" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showUnprintable</name></member>
      <member refid="class_ms_1_1_score_1a7d3d474e477e8e273bd1176347c81261" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>showVBox</name></member>
      <member refid="class_ms_1_1_score_1ac7138320b76ac3bcaccc773416461d47" prot="public" virt="virtual"><scope>Ms::Score</scope><name>sigmap</name></member>
      <member refid="class_ms_1_1_score_1a8900162613fb97d2a70bdf615a93f1d3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>sortStaves</name></member>
      <member refid="class_ms_1_1_score_1af8d5f9d4a8333ebdc23180529f8439db" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spanner</name></member>
      <member refid="class_ms_1_1_score_1aec3ae8afe6d74337ccdaf50a735f4c92" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spannerMap</name></member>
      <member refid="class_ms_1_1_score_1aaa20fcc0a0a1f86b0b0d859648341c49" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spatium</name></member>
      <member refid="class_ms_1_1_score_1ad66b0f2da90900f71d32d390cb1286cd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spatiumChanged</name></member>
      <member refid="class_ms_1_1_score_1ae073d3d83b8548cbf8bb8e812e638766" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spell</name></member>
      <member refid="class_ms_1_1_score_1a14c70588afb5f510f4a5d798546b51ac" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spell</name></member>
      <member refid="class_ms_1_1_score_1a26db5303a9abb9e4070fac31e706e8d5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spell</name></member>
      <member refid="class_ms_1_1_score_1a2fd69dbe3d6edc93fcb8469b2c2f74da" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>spellNotelist</name></member>
      <member refid="class_ms_1_1_score_1a82388a52fd0c46582c6ad81f30ebebd9" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>splitGapToMeasureBoundaries</name></member>
      <member refid="class_ms_1_1_score_1a224305fa1d51915d23afabf5c1b46cbc" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>splitMeasure</name></member>
      <member refid="class_ms_1_1_score_1a6ffcbbfc3496ad040af5343e718d5b46" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>splitStaff</name></member>
      <member refid="class_ms_1_1_score_1ad1de1c246a7f35e5b63781630e3c7d58" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>staff</name></member>
      <member refid="class_ms_1_1_score_1aa4353d2ea4660f134a9030dbf9216b25" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>staffIdx</name></member>
      <member refid="class_ms_1_1_score_1a687f074b331fe27ebec4b4d596f91e0e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>startCmd</name></member>
      <member refid="class_ms_1_1_score_1aaa9eed88d78a41f6cef322c1e3b663a8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>staves</name></member>
      <member refid="class_ms_1_1_score_1ac4baf4f5709a6b685a04522b9cb8b80b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>staves</name></member>
      <member refid="class_ms_1_1_score_1a69bb5a25e3e1c714788540ce57f92a71" prot="public" virt="virtual"><scope>Ms::Score</scope><name>style</name></member>
      <member refid="class_ms_1_1_score_1a125afd277dd4fa51c8575a77586baa53" prot="public" virt="virtual"><scope>Ms::Score</scope><name>style</name></member>
      <member refid="class_ms_1_1_score_1af0809e660db6f16274558c1179913aa5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleB</name></member>
      <member refid="class_ms_1_1_score_1aa9d29bdcde59d2a8c3a002469a0fe61f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleChanged</name></member>
      <member refid="class_ms_1_1_score_1aaad043c69034265076988d49d0a78d42" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleD</name></member>
      <member refid="class_ms_1_1_score_1a0477b6417c332a3815aec4535c7a226b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleI</name></member>
      <member refid="class_ms_1_1_score_1a8fe52b38ea518db8d70fcf15d9296b7b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleP</name></member>
      <member refid="class_ms_1_1_score_1a050937043774be9ba315eaa24bf2528f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleS</name></member>
      <member refid="class_ms_1_1_score_1ad6c4a007b889ec7bb515fb64e4b68c75" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleSt</name></member>
      <member refid="class_ms_1_1_score_1a0e33a5c1c22a4d4d32aff1839ca1d3ea" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>styleV</name></member>
      <member refid="class_ms_1_1_score_1a5012506edb15a89ee98dc9a35d9678da" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>swingAdjustParams</name></member>
      <member refid="class_ms_1_1_score_1a1b7e3d806aa0f23133a365906a467044" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>switchLayer</name></member>
      <member refid="class_ms_1_1_score_1a1d01889b6f6a2b4c1d0f60ca5dd62cbd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>synthesizerState</name></member>
      <member refid="class_ms_1_1_score_1ae550ee02f05637cd42d972c95bb6985d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>systems</name></member>
      <member refid="class_ms_1_1_score_1a4b614ee8c1286f61c1c6d332f3423ac8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>systems</name></member>
      <member refid="class_ms_1_1_score_1a1cb640ef003e3e86fe1631e56465cc22" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tagIsValid</name></member>
      <member refid="class_ms_1_1_score_1a7b24075c4e9fa3052f43cc4f1f76be60" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tempo</name></member>
      <member refid="class_ms_1_1_score_1abf9caf87cad8882df7d58e0a39777350" prot="public" virt="virtual"><scope>Ms::Score</scope><name>tempomap</name></member>
      <member refid="class_ms_1_1_score_1ae558537f2f5efb08bf54933776d7d9ce" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2beatType</name></member>
      <member refid="class_ms_1_1_score_1a99f40d5c26372dc67b3d028816de5917" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2leftSegment</name></member>
      <member refid="class_ms_1_1_score_1a109ba45b66f5237756a83aa7cfdddea9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2measure</name></member>
      <member refid="class_ms_1_1_score_1a99c24fa92caf7b00f9312b69d7582f91" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2measureBase</name></member>
      <member refid="class_ms_1_1_score_1ac6424f3fb8183318bf76b1e710167a75" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2measureMM</name></member>
      <member refid="class_ms_1_1_score_1a1797883498364c2b08ec6648d9849f29" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2rightSegment</name></member>
      <member refid="class_ms_1_1_score_1aeab9889d28452718e6ebbc6e73d19def" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segment</name></member>
      <member refid="class_ms_1_1_score_1a93090d7e5b2f889bc282dc92379a5ad3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segment</name></member>
      <member refid="class_ms_1_1_score_1ac41612f9ff731494476cad45aec63a70" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segment</name></member>
      <member refid="class_ms_1_1_score_1a125c1e9940f71c2cb59e4d49df6a8244" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segmentEnd</name></member>
      <member refid="class_ms_1_1_score_1ad50ede7ef676e0e97793c0004d0219f3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segmentMM</name></member>
      <member refid="class_ms_1_1_score_1a1d8766eff1657dcc6be0f2b4cb4f59da" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segmentMM</name></member>
      <member refid="class_ms_1_1_score_1a10b87406ff9247fc087271ccac32f499" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tick2segmentMM</name></member>
      <member refid="class_ms_1_1_score_1acac581a1d514d0fafcb389566dee6d9b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>timeDelete</name></member>
      <member refid="class_ms_1_1_score_1a28f4e3b1538ab7ae2fa0b439a174958c" prot="public" virt="virtual"><scope>Ms::Score</scope><name>title</name></member>
      <member refid="class_ms_1_1_score_1a307b30884396d6b5f2631ef8d2b94d94" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>tmpName</name></member>
      <member refid="class_ms_1_1_score_1aea491e23eb7398f6f414c8262a79f5db" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>transpose</name></member>
      <member refid="class_ms_1_1_score_1a7eefd9fdb540ecc3da8ec892c66610f2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>transpose</name></member>
      <member refid="class_ms_1_1_score_1af4745c70eb31a06becb6220c28f0f8b2" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>transposeKeys</name></member>
      <member refid="class_ms_1_1_score_1a88af620e956ef066f3d33c71d0564b63" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>transposeSemitone</name></member>
      <member refid="class_ms_1_1_score_1a7de3d21e0ba4f280d72e78661a8ca205" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>transpositionChanged</name></member>
      <member refid="class_ms_1_1_score_1acff6952d015f5f2928c5c1e0050abc86" prot="public" virt="virtual"><scope>Ms::Score</scope><name>type</name></member>
      <member refid="class_ms_1_1_score_1a638691b3520258aed47a5f3d2b67ad24" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undo</name></member>
      <member refid="class_ms_1_1_score_1a587ff2a9a991ca9ada426c721427af0c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoAddBracket</name></member>
      <member refid="class_ms_1_1_score_1aa2ad7c34c11bcdbbe1ace3c81560e3c7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoAddCR</name></member>
      <member refid="class_ms_1_1_score_1a88d1556bac485bde9b2d6ae3c1e6bd77" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoAddElement</name></member>
      <member refid="class_ms_1_1_score_1a9a7d9060363e277edd89c50bf9fc7d95" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeBarLine</name></member>
      <member refid="class_ms_1_1_score_1a0fd138463e632ae153e1175408105787" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeChordRestLen</name></member>
      <member refid="class_ms_1_1_score_1a408449f312a338551f166e436823cca3" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeClef</name></member>
      <member refid="class_ms_1_1_score_1aa356de836bf4f8602c1bec8ec9ac798a" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeElement</name></member>
      <member refid="class_ms_1_1_score_1a8e849142ce49c824684d5b733ec9adfd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeFretting</name></member>
      <member refid="class_ms_1_1_score_1a5f743294bdfdd937710e4b0a304a7f41" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeInvisible</name></member>
      <member refid="class_ms_1_1_score_1a0d06785a9315abedba3781d85528f676" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeKeySig</name></member>
      <member refid="class_ms_1_1_score_1ab346deeb3a55ac605ff1f26fe5747bcd" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangePitch</name></member>
      <member refid="class_ms_1_1_score_1aa659d0e01523e7185811428c808acf14" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1aba58b3b45f4717c238275d98509f43b7" prot="private" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Score</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a8c946c701ba5d45b118fa2825306adb4" prot="private" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Score</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_1aa769ea6a14772fee5546ff834abbeba5" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeStyleVal</name></member>
      <member refid="class_ms_1_1_score_1a3386de4a92d42387f9bb6642b91b3e42" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeTpc</name></member>
      <member refid="class_ms_1_1_score_1a286c0095d5c5c30e69d2273bc25dcd1f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeTuning</name></member>
      <member refid="class_ms_1_1_score_1afd581fc4ef488febb5047b7803433117" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoChangeUserMirror</name></member>
      <member refid="class_ms_1_1_score_1ab8bcd531d8973b01c2530a5d53336d8f" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoExchangeVoice</name></member>
      <member refid="class_ms_1_1_score_1aa69082215da1a690aafb91b5aa6e1643" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoInsertPart</name></member>
      <member refid="class_ms_1_1_score_1a1f017664884eee5656da6164646cab01" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoInsertStaff</name></member>
      <member refid="class_ms_1_1_score_1a2ff209ce4bc8273c8ab9ead29a0711b8" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoInsertTime</name></member>
      <member refid="class_ms_1_1_score_1ab777cc886842d61e8be5d72268f3728d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoPropertyChanged</name></member>
      <member refid="class_ms_1_1_score_1a5551e8e460a64241f20bfd1bd9f50665" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoPropertyChanged</name></member>
      <member refid="class_ms_1_1_score_element_1a5a2cfd46a97161523212d204e3ff2948" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>undoPushProperty</name></member>
      <member refid="class_ms_1_1_score_1ac9fb890f1394f4e9609770125498ae78" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRedo</name></member>
      <member refid="class_ms_1_1_score_1ad1685622b443f2c3ba31cbde1a610232" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRemoveBracket</name></member>
      <member refid="class_ms_1_1_score_1a365e5013395d4a660672ad8fff61a864" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRemoveElement</name></member>
      <member refid="class_ms_1_1_score_1a1d8adc0068d948648e4f91a97a47988b" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRemoveMeasures</name></member>
      <member refid="class_ms_1_1_score_1a8153db814fc0ff578f51ce9787d4a872" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRemovePart</name></member>
      <member refid="class_ms_1_1_score_1a6374ed442267c53209a31c5aa381643e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoRemoveStaff</name></member>
      <member refid="class_ms_1_1_score_element_1ab17bd165ec90885c9912738fd98b8f9a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>undoResetProperty</name></member>
      <member refid="class_ms_1_1_score_1a4c440ead22c45d35ba0ac4af33d76b93" prot="public" virt="virtual"><scope>Ms::Score</scope><name>undoStack</name></member>
      <member refid="class_ms_1_1_score_1a3527902def850d9a3244040d39e446f9" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>undoTransposeHarmony</name></member>
      <member refid="class_ms_1_1_score_element_1a994f2abd8df02a160c7055b0cae26c87" prot="private" virt="virtual"><scope>Ms::Score</scope><name>undoUnlink</name></member>
      <member refid="class_ms_1_1_score_1a38ccfa4e38d7b302f0f888d22dc23196" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>uniqueStaves</name></member>
      <member refid="class_ms_1_1_score_element_1a1d76afaf3ee463445961c3d981901be1" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>unlink</name></member>
      <member refid="class_ms_1_1_score_1a09bcc21988411c175885e0bc6dc2de7e" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>unmanagedSpanners</name></member>
      <member refid="class_ms_1_1_score_1ad3571dd2769ff183c2beba6f7cdb3313" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>upAlt</name></member>
      <member refid="class_ms_1_1_score_1a139c3b3e2e59f504eb23157f2bcec731" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>upAltCtrl</name></member>
      <member refid="class_ms_1_1_score_1ac2de19af18b9b8b1195a22d7ba774704" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>update</name></member>
      <member refid="class_ms_1_1_score_1a303f77fe71adf45cca59cfd0214afaa1" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>updateHairpin</name></member>
      <member refid="class_ms_1_1_score_1aea2de837460a33bf793051885e68cc50" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>updateRepeatList</name></member>
      <member refid="class_ms_1_1_score_1a8ab164a57c03d2ce4bd173e00eef2247" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>updateSelection</name></member>
      <member refid="class_ms_1_1_score_1a130eac9abae12bb04141d7221c42273c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>updateStaffIndex</name></member>
      <member refid="class_ms_1_1_score_1afdff58f0c0f64e237bc4ebb7c1187b33" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>updateSwing</name></member>
      <member refid="class_ms_1_1_score_1a282d4f8bfc6261d114cb945980f2a78e" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>updateVelo</name></member>
      <member refid="class_ms_1_1_score_1a7c6f99b935e5d58e642250d876d5ec55" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>upDown</name></member>
      <member refid="class_ms_1_1_score_1aa1c3af2506288fcd42268594bde1497a" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>upStaff</name></member>
      <member refid="class_ms_1_1_score_element_1acb1866df2e440923354fa5b1ee9d5f52" prot="private" virt="virtual"><scope>Ms::Score</scope><name>userName</name></member>
      <member refid="class_ms_1_1_score_1a73eaa5933ff2af136b6f30bb0f750d1d" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>usingNoteEntryMethod</name></member>
      <member refid="class_ms_1_1_score_1ad3fc94b5c48558d9108f913ce6bb00db" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>utick2utime</name></member>
      <member refid="class_ms_1_1_score_1a3d546f29f5fa5f23f2c834632de90208" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>utime2utick</name></member>
      <member refid="class_ms_1_1_score_1a130b4e0c4ebf8e21b59f98da1a92f7bd" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>viewer</name></member>
      <member refid="class_ms_1_1_score_1a5963f11eed3489c1de114aabb35cabe7" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>write</name></member>
      <member refid="class_ms_1_1_score_1af64430c4612b9826184ee4417455b085" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>writeMovement</name></member>
      <member refid="class_ms_1_1_score_element_1a27407fb370f41b2107013e918ffb00fa" prot="private" virt="non-virtual"><scope>Ms::Score</scope><name>writeProperty</name></member>
      <member refid="class_ms_1_1_score_1aa92c03cb7fcc41d65935b519188e382c" prot="public" virt="non-virtual"><scope>Ms::Score</scope><name>writeSegments</name></member>
      <member refid="class_ms_1_1_score_1a535e9c9c08669e42f51caeeb4071cd41" prot="public" virt="virtual"><scope>Ms::Score</scope><name>~Score</name></member>
      <member refid="class_ms_1_1_score_element_1abc6cbffe99d185a7262f86be05cf6365" prot="private" virt="virtual"><scope>Ms::Score</scope><name>~ScoreElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
