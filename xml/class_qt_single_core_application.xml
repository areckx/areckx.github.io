<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_qt_single_core_application" kind="class" language="C++" prot="public">
    <compoundname>QtSingleCoreApplication</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QCoreApplication</basecompoundref>
    <includes refid="qtsinglecoreapplication_8h" local="no">qtsinglecoreapplication.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_qt_single_core_application_1a3b3411e8926c024a000c89e7fd82c7af" prot="private" static="no" mutable="no">
        <type><ref refid="class_qt_local_peer" kindref="compound">QtLocalPeer</ref> *</type>
        <definition>QtLocalPeer* QtSingleCoreApplication::peer</definition>
        <argsstring></argsstring>
        <name>peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="68" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_qt_single_core_application_1a1329cb65a5706c21257f191b9d8b6548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtSingleCoreApplication::QtSingleCoreApplication</definition>
        <argsstring>(int &amp;argc, char **argv)</argsstring>
        <name>QtSingleCoreApplication</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> object. The application identifier will be QCoreApplication::applicationFilePath(). <emphasis>argc</emphasis> and <emphasis>argv</emphasis> are passed on to the QCoreAppliation constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="53" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_core_application_1a2c5792a0addef95dd78b37ab55a985a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QtSingleCoreApplication::QtSingleCoreApplication</definition>
        <argsstring>(const QString &amp;id, int &amp;argc, char **argv)</argsstring>
        <name>QtSingleCoreApplication</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
          <defname>appId</defname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> object with the application identifier <emphasis>appId</emphasis>. <emphasis>argc</emphasis> and <emphasis>argv</emphasis> are passed on to the QCoreAppliation constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="54" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_core_application_1a419bfb7b02f0459f4d207d448bc6c876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtSingleCoreApplication::isRunning</definition>
        <argsstring>()</argsstring>
        <name>isRunning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if another instance of this application is running; otherwise false.</para><para>This function does not find instances of this application that are being run by a different user (on Windows: that are running in another session).</para><para><simplesect kind="see"><para><ref refid="class_qt_single_core_application_1a07493d0807b216ca870adc6d40f856b0" kindref="member">sendMessage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="56" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_qt_single_core_application_1ac49e5d009f1f40f17168b89801afe152" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QtSingleCoreApplication::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the application identifier. Two processes with the same identifier will be regarded as instances of the same application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="57" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_qt_single_core_application_1a07493d0807b216ca870adc6d40f856b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QtSingleCoreApplication::sendMessage</definition>
        <argsstring>(const QString &amp;message, int timeout=5000)</argsstring>
        <name>sendMessage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>5000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to send the text <emphasis>message</emphasis> to the currently running instance. The <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> object in the running instance will emit the <ref refid="class_qt_single_core_application_1a1af66a1770ff5eec8006a26a2ce42ca1" kindref="member">messageReceived()</ref> signal when it receives the message.</para><para>This function returns true if the message has been sent to, and processed by, the current instance. If there is no instance currently running, or if the running instance fails to process the message within <emphasis>timeout</emphasis> milliseconds, this function return false.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_core_application_1a419bfb7b02f0459f4d207d448bc6c876" kindref="member">isRunning()</ref>, <ref refid="class_qt_single_core_application_1a1af66a1770ff5eec8006a26a2ce42ca1" kindref="member">messageReceived()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="60" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_qt_single_core_application_1a1af66a1770ff5eec8006a26a2ce42ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QtSingleCoreApplication::messageReceived</definition>
        <argsstring>(const QString &amp;message)</argsstring>
        <name>messageReceived</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the current instance receives a <emphasis>message</emphasis> from another instance of this application.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_core_application_1a07493d0807b216ca870adc6d40f856b0" kindref="member">sendMessage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A variant of the <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> class for non-GUI applications. </para>    </briefdescription>
    <detaileddescription>
<para>This class is a variant of <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> suited for use in console (non-GUI) applications. It is an extension of QCoreApplication (instead of QApplication). It does not require the QtGui library.</para><para>The API and usage is identical to <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref>, except that functions relating to the &quot;activation window&quot; are not present, for obvious reasons. Please refer to the <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> documentation for explanation of the usage.</para><para>A <ref refid="class_qt_single_core_application" kindref="compound">QtSingleCoreApplication</ref> instance can communicate to a <ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> instance if they share the same application id. Hence, this class can be used to create a light-weight command-line tool that sends commands to a GUI application.</para><para><simplesect kind="see"><para><ref refid="class_qt_single_application" kindref="compound">QtSingleApplication</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="14084">
        <label>QtSingleCoreApplication</label>
        <link refid="class_qt_single_core_application"/>
        <childnode refid="14085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14085">
        <label>QCoreApplication</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14086">
        <label>QtSingleCoreApplication</label>
        <link refid="class_qt_single_core_application"/>
        <childnode refid="14087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14087">
        <label>QCoreApplication</label>
      </node>
    </collaborationgraph>
    <location file="thirdparty/singleapp/src/qtsinglecoreapplication.h" line="49" column="1" bodyfile="thirdparty/singleapp/src/qtsinglecoreapplication.h" bodystart="48" bodyend="69"/>
    <listofallmembers>
      <member refid="class_qt_single_core_application_1ac49e5d009f1f40f17168b89801afe152" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>id</name></member>
      <member refid="class_qt_single_core_application_1a419bfb7b02f0459f4d207d448bc6c876" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>isRunning</name></member>
      <member refid="class_qt_single_core_application_1a1af66a1770ff5eec8006a26a2ce42ca1" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>messageReceived</name></member>
      <member refid="class_qt_single_core_application_1a3b3411e8926c024a000c89e7fd82c7af" prot="private" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>peer</name></member>
      <member refid="class_qt_single_core_application_1a1329cb65a5706c21257f191b9d8b6548" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>QtSingleCoreApplication</name></member>
      <member refid="class_qt_single_core_application_1a2c5792a0addef95dd78b37ab55a985a7" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>QtSingleCoreApplication</name></member>
      <member refid="class_qt_single_core_application_1a07493d0807b216ca870adc6d40f856b0" prot="public" virt="non-virtual"><scope>QtSingleCoreApplication</scope><name>sendMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
