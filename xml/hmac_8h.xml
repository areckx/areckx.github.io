<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hmac_8h" kind="file" language="C++">
    <compoundname>hmac.h</compoundname>
    <includes refid="opensslconf_8h" local="no">openssl/opensslconf.h</includes>
    <includes refid="evp_8h" local="no">openssl/evp.h</includes>
    <includedby refid="ssl_8h" local="no">thirdparty/openssl/include/openssl/ssl.h</includedby>
    <incdepgraph>
      <node id="82879">
        <label>thirdparty/openssl/include/openssl/hmac.h</label>
        <link refid="hmac_8h"/>
        <childnode refid="82880" relation="include">
        </childnode>
        <childnode refid="82881" relation="include">
        </childnode>
      </node>
      <node id="82887">
        <label>stdarg.h</label>
      </node>
      <node id="82892">
        <label>openssl/opensslv.h</label>
        <link refid="opensslv_8h_source"/>
      </node>
      <node id="82893">
        <label>stdint.h</label>
      </node>
      <node id="82889">
        <label>stdlib.h</label>
      </node>
      <node id="82885">
        <label>openssl/bio.h</label>
        <link refid="bio_8h_source"/>
        <childnode refid="82883" relation="include">
        </childnode>
        <childnode refid="82886" relation="include">
        </childnode>
        <childnode refid="82887" relation="include">
        </childnode>
        <childnode refid="82888" relation="include">
        </childnode>
        <childnode refid="82893" relation="include">
        </childnode>
      </node>
      <node id="82890">
        <label>openssl/stack.h</label>
        <link refid="stack_8h_source"/>
      </node>
      <node id="82898">
        <label>openssl/bn.h</label>
        <link refid="bn_8h_source"/>
        <childnode refid="82883" relation="include">
        </childnode>
        <childnode refid="82886" relation="include">
        </childnode>
        <childnode refid="82882" relation="include">
        </childnode>
        <childnode refid="82888" relation="include">
        </childnode>
      </node>
      <node id="82895">
        <label>openssl/obj_mac.h</label>
        <link refid="obj__mac_8h_source"/>
      </node>
      <node id="82884">
        <label>openssl/symhacks.h</label>
        <link refid="symhacks_8h_source"/>
        <childnode refid="82883" relation="include">
        </childnode>
      </node>
      <node id="82896">
        <label>openssl/asn1.h</label>
        <link refid="asn1_8h_source"/>
        <childnode refid="82897" relation="include">
        </childnode>
        <childnode refid="82883" relation="include">
        </childnode>
        <childnode refid="82885" relation="include">
        </childnode>
        <childnode refid="82890" relation="include">
        </childnode>
        <childnode refid="82891" relation="include">
        </childnode>
        <childnode refid="82884" relation="include">
        </childnode>
        <childnode refid="82882" relation="include">
        </childnode>
        <childnode refid="82898" relation="include">
        </childnode>
      </node>
      <node id="82891">
        <label>openssl/safestack.h</label>
        <link refid="safestack_8h_source"/>
        <childnode refid="82890" relation="include">
        </childnode>
      </node>
      <node id="82881">
        <label>openssl/evp.h</label>
        <link refid="evp_8h_source"/>
        <childnode refid="82880" relation="include">
        </childnode>
        <childnode refid="82882" relation="include">
        </childnode>
        <childnode refid="82884" relation="include">
        </childnode>
        <childnode refid="82885" relation="include">
        </childnode>
        <childnode refid="82894" relation="include">
        </childnode>
      </node>
      <node id="82897">
        <label>time.h</label>
      </node>
      <node id="82894">
        <label>openssl/objects.h</label>
        <link refid="objects_8h_source"/>
        <childnode refid="82895" relation="include">
        </childnode>
        <childnode refid="82885" relation="include">
        </childnode>
        <childnode refid="82896" relation="include">
        </childnode>
      </node>
      <node id="82880">
        <label>openssl/opensslconf.h</label>
        <link refid="opensslconf_8h_source"/>
      </node>
      <node id="82883">
        <label>openssl/e_os2.h</label>
        <link refid="e__os2_8h_source"/>
        <childnode refid="82880" relation="include">
        </childnode>
      </node>
      <node id="82886">
        <label>stdio.h</label>
      </node>
      <node id="82882">
        <label>openssl/ossl_typ.h</label>
        <link refid="ossl__typ_8h_source"/>
        <childnode refid="82883" relation="include">
        </childnode>
      </node>
      <node id="82888">
        <label>openssl/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="82889" relation="include">
        </childnode>
        <childnode refid="82883" relation="include">
        </childnode>
        <childnode refid="82886" relation="include">
        </childnode>
        <childnode refid="82890" relation="include">
        </childnode>
        <childnode refid="82891" relation="include">
        </childnode>
        <childnode refid="82892" relation="include">
        </childnode>
        <childnode refid="82882" relation="include">
        </childnode>
        <childnode refid="82884" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="82899">
        <label>thirdparty/openssl/include/openssl/hmac.h</label>
        <link refid="hmac_8h"/>
        <childnode refid="82900" relation="include">
        </childnode>
      </node>
      <node id="82901">
        <label>thirdparty/kQOAuth/kqoauthutils.cpp</label>
        <link refid="kqoauthutils_8cpp_source"/>
      </node>
      <node id="82902">
        <label>thirdparty/openssl/include/openssl/ssl3.h</label>
        <link refid="ssl3_8h_source"/>
        <childnode refid="82900" relation="include">
        </childnode>
      </node>
      <node id="82900">
        <label>thirdparty/openssl/include/openssl/ssl.h</label>
        <link refid="ssl_8h_source"/>
        <childnode refid="82901" relation="include">
        </childnode>
        <childnode refid="82902" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhmac__ctx__st" prot="public">hmac_ctx_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hmac_8h_1a70c2f521a62974fcae381df08f89c7a7" prot="public" static="no">
        <name>HMAC_MAX_MD_CBLOCK</name>
        <initializer>128	/* largest known is SHA512 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="69" column="9" bodyfile="thirdparty/openssl/include/openssl/hmac.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmac_8h_1a92d257f71a3c933be492d3c16a38ad47" prot="public" static="no">
        <name>HMAC_size</name>
        <param><defname>e</defname></param>
        <initializer>(EVP_MD_size((e)-&gt;md))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="85" column="9" bodyfile="thirdparty/openssl/include/openssl/hmac.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hmac_8h_1a321b14bdf5ffe7ceca1c854d1d19c8ef" prot="public" static="no">
        <name>HMAC_cleanup</name>
        <param><defname>ctx</defname></param>
        <initializer>HMAC_CTX_cleanup(ctx) /* deprecated */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="91" column="9" bodyfile="thirdparty/openssl/include/openssl/hmac.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hmac_8h_1aac042740b33d6ad59d219de07a6f8461" prot="public" static="no">
        <type>struct <ref refid="structhmac__ctx__st" kindref="compound">hmac_ctx_st</ref></type>
        <definition>typedef struct hmac_ctx_st  HMAC_CTX</definition>
        <argsstring></argsstring>
        <name>HMAC_CTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hmac_8h_1a978cd73c621384dc42a70d04bd264150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_CTX_init</definition>
        <argsstring>(HMAC_CTX *ctx)</argsstring>
        <name>HMAC_CTX_init</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1ad3131144aba13d6dae9bbcb53666761a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_CTX_cleanup</definition>
        <argsstring>(HMAC_CTX *ctx)</argsstring>
        <name>HMAC_CTX_cleanup</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1ad6db50b7431101629c8349b4778b598a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_Init</definition>
        <argsstring>(HMAC_CTX *ctx, const void *key, int len, const EVP_MD *md)</argsstring>
        <name>HMAC_Init</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1ac3399d766f7dd7e46b6766b16962f8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_Init_ex</definition>
        <argsstring>(HMAC_CTX *ctx, const void *key, int len, const EVP_MD *md, ENGINE *impl)</argsstring>
        <name>HMAC_Init_ex</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>ENGINE *</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1afa7c2f0856ee825a8d1292b1db2ee6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_Update</definition>
        <argsstring>(HMAC_CTX *ctx, const unsigned char *data, size_t len)</argsstring>
        <name>HMAC_Update</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1af90028523c5de48499b8b44c231be195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_Final</definition>
        <argsstring>(HMAC_CTX *ctx, unsigned char *md, unsigned int *len)</argsstring>
        <name>HMAC_Final</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1af8e23e6f0c107db2b1eb8b2bad23c5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* HMAC</definition>
        <argsstring>(const EVP_MD *evp_md, const void *key, int key_len, const unsigned char *d, size_t n, unsigned char *md, unsigned int *md_len)</argsstring>
        <name>HMAC</name>
        <param>
          <type>const <ref refid="structenv__md__st" kindref="compound">EVP_MD</ref> *</type>
          <declname>evp_md</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key_len</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>md_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1aa68d50676d4387bfb046b1a4d62b192d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMAC_CTX_copy</definition>
        <argsstring>(HMAC_CTX *dctx, HMAC_CTX *sctx)</argsstring>
        <name>HMAC_CTX_copy</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>dctx</declname>
        </param>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>sctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hmac_8h_1a29ffe6b3eb6a5bdaaf8d6c747bf6869d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HMAC_CTX_set_flags</definition>
        <argsstring>(HMAC_CTX *ctx, unsigned long flags)</argsstring>
        <name>HMAC_CTX_set_flags</name>
        <param>
          <type><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="thirdparty/openssl/include/openssl/hmac.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crypto/hmac/hmac.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>1995-1998<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>package<sp/>is<sp/>an<sp/>SSL<sp/>implementation<sp/>written</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>by<sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>The<sp/>implementation<sp/>was<sp/>written<sp/>so<sp/>as<sp/>to<sp/>conform<sp/>with<sp/>Netscapes<sp/>SSL.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>for<sp/>commercial<sp/>and<sp/>non-commercial<sp/>use<sp/>as<sp/>long<sp/>as</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>aheared<sp/>to.<sp/><sp/>The<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>apply<sp/>to<sp/>all<sp/>code<sp/>found<sp/>in<sp/>this<sp/>distribution,<sp/>be<sp/>it<sp/>the<sp/>RC4,<sp/>RSA,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>lhash,<sp/>DES,<sp/>etc.,<sp/>code;<sp/>not<sp/>just<sp/>the<sp/>SSL<sp/>code.<sp/><sp/>The<sp/>SSL<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>included<sp/>with<sp/>this<sp/>distribution<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>same<sp/>copyright<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>except<sp/>that<sp/>the<sp/>holder<sp/>is<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>remains<sp/>Eric<sp/>Young&apos;s,<sp/>and<sp/>as<sp/>such<sp/>any<sp/>Copyright<sp/>notices<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>are<sp/>not<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>If<sp/>this<sp/>package<sp/>is<sp/>used<sp/>in<sp/>a<sp/>product,<sp/>Eric<sp/>Young<sp/>should<sp/>be<sp/>given<sp/>attribution</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>author<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>the<sp/>library<sp/>used.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>textual<sp/>message<sp/>at<sp/>program<sp/>startup<sp/>or</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>in<sp/>documentation<sp/>(online<sp/>or<sp/>textual)<sp/>provided<sp/>with<sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>copyright</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>3.<sp/>All<sp/>advertising<sp/>materials<sp/>mentioning<sp/>features<sp/>or<sp/>use<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>display<sp/>the<sp/>following<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>cryptographic<sp/>software<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Eric<sp/>Young<sp/>(eay@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>The<sp/>word<sp/>&apos;cryptographic&apos;<sp/>can<sp/>be<sp/>left<sp/>out<sp/>if<sp/>the<sp/>rouines<sp/>from<sp/>the<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>being<sp/>used<sp/>are<sp/>not<sp/>cryptographic<sp/>related<sp/>:-).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>4.<sp/>If<sp/>you<sp/>include<sp/>any<sp/>Windows<sp/>specific<sp/>code<sp/>(or<sp/>a<sp/>derivative<sp/>thereof)<sp/>from<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>apps<sp/>directory<sp/>(application<sp/>code)<sp/>you<sp/>must<sp/>include<sp/>an<sp/>acknowledgement:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>written<sp/>by<sp/>Tim<sp/>Hudson<sp/>(tjh@cryptsoft.com)&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>ERIC<sp/>YOUNG<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>licence<sp/>and<sp/>distribution<sp/>terms<sp/>for<sp/>any<sp/>publically<sp/>available<sp/>version<sp/>or</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>this<sp/>code<sp/>cannot<sp/>be<sp/>changed.<sp/><sp/>i.e.<sp/>this<sp/>code<sp/>cannot<sp/>simply<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>copied<sp/>and<sp/>put<sp/>under<sp/>another<sp/>distribution<sp/>licence</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>[including<sp/>the<sp/>GNU<sp/>Public<sp/>Licence.]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_HMAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_HMAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/opensslconf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OPENSSL_NO_HMAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>HMAC<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/evp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HMAC_MAX_MD_CBLOCK<sp/><sp/>128<sp/></highlight><highlight class="comment">/*<sp/>largest<sp/>known<sp/>is<sp/>SHA512<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structhmac__ctx__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhmac__ctx__st" kindref="compound">hmac_ctx_st</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>md_ctx;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>i_ctx;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structenv__md__ctx__st" kindref="compound">EVP_MD_CTX</ref><sp/>o_ctx;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_length;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key[HMAC_MAX_MD_CBLOCK];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HMAC_size(e)<sp/><sp/><sp/><sp/>(EVP_MD_size((e)-&gt;md))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HMAC_CTX_init(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HMAC_CTX_cleanup(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HMAC_cleanup(ctx)<sp/>HMAC_CTX_cleanup(ctx)<sp/></highlight><highlight class="comment">/*<sp/>deprecated<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMAC_Init(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md);<sp/></highlight><highlight class="comment">/*<sp/>deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMAC_Init_ex(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*md,<sp/>ENGINE<sp/>*impl);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMAC_Update(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMAC_Final(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*HMAC(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structenv__md__st" kindref="compound">EVP_MD</ref><sp/>*evp_md,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_len,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*md,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*md_len);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMAC_CTX_copy(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*dctx,<sp/><ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*sctx);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HMAC_CTX_set_flags(<ref refid="structhmac__ctx__st" kindref="compound">HMAC_CTX</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="thirdparty/openssl/include/openssl/hmac.h"/>
  </compounddef>
</doxygen>
